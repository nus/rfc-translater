{
  "title": {
    "text": "RFC 6794 - A Framework for Session Initiation Protocol (SIP) Session Policies",
    "ja": "RFC 6794 - セッション開始プロトコル（SIP）セッションポリシーの枠組み"
  },
  "number": 6794,
  "created_at": "2019-10-31 01:41:51.019264+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           V. Hilt\nRequest for Comments: 6794                      Bell Labs/Alcatel-Lucent\nCategory: Standards Track                                   G. Camarillo\nISSN: 2070-1721                                                 Ericsson\n                                                            J. Rosenberg\n                                                             jdrosen.net\n                                                           December 2012",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A Framework for Session Initiation Protocol (SIP) Session Policies",
      "ja": "セッション開始プロトコル（SIP）セッションポリシーの枠組み"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Proxy servers play a central role as an intermediary in the Session Initiation Protocol (SIP) as they define and impact policies on call routing, rendezvous, and other call features. This document specifies a framework for SIP session policies that provides a standard mechanism by which a proxy can define or influence policies on sessions, such as the codecs or media types to be used. It defines a model, an overall architecture and new protocol mechanisms for session policies.",
      "ja": "彼らは定義し、コールルーティング、ランデブー、およびその他の通話機能への影響ポリシーとして、プロキシサーバは、セッション開始プロトコル（SIP）における仲介者として中心的な役割を果たしています。この文書では、プロキシは、このような使用するコーデックやメディアタイプとして、セッションにポリシーを定義したり、影響することができたことで、標準的なメカニズムを提供するSIPセッションポリシーのためのフレームワークを指定します。これは、セッションポリシーのモデル、全体的なアーキテクチャと新しいプロトコルメカニズムを定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6794.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6794で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Terminology .....................................................5\n3. Session-Independent Policies ....................................5\n   3.1. Architecture and Overview ..................................5\n   3.2. Policy Subscription ........................................6\n        3.2.1. User Agent Client (UAC) Behavior ....................6\n        3.2.2. User Agent Server (UAS) Behavior ....................8\n4. Session-Specific Policies .......................................8\n   4.1. Architecture ...............................................8\n   4.2. Overview ...................................................9\n   4.3. Examples ..................................................11\n        4.3.1. Offer in Request ...................................11\n        4.3.2. Offer in Response ..................................13\n   4.4. UA/Policy Server Rendezvous ...............................15\n        4.4.1. UAC Behavior .......................................15\n        4.4.2. Proxy Behavior .....................................17\n        4.4.3. UAS Behavior .......................................20\n        4.4.4. Caching the Local Policy Server URI ................21\n        4.4.5. Header Field Definition and Syntax .................22\n   4.5. Policy Channel ............................................23\n        4.5.1. Creation and Management ............................24\n        4.5.2. Contacting the Policy Server .......................25\n        4.5.3. Using Session Policies .............................26\n5. Security Considerations ........................................27\n6. IANA Considerations ............................................29\n   6.1. Registration of the \"Policy-ID\" Header Field ..............29\n   6.2. Registration of the \"Policy-Contact\" Header Field .........29\n   6.3. Registration of the \"non-cacheable\" Policy-Contact\n        Header Field Parameter ....................................29\n   6.4. Registration of the \"policy\" SIP Option Tag ...............29\n7. References .....................................................30\n   7.1. Normative References ......................................30\n   7.2. Informative References ....................................31\nAppendix A. Acknowledgements ......................................32\nAppendix B. Session-Specific Policies - Call Flows ................32\n   B.1. Offer in Invite ...........................................32\n   B.2. Offer in Response .........................................34\n   B.3. Multiple Policy Servers for the UAS .......................35",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Session Initiation Protocol (SIP) [RFC3261] is a signaling protocol for creating, modifying and terminating multimedia sessions. A central element in SIP is the proxy server. Proxy servers are intermediaries that are responsible for request routing, rendezvous, authentication and authorization, mobility, and other signaling services. However, proxies are divorced from the actual sessions -- audio, video, and session-mode messaging -- that SIP establishes. Details of the sessions are carried in the payload of SIP messages, and are usually described with the Session Description Protocol (SDP) [RFC4566].",
      "ja": "セッション開始プロトコル（SIP）[RFC3261]は、作成し、修正し、マルチメディアセッションを終了するためのシグナリングプロトコルです。 SIP内の中心的な要素は、プロキシ・サーバです。プロキシサーバーは、リクエストのルーティング、ランデブー、認証と承認を担当している仲介、モビリティ、および他のシグナリングサービスです。しかし、プロキシは、実際のセッションから離婚されている - オーディオ、ビデオ、およびセッションモードメッセージング -  SIPが確立していること。セッションの詳細は、SIPメッセージのペイロードで運ばれ、通常セッション記述プロトコル（SDP）[RFC4566]で説明されています。"
    },
    {
      "indent": 3,
      "text": "Experience has shown that there is a need for SIP intermediaries to impact aspects of a session. For example, SIP can be used in a wireless network, which has limited resources for media traffic. During periods of high activity, the wireless network provider could want to restrict the amount of bandwidth available to each user. With session policies, an intermediary in the wireless network can inform the user agent (UA) about the bandwidth it has available. This information enables the user agent to make an informed decision about the number of streams, the media types, and the codecs it can successfully use in a session. Similarly, a network provider can have a service level agreement with a user that defines the set of media types the user can use. With session policies, the network can convey the current set of policies to user agents, enabling them to set up sessions without inadvertently violating any of the network policies.",
      "ja": "経験は、セッションの側面に影響を与えるSIP仲介する必要があることを示しています。例えば、SIPは、メディアトラフィックのためのリソースが限られている無線ネットワークで使用することができます。高活性の期間中、無線ネットワークプロバイダは、各ユーザが利用可能な帯域幅の量を制限したいことができます。セッションのポリシーでは、無線ネットワークにおける仲介者は使用可能な帯域幅についてのユーザーエージェント（UA）に通知することができます。この情報は、ストリームの数、メディアタイプ、およびそれが成功したセッションで使用できるコーデックについての情報に基づいた意思決定を行うためにユーザーエージェントを有効にします。同様に、ネットワークプロバイダは、ユーザが使用できるメディアタイプのセットを定義し、ユーザとのサービスレベル契約を有することができます。セッションのポリシーでは、ネットワークが不注意にネットワークポリシーのいずれかに違反することなくセッションをセットアップするためにそれらを可能に、ユーザーエージェントへのポリシーの現在のセットを伝えることができます。"
    },
    {
      "indent": 3,
      "text": "In another example, a SIP user agent is using a network that is connected to the public Internet through a firewall or a network border device. The network provider would like to tell the user agent that it needs to send its media streams to a specific IP address and port on the firewall or border device to reach the public Internet. Knowing this policy enables the user agent to set up sessions across the firewall or the network border. In contrast to other methods for inserting a media intermediary, the use of session policies does not require the inspection or modification of SIP message bodies.",
      "ja": "別の例では、SIPユーザエージェントは、ファイアウォールまたはネットワーク境界装置を介して公衆インターネットに接続されたネットワークを使用しています。ネットワークプロバイダは、それが公共のインターネットに到達するために、ファイアウォールまたは境界デバイス上の特定のIPアドレスとポートにそのメディアストリームを送信する必要があるユーザーエージェントをお伝えしたいと思います。このポリシーを知ることは、ファイアウォールやネットワークの国境を越えてセッションを設定するためにユーザーエージェントを有効にします。メディア仲介を挿入するための他の方法とは対照的に、セッションポリシーの使用は、SIPメッセージボディの検査や修正を必要としません。"
    },
    {
      "indent": 3,
      "text": "Domains often have the need to enforce the session policies they have in place. For example, a domain might have a policy that disallows the use of video and can have an enforcement mechanism that drops all packets containing a video encoding. Unfortunately, these enforcement mechanisms usually do not inform the user about the policies they are enforcing. Instead, they silently keep the user from doing anything against them. This can lead to a malfunctioning of devices that is incomprehensible to the user. With session policies, the user knows about the current network policies and can set up policy-compliant sessions or simply connect to a domain with less stringent policies. Thus, session policies provide an important combination of consent coupled with enforcement. That is, the user becomes aware of the policy and needs to act on it, but the provider still retains the right to enforce the policy.",
      "ja": "ドメインは、多くの場合、彼らが所定の位置に持っているセッションポリシーを適用する必要があります。例えば、ドメインは、ビデオの使用を許可しない方針を持っている可能性があり、ビデオ符号化を含むすべてのパケットをドロップ執行メカニズムを持つことができます。残念ながら、これらの実施メカニズムは、通常、彼らが施行されているポリシーについてユーザーに通知しません。その代わりに、彼らは黙って彼らに対して何もしてからユーザーを保ちます。これは、ユーザーに不可解である機器の誤動作につながることができます。セッションのポリシーでは、ユーザーは、現在のネットワークポリシーを知っていて、ポリシーに準拠したセッションを設定したり、単により厳しくない方針で、ドメインに接続することができます。このように、セッションポリシーが執行と相まって同意の重要な組み合わせを提供します。つまり、ユーザーがポリシーに気付くと、それに基づいて行動する必要がありますが、プロバイダがまだポリシーを適用する権利を保持します。"
    },
    {
      "indent": 3,
      "text": "Two types of session policies exist: session-specific policies and session-independent policies. Session-specific policies are policies that are created for one particular session, based on the session description of that session. They enable a network intermediary to examine the session description a UA is proposing and to return a policy specifically for that session description. For example, an intermediary could open pinholes in a firewall/NAT for each media stream in the proposed session description. It can then return a policy for the session description that replaces the IP addresses and ports of the UA with the ones opened in the firewall/NAT that are reachable from the exterior. Session-specific policies provide information about a specific session to a domain, which can be used to implement policies for opening pinholes on a firewall/NAT. Since session-specific policies are tailored to a session, they only apply to the session for which they are created. Session-specific policies are created on a session-by-session basis at the time the session is established.",
      "ja": "セッションポリシーの2種類があり：セッション固有のポリシーとのセッションに依存しない政策を。セッション固有のポリシーは、そのセッションのセッション記述に基づいて、ある特定のセッションのために作成されたポリシー、です。彼らは、UAが提案されたセッション記述を検討し、そのセッションの説明のために特別にポリシーを返すために、ネットワーク中継を可能にします。例えば、仲介者は、提案されたセッション記述内の各メディアストリームのファイアウォール/ NATにピンホールを開くことができます。その後、外部から到達可能なファイアウォール/ NATで開かれたものとUAのIPアドレスとポートを置き換えるセッション記述のためのポリシーを返すことができます。セッション固有のポリシーは、ファイアウォール/ NATにピンホールを開くための政策を実施するために使用することができ、ドメインに特定のセッションに関する情報を提供します。セッション固有のポリシーをセッションに合わせて調整されているので、彼らは彼らだけが作成されるセッションに適用されます。セッション固有のポリシーは、セッションが確立された時点でセッションごとに作成されます。"
    },
    {
      "indent": 3,
      "text": "Session-independent policies, on the other hand, are policies that are created independent of a session and generally apply to all SIP sessions set up by a user agent. A session-independent policy can, for example, be used to inform user agents about an existing bandwidth limit or media type restrictions. Since these policies are not based on a specific session description, they can be created independent of an attempt to set up a session and only need to be conveyed to the user agent when it initializes (e.g., at the time the device is powered on) and when policies are changed.",
      "ja": "セッションに依存しない政策は、他の一方で、セッションとは独立して作成され、一般ユーザエージェントによって設定されたすべてのSIPセッションに適用されているポリシーです。セッションに依存しない政策は、例えば、既存の帯域幅制限やメディアタイプの制限についてはユーザエージェントに通知するために使用することができます。これらのポリシーは、特定のセッション記述に基づいていないので、彼らがセッションをセットアップしようとする試みとは独立して作成され、唯一それが初期化したユーザエージェントに伝達する必要がありますすることができます（例えば、デバイスに電源が投入された時点で）そしてポリシーが変更されたとき。"
    },
    {
      "indent": 3,
      "text": "This specification defines a framework for SIP session policies. It specifies a model, the overall architecture and new protocol mechanisms that are needed for session-independent and session-specific policies. Since session-specific and session-independent policies have different requirements, this specification defines two different mechanisms to deliver them to user agents. These mechanisms are independent of each other, and, depending on whether one or both types of session policies are needed, it is possible to use the session-specific or the session-independent mechanism or both to deliver policies to user agents.",
      "ja": "この仕様は、SIPセッションポリシーのためのフレームワークを定義します。これは、モデル、全体的なアーキテクチャおよびセッションに依存しないとセッション固有のポリシーのために必要とされる新しいプロトコルメカニズムを指定します。セッション固有およびセッションに依存しないポリシーが異なる要件を持っているので、この仕様はユーザエージェントに配信するために、2つの異なるメカニズムを定義します。これらのメカニズムは、セッションポリシーのいずれかまたは両方のタイプが必要とされるかどうかに応じて、互いに独立しており、そして、ユーザエージェントにポリシーを配信するためにセッション固有またはセッションに依存しない機構またはその両方を使用することが可能です。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that UAs and intermediaries use the mechanisms defined in this specification for signaling session policies to endpoints. To ensure backwards compatibility with UAs that do not support this specification, intermediaries may choose to resort to existing mechanisms such as rejecting sessions that are not policy compliant with a 488 response as a fallback solution if a UA does not indicate support for session policies. UAs that do not support session policies will receive the same user experience as they would today. As these techniques are known to have many drawbacks, it is RECOMMENDED that UAs and intermediaries use explicit signaling of policies using the mechanisms defined in this specification.",
      "ja": "UAと仲介エンドポイントへのセッションポリシーをシグナリングのために、この仕様で定義されたメカニズムを使用することをお勧めします。この仕様をサポートしていないのUAとの下位互換性を確保するために、仲介者は、そのようなUAは、セッションポリシーのサポートを示していない場合の代替ソリューションとして488レスポンスに準拠したポリシーではありません、セッションを拒否するなどの既存のメカニズムに頼ることもできます。セッションポリシーをサポートしていないUAは、彼らが今日と同じように同じユーザーエクスペリエンスを受け取ることになります。これらの技術は多くの欠点を有することが知られているとして、UAと仲介は、この仕様で定義されたメカニズムを使用してポリシーの明示的なシグナリングを使用することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Session-Independent Policies",
      "section_title": true,
      "ja": "3.セッションに依存しない方針"
    },
    {
      "indent": 3,
      "text": "Session-independent policies are policies that are created independent of a session and generally apply to all sessions a user agent is setting up. They typically remain stable for a longer period of time and apply to any session set up while they are valid. However, it is possible for session-independent policies to change over time. For example, a policy that defines a bandwidth limit for a user can change during the day, defining a lower limit during peak hours and allow more bandwidth off-peak. The policy server informs a UA when session-independent policies change.",
      "ja": "セッションに依存しない政策は、セッションの独立した作成し、一般ユーザエージェントが設定されたすべてのセッションに適用されているポリシーです。彼らは通常、時間の長い期間のための安定性を維持し、それらが有効である間、設定任意のセッションに適用されます。セッションに依存しない政策が時間とともに変化するためしかし、それは可能です。例えば、ユーザの帯域幅制限を定義するポリシーは、ピーク時の下限を規定する、日中に変更することができ、オフピークより多くの帯域幅を可能にします。セッションに依存しないポリシーが変更されたときに、ポリシーサーバはUAに通知します。"
    },
    {
      "indent": 0,
      "text": "3.1. Architecture and Overview",
      "section_title": true,
      "ja": "3.1. アーキテクチャおよび概要"
    },
    {
      "indent": 6,
      "text": "                  +-------------+\n           /------|   policy    |\n+----+    /       |  server 1   |\n|    |---/        +-------------+\n| UA |                 ...\n|    |---\\        +-------------+\n+----+    \\       |   policy    |\n           \\------|  server n   |\n                  +-------------+",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 1",
      "ja": "図1"
    },
    {
      "indent": 3,
      "text": "A SIP UA can receive session-independent policies from one or more policy servers. In a typical configuration, a UA receives session-independent policies from a policy server in the local network domain (i.e., the domain from which the UA receives IP service) and possibly the SIP service provider domain (i.e., the domain at which the UA registers). The local network can have policies that support the access network infrastructure. For example, in a wireless network where bandwidth is scarce, a provider can restrict the bandwidth available to an individual user. The SIP service provider can have policies that are needed to support services or policies that reflect the service level agreement with the user. Thus, in most cases, a UA will receive session-independent policies from one or two policy servers.",
      "ja": "SIP UAは、1つまたは複数のポリシーサーバからのセッションに依存しない政策を受けることができます。典型的な構成では、UAは（すなわち、UAは、IPサービスを受信するドメイン）と、おそらくSIPサービスプロバイダドメイン（すなわち、でUAドメインローカルネットワークドメイン内のポリシーサーバからセッションに依存しない方針を受け、レジスタ）。ローカルネットワークは、アクセスネットワークインフラストラクチャをサポートするポリシーを持つことができます。たとえば、帯域幅が不足している無線ネットワークにおいて、プロバイダは、個々のユーザに利用可能な帯域幅を制限することができます。 SIPサービスプロバイダは、ユーザとのサービスレベル契約を反映したサービスやポリシーをサポートするために必要なポリシーを持つことができます。したがって、ほとんどの場合、UAは、1台のまたは2つのポリシーサーバからセッションに依存しない政策を受け取ることになります。"
    },
    {
      "indent": 3,
      "text": "Setting up session-independent policies involves the following steps:",
      "ja": "セッションに依存しないポリシーを設定するには、次の手順を実行します。"
    },
    {
      "indent": 3,
      "text": "1. A user agent discovers session-independent policy servers in the local network and SIP service provider domain.",
      "ja": "1.ユーザエージェントは、ローカルネットワークおよびSIPサービスプロバイダドメイン内のセッションに依存しないポリシーサーバを検出します。"
    },
    {
      "indent": 3,
      "text": "2. A user agent requests session-independent policies from the discovered policy servers. A user agent typically requests these policies when it starts up or connects to a new network domain.",
      "ja": "2.ユーザーエージェントは、発見されたポリシーサーバからセッションに依存しない政策を要求します。それが起動するか、新しいネットワークドメインに接続するとき、ユーザーエージェントは、通常、これらのポリシーを要求します。"
    },
    {
      "indent": 3,
      "text": "3. The policy server selects the policies that apply to this user agent. The policy server can have general policies that apply to all users or maintain separate policies for each individual user. The selected policies are returned to the user agent.",
      "ja": "3.ポリシーサーバは、このユーザエージェントに適用するポリシーを選択します。ポリシーサーバは、すべてのユーザーに適用される一般的なポリシーを持っているか、個々のユーザーに対して個別の政策を維持することができます。選択したポリシーは、ユーザエージェントに返されます。"
    },
    {
      "indent": 3,
      "text": "4. The policy server can update the policies, for example, when network conditions change.",
      "ja": "4.ポリシーサーバは、ネットワークの状態が変化したときに、例えばポリシーを、更新することができます。"
    },
    {
      "indent": 0,
      "text": "3.2. Policy Subscription",
      "section_title": true,
      "ja": "3.2. ポリシーサブスクリプション"
    },
    {
      "indent": 0,
      "text": "3.2.1. User Agent Client (UAC) Behavior",
      "section_title": true,
      "ja": "3.2.1. ユーザエージェントクライアント（UAC）の挙動"
    },
    {
      "indent": 3,
      "text": "A UA that supports session-independent policies compliant to this specification MUST attempt to retrieve session-independent policies from the local network and the SIP service provider domain, unless the UA knows (e.g., through configuration) that a domain does not provide session-independent policies (in which case the UA SHOULD NOT retrieve session-independent policies from this specific domain).",
      "ja": "UAが知っている限り、この仕様に準拠したセッションに依存しないポリシーをサポートUAは、ローカルネットワークおよびSIPサービスプロバイダのドメインからのセッションに依存しないポリシーを取得しようとしなければならない（例えば、コンフィギュレーションを介して）ドメインがセッションに依存しない提供しないことポリシー（UAは、この特定のドメインからのセッションに依存しない政策を取得するべきでない場合）。"
    },
    {
      "indent": 3,
      "text": "A UA that supports session-independent policies compliant to this specification MUST support the retrieval of session-independent policies from the local network and the SIP service provider domain using the \"ua-profile\" event package defined in \"A Framework for Session Initiation Protocol User Agent Profile Delivery\" [RFC6080]. The UA MAY support other methods of retrieving session-independent policies from the local network and the SIP service provider domains.",
      "ja": "この仕様に準拠したセッションに依存しないポリシーをサポートUAは、セッション開始プロトコルのユーザーのためのフレームワーク」で定義された「UA-プロファイル」イベントパッケージを使用して、ローカルネットワークおよびSIPサービスプロバイダのドメインからのセッションに依存しないポリシーの取得をサポートしなければなりませんエージェントプロファイル配信」[RFC6080]。 UAは、セッションに依存しないローカルネットワークからのポリシーおよびSIPサービスプロバイダのドメインを取得する他の方法をサポートするかもしれません。"
    },
    {
      "indent": 3,
      "text": "The \"ua-profile\" event package [RFC6080] provides a mechanism to subscribe to session-independent policies. A UA subscribes to the policy server in the local network domain using the procedures defined for the \"local-network\" profile-type. The UA uses the procedures defined for the \"user\" profile type to subscribe to the policy server in the SIP service provider domain.",
      "ja": "「UA-プロファイル」イベントパッケージ[RFC6080]は、セッションに依存しない政策に加入するためのメカニズムを提供します。 UAは、「ローカルネットワーク」プロファイル・タイプに定義された手順を使用して、ローカルネットワークドメイン内のポリシーサーバにサブスクライブします。 UAは、SIPサービスプロバイダのドメイン内のポリシーサーバに加入するには、「ユーザー」プロファイルタイプの定義された手順を使用しています。"
    },
    {
      "indent": 3,
      "text": "A UA (re-)subscribes to session-independent policies when the following events occur:",
      "ja": "UA（再）次のイベントが発生したときに、セッションに依存しないポリシーをサブスクライブ："
    },
    {
      "indent": 3,
      "text": "o The UA registers a new address-of-record (AoR) or removes an AoR from the set of AoRs it has registered. In these cases, the UA MUST establish subscriptions for each new AoR using the \"user\" and the \"local-network\" profile-types. The UA MUST terminate all subscriptions for AoRs it has removed.",
      "ja": "O UAは、新しいアドレス・オブ・レコード（のAoR）を登録するか、登録されているのAORのセットからのAoRを除去します。これらのケースでは、UAは、「ユーザー」と「ローカルネットワーク」プロファイル・タイプを使用して、各新規のAoRのサブスクリプションを確立する必要があります。 UAは、それが削除されましたのAORのすべてのサブスクリプションを終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The UA changes the domain to which it is connected. The UA MUST terminate all existing subscriptions for the \"local-network\" profile-type. The UA MUST then create a new subscription for each AoR it maintains using the \"local-network\" profile-type. This way, the UA stops receiving policies from the previous local domain and starts to receive the policies of the new local domain. The UA does not need to change the subscriptions for \"user\" profiles.",
      "ja": "O UAは、それが接続されているドメインを変更します。 UAは、「ローカルネットワーク」プロファイル・タイプのすべての既存のサブスクリプションを終えなければなりません。 UAは、それは、「ローカルネットワーク」プロファイル・タイプを使用して管理し、各のAoRのための新しいサブスクリプションを作成する必要があります。この方法では、UAは、以前のローカルドメインからポリシーを受信を停止し、新しいローカルドメインのポリシーを受信するために開始します。 UAは、「ユーザー」プロファイルのサブスクリプションを変更する必要はありません。"
    },
    {
      "indent": 3,
      "text": "If a UA is unable to establish a subscription, the UA SHOULD NOT attempt to retry this subscription, unless one of the above events occurs again. This is to limit the number of SUBSCRIBE requests sent within domains that do not support session-independent policies. However, a UA SHOULD retry the subscription with a longer time interval (e.g., once every 24 hours). This enables UAs to detect new policies that are deployed in a network that previously did not have policies.",
      "ja": "UAは、サブスクリプションを確立できない場合、UAは、上記のいずれかのイベントが再び発生しない限り、このサブスクリプションを再試行しないでください。これは、セッションに依存しないポリシーをサポートしていないドメイン内に送信SUBSCRIBE要求の数を制限することです。しかし、UAは長い時間間隔（例えば、24時間ごとに1回）でサブスクリプションを再試行する必要があります。これは、以前の方針を持っていませんでしたネットワークに配置されている新しいポリシーを検出するのUAを可能にします。"
    },
    {
      "indent": 3,
      "text": "A UA that supports session-independent policies compliant to this specification MUST support the User Agent Profile Data Set for Media Policy [RFC6796]. To indicate that the UA wants to receive session-independent policies, the UA includes the MIME type \"application/ media-policy-dataset+xml\" in the Accept header field of a SUBSCRIBE request.",
      "ja": "メディアポリシー[RFC6796]のためのユーザエージェントプロファイルデータセットをサポートしなければならないこの仕様に準拠したセッションに依存しないポリシーをサポートUA。 UAがセッションに依存しない政策を受信したいことを示すために、UAは、SUBSCRIBEリクエストのAcceptヘッダーフィールドのMIMEタイプ「アプリケーション/メディア政策 - データセット+ XML」が含まれます。"
    },
    {
      "indent": 3,
      "text": "A UA MUST apply the session-independent policies it has received and use these policies in the session descriptions it creates. If the UA decides not to use the received policies, then the UA MUST NOT set up a session unless it changes the domain that provided these policies. A UA MAY try to connect to another local network and/or SIP service provider domain with a different set of policies.",
      "ja": "UAは、それが受信したセッションに依存しないポリシーを適用して、作成したセッションの説明でこれらのポリシーを使用しなければなりません。 UAは、受信したポリシーを使用しないことを決定した場合、それはこれらのポリシーを提供するドメインを変更しない限り、その後、UAは、セッションを設定してはなりません。 UAは、ポリシーの異なるセットで別のローカルネットワークおよび/またはSIPサービスプロバイダのドメインに接続しようとするかもしれません。"
    },
    {
      "indent": 3,
      "text": "If a UA receives both session-independent and session-specific policies, the UA MUST apply the session-independent policies to the session description before the session description is sent to the session-specific policy server (see Section 4). Thus, session-independent policies are always applied before session-specific policies are retrieved.",
      "ja": "UAがセッションに依存しないとセッション固有のポリシーの両方を受信した場合、セッション記述は、セッション固有のポリシーサーバに送信される前に、UAは（セクション4を参照）セッション記述にセッションに依存しないポリシーを適用しなければなりません。セッション固有のポリシーが検索される前にこのように、セッションに依存しないポリシーが常に適用されます。"
    },
    {
      "indent": 0,
      "text": "3.2.2. User Agent Server (UAS) Behavior",
      "section_title": true,
      "ja": "3.2.2. ユーザエージェントサーバ（UAS）の挙動"
    },
    {
      "indent": 3,
      "text": "A policy server MAY send a notification to the UA every time the session-independent policies covered by the subscription change. The definition of what causes a policy to change is at the discretion of the administrator. A change in the policy can be triggered, for example, by a change in the network status, by the change in the time of day or by an update of the service level agreement with the customer.",
      "ja": "ポリシーサーバは、UAとのセッションに依存しない政策は、サブスクリプションの変更によってカバーされるたびに通知を送信することができます。変更するポリシーを引き起こすものの定義は、管理者の裁量です。政策の変化は、一日の時間の変化によって、または顧客とのサービスレベル契約の更新により、ネットワークの状態の変化によって、例えば、トリガすることができます。"
    },
    {
      "indent": 0,
      "text": "4. Session-Specific Policies",
      "section_title": true,
      "ja": "4.セッション固有のポリシー"
    },
    {
      "indent": 3,
      "text": "Session-specific policies are policies that are created specifically for one particular session of a UA. Thus, session-specific policies will typically be different for different sessions. The session-specific policies for a session can change during the course of the session. For example, a user can run out of credit during a session, which will cause the network to disallow the transmission all media streams from this point on.",
      "ja": "セッション固有のポリシーは、UAの一つの特定のセッションのために特別に作成されているポリシーです。このように、セッション固有のポリシーは、通常、異なるセッションごとに異なります。セッションのセッション固有のポリシーは、セッションの途中で変更することができます。例えば、ユーザーは、ネットワークがこの時点からの送信はすべてのメディアストリームを拒否するようになりますセッション中にクレジットが不足することができます。"
    },
    {
      "indent": 0,
      "text": "4.1. Architecture",
      "section_title": true,
      "ja": "4.1. 建築"
    },
    {
      "indent": 6,
      "text": "                     domain 1\n                  +-----------+\n           /------|   proxy   |----...\n+----+    /       +-----------+\n|    |---/        +-----------+\n|    |            |  policy   |\n| UA |============|  server   |\n|    |            +-----------+\n|    |****        +-----------+\n+----+    *       |  policy   |\n           *******|enforcement|****...\n                  +-----------+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "--- SIP Signaling\n=== Policy Channel\n*** Media",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 2",
      "ja": "図2"
    },
    {
      "indent": 3,
      "text": "The following entities are needed for session-specific policies (see Figure 2): a user agent (UA), a proxy, a policy server, and possibly a policy enforcement entity.",
      "ja": "ユーザーエージェント（UA）、プロキシ、ポリシーサーバ、およびおそらくポリシー実施主体：次のエンティティは、セッション固有のポリシー（図2を参照）のために必要とされます。"
    },
    {
      "indent": 3,
      "text": "The role of the proxy is to provide a rendezvous mechanism for UAs and policy servers. It ensures that each UA has the URI [RFC3986] of the policy server in its domain and knows from where to retrieve policies. The proxy conveys the policy server URI to UAs in case they have not yet received it (e.g., in a previous call or through configuration). The proxy does not deliver the actual policies to UAs.",
      "ja": "プロキシの役割は、UAとポリシーサーバのためのランデブーメカニズムを提供することです。これは、各UAは、そのドメインポリシーサーバーのURI [RFC3986]を持っていることを保証し、ポリシーを取得する場所を知っています。プロキシは、それらがまだ（例えば、前の呼び出しまたは構成によって）、それを受けていない場合のUAにポリシーサーバURIを伝えます。プロキシは、UASに実際のポリシーを配信しません。"
    },
    {
      "indent": 3,
      "text": "The policy server is a separate logical entity that can be physically co-located with the proxy. The role of the policy server is to deliver session policies to UAs. The policy server receives session information from the UA, uses this information to determine the policies that apply to the session, and returns these policies to the UA. The mechanism for generating policies (i.e., making policy decisions) is outside of the scope of this specification. A policy server can, for example, query an external entity to get policies or it can directly incorporate a policy decision point and generate policies locally.",
      "ja": "ポリシーサーバは、物理的にプロキシと同じ場所に配置することができる別の論理エンティティです。ポリシーサーバの役割は、ユーザーエージェントへのセッションポリシーを提供することです。ポリシーサーバは、UAからセッション情報を受信し、セッションに適用されるポリシーを決定するために、この情報を使用して、UAにこれらのポリシーを返します。 （すなわち、政策決定を行う）ポリシーを生成するための機構は、本明細書の範囲外です。ポリシーサーバは、例えば、ポリシーを取得するために外部エンティティを照会することができるか、それが直接、ポリシー決定ポイントを組み込み、ローカルポリシーを生成することができます。"
    },
    {
      "indent": 3,
      "text": "A UA receives the URI of a policy server from a proxy. It uses this URI to contact the policy server. It provides information about the current session to the policy server and receives session policies in response. The UA can also receive policy updates from the policy server during the course of a session.",
      "ja": "UAがプロキシからポリシーサーバーのURIを受け取ります。これは、ポリシーサーバに接続するために、このURIを使用しています。これは、ポリシーサーバに現在のセッションについての情報を提供し、それに応じてセッションポリシーを受け取ります。 UAは、セッションの途中でポリシーサーバからポリシーの更新を受け取ることができます。"
    },
    {
      "indent": 3,
      "text": "A network can have a policy enforcement infrastructure in place. However, this specification does not make any assumptions about the enforcement of session policies and the mechanisms defined here are orthogonal to a policy enforcement infrastructure.",
      "ja": "ネットワークは、所定の位置にポリシー施行インフラを持つことができます。しかし、この仕様は、セッションポリシーの施行についての仮定をしないと、ここで定義されたメカニズムは、ポリシーの施行インフラストラクチャに直交しています。"
    },
    {
      "indent": 3,
      "text": "In principle, each domain that is traversed by SIP signaling messages can define session-specific policies for a session. Each domain needs to run a policy server and a proxy that is able to rendezvous a UA with the policy server (as shown in Figure 2). However, it is expected that session-specific policies will often only be provided by the local domain of the user agent.",
      "ja": "原則的には、SIPシグナリングメッセージによって横断される各ドメインは、セッションのセッション固有のポリシーを定義することができます。各ドメインは、ポリシーサーバと（図2に示すように）ポリシーサーバとUAをランデブーすることができるプロキシを実行する必要があります。しかし、セッション固有のポリシーは、多くの場合のみ、ユーザーエージェントのローカルドメインによって提供されることが期待されます。"
    },
    {
      "indent": 0,
      "text": "4.2. Overview",
      "section_title": true,
      "ja": "4.2. 概要"
    },
    {
      "indent": 3,
      "text": "The protocol defined in this specification clearly separates SIP signaling and the exchange of policies. SIP signaling is only used to rendezvous the UA with the policy server. From this point on, UA and policy server communicate directly with each other over a separate policy channel. This is opposed to a piggyback model, where the exchange of policy information between endpoint and a policy server in the network is piggybacked onto the SIP signaling messages that are exchanged between endpoints.",
      "ja": "本明細書中で定義されたプロトコルは、明らかに、SIPシグナリングおよびポリシーの交換を分離します。 SIPシグナリングは、ポリシーサーバとUAのランデブーするために使用されます。この点から、UAおよびポリシーサーバは、別々のポリシー・チャネルを介して互いに直接通信します。これは、ネットワーク内のエンドポイントとポリシーサーバの間のポリシー情報の交換は、エンドポイント間で交換されるSIPシグナリングメッセージにピギーバックされたピギーバックモデルに対向しています。"
    },
    {
      "indent": 3,
      "text": "The main advantage of using a separate policy channel is that it decouples signaling between endpoints from the policy exchange between an endpoint and a policy server. This decoupling has a number of desirable properties. It enables the use of separate encryption mechanisms on the signaling path, to secure the communication between endpoints, and on the policy channel, to secure the communication between endpoint and policy server. Policies can be submitted directly from the policy server to the endpoint. They do not travel along the signaling path, which can potentially cross many domains. Endpoints set up a separate policy channel to each policy server and can disclose the information requested by the specific policy server (e.g., offer or offer/answer). Finally, policy servers do not need to rely on a SIP signaling message flowing by to send policies or policy updates to an endpoint. A policy server can use the policy channel at any time to update session policies as needed. A disadvantage of the separate channel model is that it requires additional messages for the exchange of policy information.",
      "ja": "別のポリシーチャネルを使用することの主な利点は、それがエンドポイントとポリシーサーバの間のポリシー交換からエンドポイント間のシグナリングを切り離すことです。このデカップリングは、多数の望ましい特性を持っています。これは、エンドポイント間の通信を確保するために、シグナリングパス上の別個の暗号化メカニズムを使用することができ、ポリシー・チャネル上で、エンドポイントとポリシーサーバ間の通信を確保します。ポリシーは、エンドポイントにポリシーサーバから直接提出することができます。彼らは潜在的に多くのドメインを横断することができ、信号経路に沿って移動しません。エンドポイントは、各ポリシーサーバに個別のポリシーチャネルを設定し、特定のポリシーサーバ（例えば、オファーまたはオファー/アンサー）によって要求された情報を開示することができます。最後に、ポリシーサーバは、エンドポイントへのポリシーまたはポリシーの更新を送信することにより、流れるSIPシグナリングメッセージに依存する必要はありません。ポリシーサーバは、必要に応じてセッションポリシーを更新するために、いつでもポリシーチャネルを使用することができます。別個のチャネル・モデルの欠点は、ポリシー情報の交換のための追加のメッセージを必要とすることです。"
    },
    {
      "indent": 3,
      "text": "Following this model, signaling for session-specific policies involves the following two fundamental tasks:",
      "ja": "このモデルに続き、セッション固有のポリシーのためのシグナリングは、次の二つの基本的なタスクが含まれます。"
    },
    {
      "indent": 3,
      "text": "1. UA/policy server rendezvous: a UA setting up a session needs to be able to discover the policy servers that are relevant to this session.",
      "ja": "1. UA /ポリシーサーバのランデブー：UAセッションを設定するには、このセッションに関連するポリシーサーバを検出できるようにする必要があります。"
    },
    {
      "indent": 3,
      "text": "2. Policy channel: once the UA has discovered the relevant policy servers for a session, it needs to connect to these servers, disclose session information, and retrieve the policies that apply to this session.",
      "ja": "2.ポリシーチャンネル：UAは、セッションに関連するポリシーサーバを発見した後、それは、これらのサーバーに接続するセッション情報を開示し、このセッションに適用されるポリシーを取得する必要があります。"
    },
    {
      "indent": 3,
      "text": "The communication between UA and policy server on the policy channel involves the following steps:",
      "ja": "政策チャネル上のUAとポリシーサーバ間の通信には、次の手順を実行します。"
    },
    {
      "indent": 3,
      "text": "1. A user agent submits information about the session it is trying to establish to the policy server and asks whether a session using these parameters is permissible.",
      "ja": "1.ユーザーエージェントは、ポリシーサーバに確立しようと、これらのパラメータを使用して、セッションが許可されているかどうかを尋ねているセッションに関する情報を提出します。"
    },
    {
      "indent": 3,
      "text": "2. The policy server generates a policy decision for this session and returns the decision to the user agent. Possible policy decisions are (1) to deny the session, (2) to propose changes to the session parameters with which the session would be acceptable, or (3) to accept the session as it was proposed.",
      "ja": "2.ポリシーサーバは、このセッションのための政策決定を生成し、ユーザエージェントの決定を返します。可能な政策決定は、（1）（2）セッションが許容されるであろう、またはそれが提案されたように（3）セッションを受け入れるれるセッションパラメータの変更を提案するために、セッションを拒否することです。"
    },
    {
      "indent": 3,
      "text": "3. The policy server can update the policy decision at a later time. A policy decision update can, for example, propose additional changes to the session (e.g., change the available bandwidth) or deny a previously accepted session (i.e., disallow the continuation of a session).",
      "ja": "3.ポリシーサーバは、後の時点で政策決定を更新することができます。ポリシー決定の更新は、例えば、セッションに追加の変更を提案している（例えば、利用可能な帯域幅を変更する）、または以前に受け入れられたセッションを拒否することができ（即ち、セッションの継続を許可しません）。"
    },
    {
      "indent": 3,
      "text": "In many cases, the mechanism for session-specific policies will be used to disclose session information and return session policies. However, some scenarios only involve the disclosure of session information to a network intermediary. If an intermediary does not intend to return a policy, it can simply accept the session as it was proposed. Similarly, some session-specific policies only apply to the offer (and therefore only require the disclosure of the offer) whereas others apply to offer and answer. Both types of policies are supported by session-specific policy mechanism.",
      "ja": "多くの場合、セッション固有のポリシーのためのメカニズムは、セッション情報を開示し、セッションポリシーを返すために使用されます。しかし、いくつかのシナリオは、ネットワーク仲介にセッション情報の開示を必要とします。仲介ポリシーを返すように意図していない場合は、それが提案されたとして、それは単にセッションを受け入れることができます。他の人が提供し、答えるために適用され、一方、同様に、いくつかのセッション固有のポリシーは、唯一のオファーに適用されます（したがって、唯一のオファーの開示を必要とします）。ポリシーの両方のタイプは、セッション固有のポリシーメカニズムによってサポートされています。"
    },
    {
      "indent": 0,
      "text": "4.3. Examples",
      "section_title": true,
      "ja": "4.3. 例"
    },
    {
      "indent": 3,
      "text": "This section provides two examples to illustrate the overall operation of session-specific policies. The call flows depict the rendezvous mechanism between UA and policy server and indicate the points at which the UA exchanges policy information with the policy server.",
      "ja": "このセクションでは、セッション固有のポリシーの全体的な動作を説明するために2つの例を提供します。コールフローは、UAとポリシーサーバの間のランデブーメカニズムを描写し、UAは、ポリシーサーバにポリシー情報を交換する点を示しています。"
    },
    {
      "indent": 3,
      "text": "The example is based on the following scenario: there are two domains (domain A and domain B), which both have session-specific policies for the UAs in their domain. Neither domain provides policies to the UAs outside of their own domain. The two domains have a proxy (Proxy A and Proxy B) and a policy server (PS A and PS B). The policies in both domains involve the session description offer and answer.",
      "ja": "例は次のシナリオに基づいている：両方は、それらのドメイン内のUAのためのセッション固有のポリシーを持つ2つのドメイン（ドメインAとドメインB）が存在します。どちらのドメインは、独自のドメインの外のUAにポリシーを提供します。 2つのドメインがプロキシ（プロキシAとプロキシB）と、ポリシーサーバ（PS AとPS B）を有します。両方のドメイン内のポリシーは、セッション記述の申し出と答えを伴います。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Offer in Request",
      "section_title": true,
      "ja": "4.3.1. リクエストでオファー"
    },
    {
      "indent": 3,
      "text": "The first call flow shown in Figure 3 depicts an INVITE transaction with the offer in the request. It is assumed that this is the first INVITE request the UAC creates in this domain and that it therefore does not have previous knowledge about the policy server URIs in this domain.",
      "ja": "図3に示す第1のコールフローは、要求で提供すると、INVITEトランザクションを示します。 UACは、このドメインで、それがため、このドメイン内のポリシーサーバのURIに関する予備知識を持っていないことを作成し、最初のINVITE要求であることが想定されます。"
    },
    {
      "indent": 3,
      "text": "(1) UA A sends an INVITE request to Proxy A. Proxy A knows that policies apply to this session and (2) returns a 488 (Not Acceptable Here) response to UA A. Proxy A includes the URI of PS A in the 488 (Not Acceptable Here) response. This step is needed since the UAC has no prior knowledge about the URI of PS A. (3) UA A uses the URI to contact PS A, discloses the session description offer to PS A, and (4) receives policies for the offer. (5) UA A reformulates the INVITE request under consideration of the received policies and includes a Policy-ID header field to indicate that it has already contacted PS",
      "ja": "（1）UA AはUA A.プロキシAは488でPS AのURIを含んにプロキシA.プロキシAはポリシーがこのセッションに適用されることを知っており、（2）（ここでは許容できない）488を返すにINVITEリクエストを応答を送信します（ここでは許容できない）応答。 UACがPS A.（3）UA Aは、PS Aと接触するURIを使用してPS Aにセッション記述の提供を開示し、そして（4）を提供するためのポリシーを受信するURIについての事前の知識を持たないので、このステップは必要とされています。 （5）UA Aは、受信したポリシーを考慮して、INVITE要求を再定式化し、それが既にPSに接触したことを示すために、ポリシー-IDヘッダフィールドを含みます"
    },
    {
      "indent": 3,
      "text": "A. Proxy A does not reject the INVITE request this time and removes the Policy-ID header field when forwarding the INVITE request. Proxy B adds a Policy-Contact header field containing the URI of PS B. (6) UA B uses this URI to contact PS B and disclose the offer and the answer it is about to send. (7) UA B receives policies from PS B and applies them to the offer and answer, respectively. (8) UA B returns the updated answer in the 200 (OK) response. (9) UA A contacts PS A again with the current offer and answer and (10) retrieves the policies for both from PS A.",
      "ja": "A.プロキシAは、INVITEリクエストにこの時間を拒否し、INVITE要求を転送するポリシー-IDヘッダフィールドを削除しません。プロキシBは、（6）UA Bは、PS Bに連絡して、送信しようとしているの申し出と答えを開示するために、このURIを使用してPS B.のURIを含むポリシー-Contactヘッダーフィールドを追加します。 （7）UA Bは、PS Bからポリシーを受け取り、それぞれの申し出と答え、それらを適用します。 （8）UA Bは、200（OK）応答して更新された回答を返します。 （9）現在のオファーとアンサー及び（10）で再びUA A接点PS Aの両方PS Aからポリシーを取得します"
    },
    {
      "indent": 4,
      "text": "UA A           Proxy A           Proxy B             UA B\n |                 |                |                 |\n | INVITE offer    |                |                 |\n |---------------->|                |                 | (1)\n | 488             |                |                 |\n | + Policy-Contact|                |                 |\n |<----------------|                |                 | (2)\n | ACK             |                |                 |\n |---------------->|                |                 |\n |                 | PS A           |                 |\n |                    |             |                 |\n | PolicyChannel      |             |                 |\n | + InfoOffer        |             |                 |\n |------------------->|             |                 | (3)\n | PolicyChannel      |             |                 |\n | + PolicyOffer      |             |                 |\n |<-------------------|             |                 | (4)\n |                    |             |                 |\n |                 |                |                 |\n | INVITE offer'   | INVITE offer'  | INVITE offer'   |\n | + Policy-ID     |                | + Policy-Contact|\n |---------------->|--------------->|---------------->| (5)\n |                 |                |                 |\n |                 |           PS B |                 |\n |                 |             |                    |\n |                 |             | PolicyChannel      |\n |                 |             | + InfoOffer'       |\n |                 |             | + InfoAnswer       |\n |                 |             |<-------------------| (6)\n |                 |             | PolicyChannel      |\n |                 |             | + PolicyOffer      |\n |                 |             | + PolicyAnswer     |\n |                 |             |------------------->| (7)\n |                 |             |                    |",
      "raw": true
    },
    {
      "indent": 5,
      "text": "|                 |                |                 |\n| OK answer'      | OK answer'     | OK answer'      |\n|<----------------|<---------------|<----------------| (8)\n| ACK                                                |\n|--------------------------------------------------->|\n|                 |                |                 |\n|                    |             |                 |\n| PolicyChannel      |             |                 |\n| + InfoOffer'       |             |                 |\n| + InfoAnswer'      |             |                 |\n|------------------->|             |                 | (9)\n| PolicyChannel      |             |                 |\n| + PolicyOffer      |             |                 |\n| + PolicyAnswer     |             |                 |\n|<-------------------|             |                 | (10)\n|                    |             |                 |",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 3",
      "ja": "図3"
    },
    {
      "indent": 0,
      "text": "4.3.2. Offer in Response",
      "section_title": true,
      "ja": "4.3.2. 応答でオファー"
    },
    {
      "indent": 3,
      "text": "The call flow shown in Figure 4 depicts an INVITE transaction with the offer in the response.",
      "ja": "図4に示すコールフローは、応答に提供して、INVITEトランザクションを示します。"
    },
    {
      "indent": 3,
      "text": "(1) UA A sends an INVITE request without an offer to Proxy A and (2) Proxy A returns a 488 (Not Acceptable Here) response containing the URI of PS A. (3),(4) UA A uses this policy server URI to set up the policy channel. At this time, UA A does not disclose a session description since it does not have the offer yet. (5) UA A re-sends the INVITE request and includes a Policy-ID header field to indicate that it has contacted PS A. Proxy A does not reject the INVITE request this time and removes the Policy-ID header field when forwarding the INVITE request. Proxy B adds a Policy-Contact header field containing the URI of PS B. (6) UA B uses this URI to discloses the offer to PS B. (7) UA B receives policies from PS B and applies them to the offer. (8) UA B returns the updated offer the 200 (OK) response. (9),(10) UA A contacts PS and discloses the offer and the answer it is about to send. An important difference to the flow in the previous example is that UA A performs steps (9) and (10) before returning the answer in step (11). This enables UA A to return the final answer in the ACK request, which includes all applicable policies. However, it requires that PS A immediately returns a policy to avoid a delay in the transmission of the ACK request. (12),(13) UA B again sends the current offer and answer to PS B and applies the policies it receives to both before using them.",
      "ja": "（1）UA Aは、プロキシAに提供せずに、INVITE要求を送信し、（2）プロキシAは、PS AのURIを含む488（ここでは許容できない）応答を返す（3）、（4）UA Aは、このポリシーサーバを使用しURIは、ポリシーチャネルを設定します。それはまだプランを持っていないので、この時点では、UA Aは、セッション記述を開示していません。 （5）UA Aは、INVITE要求を再送信し、それが接触したPSのA.プロキシAは、INVITEリクエストにこの時間を拒否し、INVITEを転送するときにポリシー-IDヘッダフィールドを削除しないことを示すために、ポリシー-IDヘッダフィールドを含みます要求。プロキシBは、（6）UA BはPS B.（7）UA Bは、PS Bからポリシーを受信し、オファーにそれらを適用するオファーを開示するために、このURIを使用してPS B.のURIを含むポリシーコンタクトヘッダフィールドを付加します。 （8）UA B更新200（OK）応答を提供し返します。 （9）、（10）UA A接点PSおよび提供し、送信しようとしている答えを開示しています。前の例のフローに重要な違いは、UA Aは、ステップ（11）に答えを返す前に、工程（9）及び（10）を行うことです。これは、該当するすべてのポリシーが含まACK要求、で最終的な答えを返すためにUA Aを可能にします。しかし、それはPS AはすぐにACK要求の送信の遅れを避けるために、ポリシーを返すことが必要です。 （12）、（13）UA B再び現在のオファーを送り、PS Bに答え、それはそれらを使用する前に、両方に受信ポリシーを適用します。"
    },
    {
      "indent": 4,
      "text": "UA A           Proxy A            Proxy B            UA B\n |                 |                |                 |\n | INVITE          |                |                 |\n |---------------->|                |                 | (1)\n | 488             |                |                 |\n | + Policy-Contact|                |                 |\n |<----------------|                |                 | (2)\n | ACK             |                |                 |\n |---------------->|                |                 |\n |                 | PS A           |                 |\n |                    |             |                 |\n | PolicyChannel      |             |                 |\n |------------------->|             |                 | (3)\n | PolicyChannel      |             |                 |\n |<-------------------|             |                 | (4)\n |                    |             |                 |\n |                 |                |                 |\n | INVITE          | INVITE         | INVITE          |\n | + Policy-ID     |                | + Policy-Contact|\n |---------------->|--------------->|---------------->| (5)\n |                 |                |                 |\n |                 |           PS B |                 |\n |                 |             |                    |\n |                 |             | PolicyChannel      |\n |                 |             | + InfoOffer        |\n |                 |             |<-------------------| (6)\n |                 |             | PolicyChannel      |\n |                 |             | + PolicyOffer      |\n |                 |             |------------------->| (7)\n |                 |             |                    |\n |                 |                |                 |\n | OK offer'       | OK offer'      | OK offer'       |\n |<----------------|<---------------|<----------------| (8)\n |                 |                |                 |\n |                    |             |                 |\n | PolicyChannel      |             |                 |\n | + InfoOffer'       |             |                 |\n | + InfoAnswer       |             |                 |\n |------------------->|             |                 | (9)\n | PolicyChannel      |             |                 |\n | + PolicyOffer      |             |                 |\n | + PolicyAnswer     |             |                 |\n |<-------------------|             |                 | (10)\n |                    |             |                 |\n | ACK answer'                                        |\n |--------------------------------------------------->| (11)\n |                 |                |                 |\n |                 |             |                    |",
      "raw": true
    },
    {
      "indent": 5,
      "text": "|                 |             | PolicyChannel      |\n|                 |             | + InfoOffer'       |\n|                 |             | + InfoAnswer'      |\n|                 |             |<-------------------| (12)\n|                 |             | PolicyChannel      |\n|                 |             | + PolicyOffer      |\n|                 |             | + PolicyAnswer     |\n|                 |             |------------------->| (13)\n|                 |             |                    |",
      "raw": true
    },
    {
      "indent": 33,
      "text": "Figure 4",
      "ja": "図4"
    },
    {
      "indent": 0,
      "text": "4.4. UA/Policy Server Rendezvous",
      "section_title": true,
      "ja": "4.4.  UA / Policy Serverのランデブー"
    },
    {
      "indent": 3,
      "text": "The first step in setting up session-specific policies is to rendezvous the UAs with the relevant policy servers. This is achieved by providing the URIs of all policy servers relevant for a session to the UAs.",
      "ja": "セッション固有のポリシーを設定するための最初のステップは、関連するポリシーサーバとのUAをランデブーすることです。これは、ユーザエージェントへのセッションに関連するすべてのポリシーサーバのURIを提供することによって達成されます。"
    },
    {
      "indent": 0,
      "text": "4.4.1. UAC Behavior",
      "section_title": true,
      "ja": "4.4.1.  UACの動作"
    },
    {
      "indent": 3,
      "text": "A UAC compliant to this specification MUST include a Supported header field with the option tag \"policy\" into all requests that can initiate an offer/answer exchange [RFC3264] (e.g., INVITE, UPDATE [RFC3311], and PRACK [RFC3262] requests). The UAC MUST include the \"policy\" option tag into these requests even if the particular request does not contain an offer or answer (e.g., an INVITE request without an offer). A UAC MAY include the \"policy\" option tag into all requests.",
      "ja": "この仕様にUAC準拠は、オファー/アンサー交換を開始することができ、すべての要求にオプションタグ「ポリシー」[RFC3264]（例えば、INVITE、UPDATE [RFC3311]、およびPRACK [RFC3262]の要求）でサポートされているヘッダフィールドを含まなければなりません。 UACは、特定の要求を提示申し出または回答（例えば、申し出のないINVITEリクエスト）が含まれていない場合でも、これらの要求に「ポリシー」オプションタグを含まなければなりません。 UACは、すべての要求に「ポリシー」オプションタグを含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "A UAC can receive a 488 (Not Acceptable Here) response that contains a Policy-Contact header field. The Policy-Contact header field is a new header field defined in this specification. It contains one (or multiple alternative) URI(s) for a policy server. A 488 (Not Acceptable Here) response with this header field is generated by a proxy to convey a URI of the local policy server to the UAC. After receiving a 488 (Not Acceptable Here) response with a Policy-Contact header field, a UAC compliant to this specification needs to decide if it wants to continue with the session now knowing that there is a policy server. If the UAC decides to continue, the UAC MUST use one of the policy server URIs to contact the policy server using the mechanism defined in Section 4.5.",
      "ja": "UACはポリシー-Contactヘッダーフィールドが含まれている488（ここでは許容できない）応答を受け取ることができます。ポリシー-Contactヘッダーフィールドは、この仕様で定義された新しいヘッダフィールドです。これは、ポリシーサーバのための1つ（または複数の代替）URI（複数可）が含まれています。このヘッダフィールドを持つ488（ここでは許容できない）応答がUACにローカルポリシーサーバーのURIを伝えるためにプロキシによって生成されます。ポリシー-Contactヘッダーフィールドを持つ488（ここでは許容できない）応答を受け取った後、この仕様に準拠したUACのは、それが今、ポリシーサーバがあることを知ってセッションを続行したいかどうかを判断する必要があります。 UACを継続することを決定した場合、UACは、4.5節で定義されたメカニズムを使用してポリシーサーバに接続するために、ポリシーサーバのURIのいずれかを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The Policy-Contact header can contain multiple URIs each with a different URI scheme and containing an \"alt-uri\" parameter with identical values. These URIs represent alternative policy channel mechanisms for obtaining the same policy. The UAC chooses one of the alternative URIs to use to obtain the policy. The UAC MAY take as a hint the order of the alternative URIs as indicating a preference as to which URI to use. The topmost URI in the list might be more preferred by the domain of the proxy for use to obtain the policy.",
      "ja": "ポリシーContactヘッダは、異なるURIスキームを用いて複数のURIをそれぞれ含有し、同じ値で「ALT-URI」パラメータを含むことができます。これらのURIは、同じポリシーを取得するための代替的なポリシーチャネルメカニズムを表します。 UACはポリシーを取得するために使用する代替のURIのいずれかを選択します。 UACは、ヒントとしてURIを使用するかに関して優先度を示すものとして、代替URIの順序をとることができます。リストの一番上のURIは、複数のポリシーを取得するために使用するプロキシのドメインによって好まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "After receiving policies from the policy server, the UAC decides whether or not it wants to accept these policies. If the UAC accepts these policies, the UAC MUST apply them to the current request and re-send the updated request. If no changes are required by policies or no policies have been received, the request can be re-sent without any policy-induced changes. If the UAC decides that the list of policy servers or the received session policies are unacceptable, then the UAC MUST NOT re-send the request.",
      "ja": "ポリシーサーバからポリシーを受け取った後、UACは、それがこれらのポリシーを受け入れることを望んでいるか否かを判断します。 UACは、これらのポリシーを受け入れた場合、UACは、現在の要求にそれらを適用しなければなりませんし、更新要求を再送信します。ポリシーまたは無ポリシーで必要とされる変更が受信されていない場合は、要求がどのポリシーによる変化せずに再送信することができます。 UACは、ポリシーサーバのリストまたは受信したセッションポリシーが受け入れられないと判断した場合には、UACが要求を再送ってはいけません。"
    },
    {
      "indent": 3,
      "text": "To protect the integrity of the policy server URI in a Policy-Contact header field, the UAC SHOULD use a secured transport protocol such as Transport Layer Security (TLS) [RFC5246] between UAC and proxy.",
      "ja": "ポリシー-ContactヘッダーフィールドにおけるポリシーサーバーURIの完全性を保護するために、UACは、UACとプロキシ間のトランスポート層セキュリティ（TLS）[RFC5246]としてセキュアなトランスポートプロトコルを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "The UAC MUST insert a Policy-ID header field into requests for which it has contacted a policy server and accepted the policies received. The Policy-ID header field is a new header field that is defined in this specification. The UA MUST create a Policy-ID header field value for each policy server it has contacted during the preparation of the request. A Policy-ID header field value contains two pieces of information: the policy server URI and an optional token. The policy server URI is the URI the UA has used to contact the policy server. The token is an opaque string the UAC can receive from the policy server. A token can, for example, be contained in the policy document [RFC6796]. If the UAC has received a token from the policy server, the UAC MUST include the token in the Policy-ID header field. The format of the Policy-ID header field is defined in Section 4.4.5.",
      "ja": "UACは、ポリシーサーバに連絡し、受信した政策を受け入れているの要求にポリシー-IDヘッダフィールドを挿入しなければなりません。ポリシー-IDヘッダフィールドはこの仕様で定義されている新たなヘッダフィールドです。 UAは、要求の準備中に接触した各ポリシーサーバのポリシー-IDヘッダフィールド値を作成する必要があります。ポリシーサーバURIおよびオプションのトークン：ポリシーIDヘッダフィールド値は2つの情報を含んでいます。ポリシーサーバURIがURIであるUAは、ポリシーサーバへの接続を使用しています。トークンは、UACは、ポリシーサーバから受信できる不透明な文字列です。トークンは、例えば、ポリシードキュメント[RFC6796]に含有させることができます。 UACは、ポリシーサーバからトークンを受信した場合、UACは、ポリシーIDヘッダフィールドにトークンを含まなければなりません。ポリシー-IDヘッダフィールドのフォーマットはセクション4.4.5で定義されています。"
    },
    {
      "indent": 3,
      "text": "The main purpose of the Policy-ID header field is to enable a proxy to determine if the UAC already knows a URI of the local policy server. If the policy server URI is not yet known to the UAC, the proxy can convey this URI to the UAC by rejecting the request with a 488 (Not Acceptable Here) response.",
      "ja": "ポリシー-IDヘッダフィールドの主な目的は、UACが既にローカルポリシーサーバのURIを知っているかどうかを判断するためにプロキシを有効にすることです。ポリシーサーバURIがまだUACに知られていない場合、プロキシは488（ここでは許容できない）応答で要求を拒絶することにより、UACにこのURIを伝えることができます。"
    },
    {
      "indent": 3,
      "text": "In some cases, a request can traverse multiple domains with a session-policy server. Each of these domains can return a 488 (Not Acceptable Here) response containing a policy server URI. A UAC contacts a policy server after receiving a 488 (Not Acceptable Here) response from a domain and before re-sending the request. This creates an implicit order between the policy servers in multiple domains. That is, a UAC contacts the first policy server, re-sends the modified request, contacts the second policy server, re-sends the modified request, and so on. This way, session policies are always applied to a request in the order in which the request traverses through the domains. The UAC MUST NOT change this implicit order among policy servers.",
      "ja": "いくつかのケースでは、要求は、セッションポリシーサーバと複数のドメインを横断することができます。これらのドメインのそれぞれには、ポリシーサーバのURIを含む488（ここでは許容できない）応答を返すことができます。ドメインからの再送信を要求する前に、488（ここでは許容できない）応答を受信した後、UAC接点ポリシーサーバ。これは、複数のドメインでのポリシーサーバ間の暗黙的な順序を作成します。すなわち、UACコンタクト最初のポリシーサーバは、第2のポリシーサーバは、修正された要求を再送信する、というように修正された要求、連絡先を再送信する、です。この方法では、セッションポリシーは常に要求がドメインを通じて横断した順序で要求に適用されます。 UACは、ポリシーサーバの間で、この暗黙の順序を変更してはなりません。"
    },
    {
      "indent": 3,
      "text": "A UAC frequently needs to contact the policy server in the local domain before setting up a session. To avoid the retransmission of the local policy server URI in a 488 (Not Acceptable Here) response for each new request, a UA SHOULD maintain a cache that contains the URI of the policy server in the local domain (see Section 4.4.4). The UAC SHOULD use the cached policy server URI to contact the local policy server before sending a request that initiates the offer/ answer exchange for a new session (e.g., an INVITE request). The UAC SHOULD NOT cache a policy server URI that is in a different domain than the UAC, even if it is the first policy server URI returned. The first policy server URI returned can be from another domain if the local domain does not have a policy server. Note that UACs perform exact domain comparisons. That is, foo.example.com and example.com are not considered equivalent.",
      "ja": "UACは、頻繁にセッションを設定する前に、ローカルドメイン内のポリシーサーバに連絡する必要があります。それぞれの新しい要求のための488（ここでは許容できない）応答でローカルポリシーサーバURIの再送信を回避するために、UAは、ローカルドメイン内のポリシーサーバのURIが含まれているキャッシュを維持する必要があります（4.4.4項を参照してください）。 UACは、新しいセッション（例えば、INVITEリクエスト）のためのオファー/アンサー交換を開始要求を送信する前にローカルポリシーサーバに連絡し、キャッシュされたポリシーサーバーURIを使用すべきです。 UACは、URIが返された最初のポリシーサーバであっても、UACとは異なるドメインにあるポリシーサーバーURIをキャッシュすべきではありません。ローカルドメインは、ポリシーサーバを持っていない場合、URIが返される最初のポリシーサーバが別のドメインに由来することができます。求めるUACは、正確なドメインの比較を行うことに注意してください。つまり、foo.example.comで、example.com同等とみなされていません。"
    },
    {
      "indent": 3,
      "text": "UAs can renegotiate the session description during a session by initiating a subsequent offer/answer exchange, e.g., in an INVITE, UPDATE, or PRACK request. When creating such a mid-dialog request, a UA SHOULD contact all policy servers to which it has established a policy channel during the initial offer/answer exchange (see Section 4.5) before sending the request. This avoids the retransmission of all policy server URIs in 488 (Not Acceptable Here) responses for mid-dialog requests.",
      "ja": "UAは、INVITE、UPDATE、またはPRACK要求に、例えば、後続のオファー/アンサー交換を開始することによって、セッション中にセッション記述を再交渉することができます。こうした半ば対話要求を作成する場合、UAはリクエストを送信する前に（4.5節を参照）、それは最初のオファー/アンサー交換時にポリシーチャネルを確立しているために、すべてのポリシーサーバに問い合わせてください。これは、ダイアログ中のリクエストに対する488（ここでは許容できない）応答内のすべてのポリシーサーバのURIの再送信を回避することができます。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Proxy Behavior",
      "section_title": true,
      "ja": "4.4.2. プロキシの挙動"
    },
    {
      "indent": 3,
      "text": "A proxy provides rendezvous functionalities for UAs and policy server. This is achieved by conveying the URI of a policy server to the UAC or the UAS (or both) when processing INVITE, UPDATE, or PRACK requests (or any other request that can initiate an offer/answer exchange).",
      "ja": "プロキシは、UAとポリシーサーバのためのランデブーの機能を提供します。これは、INVITE、UPDATE、またはPRACK要求（またはオファー/アンサー交換を開始することができる任意の他の要求）を処理するときにUACまたはUAS（または両方）にポリシーサーバーのURIを搬送することによって達成されます。"
    },
    {
      "indent": 3,
      "text": "If an offer/answer exchange initiating request contains a Supported header field with the option tag \"policy\", the proxy MAY reject the request with a 488 (Not Acceptable Here) response to provide the local policy server URI to the UAC. Before rejecting a request, the proxy MUST verify that the request does not contain a Policy-ID header field with the local policy server URI as a value. If the request does not contain such a header field or a local policy server URI is not present in this header field, then the proxy MAY reject the request with a 488 (Not Acceptable Here) response. The proxy MUST insert a Policy-Contact header field in the 488 (Not Acceptable Here) response that contains one (or multiple) URI(s) of its associated policy server. The proxy MAY add the header field parameter \"non-cacheable\" to prevent the UAC from caching this policy server URI (see Section 4.4.4).",
      "ja": "要求を開始オファー/アンサー交換がオプションタグ「ポリシー」とSupportedヘッダーフィールドが含まれている場合は、プロキシがUACにローカルポリシーサーバーURIを提供するために、488（ここでは許容できない）応答でリクエストを拒否するかもしれません。要求を拒否する前に、プロキシは、要求が値としてローカルポリシーサーバーURIとポリシー-IDヘッダーフィールドが含まれていないことを確かめなければなりません。要求は、このようなヘッダフィールドまたはURIは、このヘッダフィールドに存在しないローカルポリシーサーバが含まれていない場合、プロキシは488（ここでは許容できない）応答でリクエストを拒否するかもしれません。プロキシは、それに関連するポリシーサーバのURI（複数可）を1つ（または複数）が含まれて488（ここでは許容できない）応答ポリシーContactヘッダーフィールドを挿入しなければなりません。プロキシは、このポリシーサーバURIを（4.4.4項を参照）キャッシュからUACを防ぐために、ヘッダーフィールドパラメータ「キャッシュ不可能」を追加するかもしれません。"
    },
    {
      "indent": 3,
      "text": "More than one URI for the policy server using different URI schemes MAY be provided by the proxy as alternative URIs to contact the policy. If a proxy includes multiple URIs for the same policy, the proxy MUST include an \"alt-uri\" parameter for all policy server URIs that are alternatives for obtaining the same policy. The \"alt-uri\" parameter MUST contain either the domain name of the domain for which all the alternative policy server URIs relate to or a Fully Qualified Domain Name (FQDN) (e.g., the hostname of a policy server). All URIs that are alternatives for the same policy MUST have the same value for the \"alt-uri\" parameter. The value used for the \"alt-uri\" parameter MUST be such that the same value will not be included with other policy server URIs that a UA needs to contact by any other proxy within the same domain or another domain. A method to create a new unique \"alt-uri\" parameter value is to examine the value of existing \"alt-uri\" parameters and to make sure that the new value differs. A proxy MAY hint to a UA at a preference as to which URI to use by including the more preferred URI higher in the list than the other alternative URIs. URIs with the same \"alt-uri\" parameter MUST use different URI schemes. A SIP or SIPS URI MUST be included even if other URI schemes are defined and used in the future.",
      "ja": "代替URIがポリシーに連絡するように異なるURIスキームを使用して、ポリシーサーバに複数のURIは、プロキシによって提供されてもよいです。プロキシが同じポリシーの複数のURIが含まれている場合、プロキシは、同じポリシーを取得するための代替手段であるすべてのポリシーサーバのURIの「ALT-URI」パラメータを含まなければなりません。 「ALT-URI」パラメータは、すべての代替ポリシーサーバーのURIがまたは完全修飾ドメイン名（FQDN）に関連するドメインのドメイン名のいずれかを含まなければならない（例えば、ポリシーサーバのホスト名）。同じポリシーの代替されているすべてのURIは、「ALT-URI」パラメータに同じ値を持つ必要があります。 「ALT-URI」パラメータに使用される値は、同じ値はUAが同じドメインまたは別のドメイン内の任意の他のプロキシで連絡する必要がある他のポリシーサーバのURIに含まれませんようなものでなければなりません。新しいユニークな「ALT-URI」パラメータ値を作成するための方法は、既存の「ALT-URI」のパラメータの値を調べるために、新しい値が異なることを確認することです。プロキシはとしてURIがより好ましいURI他の代替のURIよりもリストの上位含めて、使用するまで優先でUAへのヒントもしれ。同じ「ALT-URI」パラメータを持つURIは異なるURIスキームを使用しなければなりません。 SIPまたはURIをSIPは他のURIスキームが定義され、将来的に使用されていても含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a local policy server URI is present in a Policy-ID header field value of a request, then the proxy MUST NOT reject the request as described above (it can still reject the request for other reasons). The proxy SHOULD remove the Policy-ID header field value of its associated policy server from the Policy-ID header field before forwarding the request. Not removing the Policy-ID header field value will not cause harm; however, the value is not relevant to any other proxy on the path and only increases message size. It also would disclose the policy server URI to subsequent proxies.",
      "ja": "ローカルポリシーサーバURIは、要求のポリシー-IDヘッダフィールド値に存在する場合、プロキシは（それはまだ他の理由で要求を拒否することができる）は、上述のように、要求を拒否してはいけません。プロキシは、要求を転送する前にポリシー-IDヘッダフィールドからそれに関連するポリシーサーバのポリシー-IDヘッダフィールド値を削除する必要があります。ポリシー-IDヘッダフィールドの値を削除しないと害を引き起こすことはありません。ただし、値は、パス上の他のプロキシに関連していないだけのメッセージサイズを増大させます。また、その後のプロキシにポリシーサーバーURIを開示します。"
    },
    {
      "indent": 3,
      "text": "The Policy-ID header field serves two main purposes: first and most important, it enables the proxy to determine if a UAC already knows the URI of the local policy server. The second purpose of the Policy-ID header field is to enable a domain to route all requests that belong to the same session (i.e., the initial request and requests a UA retransmits after contacting the policy server) to the same proxy and policy server. This is important if a domain has multiple proxy/policy server combinations (e.g., in a proxy/policy server farm that receives requests through a load balancer), which create per-session state in the network. An example for such a scenario is a policy server that is associated with a session border device. The policy server configures the session border device after receiving a session description from the UAC via the policy channel.",
      "ja": "ポリシー-IDヘッダフィールドは、主に2つの目的があります：最初の、そして最も重要な、それはUACがすでにローカルポリシーサーバのURIを知っているかどうかを判断するためにプロキシを可能にします。ポリシー-IDヘッダフィールドの第二の目的は、同一のプロキシとポリシーサーバにルーティングする同じセッションに属する（すなわち、最初の要求およびUAは、ポリシーサーバに接触した後に再送要求）すべての要求をドメインを可能にすることです。ドメインは、ネットワーク内のセッションごとの状態を作成し、（ロードバランサを介して要求を受信するプロキシ/ポリシサーバファーム内の例えば、）複数のプロキシ/ポリシサーバの組み合わせを持っている場合、これは重要です。そのようなシナリオの例では、セッションボーダーデバイスに関連付けられているポリシーサーバです。ポリシーサーバは、ポリシーチャネルを介してUACからセッション記述を受信した後にセッションボーダーデバイスを構成します。"
    },
    {
      "indent": 3,
      "text": "Retransmitted requests for such a session need to be routed to the same proxy/policy server as the initial request since this proxy/ policy server combination has configured the associated border device for the session.",
      "ja": "そのようなセッションの再送信された要求は、このプロキシ/ポリシーサーバの組み合わせがセッションに関連したボーダーデバイスを構成しているため、最初の要求と同じプロキシ/ポリシーサーバにルーティングする必要があります。"
    },
    {
      "indent": 3,
      "text": "Routing all requests that belong to the same session to the same proxy can be achieved by using the Policy-ID header field token. It requires that the policy server return a token to the UAC that uniquely identifies the specific proxy/policy server combination. The UAC includes this token in the Policy-ID header field, and it can be used (together with the policy server URI) by the proxies in this domain to route the request along the desired path. The format of this token does not require standardization. The only requirement is that the token provide sufficient information for proxies to route the message inside a domain to the desired proxy/policy server. The token can, for example, be a numeric identifier or an IP address.",
      "ja": "ポリシー-IDヘッダフィールドのトークンを使用することによって達成することができ、同じプロキシの同じセッションに属しているすべての要求をルーティングします。これは、ポリシーサーバを一意に特定のプロキシ/ポリシーサーバの組み合わせを特定するUACにトークンを返すことが必要です。 UACは、ポリシーIDヘッダフィールドにこのトークンを含み、それは所望の経路に沿ってリクエストルーティングするこのドメイン内のプロキシによって（一緒にポリシーサーバURIを有する）を使用することができます。このトークンの形式は、標準化を必要としません。唯一の要件は、トークンが所望のプロキシ/ポリシサーバにドメインの内部でルーティングするメッセージをプロキシするための十分な情報を提供することです。トークンは、例えば、数値識別子またはIPアドレスを指定できます。"
    },
    {
      "indent": 6,
      "text": "Note: it has been proposed to use the Policy-ID header field to provide a hint for a proxy that the UAC has actually contacted the policy server. This usage also requires the policy server to return a token to the UA. In addition, the policy server needs to share valid tokens with the proxy. After receiving a request with a Policy-ID header field, the proxy can determine if the token in the Policy-ID header field is valid. If it is valid, the proxy knows that the UA has contacted the policy server for this session. However, this token does not provide any proof that the UA has actually used the policies it has received from the policy server. A malicious UA can simply contact the policy server, discard all policies it receives, and still use the token in the Policy-ID header field.",
      "ja": "注：それはUACが実際にポリシーサーバに接触したプロキシのためのヒントを提供するために、ポリシー-IDヘッダフィールドを使用することが提案されています。この使用法はまた、UAにトークンを返すために、ポリシーサーバを必要とします。また、ポリシーサーバは、プロキシで有効なトークンを共有する必要があります。ポリシー-IDヘッダフィールドで要求を受信した後、プロキシは、ポリシーIDヘッダフィールドにトークンが有効であるかどうかを決定することができます。それが有効である場合は、プロキシは、UAは、このセッションのポリシーサーバに接触したことを知っています。しかし、このトークンは、UAは、実際には、ポリシーサーバから受信したポリシーを使用していることを任意の証拠を提供していません。悪質なUAは、単純に、ポリシーサーバに問い合わせて、受信するすべてのポリシーを破棄し、まだ政策-IDヘッダフィールドにトークンを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The proxy MAY insert a Policy-Contact header field into INVITE, UPDATE, or PRACK requests (or any other request that can initiate an offer/answer exchange) in order to convey the policy server URI to the UAS. If the request already contains a Policy-Contact header field, the proxy MUST insert the URI after all existing values at the end of the list. A proxy MUST NOT change the order of existing Policy-Contact header field values.",
      "ja": "プロキシは、UASにポリシーサーバーURIを伝えるために、INVITE、UPDATE、またはPRACK要求（またはオファー/アンサー交換を開始することができ、他の要求）にポリシー-Contactヘッダーフィールドを挿入することができます。要求がすでにポリシー-Contactヘッダーフィールドが含まれている場合、プロキシはリストの最後に、すべての既存の値の後にURIを挿入しなければなりません。プロキシは、既存のポリシー-Contactヘッダーフィールド値の順序を変更しないでください。"
    },
    {
      "indent": 3,
      "text": "A proxy MUST use the Record-Route mechanism [RFC3261] if its associated policy server has session policies that apply to mid-dialog requests. The Record-Route header field enables a proxy to stay in the signaling path and resubmit the policy server URIs to UAs during mid-dialog requests that initiate an offer/answer exchange. Resubmitting the policy server URI to UAs ensures that UAs keep contacting the policy server for mid-dialog requests.",
      "ja": "それに関連するポリシーサーバは、ダイアログ中のリクエストに適用するセッションポリシーを持っている場合、プロキシは、録音・ルートメカニズム[RFC3261]を使用しなければなりません。 Record-Routeヘッダーフィールドは、シグナリングパスに滞在し、オファー/アンサー交換を開始し、ダイアログ中のリクエストの際のUAにポリシーサーバーのURIを再送信するためのプロキシを有効にします。 UAにポリシーサーバのURIを再送信すると、UAは、ダイアログ中のリクエストのためのポリシーサーバに接触し続けることを保証します。"
    },
    {
      "indent": 3,
      "text": "A proxy can find out if the UAS supports this extension by examining the Supported header field of responses. The proxy knows that the UAS supports this extension if the Supported header field of a response contains the option tag \"policy\". A proxy can use this information to determine if the UAS has understood the Policy-Contact header field it has inserted into the request.",
      "ja": "UASは応答のSupportedヘッダーフィールドを調べることによって、この拡張機能をサポートしている場合、プロキシは見つけることができます。プロキシは、応答のSupportedヘッダーフィールドはオプションタグ「政策」が含まれている場合UASは、この拡張機能をサポートしていることを知っています。プロキシは、UASは、それが要求に挿入したポリシーコンタクトヘッダフィールドを理解したかどうかを決定するためにこの情報を使用することができます。"
    },
    {
      "indent": 3,
      "text": "To protect the integrity of the policy server URI in a Policy-Contact header field, the proxy SHOULD use a secured transport protocol such as TLS [RFC5246] between proxy and UAs.",
      "ja": "ポリシーコンタクトヘッダフィールドにポリシーサーバURIの完全性を保護するために、プロキシは、プロキシとUASとの間のTLS [RFC5246]としてセキュアトランスポートプロトコルを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "4.4.3. UAS Behavior",
      "section_title": true,
      "ja": "4.4.3. その振る舞い"
    },
    {
      "indent": 3,
      "text": "A UAS can receive an INVITE, UPDATE, or PRACK request (or another request that can initiate offer/answer exchanges) that contains a Policy-Contact header field with a list of policy server URIs. A UAS that receives such a request needs to decide if it wants to accept the session knowing that there are policy servers involved. If the Policy-Contact header contains multiple URIs, each with a different URI scheme and containing an \"alt-uri\" parameter with identical values, these URI schemes represent alternative policy channel mechanisms for obtaining the same policy. If the UAS accepts the session, the UAS MUST contact one URI out of each group of URIs with identical \"alt-uri\" parameter values to obtain the policy. The UAS MAY take as a hint the order of the alternative URIs as indicating a preference as to which URI to use. The topmost URI in the list might be more preferred by the domain of the proxy for use to obtain the policy. The UAS MUST contact all policy server URIs in a Policy-Contact header field that are not part of a group of alternative URIs and MUST contact one URI in each group of alternative URIs. The UAS MUST contact these policy server URIs in the order in which they were contained in the Policy-Contact header field, starting with the topmost value (i.e., the value that was inserted first).",
      "ja": "UASは、INVITE、UPDATE、またはPRACK要求（またはオファー/アンサー交換を開始することができる別の要求）ポリシーサーバURIのリストとポリシーコンタクトヘッダフィールドを含む受信することができます。そのような要求を受け取るUASは、それが関係するポリシーサーバがあることを知ってセッションを受け入れることを望んでいるかどうかを決定する必要があります。ポリシーContactヘッダは、複数のURIが含まれている異なるURIスキームとそれぞれ同一の値で「ALT-URI」パラメータを含む場合、これらのURIスキームは、同じポリシーを取得するための代替的ポリシーチャネルメカニズムを表します。 UASは、セッションを受け入れる場合、UASは、ポリシーを取得するために、同一の「ALT-URI」のパラメータ値とURIの各群のうちの1つのURIを連絡しなければなりません。 UASは、ヒントとしてURIを使用するかに関して優先度を示すものとして、代替URIの順序をとることができます。リストの一番上のURIは、複数のポリシーを取得するために使用するプロキシのドメインによって好まれるかもしれません。 UASは、代替URIのグループの一部ではなく、代替URIの各グループ内の1つのURIに連絡しなければならないことをポリシー-Contactヘッダーフィールド内のすべてのポリシーサーバのURIを連絡しなければなりません。 UASは、彼らが一番上の値から始まる、ポリシーコンタクトヘッダフィールドに含まれた順序でこれらのポリシーサーバのURIを連絡しなければならない（すなわち、最初に挿入した値）。"
    },
    {
      "indent": 3,
      "text": "If a UAS decides that it does not want to accept a session because there are policy servers involved or because one of the session policies received from a policy server is not acceptable, the UAS MUST reject the request with a 488 (Not Acceptable Here) response.",
      "ja": "UASが関与ポリシーサーバがあるか、ポリシーサーバから受信したセッションポリシーの一つが許容できないので、UASは（ここでは許容できない）488で要求を拒絶しなければなりませんので、それがセッションを受け入れることを望んでいないことを決定した場合の応答。"
    },
    {
      "indent": 3,
      "text": "The UAS MAY accept a request and continue with setting up a session if it cannot set up a policy channel to the policy server, for example, because the policy server is unreachable or returns an error condition that cannot be resolved by the UAS (i.e., error conditions other than, for example, a 401 (Unauthorized) response). This is to avoid that the failure of a policy server prevents a UA from communicating. Since this session might not be policy compliant without the policy subscription, it can be blocked by policy enforcement mechanisms if they are in place.",
      "ja": "UASは、リクエストを受け入れ、ポリシーサーバが到達不能であるかUAS（すなわちによって解決できないエラー状態を返しますので、それは、例えば、ポリシーサーバにポリシーチャネルを設定できない場合、セッションをセットアップを続行してもよい（MAY）例えば、401（不正な）応答）以外のエラー状態。これは、ポリシーサーバの障害が通信からUAを防止することを避けるためです。このセッションは、ポリシーサブスクリプションなしでポリシーに準拠しないかもしれないので、彼らは場所にいる場合、それは、ポリシー適用メカニズムによってブロックすることができます。"
    },
    {
      "indent": 3,
      "text": "A UAS can receive a token from a policy server via the policy channel. Since the UAS does not create a Policy-ID header field, it can simply ignore this token.",
      "ja": "UASは、ポリシーチャネルを介してポリシーサーバからトークンを受け取ることができます。 UASは、ポリシー-IDヘッダフィールドを作成していないので、それは単にこのトークンを無視することができます。"
    },
    {
      "indent": 3,
      "text": "A UAS compliant to this specification MUST include a Supported header field with the option tag \"policy\" into responses to requests that can initiate an offer/answer exchange. The UAS MAY include this option tag in all responses. This way, a proxy that has inserted the Policy-Contact header field can know that the header field was understood by the UAS.",
      "ja": "この仕様に準拠するUASは、オファー/アンサー交換を開始することができます要求への応答にオプションタグ「ポリシー」でサポートされているヘッダフィールドを含まなければなりません。 UASは、すべての応答にこのオプションタグを含むかもしれません。この方法では、ポリシー-Contactヘッダーフィールドを挿入したプロキシは、ヘッダーフィールドはUASによって理解されたことを知ることができます。"
    },
    {
      "indent": 0,
      "text": "4.4.4. Caching the Local Policy Server URI",
      "section_title": true,
      "ja": "4.4.4. ローカルポリシーサーバのURIをキャッシュ"
    },
    {
      "indent": 3,
      "text": "A UAC frequently needs to contact the policy server in the local domain before setting up a session. To avoid the retransmission of the local policy server URI for each session, a UA SHOULD maintain a cache that contains the URI of the local policy server.",
      "ja": "UACは、頻繁にセッションを設定する前に、ローカルドメイン内のポリシーサーバに連絡する必要があります。各セッションのローカルポリシーサーバーURIの再送信を回避するために、UAは、ローカルポリシーサーバのURIが含まれているキャッシュを維持する必要があります。"
    },
    {
      "indent": 3,
      "text": "A UA can receive this URI in a Policy-Contact header field of a request or a 488 (Not Acceptable Here) response. The UA can also receive the local policy server URI through configuration, for example, via the configuration framework [RFC6080]. If a UA has received a local policy server URI through configuration and receives another local policy server URI in a Policy-Contact header field, the UA SHOULD overwrite the configured URI with the most recent one received in a Policy-Contact header field. A policy server URI received in a Policy-Contact header field expires if it has not been refreshed before it reaches the maximum cached URI validity. The default maximum cached URI validity is 24 hours.",
      "ja": "UAはリクエストまたは488（ここでは許容できない）応答の政策-ContactヘッダーフィールドにこのURIを受け取ることができます。 UAは、構成フレームワーク[RFC6080]を介して、例えば、コンフィギュレーションを介してローカルポリシーサーバURIを受信することができます。 UAが設定介してローカルポリシーサーバーURIを受け、政策-Contactヘッダーフィールドに別のローカルポリシーサーバーURIを受信して​​いる場合、UAは、ポリシー-Contactヘッダーフィールドに受信した最新の1で構成されたURIを上書きすべきです。 URIはポリシーContactヘッダーフィールドに受信したポリシーサーバは、それが最大のURIの有効性をキャッシュされた到達する前にそれがリフレッシュされていない場合に満了します。 URIの有効性、キャッシュされたデフォルトの最大値は24時間です。"
    },
    {
      "indent": 3,
      "text": "Domains can prevent a UA from caching the local policy server URI. This is useful, for example, if the policy server does not need to be involved in all sessions or the policy server URI changes from session to session. A proxy can mark the URI of such a policy server as \"non-cacheable\". A UA MUST NOT cache a non-cacheable policy server URI. The UA SHOULD remove the current URI from the cache when receiving a local policy server URI that is marked as \"non-cacheable\". This is to avoid the use of policy server URIs that are outdated.",
      "ja": "ドメインはローカルポリシーサーバーURIをキャッシュからUAを防ぐことができます。ポリシーサーバは、すべてのセッションまたはURIがセッション間で変更するポリシーサーバに関与する必要はありません場合、これは、例えば、便利です。プロキシは、「キャッシュ不可能」などのポリシーサーバのURIをマークすることができます。 UAは、非キャッシュポリシーサーバーURIをキャッシュしてはなりません。 「キャッシュ不可能」としてマークされているローカルポリシーサーバーURIを受信したとき、UAは、キャッシュから現在のURIを削除する必要があります。これは、古くなっているポリシーサーバのURIの使用を避けることです。"
    },
    {
      "indent": 3,
      "text": "The UA SHOULD NOT cache policy server URIs it has received from proxies outside of the local domain. These policy servers need not be relevant for subsequent sessions, which can go to a different destination, traversing different domains.",
      "ja": "UAは、それがローカルドメインの外側のプロキシから受信したポリシーサーバのURIをキャッシュすべきではありません。これらのポリシーサーバは、異なるドメインを横断、別の目的地に行くことができ、その後のセッションで、に関連している必要はありません。"
    },
    {
      "indent": 3,
      "text": "The UA MUST NOT cache tokens it has received from a policy server. A token is only valid for one request.",
      "ja": "UAは、ポリシーサーバから受信したトークンをキャッシュしてはなりません。トークンは、一つのリクエストに対してのみ有効です。"
    },
    {
      "indent": 0,
      "text": "4.4.5. Header Field Definition and Syntax",
      "section_title": true,
      "ja": "4.4.5. ヘッダーフィールドの定義と構文"
    },
    {
      "indent": 0,
      "text": "4.4.5.1. Policy-ID Header Field",
      "section_title": true,
      "ja": "4.4.5.1。ポリシー-IDヘッダーフィールド"
    },
    {
      "indent": 3,
      "text": "The Policy-ID header field is inserted by the UAC into INVITE, UPDATE, or PRACK requests (or any other request that can be used to initiate an offer/answer exchange). The Policy-ID header field identifies all policy servers the UAC has contacted for this request.",
      "ja": "ポリシー-IDヘッダフィールドは、INVITE、UPDATE、またはPRACK要求（またはオファー/アンサー交換を開始するために使用することができる任意の他の要求）にUACによって挿入されます。ポリシー-IDヘッダーフィールドは、UACがこの要求のために接触したすべてのポリシーサーバを識別します。"
    },
    {
      "indent": 3,
      "text": "The value of a Policy-ID header field consists of a policy server URI and an optional token parameter. The token parameter contains a token the UA might have received from the policy server.",
      "ja": "ポリシー-IDヘッダフィールドの値は、ポリシーサーバURIおよびオプションのトークンのパラメータから成ります。トークンパラメータは、UAは、ポリシーサーバから受信した可能性がありますトークンが含まれています。"
    },
    {
      "indent": 3,
      "text": "The syntax of the Policy-ID header field is described below in ABNF, according to [RFC5234], as an extension to the ABNF for SIP in [RFC3261]:",
      "ja": "ポリシー-IDヘッダフィールドの構文は[RFC3261]でのSIPのためのABNFの拡張として、[RFC5234]によれば、ABNFに説明します。"
    },
    {
      "indent": 5,
      "text": "Policy-ID = \"Policy-ID\" HCOLON policyURI *(COMMA policyURI) policyURI = ( SIP-URI / SIPS-URI / absoluteURI ) [ SEMI token-param ] *( SEMI generic-param ) token-param = \"token=\" token",
      "ja": "ポリシーID = \"ポリシーID\" HCOLON policyURI *（COMMA policyURI）policyURI =（SIP-URI / SIPS-URI / absoluteURIで）[SEMIトークンPARAM] *（SEMIジェネリック-PARAM）トークンPARAM = \"トークン=\"トークン"
    },
    {
      "indent": 0,
      "text": "4.4.5.2. Policy-Contact Header Field",
      "section_title": true,
      "ja": "4.4.5.2。ポリシー連絡先ヘッダーフィールド"
    },
    {
      "indent": 3,
      "text": "The Policy-Contact header field can be inserted by a proxy into a 488 (Not Acceptable Here) response to INVITE, UPDATE, or PRACK requests (or other requests that initiate an offer/answer exchange). The value of a Policy-Contact header field consists of a policy server URI and an optional \"non-cacheable\" header field parameter. The policy server URI identifies the policy server that needs to be contacted by a UAC. The \"non-cacheable\" header field parameter indicates that the policy server URI is not intended to be cached by the UAC.",
      "ja": "ポリシー-Contactヘッダーフィールドは、488（ここでは許容できない）INVITEに対する応答、UPDATE、またはPRACK要求（またはオファー/アンサー交換を開始する他の要求）にプロキシによって挿入することができます。ポリシー-Contactヘッダーフィールドの値は、ポリシーサーバURIおよびオプションの「キャッシュ不可能」ヘッダフィールドのパラメータで構成されています。ポリシーサーバーURIは、UACが接触する必要があり、ポリシーサーバを識別します。 「キャッシュ不可能」ヘッダフィールドのパラメータは、ポリシーサーバのURIがUACによってキャッシュされるものではないことを示しています。"
    },
    {
      "indent": 3,
      "text": "The Policy-Contact header field can also be inserted by a proxy into INVITE, UPDATE, and PRACK requests (or other requests that can be used to initiate an offer/answer exchange). It contains an ordered list of policy server URIs that need to be contacted by the UAS. The topmost value of this list identifies the policy server that is contacted first. New header field values are inserted at the end. With this, the Policy-Contact header field effectively forms a fist-in-first-out queue.",
      "ja": "ポリシーコンタクトヘッダフィールドはまた、INVITEにプロキシ、UPDATE、およびPRACK要求（またはオファー/アンサー交換を開始するために使用することができる他の要求）によって挿入することができます。それはUASから連絡する必要があるポリシーサーバのURIの順序付きリストが含まれています。このリストの一番上の値が最初に接触しているポリシーサーバを識別します。新しいヘッダフィールドの値は最後に挿入されています。これにより、ポリシー-Contactヘッダーフィールドは、効果的に拳・イン・ファーストアウトキューを形成しています。"
    },
    {
      "indent": 3,
      "text": "The syntax of the Policy-Contact header field is described below in ABNF, according to [RFC5234], as an extension to the ABNF for SIP in [RFC3261]:",
      "ja": "ポリシーコンタクトヘッダフィールドの構文は[RFC3261]でのSIPのためのABNFの拡張として、[RFC5234]によれば、ABNFに説明します。"
    },
    {
      "indent": 3,
      "text": "Policy-Contact = \"Policy-Contact\" HCOLON policyContact-info *(COMMA policyContact-info)",
      "ja": "ポリシー連絡先= \"ポリシー・コンタクト\" HCOLONのpolicyContact-情報*（COMMA policyContact-情報）"
    },
    {
      "indent": 3,
      "text": "policyContact-info = LAQUOT policyContact-uri RAQUOT *( SEMI policyContact-param )",
      "ja": "policyContact-情報= LAQUOT policyContact-URI RAQUOTの*（SEMI policyContact-PARAM）"
    },
    {
      "indent": 3,
      "text": "policyContact-uri = ( SIP-URI / SIPS-URI / absoluteURI )",
      "ja": "policyContact-S =（SIP URIは/ URI / absoluteURIでのSIPS）"
    },
    {
      "indent": 3,
      "text": "policyContact-param = ( \"non-cacheable\" / policyContact-alt-uri / generic-param )",
      "ja": "policyContact-PARAM =（ \"キャッシュ不可能\" / policyContact-ALT-URI /ジェネリック-PARAM）"
    },
    {
      "indent": 3,
      "text": "policyContact-alt-uri = \"alt-uri\" EQUAL hostname",
      "ja": "policyContact-ALT-URI = \"ALT-URI\" EQUALホスト名"
    },
    {
      "indent": 3,
      "text": "Tables 1 and 2 are extensions of Tables 2 and 3 in [RFC3261]. The column \"INF\" is for the INFO method [RFC6086], \"PRA\" is for the PRACK method [RFC3262], \"UPD\" is for the UPDATE method [RFC3311], \"SUB\" is for the SUBSCRIBE method [RFC6665], \"NOT\" is for the NOTIFY method [RFC6665], \"MSG\" is for the MESSAGE method [RFC3428], \"REF\" is for the REFER method [RFC3515], and \"PUB\" is for the PUBLISH method [RFC3903].",
      "ja": "表1および表2は、表2の拡張及び[RFC3261]で3です。カラム \"INF\" はINFO方法には[RFC6086]、 \"PRA\" はPRACK方法には[RFC3262]、 \"UPD\" は、UPDATEメソッドのためのものである[RFC3311]、 \"SUB\" は、SUBSCRIBEメソッド[RFC6665]のためのものです、 \"NOT\" NOTIFYメソッド[RFC6665]のためのものである、 \"MSG\" はMESSAGEメソッド[RFC3428]のためのものである、 \"REF\" REFERメソッド[RFC3515]のためであり、そして \"PUB\" はPUBLISHメソッド[RFC3903]のためのものです。"
    },
    {
      "indent": 5,
      "text": "Header field          where   proxy ACK BYE CAN INV OPT REG UPD\n_______________________________________________________________\nPolicy-ID               R       rd   -   -   -   c   -   -   c\nPolicy-Contact          R       a    -   -   -   c   -   -   c\nPolicy-Contact         488      a    -   -   -   c   -   -   c\n      Table 1: Policy-ID and Policy-Contact Header Fields",
      "raw": true
    },
    {
      "indent": 5,
      "text": "Header field          where   proxy PRA PUB SUB NOT INF MSG REF\n_______________________________________________________________\nPolicy-ID               R       rd   c   -   -   -   -   -   -\nPolicy-Contact          R       a    c   -   -   -   -   -   -\nPolicy-Contact         488      a    c   -   -   -   -   -   -\n      Table 2: Policy-ID and Policy-Contact Header Fields",
      "raw": true
    },
    {
      "indent": 0,
      "text": "4.5. Policy Channel",
      "section_title": true,
      "ja": "4.5. ポリシーチャンネル"
    },
    {
      "indent": 3,
      "text": "The main task of the policy channel is to enable a UA to submit information about the session it is trying to establish (i.e., the offer and the answer) to a policy server and to receive the resulting session-specific policies and possible updates to these policies in response.",
      "ja": "政策チャネルの主な仕事は、ポリシーサーバに（すなわち、提供して答えを）確立しようとしているセッションに関する情報を提出し、これらの結果のセッション固有のポリシーと可能なアップデートを受信するUAを有効にすることです応答内のポリシー。"
    },
    {
      "indent": 3,
      "text": "The Event Package for Session-Specific Policies [RFC6795] defines a SUBSCRIBE/NOTIFY-based [RFC6665] policy channel mechanism. A UA compliant to this specification MUST support the Event Package for Session-Specific Policies [RFC6795]. The UA MUST use this event",
      "ja": "セッション固有のポリシーのイベントパッケージ[RFC6795]はSUBSCRIBE / NOTIFYベース[RFC6665]ポリシーチャネルメカニズムを定義します。この仕様に準拠したUAのは、セッション固有のポリシー[RFC6795]のためのイベントパッケージをサポートしなければなりません。 UAは、このイベントを使用しなければなりません"
    },
    {
      "indent": 3,
      "text": "package to contact a policy server if the policy server URI is a SIP-URI or SIPS-URI. A UA MAY support other policy channel mechanisms.",
      "ja": "ポリシーサーバURIがSIP-URIまたはSIPS-URIである場合は、ポリシー・サーバーに連絡するパッケージ。 UAは、他のポリシーチャネルメカニズムをサポートするかもしれません。"
    },
    {
      "indent": 0,
      "text": "4.5.1. Creation and Management",
      "section_title": true,
      "ja": "4.5.1. 作成と管理"
    },
    {
      "indent": 3,
      "text": "A UA discovers the list of policy servers relevant for a session during the initial offer/answer exchange (see Section 4.4). A UA compliant to this specification MUST set up a policy channel to each of the discovered policy servers. If the UA does not want to set up a policy channel to one of the policy servers provided, the UA MUST cancel or reject a pending INVITE transaction for the session or terminate the session if it is already in progress.",
      "ja": "UAは、最初のオファー/アンサー交換時のセッションに関連するポリシーサーバのリストを発見する（4.4節を参照してください）。この仕様に準拠したUAのが発見されたポリシーサーバのそれぞれにポリシーチャネルを設定する必要があります。 UAが提供するポリシーサーバの1つにポリシーチャネルを設定したくない場合は、UAは、保留中のセッションのトランザクションを招待したり、それがすでに進行中である場合にセッションを終了をキャンセルするか、拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A UA MUST maintain the policy channel to each discovered policy server during the lifetime of a session, unless the policy channel is closed by the policy server or the UA discovers that the policy server is no longer relevant for the session as described below.",
      "ja": "ポリシーチャネルが、ポリシーサーバによって閉じられ又はUAは、以下に記載されるようにポリシーサーバがもはやセッションに関連することが発見されない場合を除きUAは、セッションの存続期間中に検出された各ポリシーサーバにポリシー・チャネルを維持しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A UAC can receive a 488 (Not Acceptable Here) response with a Policy-Contact header field containing a new policy server URI in response to a mid-dialog request. This indicates that the set of policy servers relevant for the current session has changed. If this occurs, the UAC MUST retry sending the request as if it were the first request in a dialog (i.e., without applying any policies except the policies from the local policy server). This way, the UAC will rediscover the list of policy servers for the current session. This is necessary since the UAC has no other way of knowing when to contact the newly discovered policy server relative to the existing policy servers and if any of the existing policy servers do not need to be contacted any more. The UAC MUST set up a policy channel to each new policy server. The UAC SHOULD close policy channels to policy server that are not listed any more. If the policy channel to these servers is not closed, the UAC can receive policies that do not apply to the session any more. The UAC MUST contact policy servers in the order in which they were discovered in the most recent request.",
      "ja": "UACは、ダイアログ中のリクエストに応じて、新しいポリシーサーバーURIを含むポリシー-Contactヘッダーフィールドを持つ488（ここでは許容できない）応答を受け取ることができます。これは、現在のセッションの関連するポリシーサーバのセットが変更されたことを示しています。このような場合、それは（すなわち、ローカルポリシーサーバからポリシーを除く任意のポリシーを適用せずに）ダイアログの最初の要求であるかのように、UACは、要求の送信を再試行しなければなりません。このように、UACは、現在のセッションのポリシーサーバのリストを再発見します。 UACは、既存のポリシーサーバに、既存のポリシーサーバのいずれかが、それ以上接触させる必要がない場合は新たに発見されたポリシーサーバの相対的に連絡する際に認識する方法は他にないので、これが必要です。 UACは、それぞれの新しいポリシーサーバにポリシーチャネルを設定しなければなりません。 UACはそれ以上に記載されていないポリシーサーバにポリシーチャネルを閉じる必要があります。これらのサーバーへの政策チャネルがクローズされていない場合、UACは、任意のより多くのセッションには適用されないポリシーを受信することができます。 UACは、彼らが最新のリクエストで発見された順序でポリシーサーバに連絡しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If a UAS receives a mid-dialog request with a Policy-Contact header field containing a list of policy server URIs that is different from the list of policy servers to which the UAS has currently established a policy channel, then the UAS MUST set up a policy channel to all new policy servers and contact them. The UAS SHOULD close policy channels to servers that are not listed any more. If the policy channel to these servers is not closed, the UAS can receive policies that do not apply to the session any more. The UAS MUST use policy servers in the order in which they were contained in the most recent Policy-Contact header field.",
      "ja": "UASは、UASは、現在の政策チャネルを確立していたにポリシーサーバのリストと異なるポリシーサーバのURIのリストを含むポリシー-Contactヘッダーフィールドと、ダイアログ中のリクエストを受信した場合、UASは、設定する必要がありますすべての新しいポリシーサーバにポリシーチャネルとそれらを連絡します。 UASはこれ以上記載されていないサーバにポリシーチャネルを閉じる必要があります。これらのサーバーへの政策チャネルがクローズされていない場合、UASは、任意のより多くのセッションには適用されないポリシーを受信することができます。 UASは、彼らが最新のポリシー-Contactヘッダーフィールドに含まれた順序でポリシーサーバを使用しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A UA MUST inform the policy server when a session is terminated (e.g., when the UA has either sent or received a BYE) via the policy channel, unless a policy server indicates via the policy channel that it does not need to be contacted at the end of the session. This enables a policy server to free all resources it has allocated for this session.",
      "ja": "セッションが終了したとき、UAは、ポリシーサーバに通知しなければならない（例えば、UAが送信またはBYEを受信したいずれかの場合）、ポリシーサーバは、それがで接触する必要がないことをポリシーチャネルを介して示していない限り、ポリシーチャネルを介してセッションの終わり。これは、このセッションのために割り当てられたすべてのリソースを解放するために、ポリシーサーバを可能にします。"
    },
    {
      "indent": 0,
      "text": "4.5.2. Contacting the Policy Server",
      "section_title": true,
      "ja": "4.5.2. ポリシーサーバへの問い合わせ"
    },
    {
      "indent": 3,
      "text": "A UA MUST contact all policy servers to which it has established a policy channel before sending or after receiving a mid-dialog request. The UA MUST contact the policy servers in the order in which they were discovered most recently.",
      "ja": "UAは、それが送信する前や、ダイアログ中のリクエストを受信した後、ポリシーチャネルを確立しているために、すべてのポリシーサーバに連絡しなければなりません。 UAは、彼らが最近発見された順序でポリシーサーバに連絡しなければなりません。"
    },
    {
      "indent": 3,
      "text": "A UA that receives a SIP message containing an offer or answer SHOULD completely process the message (e.g., according to [RFC3261]) before contacting the policy server. The SIP processing of the message includes, for example, updating dialog state and timers as well as creating ACK or PRACK requests as necessary. This ensures that contacting a policy server does not interfere with SIP message processing and timing (e.g., by inadvertently causing timers to expire). This implies, for example, that a UAC that has received a response to an INVITE request would normally finish the processing of the response including transmitting the ACK request before it contacts the policy server. An important exception to this rule is discussed in the next paragraph.",
      "ja": "完全メッセージを処理すべきオファーまたはアンサーを含むSIPメッセージを受信するUA（例えば、上記[RFC3261]）ポリシーサーバに接触する前に。メッセージのSIP処理は、例えば、対話状態とタイマーを更新するだけでなく、必要に応じてACKまたはPRACK要求を作成し、含みます。これは、ポリシーサーバを接触させること（不注意タイマーが満了させることにより、例えば）SIPメッセージ処理とタイミングを妨げないことを保証します。これは、例えば、意味INVITE要求に対する応答を受信したUACが正常に接触ポリシー・サーバの前にACK要求を送信含む応答の処理を終了するであろうこと。この規則の重要な例外は、次の段落で説明されています。"
    },
    {
      "indent": 3,
      "text": "In some cases, a UA needs to use the offer/answer it has received in a SIP message to create an ACK or PRACK request for this message; i.e., it needs to use the offer/answer before finishing the SIP machinery for this message. For example, a UAC that has received an offer in the response to an INVITE request needs to apply policies to the offer and the answer before it can send the answer in an ACK request. In these cases, a UA SHOULD contact the policy server even if this is during the processing of a SIP message. This implies that a UA, which has received an offer in the response of an INVITE request, would normally contact the policy server and apply session policies before sending the answer in the ACK request.",
      "ja": "いくつかのケースでは、UAは、申し出を使用する必要がある/それはACKまたはこのメッセージのPRACK要求を作成するために、SIPメッセージで受信した答え。すなわち、それは、このメッセージのSIP機械を終了する前にオファー/アンサーを使用する必要があります。例えば、INVITE要求に応じて提供を受けたUACは、ACK要求に答えを送信する前に申し出と答えにポリシーを適用する必要があります。これらのケースでは、UAは、このSIPメッセージの処理中であっても、ポリシーサーバに連絡してください。これは、INVITEリクエストの応答で提供を受けたUAは、通常、ポリシーサーバに連絡し、ACK要求に答えを送信する前に、セッションのポリシーを適用することを意味します。"
    },
    {
      "indent": 6,
      "text": "Note: this assumes that the policy server can always respond immediately to a policy request and does not require manual intervention to create a policy. This will be the case for most policy servers. If, however, a policy server cannot respond with a policy right away, it can return a policy that temporarily denies the session and update this policy as the actual policy decision becomes available. A delay in the response from the policy server to the UA would delay the transmission of the ACK request and could trigger retransmissions of the INVITE response (also see the recommendations for Flow I in [RFC3725]).",
      "ja": "注意：これはポリシーサーバは常に政策要求に即座に対応できるとポリシーを作成するために、手動での介入を必要としないことを前提としています。これは、ほとんどのポリシーサーバ用のケースになります。しかし、ポリシーサーバはすぐにポリシーで応答できない場合は、一時的にセッションを拒否する方針を返すことができますし、実際の政策決定が使用可能になると、このポリシーを更新します。 UAにポリシーサーバからの応答の遅延は（また、[RFC3725]にフローIのための推奨事項を参照）ACK要求の送信を遅らせるであろうと、INVITE応答の再送信をトリガすることができました。"
    },
    {
      "indent": 3,
      "text": "The case of multiple policy servers providing policies to the same UA requires additional considerations. A policy returned by one policy server can contain information that needs to be shared with the other policy servers. For example, two policy servers can have the policy to insert a media intermediary by modifying the IP addresses and ports of media streams. In order for media streams to pass through both intermediaries, each intermediary needs to know the IP address and port on which the other media intermediary is expecting the stream to arrive. If media streams are flowing in both directions, this means that each intermediary needs to know IP addresses and ports of the other intermediary.",
      "ja": "同じUAにポリシーを提供する複数のポリシーサーバの場合は、追加の考慮事項が必要です。 1台のポリシーサーバから返されたポリシーは、他のポリシーサーバと共有するために必要な情報を含めることができます。例えば、2台のポリシーサーバは、IPアドレスおよびメディアストリームのポートを変更することによって、メディアの仲介を挿入するポリシーを持つことができます。メディアストリームが両方の媒体を通過するためには、各仲介者は、他のメディア仲介が到着するストリームを期待されているIPアドレスとポートを知る必要があります。メディアストリームを両方向に流れている場合、これは、それぞれの仲介は、IPアドレスやその他の仲介のポートを知っている必要があることを意味します。"
    },
    {
      "indent": 3,
      "text": "UACs usually contact a policy server twice during an offer/answer exchange (unless a policy server indicates that it only needs to be contacted once). Therefore, the case of multiple policy servers providing policies to a single UAC does not require additional steps in most cases. However, a UAS usually contacts each policy server only once (see Figure 4). If a session policy returned by one of the policy servers requires that information be shared between multiple servers and the UAS receives policies from more than one policy server, then the UAS MUST contact all policy servers a second time after contacting all servers the first time. Whether or not a second round is required is determined by the type of information returned by the policy server. A data format for session policies (e.g., [RFC6796]) needs to explicitly state if a second round is needed for a particular data element. If a UA receives such an element, it knows that is expected to contact policy servers a second time. If such a data element is modified during a mid-call offer/answer exchange and multiple policy servers are providing policies to a UA, then all UAs MUST contact policy servers in a first and second round. An example call flow is shown in Appendix B.3.",
      "ja": "（ポリシーサーバは、それが一度だけ連絡をする必要があることを示していない限り）求めるUACは通常、オファー/アンサー交換中に2回、ポリシーサーバに問い合わせてください。したがって、単一UACにポリシーを提供する複数のポリシーサーバの場合は、ほとんどの場合、追加の手順を必要としません。しかしながら、通常UASコンタクト各ポリシーサーバに一度だけ（図4参照）。ポリシーサーバーのいずれかによって返されたセッションポリシーは、情報が複数のサーバ間で共有されている必要がありますし、UASは、複数のポリシーサーバからポリシーを受信した場合、その後、UASは、すべてのサーバーを最初に接触させた後、すべてのポリシーサーバをもう一度連絡しなければなりません。第二ラウンドが必要とされるかどうかは、ポリシーサーバから返される情報の種類によって決定されます。セッションポリシー（例えば、[RFC6796]）のデータフォーマットは、第二ラウンドは、特定のデータ要素のために必要とされている場合、明示的に述べる必要があります。 UAは、このような要素を受信した場合、それはそれはポリシーサーバをもう一度連絡することが期待されて知っています。そのようなデータ要素は、ミッドコールオファー/アンサー交換や複数のポリシーサーバがUAにポリシーを提供している間に変更された場合は、すべてのUAは、第一及び第二ラウンドでのポリシーサーバーに接続しなければなりません。例えば、コールフローは、付録B.3に示されています。"
    },
    {
      "indent": 3,
      "text": "A UA that supports session-specific policies compliant to this specification MUST support the User Agent Profile Data Set for Media Policy [RFC6796] as data format for session policies.",
      "ja": "この仕様に準拠し、セッション固有のポリシーをサポートしていますUAは、セッションポリシーのデータ形式としてメディアポリシー[RFC6796]のために設定されているユーザエージェントプロファイルデータをサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.5.3. Using Session Policies",
      "section_title": true,
      "ja": "4.5.3. セッションポリシーの使用"
    },
    {
      "indent": 3,
      "text": "A UA MUST disclose the session description(s) for the current session to policy servers through the policy channel. The UA MUST apply session policies it receives to the offer and, if one is received, to the answer before using the offer/answer. If these policies are unacceptable, the UA MUST NOT continue with the session. This means that the UA MUST cancel or reject a pending INVITE transaction for the session or terminate the session if it is already in progress. If the UA receives an unacceptable policy in an INVITE response, the UA MUST complete the INVITE transaction and then terminate the session.",
      "ja": "UAは、ポリシーチャネルを介してポリシーサーバに現在のセッションのセッション記述（複数可）を開示しなければなりません。 1は、オファー/アンサーを使用する前に、その答えに、受信された場合、UAは、それが提供する受信セッションポリシーを適用しなければなりません。これらのポリシーが受け入れられない場合、UAは、セッションを続けてはなりません。これは、UAがキャンセルまたは保留中のセッションのトランザクションを招待したり、それがすでに進行中である場合にセッションを終了拒否しなければならないことを意味します。 UAがINVITE応答で容認できない政策を受信した場合、UAはINVITEトランザクションを完了してから、セッションを終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a UA receives a notification about a change in the current policies, the UA MUST apply the updated policies to the current session or the UA MUST terminate the session. If the policy update causes a change in the session description of a session, then the UA needs to renegotiate the modified session description with its peer UA, for example, using a re-INVITE or UPDATE request. For example, if a policy update disallows the use of video and video is part of the current session description, then the UA will need to create an new session description offer without video. After receiving this offer, the peer UA knows that video can't be used any more and responds with the corresponding answer.",
      "ja": "UAは現在の政策の変化についての通知を受信した場合、UAは、セッションを終了しなければならない現在のセッションまたはUAに更新したポリシーを適用しなければなりません。ポリシー更新がセッションのセッション記述が変化する場合、UAは、再INVITEまたはUPDATE要求を使用して、例えば、ピアUAで修飾されたセッション記述を再交渉する必要があります。ポリシーの更新は、ビデオの使用を禁止し、ビデオは、現在のセッション記述の一部である場合、例えば、その後、UAは、ビデオのない新しいセッション記述プランを作成する必要があります。このオファーを受け取った後、ピアUAは、ビデオはもはや使用できないことを知っていて、対応する回答で応答します。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "Policy enforcement mechanisms can prevent a UA from communicating with another UA if the UAs are not aware of the policies that are enforced. Policy enforcement mechanisms without policy signaling can therefore create a denial-of-service condition for UAs. This specification provides a mechanism for intermediaries to signal the policies that are enforced to UAs. It enables UAs to establish sessions that are conform and pass through policy enforcement.",
      "ja": "ポリシーの適用メカニズムは、UAが施行されるポリシーを認識していない場合は、別のUAとの通信からUAを防ぐことができます。ポリシーシグナリングなしのポリシー実施メカニズムは、そのためのUAのためにサービス拒否条件を作成することができます。この仕様は、UASに適用されるポリシーをシグナリングする仲介するための機構を提供します。これは、準拠とポリシー適用を通過されたセッションを確立するためのUAを可能にします。"
    },
    {
      "indent": 3,
      "text": "Session policies can significantly change the behavior of a UA and can be used by an attacker to compromise a UA. For example, session policies can be used to prevent a UA from successfully establishing a session (e.g., by setting the available bandwidth to zero). Such a policy can be submitted to the UA during a session, which causes the UA to terminate the session.",
      "ja": "セッションポリシーは大幅にUAの動作を変更することができますし、UAを侵害する攻撃者によって使用することができます。例えば、セッションポリシーは正常（例えば、ゼロに利用可能な帯域幅を設定することによって）セッションを確立UAを防止するために使用することができます。このような政策は、セッションを終了するためにUAが発生し、セッション中にUAに提出することができます。"
    },
    {
      "indent": 3,
      "text": "A UA transmits session information to a policy server for session-specific policies. This session information can contain sensitive data the user does not want an eavesdropper or an unauthorized policy server to see. Vice versa, session policies can contain sensitive information about the network or service level agreements the service provider does not want to disclose to an eavesdropper or an unauthorized UA.",
      "ja": "UAは、セッション固有のポリシーのためのポリシーサーバにセッション情報を送信します。このセッション情報は、ユーザーが盗聴者または不正なポリシーサーバを見たいと思っていない機密データを含むことができます。逆に、セッションポリシーは、サービスプロバイダは、盗聴者や不正なUAに開示したくないネットワークやサービスレベルアグリーメントに関する機密情報を含むことができます。"
    },
    {
      "indent": 3,
      "text": "It is important to secure the communication between the proxy and the UA (for session-specific policies) as well as the UA and the policy server. The following four discrete attributes need to be protected:",
      "ja": "プロキシと（セッション固有のポリシーのために）UAだけでなく、UAとポリシーサーバ間の通信を確保することが重要です。次の4つの個別の属性を保護する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. integrity of the policy server URI (for session-specific policies),",
      "ja": "（セッション固有のポリシーのための）ポリシーサーバのURIの1の完全性、"
    },
    {
      "indent": 3,
      "text": "2. authentication of the policy server and, if needed, the user agent,",
      "ja": "2.ポリシーサーバの認証と、必要に応じて、ユーザーエージェント、"
    },
    {
      "indent": 3,
      "text": "3. confidentiality of the messages exchanged between the user agent and the policy server and",
      "ja": "ユーザーエージェントとポリシーサーバの間で交換されるメッセージの機密性と3"
    },
    {
      "indent": 3,
      "text": "4. ensuring that private information is not exchanged between the two parties, even over a confidentiality-assured and authenticated session.",
      "ja": "4.個人情報でも機密性、保証および認証されたセッションを介して、2者間で交換されていないことを保証します。"
    },
    {
      "indent": 3,
      "text": "To protect the integrity of the policy server URI, a UA SHOULD use a secured transport protocol such as TLS [RFC5246] between proxies and the UA. Protecting the integrity of the policy server URI is important since an attacker could intercept SIP messages between the UA and the proxy and remove the policy header fields needed for session-specific policies. This would impede the rendezvous between UA and policy server and, since the UA would not contact the policy server, can prevent a UA from setting up a session.",
      "ja": "ポリシーサーバURIの完全性を保護するために、UAは、プロキシとUAとの間のTLS [RFC5246]としてセキュアトランスポートプロトコルを使用すべきです。攻撃者はUAとプロキシ間のSIPメッセージを傍受し、セッション固有のポリシーのために必要な政策ヘッダフィールドを削除する可能性があるため、ポリシーサーバURIの完全性を保護することは重要です。 UAは、セッションの設定から、UAのを防ぐことができ、ポリシーサーバに接続しませんので、これは、UAとポリシーサーバとの間のランデブーを妨げます。"
    },
    {
      "indent": 3,
      "text": "Instead of removing a policy server URI, an attacker can also modify the policy server URI and point the UA to a compromised policy server. It is RECOMMENDED that a UA authenticate policy servers to prevent such an attack from being effective.",
      "ja": "代わりに、ポリシーサーバーURIを除去すると、攻撃者は、ポリシーサーバURIを変更し、妥協ポリシーサーバへのUAを指すことができます。 UAが有効であることから、このような攻撃を防ぐために、ポリシーサーバを認証することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the UA only accept session-independent policies from trustworthy policy servers as these policies affect all sessions of a UA. A list of trustworthy session-independent policy servers can be provided to the UA through configuration. As SIP messages can be affected by any proxy on a path and session-specific policies only apply to a single session, a UA MAY choose to accept session-specific policies from other policy servers as well.",
      "ja": "これらのポリシーは、UAのすべてのセッションに影響を与えるようUAが唯一信頼できるポリシーサーバからセッションに依存しない政策を受け入れることが推奨されます。信頼できるセッションに依存しないポリシーサーバのリストは、構成によってUAに提供することができます。 SIPメッセージは、単一のセッションのみに適用されるパスとセッション固有のポリシー上の任意のプロキシによって影響を受ける可能性があるとして、UAは、他のポリシーサーバからセッション固有のポリシーを受け入れることを選ぶかもしれません。"
    },
    {
      "indent": 3,
      "text": "Policy servers SHOULD authenticate UAs to protect the information that is contained in a session policy. However, a policy server can also frequently encounter UAs it cannot authenticate. In these cases, the policy server MAY provide a generic policy that does not reveal sensitive information to these UAs.",
      "ja": "ポリシーサーバは、セッションポリシーに含まれている情報を保護するためのUAを認証する必要があります。しかし、ポリシーサーバも頻繁にそれが認証できないのUAに遭遇することができます。これらの例では、ポリシーサーバは、これらのUAに機密情報を明らかにしない汎用的なポリシーを提供することができます。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that administrators use SIPS URIs as policy server URIs so that subscriptions to session policies are transmitted over TLS.",
      "ja": "これにより、管理者は、セッションポリシーへのサブスクリプションは、TLSを介して送信されるように、ポリシーサーバのURIとしてSIPS URIを使用することをお勧めします。"
    },
    {
      "indent": 3,
      "text": "The above security attributes are important to protect the communication between the UA and policy server. This document does not define the protocol used for the communication between UA and policy server and merely refers to other specifications for this purpose. The security considerations of these specifications need to address the above security aspects.",
      "ja": "上記のセキュリティ属性は、UAとポリシーサーバ間の通信を保護するために重要です。単にUAとポリシーサーバとの間の通信に使用するプロトコルを定義していないこの文書では、この目的のための他の仕様を指します。これらの仕様のセキュリティ上の考慮事項は、上記のセキュリティの側面に対処する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "6.1. Registration of the \"Policy-ID\" Header Field",
      "section_title": true,
      "ja": "6.1.  「ポリシー-ID」ヘッダーフィールドの登録"
    },
    {
      "indent": 3,
      "text": "Name of Header Field: Policy-ID",
      "ja": "ポリシー-ID：ヘッダーフィールドの名前"
    },
    {
      "indent": 3,
      "text": "Short form: none",
      "ja": "短い形式：なし"
    },
    {
      "indent": 3,
      "text": "Normative description: Section 4.4.5 of this document",
      "ja": "規範的な説明：このドキュメントのセクション4.4.5"
    },
    {
      "indent": 0,
      "text": "6.2. Registration of the \"Policy-Contact\" Header Field",
      "section_title": true,
      "ja": "6.2.  「ポリシー・連絡先」ヘッダーフィールドの登録"
    },
    {
      "indent": 3,
      "text": "Name of Header Field: Policy-Contact",
      "ja": "ヘッダーフィールドの名：ポリシーお問い合わせ"
    },
    {
      "indent": 3,
      "text": "Short form: none",
      "ja": "短い形式：なし"
    },
    {
      "indent": 3,
      "text": "Normative description: Section 4.4.5 of this document",
      "ja": "規範的な説明：このドキュメントのセクション4.4.5"
    },
    {
      "indent": 0,
      "text": "6.3. Registration of the \"non-cacheable\" Policy-Contact Header Field Parameter",
      "ja": "6.3.  「キャッシュ不可能」ポリシー連絡先ヘッダーフィールドパラメータの登録"
    },
    {
      "indent": 3,
      "text": "Registry Name: Header Field Parameters and Parameter Values Reference: [RFC3968]",
      "ja": "レジストリ名：ヘッダーフィールドパラメータとパラメータ値のリファレンス：[RFC3968]を"
    },
    {
      "indent": 3,
      "text": "Registry:",
      "ja": "レジストリ："
    },
    {
      "indent": 3,
      "text": "Header Field               Parameter Name   Predefined  Reference\n                                              Values\n_____________________________________________________________________\nPolicy-Contact             non-cacheable       Yes      this document",
      "raw": true
    },
    {
      "indent": 0,
      "text": "6.4. Registration of the \"policy\" SIP Option Tag",
      "section_title": true,
      "ja": "6.4.  「ポリシー」SIPオプションタグの登録"
    },
    {
      "indent": 3,
      "text": "This specification registers a new SIP option tag, as per the guidelines in Section 27.1 of [RFC3261].",
      "ja": "この仕様は、[RFC3261]のセクション27.1のガイドラインに従って、新しいSIPオプションタグを登録します。"
    },
    {
      "indent": 3,
      "text": "This document defines the SIP option tag \"policy\".",
      "ja": "この文書では、SIPオプションタグ「ポリシー」を定義します。"
    },
    {
      "indent": 3,
      "text": "The following row has been added to the \"Option Tags\" section of the SIP Parameter Registry:",
      "ja": "次の行は、SIPパラメータレジストリの「オプションタグ」セクションに追加されました。"
    },
    {
      "indent": 3,
      "text": "+------------+------------------------------------------+-----------+\n| Name       | Description                              | Reference |\n+------------+------------------------------------------+-----------+\n| policy     | This option tag is used to indicate that | this      |\n|            | a UA can process policy server URIs for  | document  |\n|            | and subscribe to session-specific        |           |\n|            | policies.                                |           |\n+------------+------------------------------------------+-----------+",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Name of option: policy",
      "ja": "オプションの名前：ポリシー"
    },
    {
      "indent": 6,
      "text": "Description: Support for the Policy-Contact and Policy-ID header fields.",
      "ja": "説明：ポリシー・お問い合わせ・ポリシー-IDヘッダフィールドのサポート。"
    },
    {
      "indent": 6,
      "text": "SIP header fields defined: Policy-Contact, Policy-ID",
      "ja": "定義されたSIPヘッダフィールド：ポリシー連絡先、ポリシーID"
    },
    {
      "indent": 6,
      "text": "Normative description: This document",
      "ja": "規範的な説明：この文書"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3262] Rosenberg, J. and H. Schulzrinne, \"Reliability of Provisional Responses in Session Initiation Protocol (SIP)\", RFC 3262, June 2002.",
      "ja": "[RFC3262]ローゼンバーグ、J.、およびH. Schulzrinneと、RFC 3262、2002年6月 \"セッション開始プロトコル（SIP）における暫定的な応答の信頼性\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3264] Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with Session Description Protocol (SDP)\", RFC 3264, June 2002.",
      "ja": "[RFC3264]ローゼンバーグ、J.とH. Schulzrinneと、RFC 3264、2002年6月 \"セッション記述プロトコル（SDP）とのオファー/アンサーモデル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3311] Rosenberg, J., \"The Session Initiation Protocol (SIP) UPDATE Method\", RFC 3311, October 2002.",
      "ja": "[RFC3311]ローゼンバーグ、J.、 \"セッション開始プロトコル（SIP）更新方法\"、RFC 3311、2002年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3968] Camarillo, G., \"The Internet Assigned Number Authority (IANA) Header Field Parameter Registry for the Session Initiation Protocol (SIP)\", BCP 98, RFC 3968, December 2004.",
      "ja": "[RFC3968]キャマリロ、G.、BCP 98、RFC 3968、2004年12月 \"インターネットは、セッション開始プロトコル（SIP）のための番号機関（IANA）ヘッダーフィールドパラメータレジストリを割り当てられました\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6080] Petrie, D. and S. Channabasappa, \"A Framework for Session Initiation Protocol User Agent Profile Delivery\", RFC 6080, March 2011.",
      "ja": "[RFC6080]ペトリー、D.とS. Channabasappa、RFC 6080 \"セッション開始プロトコルユーザエージェントプロファイル配信のためのフレームワーク\"、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6665] Roach, A., \"SIP-Specific Event Notification\", RFC 6665, July 2012.",
      "ja": "[RFC6665]ローチ、A.、 \"SIP固有のイベント通知\"、RFC 6665、2012年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC6795] Hilt, V. and G. Camarillo, \"A Session Initiation Protocol (SIP) Event Package for Session-Specific Policies\", RFC 6795, December 2012.",
      "ja": "[RFC6795]柄、V.およびG.キャマリロ、 \"セッション固有のポリシーのためにAセッション開始プロトコル（SIP）イベントパッケージ\"、RFC 6795、2012年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6796] Hilt, V., Camarillo, G., Rosenberg, J., and D. Worley, \"A User Agent Profile Data Set for Media Policy\", RFC 6796, December 2012.",
      "ja": "[RFC6796]柄、V.、カマリロ、G.、ローゼンバーグ、J.、およびD.ウォーリー、 \"メディア政策のためのユーザエージェントプロファイルデータセット\"、RFC 6796、2012年12月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC3428] Campbell, B., Rosenberg, J., Schulzrinne, H., Huitema, C., and D. Gurle, \"Session Initiation Protocol (SIP) Extension for Instant Messaging\", RFC 3428, December 2002.",
      "ja": "[RFC3428]キャンベル、B.、ローゼンバーグ、J.、Schulzrinneと、H.、のHuitema、C.、およびD. Gurle、 \"インスタントメッセージングのためのセッション開始プロトコル（SIP）拡張子\"、RFC 3428、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3515] Sparks, R., \"The Session Initiation Protocol (SIP) Refer Method\", RFC 3515, April 2003.",
      "ja": "[RFC3515]スパークス、R.、 \"セッション開始プロトコル（SIP）メソッドを参照してください\"、RFC 3515、2003年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3725] Rosenberg, J., Peterson, J., Schulzrinne, H., and G. Camarillo, \"Best Current Practices for Third Party Call Control (3pcc) in the Session Initiation Protocol (SIP)\", BCP 85, RFC 3725, April 2004.",
      "ja": "[RFC3725]ローゼンバーグ、J.、ピーターソン、J.、Schulzrinneと、H.、およびG.カマリロ、BCP 85、RFC 3725 \"セッション開始プロトコル（SIP）における第三者呼制御（3PCC）のベスト・プラクティスの現在\" 、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3903] Niemi, A., \"Session Initiation Protocol (SIP) Extension for Event State Publication\", RFC 3903, October 2004.",
      "ja": "[RFC3903]ニエミ、A.、 \"イベント状態の出版のためのセッション開始プロトコル（SIP）の拡張\"、RFC 3903、2004年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4566] Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session Description Protocol\", RFC 4566, July 2006.",
      "ja": "[RFC4566]ハンドリー、M.、ヤコブソン、V.、およびC.パーキンス、 \"SDP：セッション記述プロトコル\"、RFC 4566、2006年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6086] Holmberg, C., Burger, E., and H. Kaplan, \"Session Initiation Protocol (SIP) INFO Method and Package Framework\", RFC 6086, January 2011.",
      "ja": "[RFC6086] Holmbergの、C.、バーガー、E.、およびH.カプラン、 \"セッション開始プロトコル（SIP）INFO方法およびパッケージフレームワーク\"、RFC 6086、2011年1月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Acknowledgements",
      "ja": "付録A.謝辞"
    },
    {
      "indent": 3,
      "text": "Many thanks to Allison Mankin, Andrew Allen, Cullen Jennings and Vijay Gurbani for their contributions to this document. Many thanks to Roni Even, Bob Penfield, Mary Barnes, Shida Schubert, Keith Drage, Lisa Dusseault, Tim Polk and Pasi Eronen for their reviews and suggestions.",
      "ja": "このドキュメントへの貢献のためのアリソンマンキン、アンドリュー・アレン、カレン・ジェニングスとビジェイGurbaniに感謝します。自分のレビューや提案のためであってもロニ、ボブペンフィールド、メアリー・バーンズ、志田シューベルト、キース糖剤、リサDusseault、ティムポークとパシEronenに感謝します。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Session-Specific Policies - Call Flows",
      "ja": "付録B.セッション固有のポリシー - コールフロー"
    },
    {
      "indent": 3,
      "text": "The following call flows illustrate the overall operation of session-specific policies including the policy channel protocol as defined in \"A Session Initiation Protocol (SIP) Event Package for Session-Specific Policies\" [RFC6795].",
      "ja": "[RFC6795]「セッション固有のポリシーのためにAのセッション開始プロトコル（SIP）イベントパッケージ」で定義されるように、次のコールフローは、ポリシーチャネルプロトコルを含むセッション固有のポリシーの全体的な動作を示します。"
    },
    {
      "indent": 3,
      "text": "The following abbreviations are used:",
      "ja": "以下の略語を使用します："
    },
    {
      "indent": 6,
      "text": "o: offer",
      "ja": "○：提供"
    },
    {
      "indent": 6,
      "text": "o': offer modified by a policy",
      "ja": "O '：ポリシーによって変更の申し出"
    },
    {
      "indent": 6,
      "text": "po: offer policy",
      "ja": "PO：ごポリシー"
    },
    {
      "indent": 6,
      "text": "a: answer",
      "ja": "A：答え"
    },
    {
      "indent": 6,
      "text": "a': answer modified by a policy",
      "ja": "'：ポリシーによって修正答え"
    },
    {
      "indent": 6,
      "text": "pa: answer policy",
      "ja": "PA：回答ポリシー"
    },
    {
      "indent": 6,
      "text": "ps uri: policy server URI (in Policy-Contact header field)",
      "ja": "PSのURI：ポリシーサーバURI（ポリシー-Contactヘッダーフィールドで）"
    },
    {
      "indent": 6,
      "text": "ps id: policy server id (in Policy-ID header field)",
      "ja": "PS ID：（ポリシー-IDヘッダフィールド内の）ポリシーサーバID"
    },
    {
      "indent": 0,
      "text": "B.1. Offer in Invite",
      "ja": "B.1。招待でオファー"
    },
    {
      "indent": 3,
      "text": "UA A       P A      PS A      PS B       P B      UA B\n  |         |         |         |         |         |\n  |(1) INV <o>        |         |         |         |\n  |-------->|         |         |         |         |\n  |(2) 488 <ps uri>   |         |         |         |\n  |<--------|         |         |         |         |\n  |(3) ACK  |         |         |         |         |\n  |-------->|         |         |         |         |\n  |(4) SUBSCRIBE <o>  |         |         |         |\n  |------------------>|         |         |         |\n  |(5) 200 OK         |         |         |         |\n  |<------------------|         |         |         |\n  |(6) NOTIFY <po>    |         |         |         |\n  |<------------------|         |         |         |\n  |(7) 200 OK         |         |         |         |\n  |------------------>|         |         |         |\n  |(8) INV <ps id, o'>|         |         |         |\n  |-------->|         |         |         |         |\n  |         |(9) INV <o'>       |         |         |\n  |         |---------------------------->|         |\n  |         |         |         |         |(10) INV <o', ps uri>\n  |         |         |         |         |-------->|\n  |         |         |         |(11) SUBSCRIBE <o', a>\n  |         |         |         |<------------------|\n  |         |         |         |(12) 200 OK        |\n  |         |         |         |------------------>|\n  |         |         |         |(13) NOTIFY <po, pa>\n  |         |         |         |------------------>|\n  |         |         |         |(14) 200 OK        |\n  |         |         |         |<------------------|\n  |         |         |         |         |(15) 200 OK <a'>\n  |         |         |         |         |<--------|\n  |         |(16) 200 OK <a'>   |         |         |\n  |         |<----------------------------|         |\n  |(17) 200 OK <a'>   |         |         |         |\n  |<--------|         |         |         |         |\n  |(18) ACK |         |         |         |         |\n  |------------------------------------------------>|\n  |(19) SUBSCRIBE <o', a'>      |         |         |\n  |------------------>|         |         |         |\n  |(20) 200 OK        |         |         |         |\n  |<------------------|         |         |         |\n  |(21) NOTIFY <po, pa>         |         |         |\n  |<------------------|         |         |         |\n  |(22) 200 OK        |         |         |         |\n  |------------------>|         |         |         |\n  |         |         |         |         |         |\n  |         |         |         |         |         |",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.2. Offer in Response",
      "ja": "B.2。応答でオファー"
    },
    {
      "indent": 3,
      "text": "UA A       P A      PS A      PS B       P B      UA B\n  |         |         |         |         |         |\n  |(1) INV  |         |         |         |         |\n  |-------->|         |         |         |         |\n  |(2) 488 <ps uri>   |         |         |         |\n  |<--------|         |         |         |         |\n  |(3) ACK  |         |         |         |         |\n  |-------->|         |         |         |         |\n  |(4) SUBSCRIBE      |         |         |         |\n  |------------------>|         |         |         |\n  |(5) 200 OK         |         |         |         |\n  |<------------------|         |         |         |\n  |(6) NOTIFY         |         |         |         |\n  |<------------------|         |         |         |\n  |(7) 200 OK         |         |         |         |\n  |------------------>|         |         |         |\n  |(8) INV <ps id>    |         |         |         |\n  |-------->|         |         |         |         |\n  |         |(9) INV  |         |         |         |\n  |         |---------------------------->|         |\n  |         |         |         |         |(10) INV <ps uri>\n  |         |         |         |         |-------->|\n  |         |         |         |(11) SUBSCRIBE <o> |\n  |         |         |         |<------------------|\n  |         |         |         |(12) 200 OK        |\n  |         |         |         |------------------>|\n  |         |         |         |(13) NOTIFY <po>   |\n  |         |         |         |------------------>|\n  |         |         |         |(14) 200 OK        |\n  |         |         |         |<------------------|\n  |         |         |         |         |(15) 200 OK <o'>\n  |         |         |         |         |<--------|\n  |         |(16) 200 OK <o'>   |         |         |\n  |         |<----------------------------|         |\n  |(17) 200 OK <o'>   |         |         |         |\n  |<--------|         |         |         |         |\n  |(18) SUBSCRIBE <o', a>       |         |         |\n  |------------------>|         |         |         |\n  |(19) 200 OK        |         |         |         |\n  |<------------------|         |         |         |\n  |(20) NOTIFY <po, pa>         |         |         |\n  |<------------------|         |         |         |\n  |(21) 200 OK        |         |         |         |\n  |------------------>|         |         |         |\n  |(22) ACK <a'>      |         |         |         |\n  |------------------------------------------------>|",
      "raw": true
    },
    {
      "indent": 5,
      "text": "|         |         |         |(23) SUBSCRIBE <o', a'>\n|         |         |         |<------------------|\n|         |         |         |(24) 200 OK        |\n|         |         |         |------------------>|\n|         |         |         |(25) NOTIFY <po, pa>\n|         |         |         |------------------>|\n|         |         |         |(26) 200 OK        |\n|         |         |         |<------------------|\n|         |         |         |         |         |\n|         |         |         |         |         |",
      "raw": true
    },
    {
      "indent": 0,
      "text": "B.3. Multiple Policy Servers for the UAS",
      "ja": "B.3。 UASのための複数のポリシーサーバ"
    },
    {
      "indent": 0,
      "text": "UA A       P A      PS A      PS B       P B      UA B\n  |         |         |         |         |         |\n  |         |         |         |         |         |\n  |         |         |         |         |         |\n  |(1) INV <o>        |         |         |         |\n  |-------->|         |         |         |         |\n  |         |(2) INV <o, uri PSA>         |         |\n  |         |---------------------------->|         |\n  |         |         |         |         |(3) INV <o, uri PSA, uri PSB>\n  |         |         |         |         |-------->|\n  |         |         |(4) SUBSCRIBE <o, a>         |\n  |         |         |<----------------------------|\n  |         |         |(5) 200 OK         |         |\n  |         |         |---------------------------->|\n  |         |         |(6) NOTIFY <po, pa>|         |\n  |         |         |---------------------------->|\n  |         |         |(7) 200 OK         |         |\n  |         |         |<----------------------------|\n  |         |         |         |(8) SUBSCRIBE <o', a'>\n  |         |         |         |<------------------|\n  |         |         |         |(9) 200 OK         |\n  |         |         |         |------------------>|\n  |         |         |         |(10) NOTIFY <po, pa>\n  |         |         |         |------------------>|\n  |         |         |         |(11) 200 OK        |\n  |         |         |         |<------------------|\n  |         |         |(12) SUBSCRIBE <o\", a\">      |\n  |         |         |<----------------------------|\n  |         |         |(13) 200 OK        |         |\n  |         |         |---------------------------->|\n  |         |         |(14) NOTIFY <po, pa>         |\n  |         |         |---------------------------->|\n  |         |         |(15) 200 OK        |         |\n  |         |         |<----------------------------|\n  |         |         |         |(16) SUBSCRIBE <o\", a\">",
      "raw": true
    },
    {
      "indent": 2,
      "text": "|         |         |         |<------------------|\n|         |         |         |(17) 200 OK        |\n|         |         |         |------------------>|\n|         |         |         |(18) NOTIFY <po, pa>\n|         |         |         |------------------>|\n|         |         |         |(19) 200 OK        |\n|         |         |         |<------------------|\n|         |         |         |         |(20) 200 OK <a\">\n|         |         |         |         |<--------|\n|         |(21) 200 OK <a\">   |         |         |\n|         |<----------------------------|         |\n|(22) 200 OK <a\">   |         |         |         |\n|<--------|         |         |         |         |\n|(23) ACK |         |         |         |         |\n|------------------------------------------------>|\n|         |         |         |         |         |\n|         |         |         |         |         |",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Volker Hilt Bell Labs/Alcatel-Lucent Lorenzstrasse 10 70435 Stuttgart Germany",
      "ja": "フォルカー柄ベル研究所/アルカテル・ルーセントLorenzstrasse 10 70435シュトゥットガルトドイツ"
    },
    {
      "indent": 3,
      "text": "EMail: volker.hilt@bell-labs.com",
      "ja": "メールアドレス：volker.hilt@bell-labs.com"
    },
    {
      "indent": 3,
      "text": "Gonzalo Camarillo Ericsson Hirsalantie 11 Jorvas 02420 Finland",
      "ja": "ゴンサロ・カマリロエリクソンHirsalantie 11 Jorvas 02420フィンランド"
    },
    {
      "indent": 3,
      "text": "EMail: Gonzalo.Camarillo@ericsson.com",
      "ja": "メールアドレス：Gonzalo.Camarillo@ericsson.com"
    },
    {
      "indent": 3,
      "text": "Jonathan Rosenberg jdrosen.net Monmouth, NJ USA",
      "ja": "ジョナサン・ローゼンバーグjdrosen.netモンマス、NJ USA"
    },
    {
      "indent": 3,
      "text": "EMail: jdrosen@jdrosen.net",
      "ja": "メールアドレス：jdrosen@jdrosen.net"
    }
  ]
}