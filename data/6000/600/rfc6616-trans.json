{
  "title": {
    "text": "RFC 6616 - A Simple Authentication and Security Layer (SASL) and Generic Security Service Application Program Interface (GSS-API) Mechanism for OpenID",
    "ja": "RFC 6616 - 簡易認証セキュリティー層（SASL）とOpenIDのための一般的なセキュリティサービスアプリケーションプログラムインタフェース（GSS-API）メカニズム"
  },
  "number": 6616,
  "created_at": "2019-10-28 08:45:49.209238+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           E. Lear\nRequest for Comments: 6616                            Cisco Systems GmbH\nCategory: Standards Track                                  H. Tschofenig\nISSN: 2070-1721                                   Nokia Siemens Networks\n                                                              H. Mauldin\n                                                     Cisco Systems, Inc.\n                                                            S. Josefsson\n                                                                  SJD AB\n                                                                May 2012",
      "raw": true
    },
    {
      "indent": 4,
      "text": "     A Simple Authentication and Security Layer (SASL) and\nGeneric Security Service Application Program Interface (GSS-API)\n                      Mechanism for OpenID",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "OpenID has found its usage on the Internet for Web Single Sign-On. Simple Authentication and Security Layer (SASL) and the Generic Security Service Application Program Interface (GSS-API) are application frameworks to generalize authentication. This memo specifies a SASL and GSS-API mechanism for OpenID that allows the integration of existing OpenID Identity Providers with applications using SASL and GSS-API.",
      "ja": "OpenIDのは、Webシングルサインオンのためのインターネット上での使用を発見しました。簡易認証セキュリティー層（SASL）と一般的なセキュリティサービスアプリケーションプログラムインタフェース（GSS-API）は、認証を一般化するアプリケーションフレームワークです。このメモはSASLとGSS-APIを使用するアプリケーションで、既存のOpenIDのIDプロバイダの統合を可能にするOpenIDのためのSASLとGSS-APIメカニズムを指定します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6616.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6616で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  Terminology  . . . . . . . . . . . . . . . . . . . . . . .  4\n  1.2.  Applicability  . . . . . . . . . . . . . . . . . . . . . .  4\n2.  Applicability for Application Protocols other than HTTP  . . .  4\n  2.1.  Binding SASL to OpenID in the Relying Party  . . . . . . .  7\n  2.2.  Discussion . . . . . . . . . . . . . . . . . . . . . . . .  8\n3.  OpenID SASL Mechanism Specification  . . . . . . . . . . . . .  8\n  3.1.  Initiation . . . . . . . . . . . . . . . . . . . . . . . .  9\n  3.2.  Authentication Request . . . . . . . . . . . . . . . . . .  9\n  3.3.  Server Response  . . . . . . . . . . . . . . . . . . . . . 10\n  3.4.  Error Handling . . . . . . . . . . . . . . . . . . . . . . 11\n4.  OpenID GSS-API Mechanism Specification . . . . . . . . . . . . 11\n  4.1.  GSS-API Principal Name Types for OpenID  . . . . . . . . . 12\n5.  Example  . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n6.  Security Considerations  . . . . . . . . . . . . . . . . . . . 14\n  6.1.  Binding OpenIDs to Authorization Identities  . . . . . . . 14\n  6.2.  RP Redirected by Malicious URL to Take an Improper\n        Action . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n  6.3.  User Privacy . . . . . . . . . . . . . . . . . . . . . . . 14\n7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 15\n8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 15\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 15\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 17",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "OpenID 2.0 [OpenID] is a web-based three-party protocol that provides a means for a user to offer identity assertions and other attributes to a web server (Relying Party) via the help of an identity provider. The purpose of this system is to provide a way to verify that an end user controls an identifier.",
      "ja": "OpenIDで2.0 [OpenIDの]は、ユーザーがアイデンティティプロバイダの助けを介してウェブサーバ（依拠当事者）にIDアサーションおよびその他の属性を提供するための手段を提供するWebベースの三者プロトコルです。このシステムの目的は、エンドユーザが識別子を制御することを確認する方法を提供することです。"
    },
    {
      "indent": 3,
      "text": "Simple Authentication and Security Layer (SASL) [RFC4422] is used by application protocols such as IMAP [RFC3501], Post Office Protocol (POP) [RFC1939], and Extensible Messaging and Presence Protocol (XMPP) [RFC6120], with the goal of modularizing authentication and security layers, so that newer mechanisms can be added as needed. This memo specifies just such a mechanism.",
      "ja": "簡易認証セキュリティー層（SASL）[RFC4422]は、このようなIMAP [RFC3501]のようなアプリケーションプロトコルによって使用されている、ことを目標に、ポストオフィスプロトコル（POP）[RFC1939]、および拡張メッセージングおよびプレゼンスプロトコル（XMPP）[RFC6120]、必要に応じて新しいメカニズムを追加できるように、認証およびセキュリティ層をモジュール化。このメモは、まさにこのようなメカニズムを指定します。"
    },
    {
      "indent": 3,
      "text": "The Generic Security Service Application Program Interface (GSS-API) [RFC2743] provides a framework for applications to support multiple authentication mechanisms through a unified interface. This document defines a pure SASL mechanism for OpenID, but it conforms to the new bridge between SASL and the GSS-API called GS2 [RFC5801]. This means that this document defines both a SASL mechanism and a GSS-API mechanism. Implementors of the SASL component MAY implement the GSS-API interface as well.",
      "ja": "汎用セキュリティサービスアプリケーションプログラムインタフェース（GSS-API）[RFC2743]は統一されたインタフェースを介して複数の認証メカニズムをサポートするアプリケーションのためのフレームワークを提供します。この文書では、OpenIDのための純粋なSASLメカニズムを定義していますが、それはSASLとGS2 [RFC5801]と呼ばれるGSS-APIとの間に新しい橋に準拠しています。これは、この文書はSASLメカニズムとGSS-APIメカニズムの両方を定義することを意味します。 SASLコンポーネントの実装者は、同様にGSS-APIインタフェースを実装してもよいです。"
    },
    {
      "indent": 3,
      "text": "This mechanism specifies interworking between SASL and OpenID in order to assert identity and other attributes to Relying Parties. As such, while SASL servers (as Relying Parties) will advertise SASL mechanisms, clients will select the OpenID mechanism.",
      "ja": "このメカニズムは、依拠当事者へのIDと他の属性を主張するために、SASLとOpenIDの間のインターワーキングを指定します。 （依拠当事者など）SASLサーバはSASLメカニズムをアドバタイズしますながらそのように、クライアントはOpenIDのメカニズムを選択します。"
    },
    {
      "indent": 3,
      "text": "The OpenID mechanism described in this memo aims to reuse the OpenID mechanism to the maximum extent and therefore does not establish a separate authentication, integrity, and confidentiality mechanism. It is anticipated that existing security layers, such as Transport Layer Security (TLS) [RFC5246], continue to be used. Minimal changes are required to non-web applications, as most of the transaction occurs through a normal web browser. Hence, this specification is only appropriate for use when such a browser is available.",
      "ja": "このメモで説明OpenIDのメカニズムは最大限にOpenIDの仕組みを再利用するため、個別の認証、完全性、機密性のメカニズムを確立していないことを目指しています。このようなトランスポート層セキュリティ（TLS）[RFC5246]などの既存のセキュリティ層は、使用され続けていることが予想されます。取引のほとんどは、通常のWebブラウザを介して起こると最小限の変更は、非Webアプリケーションに必要とされています。従って、本明細書は、ブラウザが利用可能なときに使用するためにのみ適しています。"
    },
    {
      "indent": 3,
      "text": "Figure 1 describes the interworking between OpenID and SASL. This document requires enhancements to the Relying Party and to the Client (as the two SASL communication end points), but no changes to the OpenID Provider (OP) are necessary. To accomplish this goal, indirect messaging required by the OpenID specification is tunneled through the SASL/GSS-API mechanism.",
      "ja": "図1は、OpenIDのおよびSASL間のインターワーキングを記述する。この文書は、依拠当事者および（2つのSASL通信エンドポイントなど）のクライアントへの拡張を必要とするが、OpenIDプロバイダ（OP）を変更する必要はありません。この目標を達成するために、OpenIDの仕様によって必要とされる間接的なメッセージングは​​SASL / GSS-API機構を介してトンネリングされます。"
    },
    {
      "indent": 6,
      "text": "                              +-----------+\n                              |  Relying  |\n                             >|  Party /  |\n                            / |   SASL    |\n                          //  |  Server   |\n                        //    +-----------+\n                      //            ^\n             OpenID //           +--|--+\n                  //             | O|  | G\n                 /             S | p|  | S\n               //              A | e|  | S\n             //                S | n|  | A\n           //                  L | I|  | P\n         //                      | D|  | I\n       </                        +--|--+\n+------------+                      v\n|            |                 +----------+\n|  OpenID    |   OpenID        |          |\n|  Provider  |<--------------->|  Client  |\n|            |                 |          |\n+------------+                 +----------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 1: Interworking Architecture",
      "ja": "図1：インターワーキングアーキテクチャ"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The reader is assumed to be familiar with the terms used in the OpenID 2.0 specification.",
      "ja": "読者は、OpenIDの2.0仕様で使用される用語に精通していることを想定しています。"
    },
    {
      "indent": 0,
      "text": "1.2. Applicability",
      "section_title": true,
      "ja": "1.2。適用性"
    },
    {
      "indent": 3,
      "text": "Because this mechanism transports information that should not be controlled by an attacker, the OpenID mechanism MUST only be used over channels protected by TLS, and the client MUST successfully validate the server certificate [RFC5280][RFC6125].",
      "ja": "このメカニズムは、攻撃者によって制御されてはならない情報を転送するので、OpenIDのメカニズムは、TLSで保護されたチャネル上で使用されなければならない、とクライアントが正常にサーバー証明書[RFC5280] [RFC6125]を検証する必要があります。"
    },
    {
      "indent": 0,
      "text": "2. Applicability for Application Protocols other than HTTP",
      "section_title": true,
      "ja": "HTTP以外のアプリケーションプロトコル2.適用"
    },
    {
      "indent": 3,
      "text": "OpenID was originally envisioned for HTTP- [RFC2616] and HTML-based [W3C.REC-html401-19991224] communications, and with the associated semantic; the idea being that the user would be redirected by the Relying Party (RP) to an identity provider (IdP) who authenticates the user and then sends identity information and other attributes (either directly or indirectly) to the Relying Party. The identity provider in the OpenID specifications is referred to as an OpenID Provider (OP). The actual protocol flow can be found in Section 3 of the OpenID 2.0 specification [OpenID]. The reader is strongly encouraged to be familiar with that specification before continuing.",
      "ja": "OpenIDのは、もともとHTTP- [RFC2616]とHTMLベースのために想定したW3C.REC-html401-19991224]、および関連するセマンティックとの通信。アイデアは、ユーザーがユーザーを認証し、証明書利用者に識別情報およびその他の属性（直接または間接的に）を送信アイデンティティプロバイダ（IDP）への証明書利用者（RP）によってリダイレクトされるだろうということで。 OpenIDの仕様のアイデンティティ・プロバイダは、OpenIDプロバイダ（OP）と呼ばれます。実際のプロトコルフローは、OpenIDの2.0仕様【のOpenID]のセクション3に見出すことができます。読者が強く続行する前にその仕様に精通していることを奨励されます。"
    },
    {
      "indent": 3,
      "text": "When considering that flow in the context of SASL, we note that while the RP and the client both need to change their code to implement this SASL mechanism, it is a design constraint that the OP behavior remain untouched, in order for implementations to interoperate with existing IdPs. Hence, an analog flow that interfaces the three parties needs to be created. In the analog, we note that unlike a web server, the SASL server already has some sort of session (probably a TCP connection) established with the client. However, it may be necessary for a SASL client to invoke to another application. This will be discussed below. By doing so, we externalize much of the authentication from SASL.",
      "ja": "SASLの文脈でその流れを考えるとき、我々はRPとクライアントの両方が、このSASLメカニズムを実装するために、コードを変更する必要がありながら、それはOPの行動がと相互運用する実装のためには、手つかずのまま設計制約であることに注意してください既存のIdP。したがって、三人の者をインタフェースするアナログ・フローを作成する必要があります。アナログでは、我々は、Webサーバとは異なり、SASLサーバはすでにクライアントとの間で確立したセッションのいくつかの並べ替え（おそらく、TCPコネクションを）持っていることに注意してください。 SASLクライアントが別のアプリケーションに呼び出すようにするためにしかし、それが必要な場合があります。これについては後述します。そうすることによって、我々は、SASL認証からの多くを外部化。"
    },
    {
      "indent": 3,
      "text": "The steps are listed below:",
      "ja": "手順は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. The SASL server advertises support for the SASL OpenID mechanism to the client.",
      "ja": "1. SASLサーバーは、クライアントへのSASLのOpenIDメカニズムのサポートをアドバタイズします。"
    },
    {
      "indent": 3,
      "text": "2. The client initiates a SASL authentication and transmits the User-Supplied Identifier as its first response. The SASL mechanism is client-first, and, as explained in [RFC4422], the server will send an empty challenge if needed.",
      "ja": "2.クライアントは、SASL認証を開始し、その最初の応答としてユーザ提供の識別子を送信します。 [RFC4422]で説明したようにSASLメカニズムは、クライアント最初に、そして必要に応じて、サーバは空の挑戦を送信します。"
    },
    {
      "indent": 3,
      "text": "3. After normalizing the User-Supplied Identifier as discussed in [OpenID], the Relying Party performs discovery on it and establishes the OP Endpoint URL that the end user uses for authentication.",
      "ja": "3のOpenID]で説明したように、ユーザ提供の識別子を正規化した後、依拠当事者は、その上に検出を実行し、エンドユーザが認証のために使用することがOPエンドポイントURLを確立します。"
    },
    {
      "indent": 3,
      "text": "4. The Relying Party and the OP optionally establish an association -- a shared secret established using Diffie-Hellman Key Exchange. The OP uses an association to validate those messages through the use of a Hashed Message Authentication Code (HMAC); this removes the need for subsequent direct requests to verify the signature after each authentication request/response.",
      "ja": "Diffie-Hellman鍵交換を使用し設立した共有秘密 -  4.依拠当事者とOPは、必要に応じて関連付けを確立します。 OPは、ハッシュメッセージ認証コード（HMAC）を使用することによってそれらのメッセージを検証するためにアソシエーションを使用します。これは、各認証要求/応答の後に署名を検証するために、後続の直接要求する必要がなくなります。"
    },
    {
      "indent": 3,
      "text": "5. The Relying Party transmits an authentication request to the OP to obtain an assertion in the form of an indirect request. These messages are passed through the client rather than directly between the RP and the OP. OpenID defines two methods for indirect communication -- namely, HTTP redirects and HTML form submission. Neither mechanism is directly applicable for usage with SASL. To ensure that an OP that is OpenID 2.0 capable can be used, a new method is defined in this document that requires the OpenID message content to be encoded using a",
      "ja": "5.依拠当事者は、間接的な要求の形でアサーションを得るためにOPに認証要求を送信します。これらのメッセージは、クライアントから直接ではなくRPとOPの間で渡されます。すなわち、HTTPリダイレクトとHTMLフォーム送信 -  OpenIDの間接通信用の2つのメソッドを定義します。どちらのメカニズムはSASLでの使用のために直接適用されます。 OpenIDの可能2.0 OPを使用することができることを確実にするために、新しい方法を用いて符号化されるOpenIDのメッセージの内容を必要とこの文書で定義されています"
    },
    {
      "indent": 8,
      "text": "Universal Resource Identifier (URI) [RFC3986].  Note that any\nInternationalized Resource Identifiers (IRIs) must be normalized\nto URIs by the SASL client, as specified in [RFC3987], prior to\ntransmitting them to the SASL server.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "6. The SASL client now sends a response consisting of \"=\" to the server, to indicate that authentication continues via the normal OpenID flow.",
      "ja": "6. SASLクライアントは現在、その認証は、通常のOpenIDの流れを経由して続けて示すために、サーバに「=」からなる応答を送信します。"
    },
    {
      "indent": 3,
      "text": "7. At this point, the client application MUST construct a URL containing the content received in the previous message from the RP. This URL is transmitted to the OP by either the SASL client application or an appropriate handler, such as a browser.",
      "ja": "7.この時点で、クライアント・アプリケーションは、RPから前のメッセージで受信したコンテンツを含むURLを構築しなければなりません。このURLは、SASLクライアントアプリケーションやブラウザなどの適切なハンドラ、いずれかによってOPに送信されます。"
    },
    {
      "indent": 3,
      "text": "8. Next, the end user optionally authenticates to the OP and then, depending on the OP, may approve or disapprove authentication to the Relying Party. For reasons of its own, the OP has the option of not authenticating a request. The manner in which the end user is authenticated to their respective OP and any policies surrounding such authentication are out of scope of OpenID and, hence, also out of scope for this specification. This step happens out of band from SASL.",
      "ja": "8.次に、エンドユーザは、必要に応じてOPに応じて、次にOPに認証し、依拠当事者に対する認証を承認または不承認できます。独自のの理由から、OPは、要求を認証しないオプションがあります。エンドユーザがそれぞれのOPと、認証を囲む任意のポリシーに認証される方法はまた、本明細書の範囲外、従って、OpenIDの範囲外であると。このステップでは、SASLから帯域外起こります。"
    },
    {
      "indent": 3,
      "text": "9. The OP will convey information about the success or failure of the authentication phase back to the RP, again using an indirect response via the client browser or handler. The client transmits to the RP (over HTTP/TLS) the redirect of the OP result. This step happens out of band from SASL.",
      "ja": "9. OPは再びクライアントブラウザまたはハンドラを介した間接的な応答を使用して、バックRPに認証フェーズの成功または失敗に関する情報を伝えるだろう。クライアントは、OP結果のリダイレクト（HTTP / TLS上）RPに送信します。このステップでは、SASLから帯域外起こります。"
    },
    {
      "indent": 3,
      "text": "10. The RP MAY send an OpenID check_authentication request directly to the OP, if no association has been established, and the OP should respond. Again, this step happens out of band from SASL.",
      "ja": "何の関連が確立されていない場合10. RPは、OPに直接OpenIDのcheck_authenticationの要求を送信することができる、とOPが応答しなければなりません。ここでも、このステップでは、SASLから帯域外起こります。"
    },
    {
      "indent": 3,
      "text": "11. The SASL server sends an appropriate SASL response to the client, with optional Open Simple Registry (SREG) attributes.",
      "ja": "11. SASLサーバーは、オプションオープンシンプルレジストリ（SREG）の属性で、クライアントに適切なSASL応答を送信します。"
    },
    {
      "indent": 9,
      "text": "SASL Serv.       RP/Client       OP\n   |>-----(1)----->|              | Advertisement\n   |               |              |\n   |<-----(2)-----<|              | Initiation\n   |               |              |\n   |> - - (3) - - - - - - - - - ->| Discovery\n   |                              |\n   |>- - -(4)- - - - - - - - - - >| Association\n   |<- - -(4)- - - - - - - - - - <|\n   |               |              |\n   |>-----(5)----->|              | Indirect Auth Request\n   |               |              |\n   |<-----(6)-----<|              | Client \"=\" Response\n   |               |              |\n   |               |>- - (7)- - ->| Client GET to the OP (ext.)\n   |               |              |\n   |               |<- - (8)- - ->| Client / OP Auth. (ext.)\n   |               |              |\n   |<- - -(9)- - - + - - - - - - <| HTTPS Indirect id_res\n   |               |              |\n   |<- - -(10)- - - - - - - - - ->| Optional\n   |               |              | check_authentication\n   |               |              |\n   |>-----(11)---->|              | SASL completion with status",
      "raw": true
    },
    {
      "indent": 8,
      "text": "----- = SASL\n- - - = HTTPS",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Note the directionality in SASL is such that the client MUST send the \"=\" response. Specifically, the SASL client processes the redirect and then awaits a final SASL decision, while the rest of the OpenID authentication process continues.",
      "ja": "SASLでの方向性は、クライアントが「=」応答を送信しなければならないようなものであるに注意してください。 OpenID認証プロセスの残りを継続しながら具体的には、SASLクライアントは、リダイレクトを処理し、最終的SASLの決定を待っています。"
    },
    {
      "indent": 0,
      "text": "2.1. Binding SASL to OpenID in the Relying Party",
      "section_title": true,
      "ja": "2.1。証明書利用者にはOpenIDにSASLバインド"
    },
    {
      "indent": 3,
      "text": "OpenID is meant to be used in serial within the web, where browser cookies are easily accessible. As such, there are no transaction IDs within the protocol. To ensure that a specific request is bound, and in particular to ease inter-process communication, the Relying Party MUST encode a nonce or transaction ID in the URIs it transmits through the client for success or failure, as either a base URI or fragment component to the \"return_to\" URI. This value is to be used to uniquely identify each authentication transaction. The nonce value MUST be at least 2^32 bits and large enough to handle well in excess of the number of concurrent transactions a SASL server shall see.",
      "ja": "OpenIDのは、ブラウザのクッキーが簡単にアクセスできますウェブ、内シリアルで使用されることを意味しています。そのため、プロトコル内にはトランザクションIDが存在しません。特定の要求が結合され、特に、プロセス間通信を容易にすることを確実にするために、依拠当事者は、ベースURIまたはフラグメント成分のいずれかとして、成功または失敗のためにクライアントを介してそれを送信するURIにナンスまたはトランザクションIDを符号化しなければなりません\"return_to\" URIへ。この値は一意の認証トランザクションを識別するために使用されます。ノンス値は、少なくとも2 ^ 32ビットとSASLサーバーは参照しなければならない同時トランザクションの数を超えて十分に処理するのに十分な大きさでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.2. Discussion",
      "section_title": true,
      "ja": "2.2。討論"
    },
    {
      "indent": 3,
      "text": "As mentioned above, OpenID is primarily designed to interact with web-based applications. Portions of the authentication stream are only defined in the crudest sense. That is, when one is prompted to approve or disapprove an authentication, anything that one might find on a browser is allowed, including JavaScript, complex style-sheets, etc. Because of this lack of structure, implementations will need to invoke a rich browser in order to ensure that the authentication can be completed.",
      "ja": "前述したように、OpenIDのは、主にWebベースのアプリケーションと相互作用するように設計されています。認証ストリームの部分のみが最も生々しい感覚で定義されています。それは、そのための構造の欠如ではJavaScript、複雑なスタイルシートなどを含め、1は、ブラウザ上で見つけるかもしれない何が許可され、1が認証を承認または却下するように指示されたときに、ある、実装は豊かなブラウザを起動する必要があります。認証が完了することができることを確実にするためです。"
    },
    {
      "indent": 3,
      "text": "Once there is an outcome, the SASL server needs to know about it. The astute reader will hopefully by now have noticed an \"=\" client SASL response. This is not to say that nothing is happening, but rather that authentication flow has shifted from SASL and the client application to OpenID within the browser, and it will return to the client application when the server has an outcome to hand to the client. The alternative to this flow would be some sort of signal from the HTML browser to the SASL client of the results that would in turn be passed to the SASL server. The inter-process communication issue this raises is substantial. Better, we conclude, to externalize the authentication to the browser and have an \"=\" client response.",
      "ja": "成果があったら、SASLサーバはそれについて知っている必要があります。賢明な読者は、うまくいけば、今では「=」クライアントのSASL応答に気づいています。これは、何が起こっていないことを言うことではなく、その認証フローは、SASLと、ブラウザ内でのOpenIDへのクライアントアプリケーションからずれており、サーバがクライアントに手に結果を持っているときには、クライアントアプリケーションに戻ります。このフローの代わりに、今度はSASLサーバに渡される結果のSASLクライアントにHTMLブラウザからの信号のいくつかの並べ替えになります。これが提起プロセス間通信の問題はかなりのものです。より良い、我々は結論付けて、ブラウザに認証を外部化し、「=」クライアントの応答を持っています。"
    },
    {
      "indent": 0,
      "text": "3. OpenID SASL Mechanism Specification",
      "section_title": true,
      "ja": "3. OpenIDのSASLメカニズム仕様"
    },
    {
      "indent": 3,
      "text": "This section specifies the details of the OpenID SASL mechanism. Recall Section 5 of [RFC4422] for what needs to be described here.",
      "ja": "このセクションでは、OpenIDのSASLメカニズムの詳細を指定します。ここで説明する必要があるもののために[RFC4422]のセクション5を思い出してください。"
    },
    {
      "indent": 3,
      "text": "The name of this mechanism is \"OPENID20\". The mechanism is capable of transferring an authorization identity (via \"gs2-header\"). The mechanism does not offer a security layer.",
      "ja": "このメカニズムの名前は「OPENID20」です。機構（「GS2ヘッダ」を介して）承認のアイデンティティを転送することが可能です。メカニズムはセキュリティレイヤを提供していません。"
    },
    {
      "indent": 3,
      "text": "The mechanism is client-first. The first mechanism message is from the client to the server, and it is the \"initial-response\" described below. As described in [RFC4422], if the application protocol does not support sending a client-response together with the authentication request, the server will send an empty server-challenge to let the client begin.",
      "ja": "メカニズムは、クライアント最初です。最初のメカニズムメッセージは、クライアントからサーバにあり、そしてそれは下記の「初期応答」です。 [RFC4422]で説明したようにアプリケーションプロトコルは、認証要求と一緒にクライアントの応答の送信をサポートしていない場合、サーバーは、クライアントが開始できるように、空のサーバーチャレンジを送信します。"
    },
    {
      "indent": 3,
      "text": "The second mechanism message is from the server to the client, and it is the \"authentication_request\" described below.",
      "ja": "第2機構メッセージは、サーバからクライアントへのであり、後述する「authentication_request」です。"
    },
    {
      "indent": 3,
      "text": "The third mechanism message is from client to the server, and it is the fixed message consisting of \"=\".",
      "ja": "第3の機構メッセージは、クライアントからサーバにあり、それは「=」からなる固定メッセージです。"
    },
    {
      "indent": 3,
      "text": "The fourth mechanism message is from the server to the client, described below as \"outcome_data\" (with SREG attributes), sent as additional data when indicating a successful outcome.",
      "ja": "第機構メッセージは、サーバからの成功した結果を示す場合、追加のデータとして送信（SREG属性を持つ）「outcome_data」として以下に記載するクライアント、、です。"
    },
    {
      "indent": 0,
      "text": "3.1. Initiation",
      "section_title": true,
      "ja": "3.1。イニシエーション"
    },
    {
      "indent": 3,
      "text": "A client initiates an OpenID authentication with SASL by sending the GS2 header followed by the URI, as specified in the OpenID specification.",
      "ja": "クライアントは、OpenIDの仕様で指定されるように、URIによって続くGS2ヘッダを送信することによって、SASLとOpenID認証を開始します。"
    },
    {
      "indent": 3,
      "text": "The ABNF [RFC5234] syntax is as follows:",
      "ja": "ABNF [RFC5234]の構文は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "initial-response = gs2-header Auth-Identifier Auth-Identifier = Identifier ; authentication identifier Identifier = URI ; Identifier is specified in ; Sec. 7.2 of the OpenID 2.0 spec.",
      "ja": "初期の応答= GS2ヘッダAUTH-識別子AUTH-識別子=識別子。認証識別子識別子= URI。識別子で指定されています。秒。 OpenIDの2.0仕様の7.2。"
    },
    {
      "indent": 3,
      "text": "The syntax and semantics of the \"gs2-header\" are specified in [RFC5801], and we use it here with the following limitations: The \"gs2-nonstd-flag\" MUST NOT be present. The \"gs2-cb-flag\" MUST be \"n\" because channel binding is not supported by this mechanism.",
      "ja": "「GS2-ヘッダ」の構文とセマンティクスは、[RFC5801]で指定されている、と私たちは、次の制限にここでそれを使用する：「GS2-NONSTDフラグを」存在してはなりません。 「GS2-CB-フラグ」チャネル結合はこのメカニズムによってサポートされていないため、「N」でなければなりません。"
    },
    {
      "indent": 3,
      "text": "URI is specified in [RFC3986]. Extensible Resource Identifiers (XRIs) [XRI2.0] MUST NOT be used.",
      "ja": "URIは、[RFC3986]で指定されています。拡張可能なリソース識別子（XRIsは）[XRI2.0]使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "3.2. Authentication Request",
      "section_title": true,
      "ja": "3.2。認証リクエスト"
    },
    {
      "indent": 3,
      "text": "The SASL server sends the URL resulting from the OpenID authentication request, containing an \"openid.mode\" of either \"checkid_immediate\" or \"checkid_setup\", as specified in Section 9.1 of the OpenID 2.0 specification [OpenID].",
      "ja": "SASLサーバーは、OpenIDの2.0仕様【のOpenID]のセクション9.1で指定されるように、「checkid_immediate」または「checkid_setup」のいずれかの「openid.mode」を含む、OpenID認証要求に起因するURLを送信します。"
    },
    {
      "indent": 10,
      "text": "authentication-request = URI",
      "ja": "認証要求= URI"
    },
    {
      "indent": 3,
      "text": "As part of this request, the SASL server MUST append a unique transaction ID to the \"return_to\" portion of the request. The form of this transaction is left to the RP to decide, but it SHOULD be large enough to be resistant to being guessed or attacked.",
      "ja": "この要求の一部として、SASLサーバは、要求の「return_to」の部分に一意のトランザクションIDを追加しなければなりません。この取引の形を決定するためにRPに委ねられているが、推測や攻撃されることに耐性があることに十分大きくなければなりません。"
    },
    {
      "indent": 3,
      "text": "The client now sends that request via an HTTP GET to the OP, as if redirected to do so from an HTTP server.",
      "ja": "クライアントはHTTPサーバからそうするようにリダイレクトされているかのよう、OPにGET HTTP経由でその要求を送信します。"
    },
    {
      "indent": 3,
      "text": "The client MUST handle both user authentication to the OP and confirmation or rejection of the authentication by the RP via this SASL mechanism.",
      "ja": "クライアントは、このSASL機構を介してRPによってOP、確認または認証の拒否に両方のユーザー認証を処理しなければなりません。"
    },
    {
      "indent": 3,
      "text": "After all authentication has been completed by the OP, and after the response has been sent to the client, the client will relay the response to the Relying Party via HTTP/TLS, as specified previously in the transaction (\"return_to\").",
      "ja": "後はすべての認証はOPで完了しており、応答がクライアントに送信された後にトランザクション（「return_to」）で以前に指定されているように、クライアントは、HTTP / TLS経由で証明書利用者への応答を中継します。"
    },
    {
      "indent": 0,
      "text": "3.3. Server Response",
      "section_title": true,
      "ja": "3.3。サーバーの応答"
    },
    {
      "indent": 3,
      "text": "The Relying Party now validates the response it received from the client via HTTP/TLS, as specified in the OpenID specification, using the \"return_to\" URI given previously in the transaction.",
      "ja": "依拠当事者は現在のトランザクションで事前に与えられた「return_to」URIを使用して、OpenIDの仕様で指定され、それは、HTTP / TLSを介してクライアントから受信した応答を検証します。"
    },
    {
      "indent": 3,
      "text": "The response by the Relying Party constitutes a SASL mechanism outcome, and it SHALL be used to set state in the server accordingly. Also, it SHALL be used by the server to report that state to the SASL client as described in Section 3.6 of [RFC4422]. In the additional data, the server MAY include OpenID Simple Registry (SREG) attributes that are listed in Section 4 of [SREG1.0]. SREG attributes are encoded as follows:",
      "ja": "依拠当事者による応答は、SASL機構の結果を構成し、それに応じてサーバの状態を設定するために使用されなければなりません。また、[RFC4422]のセクション3.6で説明したようにSASLクライアントにその状態を報告するために、サーバによって使用されなければなりません。追加データには、サーバは、[SREG1.0]のセクション4に記載されているOpenIDの単純レジストリ（SREG）属性を含むかもしれません。次のようにSREG属性はエンコードされます。"
    },
    {
      "indent": 3,
      "text": "1. Strip \"openid.sreg.\" from each attribute name.",
      "section_title": true,
      "ja": "1.ストリップ \"openid.sreg。\"各属性の名前から。"
    },
    {
      "indent": 3,
      "text": "2. Treat the concatenation of results as URI parameters that are separated by an ampersand (&) and encode as one would a URI, absent the scheme, authority, and the question mark.",
      "ja": "2つのURIと同じように、アンパサンド（＆）とエンコードによって分離されているURIパラメータとして結果の連結を扱い、スキーム、権限、および疑問符を欠きます。"
    },
    {
      "indent": 3,
      "text": "For example: email=lear@example.com&fullname=Eliot%20Lear",
      "ja": "たとえば、次のようにemail=lear@example.com&fullname=Eliot%20Lear"
    },
    {
      "indent": 3,
      "text": "More formally:",
      "ja": "より正式："
    },
    {
      "indent": 9,
      "text": "outcome-data = [ sreg-avp *( \",\" sreg-avp ) ]\nsreg-avp     = sreg-attr \"=\" sreg-val\nsreg-attr    = sreg-word\nsreg-val     = sreg-word\nsreg-word    = 1*( unreserved / pct-encoded )\n               ; pct-encoded from Section 2.1 of RFC 3986\n               ; unreserved from Section 2.3 of RFC 3986",
      "raw": true
    },
    {
      "indent": 3,
      "text": "A client who does not support SREG MUST ignore SREG attributes sent by the server. Similarly, a client MUST ignore unknown attributes.",
      "ja": "SREGをサポートしていないクライアントは、サーバから送信されたSREG属性を無視しなければなりません。同様に、クライアントは、未知の属性を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "In the case of failures, the response MUST follow this syntax:",
      "ja": "障害が発生した場合には、応答は、この構文に従う必要があります。"
    },
    {
      "indent": 8,
      "text": "outcome-data = \"openid.error\" \"=\" sreg-val *( \",\" sregp-avp )",
      "ja": "結果データ= \"openid.error\" \"=\" SREG-VAL *（ \"\" sregp-AVP）"
    },
    {
      "indent": 0,
      "text": "3.4. Error Handling",
      "section_title": true,
      "ja": "3.4。エラー処理"
    },
    {
      "indent": 3,
      "text": "Section 3.6 of [RFC4422] explicitly prohibits additional information in an unsuccessful authentication outcome. Therefore, the openid.error and openid.error_code are to be sent as an additional challenge in the event of an unsuccessful outcome. In this case, as the protocol is in lockstep, the client will follow with an additional exchange containing \"=\", after which the server will respond with an application-level outcome.",
      "ja": "[RFC4422]のセクション3.6は、明示的に失敗した認証結果に追加情報を禁止しています。したがって、openid.errorとopenid.error_codeは失敗した結果の場合には、追加の課題として送信されます。プロトコルはロックステップであり、この場合には、クライアントは、サーバがアプリケーションレベルの結果で応答した後、「=」を含む追加の交換、と続きます。"
    },
    {
      "indent": 0,
      "text": "4. OpenID GSS-API Mechanism Specification",
      "section_title": true,
      "ja": "4. OpenIDのGSS-API機構の仕様"
    },
    {
      "indent": 3,
      "text": "This section MUST be observed to properly implement the GSS-API mechanism that is described below.",
      "ja": "このセクションでは、適切に説明するGSS-API機構を実装することが観察されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The OpenID SASL mechanism is actually also a GSS-API mechanism. The OpenID user takes the role of the GSS-API Initiator and the OpenID Relying Party takes the role of the GSS-API Acceptor. The OpenID Provider does not have a role in GSS-API and is considered an internal matter for the OpenID mechanism. The messages are the same, but a) the GS2 header on the client's first message and channel binding data are excluded when OpenID is used as a GSS-API mechanism, and b) the initial context token header (described in Section 3.1 of RFC 2743) is prefixed to the client's first authentication message (context token).",
      "ja": "OpenIDのSASLメカニズムも、実際にGSS-APIメカニズムです。 OpenIDのユーザーはGSS-APIイニシエータとOpenIDの証明書利用者の役割を果たしてGSS-APIアクセプタの役割を果たしています。 OpenIDプロバイダは、GSS-APIにおける役割を持っていないとOpenIDのメカニズムのための内部の問題と考えられています。メッセージは同じであるが、a）は、クライアントの最初のメッセージ及びチャネル結合データにGS2ヘッダがOpenIDでは、GSS-API機構として使用される場合は除外、およびb）初期コンテキストトークンヘッダ（RFC 2743のセクション3.1に記載されています。 ）クライアントの最初の認証メッセージ（コンテキストトークン）の前に置かれています。"
    },
    {
      "indent": 3,
      "text": "The GSS-API OID for the OpenID 2.0 mechanism is 1.3.6.1.5.5.16 (see Section 7 for more information). The DER encoding of the OID is 0x2b 0x06 0x01 0x05 0x05 0x10.",
      "ja": "OpenIDの2.0メカニズムのGSS-APIのOIDは1.3.6.1.5.5.16（詳細については、セクション7を参照します）。 OIDのDERエンコーディングは0x2Bを0x06には0x01 0x05を0x05では0x10です。"
    },
    {
      "indent": 3,
      "text": "OpenID security contexts MUST have the mutual_state flag (GSS_C_MUTUAL_FLAG) set to TRUE. OpenID does not support credential delegation; therefore, OpenID security contexts MUST have the deleg_state flag (GSS_C_DELEG_FLAG) set to FALSE.",
      "ja": "OpenIDのセキュリティコンテキストはmutual_stateフラグ（GSS_C_MUTUAL_FLAG）がTRUEに設定する必要があります。 OpenIDのは、クレデンシャル委任をサポートしていません。従って、OpenIDのセキュリティコンテキストはdeleg_stateフラグ（GSS_C_DELEG_FLAG）がFALSEに設定されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The mutual authentication property of this mechanism relies on successfully comparing the TLS server identity with the negotiated target name. Since the TLS channel is managed by the application outside of the GSS-API mechanism, the mechanism itself is unable to confirm the name while the application is able to perform this comparison for the mechanism. For this reason, applications MUST match the TLS server identity with the target name, as discussed in [RFC6125].",
      "ja": "このメカニズムの相互認証プロパティが正常にネゴシエートターゲット名とTLSサーバIDを比較する上で依存しています。 TLSチャネルがGSS-API機構の外部アプリケーションによって管理されているため、機構自体は、アプリケーションが機構のためにこの比較を行うことができるしながら名前を確認することができません。 [RFC6125]で説明したように、このような理由から、アプリケーションは、ターゲット名とTLSサーバーのIDと一致しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The OpenID mechanism does not support per-message tokens or GSS_Pseudo_random.",
      "ja": "OpenIDのメカニズムは、メッセージごとのトークンまたはGSS_Pseudo_randomをサポートしていません。"
    },
    {
      "indent": 3,
      "text": "The [RFC5587] mechanism attributes for this mechanism are GSS_C_MA_MECH_CONCRETE, GSS_C_MA_ITOK_FRAMED, and GSS_C_MA_AUTH_INIT.",
      "ja": "[RFC5587]メカニズムは、このメカニズムの属性GSS_C_MA_MECH_CONCRETE、GSS_C_MA_ITOK_FRAMED、及びGSS_C_MA_AUTH_INITあります。"
    },
    {
      "indent": 0,
      "text": "4.1. GSS-API Principal Name Types for OpenID",
      "section_title": true,
      "ja": "4.1。 OpenIDのためのGSS-APIプリンシパル名の種類"
    },
    {
      "indent": 3,
      "text": "OpenID supports standard generic name syntaxes for acceptors such as GSS_C_NT_HOSTBASED_SERVICE (see Section 4.1 of [RFC2743]).",
      "ja": "OpenIDのは（[RFC2743]のセクション4.1を参照）などGSS_C_NT_HOSTBASED_SERVICEとしてアクセプターのための標準的な一般名構文をサポートしています。"
    },
    {
      "indent": 3,
      "text": "OpenID supports only a single name type for initiators: GSS_C_NT_USER_NAME. GSS_C_NT_USER_NAME is the default name type for OpenID.",
      "ja": "OpenIDのは、イニシエータのための唯一の単一の名前タイプをサポートしています。GSS_C_NT_USER_NAME。 GSS_C_NT_USER_NAMEはOpenIDのためのデフォルトの名前タイプです。"
    },
    {
      "indent": 3,
      "text": "OpenID name normalization is covered by the OpenID specification; see Section 7.2 of [OpenID].",
      "ja": "OpenIDの名の正規化は、OpenIDの仕様によって覆われています。 [OpenIDの]のセクション7.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "The query, display, and exported name syntaxes for OpenID principal names are all the same. There are no OpenID-specific name syntaxes -- applications should use generic GSS-API name types such as GSS_C_NT_USER_NAME and GSS_C_NT_HOSTBASED_SERVICE (see Section 4 of [RFC2743]). The exported name token does, of course, conform to Section 3.2 of [RFC2743], but the \"NAME\" part of the token should be treated as a potential input string to the OpenID name normalization rules. For example, the OpenID Identifier \"https://openid.example/\" will have a GSS_C_NT_USER_NAME value of \"https://openid.example/\".",
      "ja": "OpenIDのプリンシパル名のクエリ、表示、およびエクスポートされた名前の構文はすべて同じです。何OpenIDの固有名の構文はありません - アプリケーションは、（[RFC2743]のセクション4を参照）などGSS_C_NT_USER_NAMEとGSS_C_NT_HOSTBASED_SERVICEなどの一般的なGSS-API名のタイプを使用する必要があります。エクスポートされた名前のトークンは、もちろん、[RFC2743]のセクション3.2に準拠しないが、トークンの「NAME」部分は、OpenIDの名前の正規化ルールに電位入力文字列として扱われるべきです。例えば、OpenIDの識別子 \"HTTPS：//openid.example/\" は \"：//openid.example/ https\" をのGSS_C_NT_USER_NAME値を持つことになります。"
    },
    {
      "indent": 3,
      "text": "GSS-API name attributes may be defined in the future to hold the normalized OpenID Identifier.",
      "ja": "GSS-APIのname属性は、正規化されたOpenIDの識別子を保持するために、将来的に定義されてもよいです。"
    },
    {
      "indent": 0,
      "text": "5. Example",
      "section_title": true,
      "ja": "5.例"
    },
    {
      "indent": 3,
      "text": "Suppose a user has an OpenID of https://openid.example and wishes to authenticate his IMAP connection to mail.example (where .example is the top-level domain specified in [RFC2606]). The user would input his OpenID into his mail user agent when he configures the account. In this case, no association is attempted between the OpenID RP and the OP. The client will make use of the \"return_to\" attribute to capture results of the authentication to be redirected to the server. Note the use of [RFC4959] for the initial response. The authentication on the wire would then look something like the following:",
      "ja": "//openid.exampleとmail.exampleに彼のIMAP接続を（。実施例は、[RFC2606]で指定されたトップレベルドメインである）を認証することを望むユーザは、HTTPSのはOpenIDを有すると仮定する。ユーザは、アカウントを設定し、彼のメールユーザエージェントに入力彼のOpenIDをでしょう。この場合、関連はOpenIDのRPとOPの間で試行されません。クライアントは、サーバーにリダイレクトする認証の結果をキャプチャする「return_to」属性を利用します。初期応答のための[RFC4959]の使用に注意してください。ワイヤ上の認証は、次のようになります。"
    },
    {
      "indent": 5,
      "text": "(S = IMAP server; C = IMAP client)",
      "ja": "（S = IMAPサーバ; C = IMAPクライアント）"
    },
    {
      "indent": 5,
      "text": "C: < connects to IMAP port> S: * OK C: C1 CAPABILITY S: * CAPABILITY IMAP4rev1 SASL-IR SORT [...] AUTH=OPENID20 S: C1 OK Capability Completed C: C2 AUTHENTICATE OPENID biwsaHR0cHM6Ly9vcGVuaWQuZXhhbXBsZS8= [ This is the base64 encoding of \"n,,https://openid.example/\". Server performs discovery on http://openid.example/ ] S: + aHR0cHM6Ly9vcGVuaWQuZXhhbXBsZS9vcGVuaWQvP29wZW5pZC5ucz1 odHRwOi8vc3BlY3Mub3BlbmlkLm5ldC9hdXRoLzIuMCZvcGVuaWQucm V0dXJuX3RvPWh0dHBzOi8vbWFpbC5leGFtcGxlL2NvbnN1bWVyLzFlZ jg4OGMmb3BlbmlkLmNsYWltZWRfaWQ9aHR0cHM6Ly9vcGVuaWQuZXhh bXBsZS8mb3BlbmlkLmlkZW50aXR5PWh0dHBzOi8vb3BlbmlkLmV4YW1 wbGUvJm9wZW5pZC5yZWFsbT1pbWFwOi8vbWFpbC5leGFtcGxlJm9wZW 5pZC5tb2RlPWNoZWNraWRfc2V0dXA=",
      "ja": "C：S <IMAPポートに接続>：* OK C：C1 CAPABILITYのS：* CAPABILITY IMAP4rev1のSASL-IRソート[...] = OPENID20 S AUTH：C1 OK機能完了C：C2 AUTHENTICATEのOpenID biwsaHR0cHM6Ly9vcGVuaWQuZXhhbXBsZS8 = [これは\"：//openid.example/ nは,, https\" ののbase64エンコード。 Serverは、HTTP上の発見を実行します。//openid.example/] S：+ aHR0cHM6Ly9vcGVuaWQuZXhhbXBsZS9vcGVuaWQvP29wZW5pZC5ucz1 odHRwOi8vc3BlY3Mub3BlbmlkLm5ldC9hdXRoLzIuMCZvcGVuaWQucm V0dXJuX3RvPWh0dHBzOi8vbWFpbC5leGFtcGxlL2NvbnN1bWVyLzFlZ jg4OGMmb3BlbmlkLmNsYWltZWRfaWQ9aHR0cHM6Ly9vcGVuaWQuZXhh bXBsZS8mb3BlbmlkLmlkZW50aXR5PWh0dHBzOi8vb3BlbmlkLmV4YW1 wbGUvJm9wZW5pZC5yZWFsbT1pbWFwOi8vbWFpbC5leGFtcGxlJm9wZW 5pZC5tb2RlPWNoZWNraWRfc2V0dXA ="
    },
    {
      "indent": 5,
      "text": "[ This is the base64 encoding of \"https://openid.example/openid/ ?openid.ns=http://specs.openid.net/auth/2.0 &openid.return_to=https://mail.example/consumer/1ef888c &openid.claimed_id=https://openid.example/ &openid.identity=https://openid.example/ &openid.realm=imap://mail.example &openid.mode=checkid_setup\" with line breaks and spaces added here for readability. ] C: PQ== [ The client now sends the URL it received to a browser for processing. The user logs into https://openid.example and agrees to authenticate imap://mail.example. A redirect is passed back to the client browser that then connects to https://imap.example/consumer via SSL with the results. From an IMAP perspective, however, the client sends the \"=\" response, and awaits mail.example. Server mail.example would now contact openid.example with an openid.check_authentication message. After that... ] S: + ZW1haWw9bGVhckBtYWlsLmV4YW1wbGUsZnVsbG5hbWU9RWxp b3QlMjBMZWFy [ Here, the IMAP server has returned an SREG attribute of email=lear@mail.example,fullname=Eliot%20Lear. Line break in response added in this example for readability. ] C: [ In IMAP, client must send a blank response after receiving the SREG data. ] S: C2 OK",
      "ja": "[これは、「HTTPSのbase64エンコーディングです：//openid.example/openid/ openid.ns =のhttp：？//specs.openid.net/auth/2.0＆openid.return_to = HTTPS：//mail.example/consumer/ 1ef888c＆openid.claimed_id = HTTPS：//openid.example/＆openid.identity = HTTPS：//openid.example/＆openid.realm = IMAP：//mail.example＆openid.mode = checkid_setup」のためにここに追加改行やスペースを読みやすさ。 ] C：PQ == [クライアントは、今では、処理のために、ブラウザに受信したURLを送信します。 HTTPSにユーザーがログイン：//mail.example：//openid.exampleとは、IMAPを認証することに同意します。結果をSSL経由//imap.example/consumer：リダイレクトは当時httpsに接続するクライアントのブラウザに渡されます。 IMAPの観点から、しかし、クライアントが「=」応答を送信し、mail.exampleをお待ちしています。サーバーmail.exampleは今openid.check_authenticationメッセージでopenid.example連絡します。その後...] S：+ ZW1haWw9bGVhckBtYWlsLmV4YW1wbGUsZnVsbG5hbWU9RWxp b3QlMjBMZWFyは、[ここで、IMAPサーバは、電子メールのSREG属性=リア@ mail.example、フルネーム=エリオット％20Learを返しました。応答での改行は読みやすくするために、この例で追加しました。 ] C：[IMAPでは、クライアントはSREGのデータを受信した後、空白の応答を送信する必要があります。 ] S：C2 OK"
    },
    {
      "indent": 3,
      "text": "In this example, the SASL server / RP has made use of a transaction ID 1ef888c.",
      "ja": "この例では、SASLサーバ/ RPは、トランザクションID 1ef888cの使用をしました。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section will address only security considerations associated with the use of OpenID with SASL and GSS-API. For considerations relating to OpenID in general, the reader is referred to the OpenID specification [OpenID] and to other literature [OpReview]. Similarly, for general SASL [RFC4422] and GSS-API [RFC5801] security considerations, the reader is referred to those specifications.",
      "ja": "このセクションでは、SASLとGSS-APIでのOpenIDの使用に関連した唯一のセキュリティ上の考慮事項に対処します。一般的にはOpenIDに関する考慮事項については、読者は[OpReview] [のOpenID] OpenIDの仕様および他の文献と呼ばれます。同様に、一般的なSASL [RFC4422]とGSS-API [RFC5801]セキュリティ問題のために、読者はそれらの仕様と呼ばれます。"
    },
    {
      "indent": 0,
      "text": "6.1. Binding OpenIDs to Authorization Identities",
      "section_title": true,
      "ja": "6.1。認証アイデンティティへの結合のOpenID"
    },
    {
      "indent": 3,
      "text": "As specified in [RFC4422], the server is responsible for binding credentials to a specific authorization identity. It is therefore necessary that a registration process takes place in advance that binds specific OpenIDs to specific authorization identities, or that only specific trusted OpenID Providers be allowed, where a mapping is predefined. For example, it could be prearranged between an IdP and RP that \"https://example.com/user\" maps to \"user\" for purposes of authorization.",
      "ja": "[RFC4422]で指定されているように、サーバは、特定の許可IDに資格証明書を結合するための責任があります。登録プロセスは、マッピングが事前定義されているだけで、特定の信頼できるOpenIDのプロバイダが許可されるか、その特定の認証アイデンティティに特有のOpenIDを、結合し、事前に行われることが必要です。例えば、それは、承認のための「ユーザー」と「https://example.com/user」マップというのIdPとRPの間で事前に決められたことができました。"
    },
    {
      "indent": 0,
      "text": "6.2. RP Redirected by Malicious URL to Take an Improper Action",
      "section_title": true,
      "ja": "6.2。不適切な行動を取る悪質なURLによってリダイレクトRP"
    },
    {
      "indent": 3,
      "text": "In the initial SASL client response, a user or host can transmit a malicious response to the RP for purposes of taking advantage of weaknesses in the RP's OpenID implementation. It is possible to add port numbers to the URL so that the outcome is that the RP does a port scan of the site. The URL could contain an unauthorized host or even the local host. The URL could contain a protocol other than http or https, such as file or ftp.",
      "ja": "初期SASLクライアントの応答では、ユーザまたはホストは、RPのOpenIDの実装の弱点を利用しての目的のためにRPに悪質な応答を送信することができます。結果がRPは、サイトのポートスキャンを行うことになるように、URLにポート番号を追加することが可能です。 URLは、不正なホストあるいはローカルホストを含​​めることができます。 URLは、httpまたは、そのようなファイルやftpなどHTTPS以外のプロトコルを含めることができます。"
    },
    {
      "indent": 3,
      "text": "One mitigation would be for RPs to have a list of authorized URI bases. OPs SHOULD only redirect to RPs with the same domain component of the base URI. RPs MUST NOT automatically retry on failed attempts. A log of those sites that fail SHOULD be kept, and limitations on queries from clients SHOULD be imposed, just as with any other authentication attempt. Applications SHOULD NOT invoke browsers to communicate with OPs that they are not themselves configured with.",
      "ja": "RPは、許可URI拠点のリストを持っている一つの緩和策は次のようになります。 OPSがのみベースURIの同じドメイン成分とのRPにリダイレクトすべきです。 RPは自動的に失敗した上で再試行してはなりません。失敗するこれらのサイトのログが維持されるべきであり、クライアントからのクエリの制限は、他の認証の試みのように、課されるべきです。アプリケーションは、彼らは自分たちがして構成されていないのOPと通信するためのブラウザを呼び出してはなりません。"
    },
    {
      "indent": 0,
      "text": "6.3. User Privacy",
      "section_title": true,
      "ja": "6.3。ユーザーのプライバシー"
    },
    {
      "indent": 3,
      "text": "The OP is aware of each RP that a user logs into. There is nothing in the protocol to hide this information from the OP. It is not a requirement to track the visits, but there is nothing that prohibits the collection of information. SASL servers should be aware that",
      "ja": "OPはユーザーがログインに各RPを認識しています。 OPからこの情報を隠蔽するためのプロトコルでは何もありません。訪問を追跡する必要はありませんが、情報の収集を禁止しているものは何もありません。 SASLサーバは、その注意する必要があります"
    },
    {
      "indent": 3,
      "text": "OpenID Providers will be able to track -- to some extent -- user access to their services and any additional information that OP provides.",
      "ja": "そのサービスへのユーザーアクセスとOPが提供するすべての追加情報 - ある程度 -  OpenIDのプロバイダは、追跡することができるようになります。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"SASL Mechanisms\" registry using the following template, as described in [RFC4422].",
      "ja": "[RFC4422]で説明したようにIANAは、次のテンプレートを使用して「SASLメカニズム」のレジストリを更新しました。"
    },
    {
      "indent": 3,
      "text": "SASL mechanism name: OPENID20",
      "ja": "SASLメカニズム名：OPENID20"
    },
    {
      "indent": 3,
      "text": "Security Considerations: See this document",
      "ja": "セキュリティの考慮事項：このドキュメントを参照してください。"
    },
    {
      "indent": 3,
      "text": "Published specification: See this document",
      "ja": "公開された仕様：このドキュメントを参照してください。"
    },
    {
      "indent": 3,
      "text": "Person & email address to contact for further information: Authors of this document",
      "ja": "人と詳細のために連絡する電子メールアドレス：この文書の著者"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図している用法：COMMON"
    },
    {
      "indent": 3,
      "text": "Owner/Change controller: IESG",
      "ja": "所有者/変更コントローラ：IESG"
    },
    {
      "indent": 3,
      "text": "Note: None",
      "ja": "注：なし"
    },
    {
      "indent": 3,
      "text": "IANA has also assigned an OID for this GSS mechanism in the \"SMI Security for Mechanism Codes\" registry, with the prefix of iso.org.dod.internet.security.mechanisms (1.3.6.1.5.5) and referencing this specification in the registry.",
      "ja": "IANAはまた、「SMIセキュリティメカニズム・コードのための」レジストリにこのGSSメカニズムのOIDを割り当てiso.org.dod.internet.security.mechanismsのプレフィックス（1.3.6.1.5.5）とし、レジストリにこの仕様を参照しています。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Alexey Melnikov, Joe Hildebrand, Mark Crispin, Chris Newman, Leif Johansson, Sam Hartman, Nico Williams, Klaas Wierenga, Stephen Farrell, and Stephen Kent for their review and contributions.",
      "ja": "作者は彼らのレビューと貢献のためアレクセイ・メルニコフ、ジョー・ヒルデブラント、マーク・クリスピン、クリス・ニューマン、レイフ・ヨハンソン、サム・ハートマン、ニコ・ウィリアムズ、クラースWierenga、スティーブン・ファレル、そしてスティーブン・ケントに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[OpenID] OpenID Foundation, \"OpenID Authentication 2.0 - Final\", December 2007, <http://specs.openid.net/auth/2.0>.",
      "ja": "[OpenIDの]のOpenID財団、 \"OpenIDの認証2.0  - ファイナル\"、2007年12月、<http://specs.openid.net/auth/2.0>。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2606] Eastlake, D. and A. Panitz, \"Reserved Top Level DNS Names\", BCP 32, RFC 2606, June 1999.",
      "ja": "[RFC2606]イーストレイク、D.とA. Panitz、 \"予約トップレベルDNS名\"、BCP 32、RFC 2606、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2743] Linn, J., \"Generic Security Service Application Program Interface Version 2, Update 1\", RFC 2743, January 2000.",
      "ja": "[RFC2743]リン、J.、 \"ジェネリックセキュリティーサービス適用業務プログラムインタフェースバージョン2、アップデート1\"、RFC 2743、2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3987] Duerst, M. and M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", RFC 3987, January 2005.",
      "ja": "[RFC3987] Duerst、M.およびM. Suignard、 \"国際化リソース識別Fiers（IRI）\"、RFC 3987、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4422] Melnikov, A. and K. Zeilenga, \"Simple Authentication and Security Layer (SASL)\", RFC 4422, June 2006.",
      "ja": "[RFC4422]メルニコフ、A.およびK. Zeilenga、 \"簡易認証セキュリティー層（SASL）\"、RFC 4422、2006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5587] Williams, N., \"Extended Generic Security Service Mechanism Inquiry APIs\", RFC 5587, July 2009.",
      "ja": "[RFC5587]ウィリアムズ、N.、 \"拡張ジェネリックセキュリティサービスメカニズム問い合わせのAPI\"、RFC 5587、2009年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC5801] Josefsson, S. and N. Williams, \"Using Generic Security Service Application Program Interface (GSS-API) Mechanisms in Simple Authentication and Security Layer (SASL): The GS2 Mechanism Family\", RFC 5801, July 2010.",
      "ja": "、RFC 5801、2010年7月： \"GS2メカニズム家族簡易認証セキュリティー層（SASL）で一般的なセキュリティサービスアプリケーションプログラムインタフェース（GSS-API）メカニズムを使用して\" [RFC5801] Josefsson氏、S.およびN.ウィリアムズ、。"
    },
    {
      "indent": 3,
      "text": "[RFC6125] Saint-Andre, P. and J. Hodges, \"Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)\", RFC 6125, March 2011.",
      "ja": "[RFC6125]サンアンドレ、P.およびJ.ホッジス、「表現およびTransport Layer Security（TLS）の文脈でインターネット公開鍵インフラストラクチャの使用X.509内のドメインベースのアプリケーションサービスのアイデンティティの検証（PKIX）証明書」、 RFC 6125、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[SREG1.0] OpenID Foundation, \"OpenID Simple Registration Extension version 1.0\", June 2006, <http://openid.net/sreg/1.0>.",
      "ja": "[SREG1.0]のOpenID財団、 \"OpenIDの簡単な登録の拡張バージョン1.0\"、2006年6月、<http://openid.net/sreg/1.0>。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[OpReview] \"Google Sites OpenID Reference Page\", <http://sites.google.com/site/openidreview/resources>.",
      "ja": "[OpReview] \"GoogleサイトのOpenID参照ページ\"、<http://sites.google.com/site/openidreview/resources>。"
    },
    {
      "indent": 3,
      "text": "[RFC1939] Myers, J. and M. Rose, \"Post Office Protocol - Version 3\", STD 53, RFC 1939, May 1996.",
      "ja": "[RFC1939]マイヤーズ、J.とM.ローズ、 \"ポストオフィスプロトコル - バージョン3\"、STD 53、RFC 1939、1996年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3501] Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1\", RFC 3501, March 2003.",
      "ja": "[RFC3501]のCrispin、M.、 \"インターネットメッセージアクセスプロトコル -  VERSION 4rev1\"、RFC 3501、2003年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4959] Siemborski, R. and A. Gulbrandsen, \"IMAP Extension for Simple Authentication and Security Layer (SASL) Initial Client Response\", RFC 4959, September 2007.",
      "ja": "[RFC4959] Siemborski、R.とA. Gulbrandsenの、RFC 4959、2007年9月 \"簡易認証セキュリティー層（SASL）初期クライアント応答用のIMAP拡張\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6120] Saint-Andre, P., \"Extensible Messaging and Presence Protocol (XMPP): Core\", RFC 6120, March 2011.",
      "ja": "[RFC6120]サンアンドレ、P.、 \"拡張メッセージングおよびプレゼンスプロトコル（XMPP）：コア\"、RFC 6120、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-html401-19991224] Hors, A., Raggett, D., and I. Jacobs, \"HTML 4.01 Specification\", World Wide Web Consortium Recommendation REC-html401-19991224, December 1999, <http://www.w3.org/TR/1999/REC-html401-19991224>.",
      "ja": "[W3C.REC-html401-19991224]オードブル、A.、Raggett、D.、およびI.ジェイコブス、 \"HTML 4.01仕様書\"、World Wide Web Consortium（W3C）の勧告REC-html401-19991224、1999年12月、<のhttp：// WWW .w3.org / TR / 1999 / REC-html401-19991224>。"
    },
    {
      "indent": 3,
      "text": "[XRI2.0] Reed, D., Ed. and D. McAlpin, Ed., \"Extensible Resource Identifier (XRI) Syntax V2.0\", OASIS Standard xri-syntax-V2.0-cs, September 2005, <http://www.oasis-open.org/ committees/download.php/15376/xri-syntax-V2.0-cs.html>.",
      "ja": "[XRI2.0]リード、D.、エド。そして、D. McAlpin、エド。、 \"拡張可能なリソース識別子（XRI）構文V2.0\"、OASIS標準XRI-構文-V2.0-CS、2005年9月、<http://www.oasis-open.org/委員会/download.php/15376/xri-syntax-V2.0-cs.html>。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Eliot Lear Cisco Systems GmbH Richtistrasse 7 CH-8304 Wallisellen Switzerland",
      "ja": "エリオット・リアシスコシステムズ社Richtistrasse 7 CH-8304ワリゼレンスイス"
    },
    {
      "indent": 3,
      "text": "Phone: +41 44 878 9200 EMail: lear@cisco.com",
      "ja": "電話：+41 44 878 9200 Eメール：lear@cisco.com"
    },
    {
      "indent": 3,
      "text": "Hannes Tschofenig Nokia Siemens Networks Linnoitustie 6 Espoo 02600 Finland",
      "ja": "ハンネスTschofenigノキアシーメンスネットワークスLinnoitustie 6 02600エスポー、フィンランド"
    },
    {
      "indent": 3,
      "text": "Phone: +358 (50) 4871445 EMail: Hannes.Tschofenig@gmx.net URI: http://www.tschofenig.priv.at",
      "ja": "電話番号：+358（50）4871445 Eメール：Hannes.Tschofenig@gmx.net URI：http://www.tschofenig.priv.at"
    },
    {
      "indent": 3,
      "text": "Henry Mauldin Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA",
      "ja": "ヘンリー・モールディンシスコシステムズ、株式会社170西タスマン・ドライブサンノゼ、CA 95134 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 (800) 553-6387 EMail: hmauldin@cisco.com",
      "ja": "電話：+1（800）553-6387 Eメール：hmauldin@cisco.com"
    },
    {
      "indent": 3,
      "text": "Simon Josefsson SJD AB Johan Olof Wallins vag 13 171 64 Solna Sweden",
      "ja": "サイモンJosefsson氏SJD ABヨハン・オロフ・ワーリン国道13 SE-171 64ソルナ（スウェーデン）"
    },
    {
      "indent": 3,
      "text": "EMail: simon@josefsson.org URI: http://josefsson.org/",
      "ja": "電子メール：simon@josefsson.org URI：http://josefsson.org/"
    }
  ]
}