{
  "title": {
    "text": "RFC 6614 - Transport Layer Security (TLS) Encryption for RADIUS",
    "ja": "RFC 6614 - RADIUSのためのトランスポート層セキュリティ（TLS）の暗号化"
  },
  "number": 6614,
  "created_at": "2019-10-28 07:56:37.318647+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         S. Winter\nRequest for Comments: 6614                                       RESTENA\nCategory: Experimental                                       M. McCauley\nISSN: 2070-1721                                                      OSC\n                                                               S. Venaas\n                                                             K. Wierenga\n                                                                   Cisco\n                                                                May 2012",
      "raw": true
    },
    {
      "indent": 10,
      "text": "Transport Layer Security (TLS) Encryption for RADIUS",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document specifies a transport profile for RADIUS using Transport Layer Security (TLS) over TCP as the transport protocol. This enables dynamic trust relationships between RADIUS servers.",
      "ja": "このドキュメントでは、RADIUSは、トランスポートプロトコルとしてTCPを介してトランスポート層セキュリティ（TLS）を使用するためのトランスポート・プロファイルを指定します。これは、RADIUSサーバ間の動的な信頼関係を可能にします。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6614.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6614で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Requirements Language ......................................3\n   1.2. Terminology ................................................4\n   1.3. Document Status ............................................4\n2. Normative: Transport Layer Security for RADIUS/TCP ..............5\n   2.1. TCP port and Packet Types ..................................5\n   2.2. TLS Negotiation ............................................5\n   2.3. Connection Setup ...........................................5\n   2.4. Connecting Client Identity .................................7\n   2.5. RADIUS Datagrams ...........................................8\n3. Informative: Design Decisions ..................................10\n   3.1. Implications of Dynamic Peer Discovery ....................10\n   3.2. X.509 Certificate Considerations ..........................10\n   3.3. Ciphersuites and Compression Negotiation Considerations ...11\n   3.4. RADIUS Datagram Considerations ............................11\n4. Compatibility with Other RADIUS Transports .....................12\n5. Diameter Compatibility .........................................13\n6. Security Considerations ........................................13\n7. IANA Considerations ............................................14\n8. Acknowledgements ...............................................15\n9. References .....................................................15\n   9.1. Normative References ......................................15\n   9.2. Informative References ....................................16\nAppendix A. Implementation Overview: Radiator .....................18\nAppendix B. Implementation Overview: radsecproxy ..................19\nAppendix C. Assessment of Crypto-Agility Requirements .............20",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The RADIUS protocol [RFC2865] is a widely deployed authentication and authorization protocol. The supplementary RADIUS Accounting specification [RFC2866] provides accounting mechanisms, thus delivering a full Authentication, Authorization, and Accounting (AAA) solution. However, RADIUS is experiencing several shortcomings, such as its dependency on the unreliable transport protocol UDP and the lack of security for large parts of its packet payload. RADIUS security is based on the MD5 algorithm, which has been proven to be insecure.",
      "ja": "RADIUSプロトコル[RFC2865]は広く展開認証と認可プロトコルです。補助RADIUSアカウンティング仕様[RFC2866]は、したがって、許可、アカウンティング（AAA）溶液完全な認証を提供、課金メカニズムを提供します。しかし、RADIUSは、このような信頼性のないトランスポートプロトコルUDP及びそのパケットのペイロードの大部分のためのセキュリティの欠如への依存など、いくつかの欠点を、経験しています。 RADIUSセキュリティは安全でないことが証明されているMD5アルゴリズムに基づいています。"
    },
    {
      "indent": 3,
      "text": "The main focus of RADIUS over TLS is to provide a means to secure the communication between RADIUS/TCP peers using TLS. The most important use of this specification lies in roaming environments where RADIUS packets need to be transferred through different administrative domains and untrusted, potentially hostile networks. An example for a worldwide roaming environment that uses RADIUS over TLS to secure communication is \"eduroam\", see [eduroam].",
      "ja": "TLS上RADIUSの主な焦点は、TLSを使用して、RADIUS / TCPピア間の通信を保護する手段を提供することです。この仕様の最も重要な用途は、RADIUSパケットが異なる管理ドメインと信頼できない、潜在的に敵対的なネットワークを介して転送する必要がある環境をローミングです。通信を保護するためにTLSの上にRADIUSを使用して、世界中のローミング環境のための例は、[eduroam]参照「eduroam」です。"
    },
    {
      "indent": 3,
      "text": "There are multiple known attacks on the MD5 algorithm that is used in RADIUS to provide integrity protection and a limited confidentiality protection (see [MD5-attacks]). RADIUS over TLS wraps the entire RADIUS packet payload into a TLS stream and thus mitigates the risk of attacks on MD5.",
      "ja": "完全性保護と制限された機密保護を提供するために、RADIUSで使用されているMD5アルゴリズム上の複数の既知の攻撃は、（[MD5-攻撃]を参照）があります。 TLSを超えるRADIUSは、TLSストリームに全体のRADIUSパケットのペイロードをラップし、したがって、MD5の攻撃のリスクを軽減します。"
    },
    {
      "indent": 3,
      "text": "Because of the static trust establishment between RADIUS peers (IP address and shared secret), the only scalable way of creating a massive deployment of RADIUS servers under the control of different administrative entities is to introduce some form of a proxy chain to route the access requests to their home server. This creates a lot of overhead in terms of possible points of failure, longer transmission times, as well as middleboxes through which authentication traffic flows. These middleboxes may learn privacy-relevant data while forwarding requests. The new features in RADIUS over TLS obsolete the use of IP addresses and shared MD5 secrets to identify other peers and thus allow the use of more contemporary trust models, e.g., checking a certificate by inspecting the issuer and other certificate properties.",
      "ja": "そのためRADIUSピア（IPアドレスと共有秘密）間の静的信頼関係の確立のため、異なる管理エンティティの制御下で、RADIUSサーバの大規模な展開を作成するための唯一のスケーラブルな方法は、ルートへのアクセス要求をプロキシチェーンのいくつかのフォームを導入することです自宅サーバへ。これは、障害の可能性のあるポイント、長い伝送時間だけでなく、認証トラフィックが流れるミドルボックスの面で多くのオーバーヘッドを作成します。要求を転送しながら、これらのミドルボックスは、プライバシー関連のデータを学習することがあります。廃止されたTLSを超えるRADIUSの新機能発行者およびその他の証明書のプロパティを調べて証明書を確認し、例えば、他のピアを特定し、より現代的な信頼モデルの使用を許可するIPアドレスと共有MD5秘密の使用。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "ja": "1.1。要件言語"
    },
    {
      "indent": 3,
      "text": "In this document, several words are used to signify the requirements of the specification. The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "このドキュメントでは、いくつかの単語は、仕様の要件を意味するために使用されています。キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL RFC 2119 [RFC2119]に記載されているように「この文書に解釈されるべきです。"
    },
    {
      "indent": 0,
      "text": "1.2. Terminology",
      "section_title": true,
      "ja": "1.2。用語"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS node: a RADIUS-over-TLS client or server",
      "ja": "RADIUS / TLSノード：RADIUSオーバー-TLSクライアントまたはサーバ"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS Client: a RADIUS-over-TLS instance that initiates a new connection.",
      "ja": "RADIUS / TLSクライアント：新しい接続を開始RADIUSオーバー-TLSインスタンス。"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS Server: a RADIUS-over-TLS instance that listens on a RADIUS-over-TLS port and accepts new connections",
      "ja": "RADIUS / TLSサーバ：RADIUSオーバー-TLSポートでリッスンし、新しい接続を受け入れるRADIUSオーバー-TLSインスタンス"
    },
    {
      "indent": 3,
      "text": "RADIUS/UDP: a classic RADIUS transport over UDP as defined in [RFC2865]",
      "ja": "RADIUS / UDP：[RFC2865]で定義されるようにUDP上古典RADIUS輸送"
    },
    {
      "indent": 0,
      "text": "1.3. Document Status",
      "section_title": true,
      "ja": "1.3。文書ステータス"
    },
    {
      "indent": 3,
      "text": "This document is an Experimental RFC.",
      "ja": "このドキュメントは、実験的なRFCです。"
    },
    {
      "indent": 3,
      "text": "It is one out of several approaches to address known cryptographic weaknesses of the RADIUS protocol (see also Section 4). The specification does not fulfill all recommendations on a AAA transport profile as per [RFC3539]; in particular, by being based on TCP as a transport layer, it does not prevent head-of-line blocking issues.",
      "ja": "それは（また、セクション4を参照）RADIUSプロトコルの知られている暗号化の弱点に対処するためのいくつかの方法のうち一つです。仕様は、[RFC3539]に従ってAAA輸送プロフィール上のすべての推奨事項を満たしていません。具体的には、トランスポート層としてTCPに基づいていることで、ヘッドオブラインブロッキングの問題を防ぐことはできません。"
    },
    {
      "indent": 3,
      "text": "If this specification is indeed selected for advancement to Standards Track, certificate verification options (Section 2.3, point 2) need to be refined.",
      "ja": "この仕様は、実際に標準化過程への進出のために選択されている場合は、証明書の検証オプション（2.3節、ポイント2）は、洗練する必要があります。"
    },
    {
      "indent": 3,
      "text": "Another experimental characteristic of this specification is the question of key management between RADIUS/TLS peers. RADIUS/UDP only allowed for manual key management, i.e., distribution of a shared secret between a client and a server. RADIUS/TLS allows manual distribution of long-term proofs of peer identity as well (by using TLS-PSK ciphersuites, or identifying clients by a certificate fingerprint), but as a new feature enables use of X.509 certificates in a PKIX infrastructure. It remains to be seen if one of these methods will prevail or if both will find their place in real-life deployments. The authors can imagine pre-shared keys (PSK) to be popular in small-scale deployments (Small Office, Home Office (SOHO) or isolated enterprise deployments) where scalability is not an issue and the deployment of a Certification Authority (CA) is considered too much of a hassle; however, the authors can also imagine large roaming consortia to make use of PKIX. Readers of this specification are encouraged to read the discussion of key management issues within [RFC6421] as well as [RFC4107].",
      "ja": "この仕様の別の実験の特徴は、RADIUS / TLSピア間のキー管理の問題です。 RADIUS / UDPは手動鍵管理、すなわち、クライアントとサーバ間の共有秘密の配布を可能にしました。 RADIUS / TLSは、同様に（TLS-PSKの暗号スイートを使用して、または証明書のフィンガープリントによってクライアントを識別することによって）ピア・アイデンティティの長期証明の手動分配を可能にするが、新たな機能としてPKIXインフラストラクチャ内のX.509証明書の使用を可能にします。これらの方法のいずれかが勝つかまたは両方が現実の展開で自分の場所を見つけるかどうだろうかどうかは見守らなければなりません。拡張性が問題と認証局（CA）の展開でない場合著者は、小規模な展開（スモールオフィス、ホームオフィス（SOHO）または単離されたエンタープライズ展開）で人気が事前共有鍵（PSK）を想像することができています口論のあまり考えられ;しかし、著者らはまた、PKIXを利用するために大規模なローミングコンソーシアムを想像することができます。この仕様書の読者は、鍵管理[RFC6421]内の問題だけでなく、[RFC4107]の議論を読むことをお勧めします。"
    },
    {
      "indent": 3,
      "text": "It has yet to be decided whether this approach is to be chosen for Standards Track. One key aspect to judge whether the approach is usable on a large scale is by observing the uptake, usability, and operational behavior of the protocol in large-scale, real-life deployments.",
      "ja": "これは、このアプローチが標準化過程のために選択する必要があるかどうかを決定するためには至っていません。アプローチが大規模に利用可能であるかどうかを判断する一つの重要な側面は、取り込み、使いやすさ、および大規模な、現実の展開におけるプロトコルの動作挙動を観察することです。"
    },
    {
      "indent": 3,
      "text": "An example for a worldwide roaming environment that uses RADIUS over TLS to secure communication is \"eduroam\", see [eduroam].",
      "ja": "通信を保護するためにTLSの上にRADIUSを使用して、世界中のローミング環境のための例は、[eduroam]参照「eduroam」です。"
    },
    {
      "indent": 0,
      "text": "2. Normative: Transport Layer Security for RADIUS/TCP",
      "section_title": true,
      "ja": "2.規範：RADIUS / TCPのためのトランスポート層セキュリティ"
    },
    {
      "indent": 0,
      "text": "2.1. TCP port and Packet Types",
      "section_title": true,
      "ja": "2.1。 TCPポートおよびパケットタイプ"
    },
    {
      "indent": 3,
      "text": "The default destination port number for RADIUS over TLS is TCP/2083. There are no separate ports for authentication, accounting, and dynamic authorization changes. The source port is arbitrary. See Section 3.4 for considerations regarding the separation of authentication, accounting, and dynamic authorization traffic.",
      "ja": "TLS経由RADIUSのデフォルトの宛先ポート番号は、TCP / 2083です。認証、アカウンティング、および動的な許可の変更のための別のポートがありません。送信元ポートは任意です。認証、アカウンティング、および動的な認証トラフィックの分離に関する考慮事項については、セクション3.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "2.2. TLS Negotiation",
      "section_title": true,
      "ja": "2.2。 TLSネゴシエーション"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS has no notion of negotiating TLS in an established connection. Servers and clients need to be preconfigured to use RADIUS/TLS for a given endpoint.",
      "ja": "RADIUS / TLSは、確立された接続でTLSを交渉の概念はありません。サーバとクライアントは、特定のエンドポイントのためにRADIUS / TLSを使用するように事前に設定する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.3. Connection Setup",
      "section_title": true,
      "ja": "2.3。接続設定"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS nodes",
      "ja": "RADIUS / TLSノード"
    },
    {
      "indent": 3,
      "text": "1. establish TCP connections as per [RFC6613]. Failure to connect leads to continuous retries, with exponentially growing intervals between every try. If multiple servers are defined, the node MAY attempt to establish a connection to these other servers in parallel, in order to implement quick failover.",
      "ja": "1. [RFC6613]あたりとしてTCPコネクションを確立します。すべての試みの間に飛躍的に成長している間隔で、連続リトライにリード線を接続するために失敗しました。複数のサーバが定義されている場合、ノードは迅速なフェイルオーバーを実現するために、並行してこれらの他のサーバーへの接続を確立しようとすることができます。"
    },
    {
      "indent": 3,
      "text": "2. after completing the TCP handshake, immediately negotiate TLS sessions according to [RFC5246] or its predecessor TLS 1.1. The following restrictions apply:",
      "ja": "2. TCPハンドシェイクを完了した後、すぐに[RFC5246]またはその前身TLS 1.1に応じてTLSセッションをネゴシエートします。以下の制限が適用されます。"
    },
    {
      "indent": 7,
      "text": "*  Support for TLS v1.1 [RFC4346] or later (e.g., TLS 1.2\n   [RFC5246]) is REQUIRED.  To prevent known attacks on TLS\n   versions prior to 1.1, implementations MUST NOT negotiate TLS\n   versions prior to 1.1.",
      "raw": true
    },
    {
      "indent": 7,
      "text": "* Support for certificate-based mutual authentication is REQUIRED.",
      "ja": "*証明書ベースの相互認証のサポートが必要です。"
    },
    {
      "indent": 7,
      "text": "* Negotiation of mutual authentication is REQUIRED.",
      "ja": "*相互認証のネゴシエーションが必要です。"
    },
    {
      "indent": 7,
      "text": "* Negotiation of a ciphersuite providing for confidentiality as well as integrity protection is REQUIRED. Failure to comply with this requirement can lead to severe security problems, like user passwords being recoverable by third parties. See Section 6 for details.",
      "ja": "*機密性だけでなく、完全性保護を提供する暗号スイートのネゴシエーションが必要です。この要件に従わない場合は、ユーザパスワードが第三者によって回復いるような、深刻なセキュリティ上の問題につながることができます。詳細については、第6章を参照してください。"
    },
    {
      "indent": 7,
      "text": "* Support for and negotiation of compression is OPTIONAL.",
      "ja": "*圧縮の交渉のためのサポートはオプションです。"
    },
    {
      "indent": 7,
      "text": "* Support for TLS-PSK mutual authentication [RFC4279] is OPTIONAL.",
      "ja": "* TLS-PSK相互認証[RFC4279]のためのサポートはオプションです。"
    },
    {
      "indent": 7,
      "text": "* RADIUS/TLS implementations MUST, at a minimum, support negotiation of the TLS_RSA_WITH_3DES_EDE_CBC_SHA, and SHOULD support TLS_RSA_WITH_RC4_128_SHA and TLS_RSA_WITH_AES_128_CBC_SHA as well (see Section 3.3.",
      "ja": "* RADIUS / TLSの実装はセクション3.3を参照して（TLS_RSA_WITH_3DES_EDE_CBC_SHAの、最低でも、支持交渉しなければならず、同様にTLS_RSA_WITH_RC4_128_SHAとTLS_RSA_WITH_AES_128_CBC_SHAをサポートしなければなりません。"
    },
    {
      "indent": 7,
      "text": "* In addition, RADIUS/TLS implementations MUST support negotiation of the mandatory-to-implement ciphersuites required by the versions of TLS that they support.",
      "ja": "*また、RADIUS / TLSの実装は、サポートするTLSのバージョンで必要な実装に必須の暗号スイートのネゴシエーションをサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. Peer authentication can be performed in any of the following three operation models:",
      "ja": "3.ピアの認証には、以下の3つの動作モデルのいずれかで実行することができます。"
    },
    {
      "indent": 7,
      "text": "*  TLS with X.509 certificates using PKIX trust models (this\n   model is mandatory to implement):",
      "raw": true
    },
    {
      "indent": 10,
      "text": "+ Implementations MUST allow the configuration of a list of trusted Certification Authorities for incoming connections.",
      "ja": "+実装は着信接続のための信頼できる認証機関のリストの設定を許容しなければなりません。"
    },
    {
      "indent": 10,
      "text": "+ Certificate validation MUST include the verification rules as per [RFC5280].",
      "ja": "+証明書の検証は、[RFC5280]に従って検証ルールを含まなければなりません。"
    },
    {
      "indent": 10,
      "text": "+ Implementations SHOULD indicate their trusted Certification Authorities (CAs). For TLS 1.2, this is done using [RFC5246], Section 7.4.4, \"certificate_authorities\" (server side) and [RFC6066], Section 6 \"Trusted CA Indication\" (client side). See also Section 3.2.",
      "ja": "+実装は彼らの信頼できる証明機関（CA）を示す必要があります。 TLS 1.2のため、これは[RFC5246]、セクション7.4.4を使用して行われ、 \"証明して\"（サーバ側）と[RFC6066]、セクション6 \"信頼できるCAの指示\"（クライアント側）。また、3.2節を参照してください。"
    },
    {
      "indent": 10,
      "text": "+ Peer validation always includes a check on whether the locally configured expected DNS name or IP address of the server that is contacted matches its presented certificate. DNS names and IP addresses can be contained in the Common Name (CN) or subjectAltName entries. For verification, only one of these entries is to be considered. The following precedence applies: for DNS name validation, subjectAltName:DNS has precedence over CN; for IP address validation, subjectAltName:iPAddr has precedence over CN.",
      "ja": "+ピア検証が常に接触しているローカルに設定された期待されるDNS名またはサーバーのIPアドレスは、その提示された証明書と一致するかどうかのチェックが含まれています。 DNS名とIPアドレスは、共通名（CN）またはのsubjectAltNameエントリに含めることができます。検証のために、これらのエントリの一方のみが考慮されるべきです。次の優先順位が適用されます：DNS名の検証のために、のsubjectAltName：DNSがCNに優先しています。 IPアドレスの検証のために、のsubjectAltName：IPADDRはCNよりも優先されています。"
    },
    {
      "indent": 13,
      "text": "Implementors of this specification are advised to read [RFC6125], Section 6, for more details on DNS name validation.",
      "ja": "この仕様の実装者は、DNS名の検証の詳細については、[RFC6125]、セクション6を読むことをお勧めします。"
    },
    {
      "indent": 10,
      "text": "+ Implementations MAY allow the configuration of a set of additional properties of the certificate to check for a peer's authorization to communicate (e.g., a set of allowed values in subjectAltName:URI or a set of allowed X509v3 Certificate Policies).",
      "ja": "+実装は証明書の追加のプロパティのセットの構成は、通信する相手の承認を確認することを可能にする（例えば、のsubjectAltNameに許容される値の組：URIまたは許可書X509v3証明書ポリシーのセット）。"
    },
    {
      "indent": 10,
      "text": "+ When the configured trust base changes (e.g., removal of a CA from the list of trusted CAs; issuance of a new CRL for a given CA), implementations MAY renegotiate the TLS session to reassess the connecting peer's continued authorization.",
      "ja": "+設定されている信頼塩基変化（例えば、信頼できるCAのリストからCAの除去、所定のCAのための新たなCRLの発行が）場合、実装が接続ピアの継続許可を再評価するためにTLSセッションを再交渉するかもしれません。"
    },
    {
      "indent": 7,
      "text": "* TLS with X.509 certificates using certificate fingerprints (this model is optional to implement): Implementations SHOULD allow the configuration of a list of trusted certificates, identified via fingerprint of the DER encoded certificate octets. Implementations MUST support SHA-1 as the hash algorithm for the fingerprint. To prevent attacks based on hash collisions, support for a more contemporary hash function such as SHA-256 is RECOMMENDED.",
      "ja": "*証明書のフィンガープリントを使用したX.509証明書とTLS（このモデルは実装するオプションです）：実装は、DERエンコードされた証明書のオクテットの指紋を経由して特定され、信頼された証明書のリストの設定を、許可する必要があります。実装は、指紋のハッシュアルゴリズムとしてSHA-1をサポートしなければなりません。ハッシュの衝突に基づいて攻撃を防ぐために、そのようなSHA-256のような、より現代的なハッシュ関数のサポートが推奨されます。"
    },
    {
      "indent": 7,
      "text": "* TLS using TLS-PSK (this model is optional to implement).",
      "ja": "* TLS-PSKを（このモデルを実装するために任意である）を使用してTLS。"
    },
    {
      "indent": 3,
      "text": "4. start exchanging RADIUS datagrams (note Section 3.4 (1)). The shared secret to compute the (obsolete) MD5 integrity checks and attribute encryption MUST be \"radsec\" (see Section 3.4 (2)).",
      "ja": "4.スタート交換RADIUSデータグラム（ノート3.4（1））。 （廃止）MD5整合性チェックと属性の暗号化を計算するための共有秘密は、（3.4節（2）を参照）、「radsec」でなければなりません。"
    },
    {
      "indent": 0,
      "text": "2.4. Connecting Client Identity",
      "section_title": true,
      "ja": "2.4。接続しているクライアントのアイデンティティ"
    },
    {
      "indent": 3,
      "text": "In RADIUS/UDP, clients are uniquely identified by their IP address. Since the shared secret is associated with the origin IP address, if more than one RADIUS client is associated with the same IP address, then those clients also must utilize the same shared secret, a practice that is inherently insecure, as noted in [RFC5247].",
      "ja": "RADIUS / UDPでは、クライアントは一意にIPアドレスによって識別されます。共有秘密は、元のIPアドレスに関連付けられているので、複数のRADIUSクライアントが同じIPアドレスに関連付けられている場合に述べたように、その後、それらのクライアントも、同じ共有秘密、本質的に安全である練習を活用しなければならない[RFC5247] 。"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS supports multiple operation modes.",
      "ja": "RADIUS / TLSは、複数の動作モードをサポートしています。"
    },
    {
      "indent": 3,
      "text": "In TLS-PSK operation, a client is uniquely identified by its TLS identifier.",
      "ja": "TLS-PSK動作では、クライアントは一意にTLS識別子によって識別されます。"
    },
    {
      "indent": 3,
      "text": "In TLS-X.509 mode using fingerprints, a client is uniquely identified by the fingerprint of the presented client certificate.",
      "ja": "指紋を使用してTLS-X.509モードでは、クライアントを一意に提示されたクライアント証明書のフィンガープリントによって識別されます。"
    },
    {
      "indent": 3,
      "text": "In TLS-X.509 mode using PKIX trust models, a client is uniquely identified by the tuple (serial number of presented client certificate;Issuer).",
      "ja": "PKIX信頼モデルを使用して、TLS-X.509モードでは、クライアントは、一意のタプル（;発行者に提示クライアント証明書のシリアル番号）によって識別されます。"
    },
    {
      "indent": 3,
      "text": "Note well: having identified a connecting entity does not mean the server necessarily wants to communicate with that client. For example, if the Issuer is not in a trusted set of Issuers, the server may decline to perform RADIUS transactions with this client.",
      "ja": "十分注意：接続するエンティティを識別したことは、サーバが、必ずしもそのクライアントと通信したいという意味ではありません。発行者は、発行者の信頼されたセットに含まれない場合、例えば、サーバは、このクライアントとRADIUSトランザクションを実行するために低下する可能性があります。"
    },
    {
      "indent": 3,
      "text": "There are numerous trust models in PKIX environments, and it is beyond the scope of this document to define how a particular deployment determines whether a client is trustworthy. Implementations that want to support a wide variety of trust models should expose as many details of the presented certificate to the administrator as possible so that the trust model can be implemented by the administrator. As a suggestion, at least the following parameters of the X.509 client certificate should be exposed:",
      "ja": "そこPKIX環境における数多くの信頼モデルがあり、それが特定のデプロイメントは、クライアントが信頼できるかどうかを判断する方法を定義するには、この文書の範囲外です。信頼モデルは、管理者によって実装することができるように、信頼モデルを幅広くサポートする実装は、可能な限り管理者に提示された証明書のように多くの詳細を公開する必要があります。提案として、X.509クライアント証明書の少なくとも以下のパラメータが露出する必要があります。"
    },
    {
      "indent": 3,
      "text": "o Originating IP address",
      "ja": "O発信IPアドレス"
    },
    {
      "indent": 3,
      "text": "o Certificate Fingerprint",
      "ja": "証明書指紋O"
    },
    {
      "indent": 3,
      "text": "o Issuer",
      "ja": "O発行者"
    },
    {
      "indent": 3,
      "text": "o Subject",
      "ja": "O件名"
    },
    {
      "indent": 3,
      "text": "o all X509v3 Extended Key Usage",
      "ja": "Oすべての書X509v3拡張キー使用法"
    },
    {
      "indent": 3,
      "text": "o all X509v3 Subject Alternative Name",
      "ja": "Oすべての書X509v3サブジェクトの別名"
    },
    {
      "indent": 3,
      "text": "o all X509v3 Certificate Policies",
      "ja": "Oすべての書X509v3証明書ポリシー"
    },
    {
      "indent": 3,
      "text": "In TLS-PSK operation, at least the following parameters of the TLS connection should be exposed:",
      "ja": "TLS-PSK動作では、TLS接続の少なくとも以下のパラメータが露出されるべきです。"
    },
    {
      "indent": 3,
      "text": "o Originating IP address",
      "ja": "O発信IPアドレス"
    },
    {
      "indent": 3,
      "text": "o TLS Identifier",
      "ja": "O TLS識別子"
    },
    {
      "indent": 0,
      "text": "2.5. RADIUS Datagrams",
      "section_title": true,
      "ja": "2.5。 RADIUSデータグラム"
    },
    {
      "indent": 3,
      "text": "Authentication, Authorization, and Accounting packets are sent according to the following rules:",
      "ja": "認証、認可、およびアカウンティングパケットは、次の規則に従って送信されます。"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS clients transmit the same packet types on the connection they initiated as a RADIUS/UDP client would (see Section 3.4 (3) and (4)). For example, they send o Access-Request",
      "ja": "RADIUS / TLSクライアントは、彼らが考えRADIUS / UDPクライアントとして開始された接続上の同じパケットタイプを送信する（3.4節を参照してください（3）及び（4））。例えば、彼らはOアクセス要求を送信します"
    },
    {
      "indent": 3,
      "text": "o Accounting-Request",
      "ja": "Oアカウンティング要求"
    },
    {
      "indent": 3,
      "text": "o Status-Server",
      "ja": "Oステータス・サーバー"
    },
    {
      "indent": 3,
      "text": "o Disconnect-ACK",
      "ja": "O外し-ACK"
    },
    {
      "indent": 3,
      "text": "o Disconnect-NAK",
      "ja": "O外し、NAK"
    },
    {
      "indent": 3,
      "text": "o ...",
      "ja": "お 。。。"
    },
    {
      "indent": 3,
      "text": "and they receive",
      "ja": "そして彼らが受け取ります"
    },
    {
      "indent": 3,
      "text": "o Access-Accept",
      "ja": "Oアクセス - 受け入れ"
    },
    {
      "indent": 3,
      "text": "o Accounting-Response",
      "ja": "Oアカウンティング応答"
    },
    {
      "indent": 3,
      "text": "o Disconnect-Request",
      "ja": "O外しリクエスト"
    },
    {
      "indent": 3,
      "text": "o ...",
      "ja": "お 。。。"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS servers transmit the same packet types on connections they have accepted as a RADIUS/UDP server would. For example, they send",
      "ja": "RADIUS / TLSサーバは、彼らが希望RADIUS / UDPサーバとして受け入れた接続で同じパケットタイプを送信します。例えば、彼らが送ります"
    },
    {
      "indent": 3,
      "text": "o Access-Challenge",
      "ja": "Oアクセスチャレンジ"
    },
    {
      "indent": 3,
      "text": "o Access-Accept",
      "ja": "Oアクセス - 受け入れ"
    },
    {
      "indent": 3,
      "text": "o Access-Reject",
      "ja": "お あっせっｓーれじぇｃｔ"
    },
    {
      "indent": 3,
      "text": "o Accounting-Response",
      "ja": "Oアカウンティング応答"
    },
    {
      "indent": 3,
      "text": "o Disconnect-Request",
      "ja": "O外しリクエスト"
    },
    {
      "indent": 3,
      "text": "o ...",
      "ja": "お 。。。"
    },
    {
      "indent": 3,
      "text": "and they receive",
      "ja": "そして彼らが受け取ります"
    },
    {
      "indent": 3,
      "text": "o Access-Request",
      "ja": "Oアクセス要求"
    },
    {
      "indent": 3,
      "text": "o Accounting-Request",
      "ja": "Oアカウンティング要求"
    },
    {
      "indent": 3,
      "text": "o Status-Server",
      "ja": "Oステータス・サーバー"
    },
    {
      "indent": 3,
      "text": "o Disconnect-ACK",
      "ja": "O外し-ACK"
    },
    {
      "indent": 3,
      "text": "o ...",
      "ja": "お 。。。"
    },
    {
      "indent": 3,
      "text": "Due to the use of one single TCP port for all packet types, it is required that a RADIUS/TLS server signal which types of packets are supported on a server to a connecting peer. See also Section 3.4 for a discussion of signaling.",
      "ja": "すべてのパケットタイプのための1つの単一のTCPポートの使用に起因し、それが必要とされるパケットの種類が接続ピアにサーバ上でサポートされているRADIUS / TLSサーバー信号。シグナリングの議論のためにも、3.4節を参照してください。"
    },
    {
      "indent": 3,
      "text": "o When an unwanted packet of type 'CoA-Request' or 'Disconnect-Request' is received, a RADIUS/TLS server needs to respond with a 'CoA-NAK' or 'Disconnect-NAK', respectively. The NAK SHOULD contain an attribute Error-Cause with the value 406 (\"Unsupported Extension\"); see [RFC5176] for details.",
      "ja": "型「のCoAリクエスト」または「切断リクエスト」の不要なパケットが受信されると、O、RADIUS / TLSサーバは、それぞれ、「アシルCoA-NAK」または「切断-NAK」で応答する必要があります。 NAKは、値406（「サポートされていない拡張」）と属性エラー-原因を入れておく必要があります。詳細については、[RFC5176]を参照してください。"
    },
    {
      "indent": 3,
      "text": "o When an unwanted packet of type 'Accounting-Request' is received, the RADIUS/TLS server SHOULD reply with an Accounting-Response containing an Error-Cause attribute with value 406 \"Unsupported Extension\" as defined in [RFC5176]. A RADIUS/TLS accounting client receiving such an Accounting-Response SHOULD log the error and stop sending Accounting-Request packets.",
      "ja": "タイプ「アカウンティング要求」の不要なパケットが受信されると、O、RADIUS / TLSサーバは、[RFC5176]で定義されるように値406「サポートされていない拡張」のエラー原因の属性を含むアカウンティング応答で応答すべきです。このようアカウンティング応答を受け取るRADIUS / TLS会計クライアントはエラーをログに記録し、アカウンティング要求パケットの送信を停止すべきです。"
    },
    {
      "indent": 0,
      "text": "3. Informative: Design Decisions",
      "section_title": true,
      "ja": "3.参考：設計の決定"
    },
    {
      "indent": 3,
      "text": "This section explains the design decisions that led to the rules defined in the previous section.",
      "ja": "このセクションでは、前のセクションで定義されたルールにつながった設計上の決定を説明しています。"
    },
    {
      "indent": 0,
      "text": "3.1. Implications of Dynamic Peer Discovery",
      "section_title": true,
      "ja": "3.1。ダイナミックピア発見の意味"
    },
    {
      "indent": 3,
      "text": "One mechanism to discover RADIUS-over-TLS peers dynamically via DNS is specified in [DYNAMIC]. While this mechanism is still under development and therefore is not a normative dependency of RADIUS/ TLS, the use of dynamic discovery has potential future implications that are important to understand.",
      "ja": "DNSを介して動的にRADIUSオーバーTLSピアを発見するための一つのメカニズムは[DYNAMIC]で指定されています。このメカニズムはまだ開発中であるため、RADIUS / TLSの規範的な依存関係はありませんが、ダイナミックな発見の使用を理解するために重要である潜在的な将来の意味を持っています。"
    },
    {
      "indent": 3,
      "text": "Readers of this document who are considering the deployment of DNS-based dynamic discovery are thus encouraged to read [DYNAMIC] and follow its future development.",
      "ja": "DNSベースの動的検出の展開を検討しているこのドキュメントの読者は、このように[DYNAMIC]を読み、その将来の発展に従うことを奨励されています。"
    },
    {
      "indent": 0,
      "text": "3.2. X.509 Certificate Considerations",
      "section_title": true,
      "ja": "3.2。 X.509証明書の考慮事項"
    },
    {
      "indent": 3,
      "text": "(1) If a RADIUS/TLS client is in possession of multiple certificates from different CAs (i.e., is part of multiple roaming consortia) and dynamic discovery is used, the discovery mechanism possibly does not yield sufficient information to identify the consortium uniquely (e.g., DNS discovery). Subsequently, the client may not know by itself which client certificate to use for the TLS handshake. Then, it is necessary for the server to signal to which consortium it belongs and which certificates it expects. If there is no risk of confusing multiple roaming consortia, providing this information in the handshake is not crucial.",
      "ja": "RADIUS / TLSクライアントが異なるCAから複数の証明書を所有している場合（1）（すなわち、複数のローミングコンソーシアムの一部である）と動的検出が使用され、発見メカニズムは、おそらく一意コンソーシアムを識別するために十分な情報が得られない（例えば、DNSの発見）。その後、クライアントはTLSハンドシェイクに使用するクライアント証明書自体によって知らないかもしれません。サーバが所属し、それが期待した証明書をどのコンソーシアムに合図するために続いて、それが必要です。混乱複数のローミングコンソーシアムの危険がない場合は、握手にこの情報を提供することが重要ではありません。"
    },
    {
      "indent": 3,
      "text": "(2) If a RADIUS/TLS server is in possession of multiple certificates from different CAs (i.e., is part of multiple roaming consortia), it will need to select one of its certificates to present to the RADIUS/TLS client. If the client sends the Trusted CA Indication, this hint can make the server select the appropriate certificate and prevent a handshake failure. Omitting this indication makes it impossible to deterministically select the right certificate in this case. If there is no risk of confusing multiple roaming consortia, providing this indication in the handshake is not crucial.",
      "ja": "（2）RADIUS / TLSサーバーが異なるCAから複数の証明書を所有している場合（すなわち、複数のローミングコンソーシアムの一部である）、それはRADIUS / TLSクライアントに提示するために、その証明書のいずれかを選択する必要があります。クライアントが信頼されたCAの指示を送信した場合、このヒントは、サーバが適切な証明書を選択して、ハンドシェイクの失敗を防ぐことができます。この表示を省略することは不可能確定この場合、権利証明書を選択することができます。混乱複数のローミングコンソーシアムの危険がない場合は、握手にこの指示を提供することが重要ではありません。"
    },
    {
      "indent": 0,
      "text": "3.3. Ciphersuites and Compression Negotiation Considerations",
      "section_title": true,
      "ja": "3.3。暗号スイートと圧縮の交渉の考慮事項"
    },
    {
      "indent": 3,
      "text": "Not all TLS ciphersuites in [RFC5246] are supported by available TLS tool kits, and licenses may be required in some cases. The existing implementations of RADIUS/TLS use OpenSSL as a cryptographic backend, which supports all of the ciphersuites listed in the rules in the normative section.",
      "ja": "[RFC5246]ですべてのTLS暗号スイートは、利用可能なTLSツールキットによってサポートされており、ライセンスが必要になる場合がありません。 RADIUS / TLSの既存の実装は、規範的なセクションのルールに記載されている暗号スイートの全てをサポートするバックエンドの暗号化、としてOpenSSLを使用します。"
    },
    {
      "indent": 3,
      "text": "The TLS ciphersuite TLS_RSA_WITH_3DES_EDE_CBC_SHA is mandatory to implement according to [RFC4346]; thus, it has to be supported by RADIUS/TLS nodes.",
      "ja": "TLS暗号スイートTLS_RSA_WITH_3DES_EDE_CBC_SHAは[RFC4346]に従って実施することが必須です。従って、それはRADIUS / TLSノードによってサポートされなければなりません。"
    },
    {
      "indent": 3,
      "text": "The two other ciphersuites in the normative section are widely implemented in TLS tool kits and are considered good practice to implement.",
      "ja": "規範的なセクションの2つの他の暗号スイートは広くTLSツールキットに実装され、実装するのに良い方法と考えられています。"
    },
    {
      "indent": 0,
      "text": "3.4. RADIUS Datagram Considerations",
      "section_title": true,
      "ja": "3.4。 RADIUSデータグラムの考慮事項"
    },
    {
      "indent": 3,
      "text": "(1) After the TLS session is established, RADIUS packet payloads are exchanged over the encrypted TLS tunnel. In RADIUS/UDP, the packet size can be determined by evaluating the size of the datagram that arrived. Due to the stream nature of TCP and TLS, this does not hold true for RADIUS/TLS packet exchange. Instead, packet boundaries of RADIUS packets that arrive in the stream are calculated by evaluating the packet's Length field. Special care needs to be taken on the packet sender side that the value of the Length field is indeed correct before sending it over the TLS tunnel, because incorrect packet lengths can no longer be detected by a differing datagram boundary. See Section 2.6.4 of [RFC6613] for more details.",
      "ja": "TLSセッションが確立された後（1）、RADIUSパケットのペイロードは暗号化されたTLSトンネルを介して交換されます。 RADIUS / UDPでは、パケットのサイズは、到着したデータグラムの大きさを評価することによって決定することができます。 TCPおよびTLSのストリーム性質のために、これは、RADIUS / TLSパケット交換のために当てはまりません。代わりに、ストリームに到着するRADIUSパケットのパケット境界は、パケットの長さフィールドを評価することによって計算されます。特別なケアは、不正パケット長がもはや異なるデータグラムの境界で検出できないので、長さフィールドの値は、TLSトンネル経由で送信する前に、確かに正しいパケット送信側で撮影する必要があります。詳細については、[RFC6613]のセクション2.6.4を参照してください。"
    },
    {
      "indent": 3,
      "text": "(2) Within RADIUS/UDP [RFC2865], a shared secret is used for hiding attributes such as User-Password, as well as in computation of the Response Authenticator. In RADIUS accounting [RFC2866], the shared secret is used in computation of both the Request Authenticator and the Response Authenticator. Since TLS provides integrity protection and encryption sufficient to substitute for RADIUS application-layer security, it is not necessary to configure a RADIUS shared secret. The use of a fixed string for the obsolete shared secret eliminates possible node misconfigurations.",
      "ja": "（2）RADIUS / UDP [RFC2865]の中では、共有秘密は、応答認証の計算ならびに、そのようなユーザパスワードなどの属性を隠すために使用されます。 RADIUSアカウンティング[RFC2866]において、共有秘密は、要求認証及び応答認証の両方の計算に使用されます。 TLSは、RADIUSアプリケーション層のセキュリティを代替するのに十分な完全性保護と暗号化を提供するので、RADIUS共有秘密を設定する必要はありません。廃止された共有シークレットのための固定文字列を使用することが可能なノードの設定ミスを排除します。"
    },
    {
      "indent": 3,
      "text": "(3) RADIUS/UDP [RFC2865] uses different UDP ports for authentication, accounting, and dynamic authorization changes. RADIUS/TLS allocates a single port for all RADIUS packet types. Nevertheless, in RADIUS/TLS, the notion of a client that sends authentication requests and processes replies associated with its users' sessions and the notion of a server that receives requests, processes them, and sends the appropriate replies is to be preserved. The normative rules about acceptable packet types for clients and servers mirror the packet flow behavior from RADIUS/UDP.",
      "ja": "（3）RADIUS / UDP [RFC2865]は、認証、課金、および動的認可変更の異なるUDPポートを使用します。 RADIUS / TLSは、すべてのRADIUSパケットタイプのための単一のポートを割り当てます。それにもかかわらず、RADIUS / TLSで、認証要求を送信し、そのユーザーのセッションや要求を受信するサーバーの概念に関連した応答を処理し、それらを処理し、適切な応答を送信するクライアントの概念が保存されます。クライアントとサーバのための許容可能なパケットタイプについて規範的なルールは、RADIUS / UDPのパケットフローの挙動を反映しています。"
    },
    {
      "indent": 3,
      "text": "(4) RADIUS/UDP [RFC2865] uses negative ICMP responses to a newly allocated UDP port to signal that a peer RADIUS server does not support the reception and processing of the packet types in [RFC5176]. These packet types are listed as to be received in RADIUS/TLS implementations. Note well: it is not required for an implementation to actually process these packet types; it is only required that the NAK be sent as defined above.",
      "ja": "（4）RADIUS / UDP [RFC2865]は、ピアRADIUSサーバは[RFC5176]のパケットタイプの受信と処理をサポートしていないことを知らせるために、新たに割り当てられたUDPポートに負ICMP応答を使用します。これらのパケットタイプはRADIUS / TLSの実装で受信されるように記載されています。十分に注意してください：それは実際にこれらのパケット・タイプを処理するために実装するために必要されていません。唯一の上で定義したNAKを送信することが必要とされます。"
    },
    {
      "indent": 3,
      "text": "(5) RADIUS/UDP [RFC2865] uses negative ICMP responses to a newly allocated UDP port to signal that a peer RADIUS server does not support the reception and processing of RADIUS Accounting packets. There is no RADIUS datagram to signal an Accounting NAK. Clients may be misconfigured for sending Accounting packets to a RADIUS/TLS server that does not wish to process their Accounting packet. To prevent a regression of detectability of this situation, the Accounting-Response + Error-Cause signaling was introduced.",
      "ja": "（5）RADIUS / UDP [RFC2865]は、ピアRADIUSサーバはRADIUSアカウンティングパケットの受信と処理をサポートしていないことを知らせるために、新たに割り当てられたUDPポートに負ICMP応答を使用します。会計NAKを知らせるために何RADIUSデータグラムはありません。クライアントは、アカウンティングパケットを処理したくないRADIUS / TLSサーバにアカウンティングパケットを送信するために間違って設定することができます。このような状況の検出の回帰を防ぐために、会計・レスポンス+エラー-原因シグナリングが導入されました。"
    },
    {
      "indent": 0,
      "text": "4. Compatibility with Other RADIUS Transports",
      "section_title": true,
      "ja": "その他のRADIUSトランスポートと4の互換性"
    },
    {
      "indent": 3,
      "text": "The IETF defines multiple alternative transports to the classic UDP transport model as defined in [RFC2865], namely RADIUS over TCP [RFC6613] and the present document on RADIUS over TLS. The IETF also proposed RADIUS over Datagram Transport Layer Security (DTLS) [RADEXT-DTLS].",
      "ja": "IETFは、[RFC2865]、TCP上すなわちRADIUS [RFC6613]とTLS上RADIUSに本明細書で定義されるように、複数の代替案は、古典的なUDPトランスポートモデルに搬送定義します。 IETFはまた、データグラムトランスポート層セキュリティ（DTLS）[RADEXT-DTLS]の上にRADIUSを提案しました。"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS does not specify any inherent backward compatibility to RADIUS/UDP or cross compatibility to the other transports, i.e., an implementation that utilizes RADIUS/TLS only will not be able to receive or send RADIUS packet payloads over other transports. An implementation wishing to be backward or cross compatible (i.e., wishes to serve clients using other transports than RADIUS/TLS) will need to implement these other transports along with the RADIUS/TLS transport and be prepared to send and receive on all implemented transports, which is called a \"multi-stack implementation\".",
      "ja": "RADIUS / TLSは、RADIUS / TLSを使用する実装が唯一の他のトランスポート上のRADIUSパケットのペイロードを受信または送信することができなくなり、即ち、他のトランスポートにRADIUS / UDP又は相互適合性の任意の固有の下位互換性を指定していません。後方であるか、または互換性のある横断したい実装（すなわち、RADIUS / TLS以外のトランスポートを使用してクライアントにサービスを提供することを希望する）は、RADIUS / TLSトランスポートと一緒に、これらの他のトランスポートを実装する必要がありますし、すべての実装のトランスポート上で送受信するように調製することがこれは「マルチスタックの実装」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "If a given IP device is able to receive RADIUS payloads on multiple transports, this may or may not be the same instance of software, and it may or may not serve the same purposes. It is not safe to assume that both ports are interchangeable. In particular, it cannot be assumed that state is maintained for the packet payloads between the transports. Two such instances MUST be considered separate RADIUS server entities.",
      "ja": "所与のIPデバイスが複数のトランスポートにRADIUSペイロードを受信することができる場合、これは、又はソフトウェアの同じインスタンスであってもなくてもよく、それは、またはしない場合があり、同じ目的を果たすことができます。両方のポートが交換可能であると仮定しても安全ではありません。特に、状態はトランスポート間のパケットのペイロードのために維持されると仮定することはできません。二つのこのような場合は、個別のRADIUSサーバエンティティ考えなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Diameter Compatibility",
      "section_title": true,
      "ja": "5.直径の互換性"
    },
    {
      "indent": 3,
      "text": "Since RADIUS/TLS is only a new transport profile for RADIUS, the compatibility of RADIUS/TLS - Diameter [RFC3588] and RADIUS/UDP [RFC2865] - Diameter [RFC3588] is identical. The considerations regarding payload size in [RFC6613] apply.",
      "ja": "直径[RFC3588]とRADIUS / UDP [RFC2865]  -   -  RADIUS / TLSのみRADIUS、RADIUS / TLSの互換性のために新しいトランスポートプロファイルであるので直径[RFC3588]と同一です。 [RFC6613]でペイロードサイズに関する考慮事項適用されます。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The computational resources to establish a TLS tunnel are significantly higher than simply sending mostly unencrypted UDP datagrams. Therefore, clients connecting to a RADIUS/TLS node will more easily create high load conditions and a malicious client might create a Denial-of-Service attack more easily.",
      "ja": "TLSトンネルを確立するための計算リソースは、単にほとんどが暗号化されていないUDPデータグラムを送信するよりも大幅に高くなっています。したがって、RADIUS / TLSノードに接続しているクライアントは、より簡単に高負荷条件を作成し、悪意のあるクライアントがより簡単にサービス拒否攻撃を作成することがあります。"
    },
    {
      "indent": 3,
      "text": "Some TLS ciphersuites only provide integrity validation of their payload, and provide no encryption. This specification forbids the use of such ciphersuites. Since the RADIUS payload's shared secret is fixed to the well-known term \"radsec\" (see Section 2.3 (4)), failure to comply with this requirement will expose the entire datagram payload in plaintext, including User-Password, to intermediate IP nodes.",
      "ja": "いくつかのTLS暗号群はそのペイロードの整合性の検証を提供し、何の暗号化を提供しません。この仕様は、そのような暗号スイートの使用を禁止します。 RADIUSペイロードの共有秘密が（2.3節（4）を参照）は、周知の用語「radsec」に固定されているため、この要件に従わない場合は、中間のIPノードに、ユーザパスワードを含む平文全体のデータグラムのペイロードを、公開します。"
    },
    {
      "indent": 3,
      "text": "By virtue of being based on TCP, there are several generic attack vectors to slow down or prevent the TCP connection from being established; see [RFC4953] for details. If a TCP connection is not up when a packet is to be processed, it gets re-established, so such attacks in general lead only to a minor performance degradation (the time it takes to re-establish the connection). There is one notable exception where an attacker might create a bidding-down attack though. If peer communication between two devices is configured for both RADIUS/TLS (i.e., TLS security over TCP as a transport, shared secret fixed to \"radsec\") and RADIUS/UDP (i.e., shared secret security with a secret manually configured by the administrator), and the RADIUS/UDP transport is the failover option if the TLS session cannot be established, a bidding-down attack can occur if an adversary can maliciously close the TCP connection or prevent it from being established. Situations where clients are configured in such a way are likely to occur during a migration phase from RADIUS/UDP to RADIUS/TLS. By preventing the TLS session setup, the attacker can reduce the security of the packet payload from the selected TLS ciphersuite packet encryption to the classic MD5 per-attribute encryption. The situation should be avoided by disabling the weaker RADIUS/UDP transport as soon as the new RADIUS/TLS connection is established and tested. Disabling can happen at either the RADIUS client or server side:",
      "ja": "TCPに基づいているのおかげで、遅くしたり、確立されてからのTCP接続を防ぐために、いくつかの一般的な攻撃ベクトルがあります。詳細については、[RFC4953]を参照してください。 TCP接続が確立されていない場合、パケットが処理されるとき、それはわずかな性能の低下（これは、接続を再確立するのにかかる時間）に、一般的なリードで再確立、そのような攻撃を取得します。攻撃者はしかし入札ダウン攻撃を作成することができます1つの重要な例外があります。 2つのデバイス間のピアツーピア通信はRADIUS / TLSの両方のために構成されている場合（すなわち、トランスポートとしてTCP上のTLSセキュリティに固定共有秘密「radsec」）およびRADIUS / UDP（すなわち、秘密と共有秘密セキュリティを管理者が手動で構成さ）、およびRADIUS / UDPトランスポートは、TLSセッションが確立できない場合、敵対者が悪意を持ってTCPコネクションを閉じるか、確立されることを防ぐことができれば、入札ダウン攻撃が発生する可能性がフェイルオーバー・オプションです。クライアントは、このような方法で構成されている状況は、RADIUS / TLSのRADIUS / UDPからの移行フェーズ中に発生する可能性があります。 TLSセッションのセットアップを防止することによって、攻撃者は、古典的なMD5属性ごとの暗号化に選択されたTLS暗号スイートのパケットの暗号化からのパケットのペイロードのセキュリティを減らすことができます。状況は、新しいRADIUS / TLS接続が確立され、テストされるとすぐに弱いRADIUS / UDPトランスポートを無効にすることで避けるべきです。無効にするには、RADIUSクライアントまたはサーバ側のいずれかで起こることができます。"
    },
    {
      "indent": 3,
      "text": "o Client side: de-configure the failover setup, leaving RADIUS/TLS as the only communication option",
      "ja": "oクライアント側：唯一の通信オプションとしてRADIUS / TLSを残して、フェールオーバーの設定をデ設定"
    },
    {
      "indent": 3,
      "text": "o Server side: de-configure the RADIUS/UDP client from the list of valid RADIUS clients",
      "ja": "Oサーバー・サイド：デ・設定RADIUS / UDPクライアントの有効なRADIUSクライアントのリストから"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS provides authentication and encryption between RADIUS peers. In the presence of proxies, the intermediate proxies can still inspect the individual RADIUS packets, i.e., \"end-to-end\" encryption is not provided. Where intermediate proxies are untrusted, it is desirable to use other RADIUS mechanisms to prevent RADIUS packet payload from inspection by such proxies. One common method to protect passwords is the use of the Extensible Authentication Protocol (EAP) and EAP methods that utilize TLS.",
      "ja": "RADIUS / TLSは、RADIUSピア間の認証と暗号化を提供します。プロキシの存在下で、中間プロキシはまだすなわち、「エンドツーエンド」の暗号化が提供されていない、個々のRADIUSパケットを検査することができます。中間プロキシが信頼されていない場合、そのようなプロキシによって検査からRADIUSパケットペイロードを防止するために、他のRADIUSメカニズムを使用することが望ましいです。パスワードを保護するための1つの一般的な方法は、拡張認証プロトコル（EAP）とTLSを利用EAPメソッドを使用することです。"
    },
    {
      "indent": 3,
      "text": "When using certificate fingerprints to identify RADIUS/TLS peers, any two certificates that produce the same hash value (i.e., that have a hash collision) will be considered the same client. Therefore, it is important to make sure that the hash function used is cryptographically uncompromised so that an attacker is very unlikely to be able to produce a hash collision with a certificate of his choice. While this specification mandates support for SHA-1, a later revision will likely demand support for more contemporary hash functions because as of issuance of this document, there are already attacks on SHA-1.",
      "ja": "RADIUS / TLSピアを識別するために、証明書のフィンガープリントを使用する場合、同じハッシュ値を生成する任意の2つの証明書（すなわち、ハッシュの衝突を持っている）は、同じクライアント考えます。そのため、攻撃者が彼の選択の証明書を使用して、ハッシュ衝突を生成することができることはほとんどありませんように使用されるハッシュ関数は暗号的妥協であることを確認することが重要です。この仕様の義務は、SHA-1のためにサポートしていますが、以降のリビジョンはおそらく理由は、このドキュメントの発行として、より現代的なハッシュ関数のサポートを要求します、SHA-1の攻撃がすでにあります。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "No new RADIUS attributes or packet codes are defined. IANA has updated the already assigned TCP port number 2083 to reflect the following:",
      "ja": "新しいRADIUS属性またはパケットコードが定義されていません。 IANAは、次のことを反映するために、すでに割り当てられたTCPポート番号2083を更新しました："
    },
    {
      "indent": 3,
      "text": "o Reference: [RFC6614]",
      "ja": "Oリファレンス：[RFC6614]"
    },
    {
      "indent": 3,
      "text": "o Assignment Notes: The TCP port 2083 was already previously assigned by IANA for \"RadSec\", an early implementation of RADIUS/ TLS, prior to issuance of this RFC. This early implementation can be configured to be compatible to RADIUS/TLS as specified by the IETF. See RFC 6614, Appendix A for details.",
      "ja": "O割付注：TCPポート2083は、すでに以前に先立ち、このRFCの発行に、「RadSec」、RADIUS / TLSの早期実現のためにIANAによって割り当てられました。この初期の実装では、IETFによって指定されるようにRADIUS / TLSに適合するように構成することができます。詳細については、RFC 6614、付録Aを参照してください。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "RADIUS/TLS was first implemented as \"RADSec\" by Open Systems Consultants, Currumbin Waters, Australia, for their \"Radiator\" RADIUS server product (see [radsec-whitepaper]).",
      "ja": "RADIUS / TLSは、最初、それらの「ラジエター」RADIUSサーバ製品のオープンシステムコンサルタントが「RADSec」、カランビンウォーターズ、オーストラリア、（[radsec-ホワイトペーパー]参照）として実施されました。"
    },
    {
      "indent": 3,
      "text": "Funding and input for the development of this document was provided by the European Commission co-funded project \"GEANT2\" [geant2] and further feedback was provided by the TERENA Task Force on Mobility and Network Middleware [terena].",
      "ja": "このドキュメントの開発のための資金と入力がモビリティとネットワークミドルウェア[TERENA]にTERENAタスクフォースによって提供された欧州委員会の共同出資プロジェクト「GEANT2」[geant2]、さらにフィードバックによって提供されました。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, June 2000.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865、2000年6月 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2866] Rigney, C., \"RADIUS Accounting\", RFC 2866, June 2000.",
      "ja": "[RFC2866] Rigney、C.、 \"RADIUSアカウンティング\"、RFC 2866、2000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4279] Eronen, P. and H. Tschofenig, \"Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)\", RFC 4279, December 2005.",
      "ja": "[RFC4279] Eronen、P.とH. Tschofenig、RFC 4279 \"トランスポート層セキュリティ（TLS）のための事前共有鍵暗号の組み合わせ\"、2005年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5176] Chiba, M., Dommety, G., Eklund, M., Mitton, D., and B. Aboba, \"Dynamic Authorization Extensions to Remote Authentication Dial In User Service (RADIUS)\", RFC 5176, January 2008.",
      "ja": "、RFC 5176、2008年1月[RFC5176]千葉、M.、Dommety、G.、エクランド、M.、ミトン、D.、およびB. Aboba、 \"ユーザーサービス（RADIUS）でリモート認証ダイヤルへのダイナミックな承認拡張機能\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5247] Aboba, B., Simon, D., and P. Eronen, \"Extensible Authentication Protocol (EAP) Key Management Framework\", RFC 5247, August 2008.",
      "ja": "[RFC5247] Aboba、B.、サイモン、D.、およびP. Eronen、 \"拡張認証プロトコル（EAP）鍵管理フレームワーク\"、RFC 5247、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC6066] Eastlake, D., \"Transport Layer Security (TLS) Extensions: Extension Definitions\", RFC 6066, January 2011.",
      "ja": "[RFC6066]イーストレイク、D.、 \"トランスポート層セキュリティ（TLS）拡張機能：拡張定義\"、RFC 6066、2011年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6613] DeKok, A., \"RADIUS over TCP\", RFC 6613, May 2012.",
      "ja": "[RFC6613] DeKok、A.、 \"TCP上のRADIUS\"、RFC 6613、2012月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[DYNAMIC] Winter, S. and M. McCauley, \"NAI-based Dynamic Peer Discovery for RADIUS/TLS and RADIUS/DTLS\", Work in Progress, July 2011.",
      "ja": "[DYNAMIC]冬、S.及びM.マッコーリー、 \"RADIUS / TLSとRADIUS / DTLSためNAIベースの動的ピア発見\"、進歩、2011年7月に働いています。"
    },
    {
      "indent": 3,
      "text": "[MD5-attacks] Black, J., Cochran, M., and T. Highland, \"A Study of the MD5 Attacks: Insights and Improvements\", October 2006, <http://www.springerlink.com/content/40867l85727r7084/>.",
      "ja": "[MD5-攻撃]ブラック、J.、コクラン、M.、およびT.ハイランド、 \"MD5攻撃の研究：洞察と改善\"、2006年10月、<http://www.springerlink.com/content/40867l85727r7084 />。"
    },
    {
      "indent": 3,
      "text": "[RADEXT-DTLS] DeKok, A., \"DTLS as a Transport Layer for RADIUS\", Work in Progress, October 2010.",
      "ja": "[RADEXT-DTLS] DeKok、A.、 \"RADIUSのためのトランスポート層としてDTLS\"、進歩、2010年10月の作業。"
    },
    {
      "indent": 3,
      "text": "[RFC3539] Aboba, B. and J. Wood, \"Authentication, Authorization and Accounting (AAA) Transport Profile\", RFC 3539, June 2003.",
      "ja": "[RFC3539] Aboba、B.、およびJ.ウッド、 \"認証、認可およびアカウンティング（AAA）のトランスポート・プロファイル\"、RFC 3539、2003年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3588] Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J. Arkko, \"Diameter Base Protocol\", RFC 3588, September 2003.",
      "ja": "[RFC3588]カルフーン、P.、Loughney、J.、ガットマン、E.、ゾルン、G.、およびJ. Arkko、 \"直径ベースプロトコル\"、RFC 3588、2003年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4107] Bellovin, S. and R. Housley, \"Guidelines for Cryptographic Key Management\", BCP 107, RFC 4107, June 2005.",
      "ja": "[RFC4107] Bellovin氏、S.とR. Housley氏、 \"暗号鍵管理のためのガイドライン\"、BCP 107、RFC 4107、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4346] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.1\", RFC 4346, April 2006.",
      "ja": "[RFC4346]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.1\"、RFC 4346、2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4953] Touch, J., \"Defending TCP Against Spoofing Attacks\", RFC 4953, July 2007.",
      "ja": "[RFC4953]タッチ、J.、RFC 4953、2007年7月 \"なりすまし攻撃に対するTCPを防衛\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6125] Saint-Andre, P. and J. Hodges, \"Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)\", RFC 6125, March 2011.",
      "ja": "[RFC6125]サンアンドレ、P.およびJ.ホッジス、「表現およびTransport Layer Security（TLS）の文脈でインターネット公開鍵インフラストラクチャの使用X.509内のドメインベースのアプリケーションサービスのアイデンティティの検証（PKIX）証明書」、 RFC 6125、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6421] Nelson, D., \"Crypto-Agility Requirements for Remote Authentication Dial-In User Service (RADIUS)\", RFC 6421, November 2011.",
      "ja": "[RFC6421]ネルソン、D.は、 \"リモート認証のための暗号・敏捷性の要件は、ダイヤルインユーザーサービス（RADIUS）\"、RFC 6421、2011年11月。"
    },
    {
      "indent": 3,
      "text": "[eduroam] Trans-European Research and Education Networking Association, \"eduroam Homepage\", 2007, <http://www.eduroam.org/>.",
      "ja": "[eduroam]欧州横断研究教育ネットワーク協会は、 \"eduroamのホームページ\"、2007年、<http://www.eduroam.org/>。"
    },
    {
      "indent": 3,
      "text": "[geant2] Delivery of Advanced Network Technology to Europe, \"European Commission Information Society and Media: GEANT2\", 2008, <http://www.geant2.net/>.",
      "ja": "[geant2]ヨーロッパ高度ネットワーク技術機構、「欧州委員会情報社会・メディア：GEANT2」、2008年、<http://www.geant2.net/>。"
    },
    {
      "indent": 3,
      "text": "[radsec-whitepaper] Open System Consultants, \"RadSec - a secure, reliable RADIUS Protocol\", May 2005, <http://www.open.com.au/radiator/radsec-whitepaper.pdf>.",
      "ja": "[radsec-ホワイトペーパー]オープンシステムコンサルタント、 \"RadSec  - 安全で信頼性の高いRADIUSプロトコル\"、2005年5月、<http://www.open.com.au/radiator/radsec-whitepaper.pdf>。"
    },
    {
      "indent": 3,
      "text": "[radsecproxy-impl] Venaas, S., \"radsecproxy Project Homepage\", 2007, <http://software.uninett.no/radsecproxy/>.",
      "ja": "[radsecproxy-IMPL] Venaas、S.、 \"radsecproxyプロジェクトのホームページ\"、2007年、<http://software.uninett.no/radsecproxy/>。"
    },
    {
      "indent": 3,
      "text": "[terena] Trans-European Research and Education Networking Association (TERENA), \"Task Force on Mobility and Network Middleware\", 2008, <http://www.terena.org/activities/tf-mobility/>.",
      "ja": "[TERENA]欧州横断研究教育ネットワーク協会（TERENA）、「モビリティとネットワークミドルウェアに関するタスクフォース」、2008年、<http://www.terena.org/activities/tf-mobility/>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Implementation Overview: Radiator",
      "ja": "付録A.実装の概要：ラジエーター"
    },
    {
      "indent": 3,
      "text": "Radiator implements the RadSec protocol for proxying requests with the <Authby RADSEC> and <ServerRADSEC> clauses in the Radiator configuration file.",
      "ja": "ラジエーターは、ラジエーターの設定ファイルに<Authby RADSEC>と<ServerRADSEC>節でリクエストをプロキシ用RadSecプロトコルを実装しています。"
    },
    {
      "indent": 3,
      "text": "The <AuthBy RADSEC> clause defines a RadSec client, and causes Radiator to send RADIUS requests to the configured RadSec server using the RadSec protocol.",
      "ja": "<AuthBy RADSEC>句はRadSecクライアントを定義し、RadSecプロトコルを使用して構成RadSecサーバーにRADIUS要求を送信するためにラジエーターの原因となります。"
    },
    {
      "indent": 3,
      "text": "The <ServerRADSEC> clause defines a RadSec server, and causes Radiator to listen on the configured port and address(es) for connections from <Authby RADSEC> clients. When an <Authby RADSEC> client connects to a <ServerRADSEC> server, the client sends RADIUS requests through the stream to the server. The server then handles the request in the same way as if the request had been received from a conventional UDP RADIUS client.",
      "ja": "<ServerRADSEC>句はRadSecサーバを定義し、<Authby RADSEC>クライアントからの接続のための設定されたポートとアドレス（複数可）をリッスンするためにラジエーターの原因となります。 <Authby RADSEC>クライアントが、<ServerRADSEC>サーバーに接続すると、クライアントはサーバーにストリームを介してRADIUS要求を送信します。その後、サーバは、要求は、従来のUDP RADIUSクライアントから受信したかのように同じ方法でリクエストを処理します。"
    },
    {
      "indent": 3,
      "text": "Radiator is compliant to RADIUS/TLS if the following options are used:",
      "ja": "次のオプションが使用されている場合はラジエーターはRADIUS / TLSに準拠しています。"
    },
    {
      "indent": 6,
      "text": "<AuthBy RADSEC>",
      "ja": "<AuthBy RADSEC>"
    },
    {
      "indent": 6,
      "text": "* Protocol tcp",
      "ja": "*プロトコルTCP"
    },
    {
      "indent": 6,
      "text": "* UseTLS",
      "ja": "* UseTLS"
    },
    {
      "indent": 6,
      "text": "* TLS_CertificateFile",
      "ja": "* TLS_CertificateFile"
    },
    {
      "indent": 6,
      "text": "* Secret radsec",
      "ja": "*秘密のradsec"
    },
    {
      "indent": 6,
      "text": "<ServerRADSEC>",
      "ja": "<ServerRADSEC>"
    },
    {
      "indent": 6,
      "text": "* Protocol tcp",
      "ja": "*プロトコルTCP"
    },
    {
      "indent": 6,
      "text": "* UseTLS",
      "ja": "* UseTLS"
    },
    {
      "indent": 6,
      "text": "* TLS_RequireClientCert",
      "ja": "* TLS_RequireClientCert"
    },
    {
      "indent": 6,
      "text": "* Secret radsec",
      "ja": "*秘密のradsec"
    },
    {
      "indent": 3,
      "text": "As of Radiator 3.15, the default shared secret for RadSec connections is configurable and defaults to \"mysecret\" (without quotes). For compliance with this document, this setting needs to be configured for the shared secret \"radsec\". The implementation uses TCP keepalive socket options, but does not send Status-Server packets. Once established, TLS connections are kept open throughout the server instance lifetime.",
      "ja": "ラジエーター3.15のとおり、RadSec接続のデフォルトの共有秘密は、（引用符なし）「mysecret」に設定可能で、デフォルトです。この文書に準拠するため、この設定は、共有秘密「radsec」のために設定する必要があります。実装は、TCPキープアライブソケットオプションを使用しますが、ステータス・サーバーのパケットを送信しません。設立後は、TLS接続はサーバーインスタンスの有効期間全体で開いたままにしています。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Implementation Overview: radsecproxy",
      "ja": "付録B.実装の概要：radsecproxy"
    },
    {
      "indent": 3,
      "text": "The RADIUS proxy named radsecproxy was written in order to allow use of RadSec in current RADIUS deployments. This is a generic proxy that supports any number and combination of clients and servers, supporting RADIUS over UDP and RadSec. The main idea is that it can be used on the same host as a non-RadSec client or server to ensure RadSec is used on the wire; however, as a generic proxy, it can be used in other circumstances as well.",
      "ja": "radsecproxyという名前のRADIUSプロキシは、現在のRADIUSの展開にRadSecの使用を可能にするために書かれました。これは、UDPとRadSec以上のRADIUSをサポートし、クライアントとサーバの任意の数との組み合わせをサポートして汎用プロキシです。主なアイデアは、RadSecがワイヤ上で使用されていることを確認するために、非RadSecクライアントまたはサーバーと同じホスト上で使用することができることです。しかし、一般的なプロキシとして、それは、他の状況で使用することができます。"
    },
    {
      "indent": 3,
      "text": "The configuration file consists of client and server clauses, where there is one such clause for each client or server. In such a clause, one specifies either \"type tls\" or \"type udp\" for TLS or UDP transport. Versions prior to 1.6 used \"mysecret\" as a default shared secret for RADIUS/TLS; version 1.6 and onwards uses \"radsec\". For backwards compatibility with older versions, the secret can be changed (which makes the configuration not compliant with this specification).",
      "ja": "各クライアントまたはサーバのための1つのそのような句がある場合、構成ファイルは、クライアントとサーバーの句で構成されています。そのような条項で、1は「タイプTLS」またはTLSまたはUDP輸送のための「UDPタイプ」のいずれかを指定します。前1.6へのバージョンには、RADIUS / TLSのデフォルトの共有秘密として「mysecret」を使用します。バージョン1.6以降では、「radsec」を使用しています。旧バージョンとの後方互換性のために、秘密は（設定この仕様に準拠していないになるもの）に変更することができます。"
    },
    {
      "indent": 3,
      "text": "In order to use TLS for clients and/or servers, one must also specify where to locate CA certificates, as well as certificate and key for the client or server. This is done in a TLS clause. There may be one or several TLS clauses. A client or server clause may reference a particular TLS clause, or just use a default one. One use for multiple TLS clauses may be to present one certificate to clients and another to servers.",
      "ja": "クライアントおよび/またはサーバに対してTLSを使用するためには、また、クライアントまたはサーバーのCA証明書だけでなく、証明書と鍵を検索する場所を指定する必要があります。これは、TLS句で行われます。一つまたは複数のTLSの条項があるかもしれません。クライアントまたはサーバの句は、特定のTLS句を参照するか、単にデフォルトの1つを使用することができます。複数のTLS句のための1つの用途は、サーバーへの1つのクライアントに証明書と別のものを提示することであってもよいです。"
    },
    {
      "indent": 3,
      "text": "If any RadSec (TLS) clients are configured, the proxy will, at startup, listen on port 2083, as assigned by IANA for the OSC RadSec implementation. An alternative port may be specified. When a client connects, the client certificate will be verified, including checking that the configured Fully Qualified Domain Name (FQDN) or IP address matches what is in the certificate. Requests coming from a RadSec client are treated exactly like requests from UDP clients.",
      "ja": "任意のRadSec（TLS）クライアントが設定されている場合、プロキシは、起動時に、OSC RadSecの実装のためにIANAによって割り当てられるよう、ポート2083でリッスンします。代替ポートを指定することができます。クライアントが接続すると、クライアント証明書が構成された完全修飾ドメイン名（FQDN）またはIPアドレスが証明書にあるものと一致することを確認を含め、検証されます。 RadSecクライアントからの要求を正確にUDPクライアントからの要求のように扱われます。"
    },
    {
      "indent": 3,
      "text": "At startup, the proxy will try to establish a TLS connection to each (if any) of the configured RadSec (TLS) servers. If it fails to connect to a server, it will retry regularly. There is some back-off where it will retry quickly at first, and with longer intervals later. If a connection to a server goes down, it will also start retrying regularly. When setting up the TLS connection, the server certificate will be verified, including checking that the configured FQDN or IP address matches what is in the certificate. Requests are sent to a RadSec server, just like they would be to a UDP server.",
      "ja": "起動時に、プロキシが設定さRadSec（TLS）の各サーバへのTLS接続を（もしあれば）を確立しようとします。それは、サーバーへの接続に失敗した場合は、定期的に再試行します。それが最初で、後に長い間隔で迅速に再試行されますいくつかのバックオフがあります。サーバーへの接続がダウンした場合、それはまた、定期的に再試行を開始します。 TLS接続を設定すると、サーバー証明書が構成されたFQDNまたはIPアドレスが証明書にあるものと一致することを確認を含め、検証されます。要求は、彼らはUDPサーバーへのだろうと同じように、RadSecサーバーに送信されます。"
    },
    {
      "indent": 3,
      "text": "The proxy supports Status-Server messages. They are only sent to a server if enabled for that particular server. Status-Server requests are always responded to.",
      "ja": "プロキシはステータス・サーバーのメッセージをサポートしています。その特定のサーバに対して有効になっている場合彼らは唯一のサーバーに送信されます。ステータス・サーバー要求は常にに応えています。"
    },
    {
      "indent": 3,
      "text": "This RadSec implementation has been successfully tested together with Radiator. It is a freely available, open-source implementation. For source code and documentation, see [radsecproxy-impl].",
      "ja": "このRadSecの実装に成功ラジエーターと一緒にテストされています。それは自由に利用できる、オープンソース実装です。ソースコードとドキュメントについて、[radsecproxy-IMPL]参照。"
    },
    {
      "indent": 0,
      "text": "Appendix C. Assessment of Crypto-Agility Requirements",
      "ja": "暗号-敏捷性の要件の付録C.評価"
    },
    {
      "indent": 3,
      "text": "The RADIUS Crypto-Agility Requirements document [RFC6421] defines numerous classification criteria for protocols that strive to enhance the security of RADIUS. It contains mandatory (M) and recommended (R) criteria that crypto-agile protocols have to fulfill. The authors believe that the following assessment about the crypto-agility properties of RADIUS/TLS are true.",
      "ja": "RADIUS暗号-敏捷性の要件ドキュメント[RFC6421]はRADIUSのセキュリティを強化するために努力するプロトコルのための多数の分類基準を定義します。これは必須（M）と暗号アジャイルプロトコルを満たすために持っている推奨（R）の基準が含まれています。著者は、RADIUS / TLSの暗号アジリティのプロパティについて以下の評価が真であると信じています。"
    },
    {
      "indent": 3,
      "text": "By virtue of being a transport profile using TLS over TCP as a transport protocol, the cryptographically agile properties of TLS are inherited, and RADIUS/TLS subsequently meets the following points:",
      "ja": "トランスポートプロトコルとしてTCP上TLSを使用して、トランスポート・プロファイルことによって、TLSの暗号アジャイル特性が継承され、RADIUS / TLSは、その後、以下の点を満たしています。"
    },
    {
      "indent": 6,
      "text": "(M) negotiation of cryptographic algorithms for integrity and auth",
      "ja": "整合性と認証のための暗号化アルゴリズムの（M）交渉"
    },
    {
      "indent": 6,
      "text": "(M) negotiation of cryptographic algorithms for encryption",
      "ja": "暗号化のための暗号化アルゴリズムの（M）交渉"
    },
    {
      "indent": 6,
      "text": "(M) replay protection",
      "ja": "（M）再生保護"
    },
    {
      "indent": 6,
      "text": "(M) define mandatory-to-implement cryptographic algorithms",
      "ja": "（M）が強制的に実装する暗号アルゴリズムを定義します"
    },
    {
      "indent": 6,
      "text": "(M) generate fresh session keys for use between client and server",
      "ja": "（M）は、クライアントとサーバの間で使用するために、新鮮なセッションキーを生成します"
    },
    {
      "indent": 6,
      "text": "(R) support for Perfect Forward Secrecy in session keys",
      "ja": "（R）セッション・キーで完全転送秘密のサポート"
    },
    {
      "indent": 6,
      "text": "(R) support X.509 certificate-based operation",
      "ja": "（R）サポートX.509証明書ベースの動作"
    },
    {
      "indent": 6,
      "text": "(R) support Pre-Shared keys",
      "ja": "（R）事前共有キーをサポート"
    },
    {
      "indent": 6,
      "text": "(R) support for confidentiality of the entire packet",
      "ja": "（R）パケット全体の機密性のためのサポート"
    },
    {
      "indent": 6,
      "text": "(M/R) support Automated Key Management",
      "ja": "（M / R）のサポートは、キー管理を自動化"
    },
    {
      "indent": 3,
      "text": "The remainder of the requirements is discussed individually below in more detail:",
      "ja": "要件の残りは個々に、より詳細に以下に説明します。"
    },
    {
      "indent": 6,
      "text": "(M) \"...avoid security compromise, even in situations where the existing cryptographic algorithms utilized by RADIUS implementations are shown to be weak enough to provide little or no security\" [RFC6421]. The existing algorithm, based on MD5, is not of any significance in RADIUS/TLS; its compromise does not compromise the outer transport security.",
      "ja": "（M）は[RFC6421]を「RADIUS実装によって利用既存の暗号化アルゴリズムはほとんど又は全くセキュリティを提供するのに十分に弱いことが示されている場合...さえ状況において、セキュリティ侵害を回避します」。 MD5に基づく既存のアルゴリズムは、RADIUS / TLSのいずれかの重要ではありません。その妥協は外側のトランスポート・セキュリティを損ないません。"
    },
    {
      "indent": 6,
      "text": "(R) mandatory-to-implement algorithms are to be NIST-Acceptable with no deprecation date - The mandatory-to-implement algorithm is TLS_RSA_WITH_3DES_EDE_CBC_SHA. This ciphersuite supports three-key 3DES operation, which is classified as Acceptable with no known deprecation date by NIST.",
      "ja": "（R）強制的に実装アルゴリズムは、NISTに許容される無サポート終了日となるようにしている - 強制的に実装アルゴリズムがTLS_RSA_WITH_3DES_EDE_CBC_SHAあります。この暗号スイートは、NISTによってなし、既知の非推奨の日でも許容されるように分類される3キー3DES操作をサポートしています。"
    },
    {
      "indent": 6,
      "text": "(M) demonstrate backward compatibility with RADIUS - There are multiple implementations supporting both RADIUS and RADIUS/TLS, and the translation between them.",
      "ja": "（M）は、RADIUSとの下位互換性を実証 -  RADIUSおよびRADIUS / TLS、およびそれらの間の翻訳の両方をサポートする複数の実装があります。"
    },
    {
      "indent": 6,
      "text": "(M) After legacy mechanisms have been compromised, secure algorithms MUST be used, so that backward compatibility is no longer possible - In RADIUS, communication between client and server is always a manual configuration; after a compromise, the legacy client in question can be de-configured by the same manual configuration.",
      "ja": "（M）レガシー機構が危険にさらされた後の下位互換性がもはや可能でないように、安全なアルゴリズムを使用しなければならない -  RADIUSで、クライアントとサーバ間の通信は常に手動の構成です。妥協した後、問題のレガシークライアントが同じ手動設定で解除設定することができます。"
    },
    {
      "indent": 6,
      "text": "(M) indicate a willingness to cede change control to the IETF - Change control of this protocol is with the IETF.",
      "ja": "（M）は、IETFに変更制御を譲るための意欲を示している - このプロトコルの変更制御は、IETFです。"
    },
    {
      "indent": 6,
      "text": "(M) be interoperable between implementations based purely on the information in the specification - At least one implementation was created exclusively based on this specification and is interoperable with other RADIUS/TLS implementations.",
      "ja": "（M）仕様の情報に基づいて、純粋に実装間での相互運用可能である - 少なくとも1つの実装を作成排他的に本明細書に基づいており、他のRADIUS / TLSの実装と相互運用可能であるしました。"
    },
    {
      "indent": 6,
      "text": "(M) apply to all packet types - RADIUS/TLS operates on the transport layer, and can carry all packet types.",
      "ja": "（M）は、すべてのパケットタイプに適用 -  RADIUS / TLSトランスポート層で動作し、すべてのパケットタイプを運ぶことができます。"
    },
    {
      "indent": 6,
      "text": "(R) message data exchanged with Diameter SHOULD NOT be affected - The solution is Diameter-agnostic.",
      "ja": "直径と交換（R）メッセージ・データは影響を受けないはず - 溶液は直径に依存しないです。"
    },
    {
      "indent": 6,
      "text": "(M) discuss any inherent assumptions - The authors are not aware of any implicit assumptions that would be yet-unarticulated in the document.",
      "ja": "（M）任意の固有の仮定を議論 - 作者は文書ではまだ、非関節運動になります任意の暗黙の仮定を認識していません。"
    },
    {
      "indent": 6,
      "text": "(R) provide recommendations for transition - The Security Considerations section contains a transition path.",
      "ja": "（R）遷移のための推奨事項を提供する -  Security Considerations部は、遷移パスを含みます。"
    },
    {
      "indent": 6,
      "text": "(R) discuss legacy interoperability and potential for bidding-down attacks - The Security Considerations section contains a corresponding discussion.",
      "ja": "（R）入札ダウン攻撃にレガシー相互運用性と可能性を議論する -  Security Considerations部は、対応する議論が含まれています。"
    },
    {
      "indent": 3,
      "text": "Summarizing, it is believed that this specification fulfills all the mandatory and all the recommended requirements for a crypto-agile solution and should thus be considered UNCONDITIONALLY COMPLIANT.",
      "ja": "まとめると、この仕様は暗号アジャイルソリューションのためのすべての必須および推奨されるすべての要件を満たすため、UNCONDITIONALLY準拠考慮すべきであると考えられています。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Stefan Winter Fondation RESTENA 6, rue Richard Coudenhove-Kalergi Luxembourg 1359 Luxembourg",
      "ja": "ステファン・ウィンター財団RESTENA 6、RUEリチャード・クーデンホーフ・カレルギー1359ルクセンブルクルクセンブルク"
    },
    {
      "indent": 3,
      "text": "Phone: +352 424409 1 Fax: +352 422473 EMail: stefan.winter@restena.lu URI: http://www.restena.lu.",
      "ja": "電話：+352 424409 1ファックス：352 422473 Eメール：http://www.restena.lu：URIをstefan.winter@restena.lu。"
    },
    {
      "indent": 3,
      "text": "Mike McCauley Open Systems Consultants 9 Bulbul Place Currumbin Waters QLD 4223 Australia",
      "ja": "マイク・マッコーリーオープンシステムコンサルタント9ヒヨドリ置きカランビンウォーターズQLD 4223オーストラリア"
    },
    {
      "indent": 3,
      "text": "Phone: +61 7 5598 7474 Fax: +61 7 5598 7070 EMail: mikem@open.com.au URI: http://www.open.com.au.",
      "ja": "電話：+61 7 5598 7474ファックス：+61 7 5598 7070 Eメール：mikem@open.com.au URI：http://www.open.com.au。"
    },
    {
      "indent": 3,
      "text": "Stig Venaas Cisco Systems Tasman Drive San Jose, CA 95134 USA",
      "ja": "スティグVenaasシスコシステムズタスマン・ドライブサンノゼ、CA 95134 USA"
    },
    {
      "indent": 3,
      "text": "EMail: stig@cisco.com",
      "ja": "メールアドレス：stig@cisco.com"
    },
    {
      "indent": 3,
      "text": "Klaas Wierenga Cisco Systems International BV Haarlerbergweg 13-19 Amsterdam 1101 CH The Netherlands",
      "ja": "クラースWierengaシスコシステムズ・インターナショナルBV Haarlerbergweg 13-19アムステルダム1101 CHオランダ"
    },
    {
      "indent": 3,
      "text": "Phone: +31 (0)20 3571752 EMail: klaas@cisco.com URI: http://www.cisco.com",
      "ja": "電話：+31（0）20 3571752 Eメール：klaas@cisco.com URI：http://www.cisco.com"
    }
  ]
}