{
  "title": {
    "text": "RFC 6872 - The Common Log Format (CLF) for the Session Initiation Protocol (SIP): Framework and Information Model",
    "ja": "RFC 6872 - フレームワークおよび情報モデル：セッション開始プロトコル（SIP）のための共通ログ形式（CLF）"
  },
  "number": 6872,
  "created_at": "2019-11-01 00:30:18.868476+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                   V. Gurbani, Ed.\nRequest for Comments: 6872             Bell Laboratories, Alcatel-Lucent\nCategory: Standards Track                                 E. Burger, Ed.\nISSN: 2070-1721                                    Georgetown University\n                                                               T. Anjali\n                                        Illinois Institute of Technology\n                                                             H. Abdelnur\n                                                               O. Festor\n                                                                   INRIA\n                                                           February 2013",
      "raw": true
    },
    {
      "indent": 1,
      "text": "The Common Log Format (CLF) for the Session Initiation Protocol (SIP): Framework and Information Model",
      "ja": "フレームワークおよび情報モデル：セッション開始プロトコル（SIP）のための共通ログ形式（CLF）"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "Well-known web servers such as Apache and web proxies like Squid support event logging using a common log format. The logs produced using these de facto standard formats are invaluable to system administrators for troubleshooting a server and tool writers to craft tools that mine the log files and produce reports and trends. Furthermore, these log files can also be used to train anomaly detection systems and feed events into a security event management system. The Session Initiation Protocol (SIP) does not have a common log format, and, as a result, each server supports a distinct log format that makes it unnecessarily complex to produce tools to do trend analysis and security detection. This document describes a framework, including requirements and analysis of existing approaches, and specifies an information model for development of a SIP common log file format that can be used uniformly by user agents, proxies, registrars, and redirect servers as well as back-to-back user agents.",
      "ja": "共通ログ形式を使用してApacheやイカのサポートイベントロギングなどのWebプロキシなどのWebサーバーがよく知られています。これらの事実上の標準フォーマットを使用して製造ログは、ログファイルをマイニングし、レポートやトレンドを作り出すクラフトツールのサーバーおよびツールの作家のトラブルシューティングのためのシステム管理者に非常に貴重です。さらに、これらのログファイルは、セキュリティイベント管理システムに異常検知システムやフィードイベントを訓練するために使用することができます。セッション開始プロトコル（SIP）は、結果として、各サーバは、それが不必要に複雑な傾向分析とセキュリティの検出を行うためのツールを製造することを可能にする明確なログ形式をサポートし、共通ログ形式を持っており、しません。この文書は、要件と既存のアプローチの分析を含む、フレームワークを記述し、ユーザエージェントによって均一に使用することができるSIP共通ログファイルフォーマットの開発のための情報モデルを指定し、プロキシ、レジストラ、およびサーバ、ならびにバックにリダイレクト-backユーザエージェント。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6872.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6872で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Terminology .....................................................4\n3. Problem Statement ...............................................4\n4. What SIP CLF Is and What It Is Not ..............................5\n5. Alternative Approaches to SIP CLF ...............................5\n   5.1. SIP CLF and Call Detail Records ............................6\n   5.2. SIP CLF and Packet Capture Tools ...........................6\n   5.3. SIP CLF and Syslog .........................................7\n   5.4. SIP CLF and IPFIX ..........................................8\n6. Motivation and Use Cases ........................................8\n7. Challenges in Establishing a SIP CLF ...........................10\n8. Information Model ..............................................11\n   8.1. SIP CLF Mandatory Fields ..................................11\n   8.2. Mandatory Fields and SIP Entities .........................13\n9. Examples .......................................................14\n   9.1. UAC Registration ..........................................15\n   9.2. Direct Call between Alice and Bob .........................17\n   9.3. Single Downstream Branch Call .............................20\n   9.4. Forked Call ...............................................25\n10. Security Considerations .......................................35\n11. Operational Guidance ..........................................37\n12. Acknowledgments ...............................................37\n13. References ....................................................37\n   13.1. Normative References .....................................37\n   13.2. Informative References ...................................38",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Servers executing on Internet hosts produce log records as part of their normal operations. Some log records are, in essence, a summary of an application-layer protocol data unit (PDU) that captures, in precise terms, an event that was processed by the server. These log records serve many purposes including analysis and troubleshooting.",
      "ja": "インターネットホスト上で実行されるサーバーは、それらの通常の業務の一環としてログレコードを生成します。いくつかのログ・レコードは、本質的に、正確な用語で、サーバーによって処理されたイベントを捕捉するアプリケーション層プロトコルデータユニット（PDU）の要約です。これらのログ・レコードは分析とトラブルシューティングを含む多くの目的を果たします。"
    },
    {
      "indent": 3,
      "text": "Well-known web servers such as Apache and web proxies like Squid support event logging using a Common Log Format (CLF), the common structure for logging requests and responses serviced by the web server. It can be argued that a good part of the success of Apache has been its CLF because it allowed third parties to produce tools that analyzed the data and generated traffic reports and trends. The Apache CLF has been so successful that not only did it become the de facto standard in producing logging data for web servers but also many commercial web servers can be configured to produce logs in this format. An example of the Apache CLF is depicted next:",
      "ja": "Apacheや共通ログ形式（CLF）を使用して、イカのサポートイベントログなどのWebプロキシ、Webサーバがサービスを提供するロギング要求と応答のための共通の構造としてよく知られているWebサーバ。第三者がデータを分析し、トラフィックレポートと傾向を生成ツールを生成するために許可されているためにApacheの成功の良い部分は、そのCLFされていると主張することができます。 ApacheのCLFは、Webサーバのログデータを生成する際にデファクトスタンダードになっただけでなく、多くの商用Webサーバがこの形式でログを生成するように構成することができるだけでなく、とても成功しています。 ApacheのCLFの例は次の描かれています。"
    },
    {
      "indent": 8,
      "text": "     %h      %l     %u       %t   \\\"%r\\\"   %s    %b\nremotehost rfc931 authuser [date] request status bytes",
      "raw": true
    },
    {
      "indent": 3,
      "text": "remotehost: Remote hostname (or IP number if DNS hostname is not available or if DNSLookup is Off.",
      "ja": "remotehostのリモートホスト名（またはIP番号は、DNSホスト名が利用できない場合やDNSLookupがオフの場合。"
    },
    {
      "indent": 3,
      "text": "rfc931: The remote logname of the user.",
      "ja": "RFC931：ユーザーのリモートログ名。"
    },
    {
      "indent": 3,
      "text": "authuser: The username by which the user has authenticated himself.",
      "ja": "AUTHUSER：ユーザーが自分自身を認証したことにより、ユーザ名。"
    },
    {
      "indent": 3,
      "text": "[date]: Date and time of the request.",
      "ja": "[日]：日付と要求の時間。"
    },
    {
      "indent": 3,
      "text": "request: The request line exactly as it came from the client.",
      "ja": "リクエスト：それはクライアントから来たとまったく同じ要求行。"
    },
    {
      "indent": 3,
      "text": "status: The HTTP status code returned to the client.",
      "ja": "ステータス：クライアントに返されたHTTPステータスコード。"
    },
    {
      "indent": 3,
      "text": "bytes: The content-length of the document transferred.",
      "ja": "バイト：転送ドキュメントのコンテンツ長。"
    },
    {
      "indent": 3,
      "text": "The inspiration for the SIP CLF is the Apache CLF. However, the state machinery for an HTTP transaction is much simpler than that of the SIP transaction (as evidenced in Section 7). The SIP CLF needs to do considerably more.",
      "ja": "SIP CLFのためのインスピレーションは、Apache CLFです。しかし、HTTPトランザクションの状態機械は、（セクション7で明らかなように）SIPトランザクションのそれよりもはるかに簡単です。 SIP CLFはかなり多くを行う必要があります。"
    },
    {
      "indent": 3,
      "text": "This document outlines the problem statement that argues for a SIP CLF. In addition, it provides an information model pertaining to the minimum set of SIP headers and fields that must be logged. This document does not prescribe a specific representation format for the",
      "ja": "この文書では、SIP CLFのために主張している問題文を概説します。また、ログインが必要SIPヘッダとフィールドの最小セットに関する情報モデルを提供します。この文書は、特定のための表現形式を規定していません"
    },
    {
      "indent": 3,
      "text": "SIP CLF record and, instead, allows other documents to define a representation format. [RFC6873] is an example of a representation format that provides a UTF-8-based logging scheme.",
      "ja": "SIP CLFレコードとは、代わりに、他の文書は、表現形式を定義することができます。 [RFC6873]はUTF-8ベースのロギング方式を提供する表現形式の一例です。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "RFC 3261 [RFC3261] defines additional terms used in this document\nthat are specific to the SIP domain such as \"proxy\"; \"registrar\";\n\"redirect server\"; \"user agent server\" or \"UAS\"; \"user agent client\"\nor \"UAC\"; \"back-to-back user agent\" or \"B2BUA\"; \"dialog\";\n\"transaction\"; \"server transaction\".",
      "raw": true
    },
    {
      "indent": 3,
      "text": "This document uses the term \"SIP server\" that is defined to include the following SIP entities: user agent server, registrar, redirect server, a SIP proxy in the role of user agent server, and a B2BUA in the role of a user agent server.",
      "ja": "ユーザエージェントサーバの役割では、サーバ、ユーザエージェントサーバの役割でSIPプロキシをリダイレクトし、ユーザエージェントサーバ、レジストラ、およびB2BUA：このドキュメントでは、次のSIPエンティティを含むように定義される用語「SIPサーバ」を使用しています。"
    },
    {
      "indent": 0,
      "text": "3. Problem Statement",
      "section_title": true,
      "ja": "3.問題文"
    },
    {
      "indent": 3,
      "text": "The Session Initiation Protocol (SIP) [RFC3261] is an Internet multimedia session signaling protocol. A typical deployment of SIP in an enterprise will consist of SIP entities from multiple vendors. Each SIP entity produces logs using a proprietary format. The result of multiplicity of the log file formats is the inability of the support staff to easily trace a call from one entity to another or even to craft common tools that will perform trend analysis, debugging and troubleshooting problems uniformly across the SIP entities from multiple vendors.",
      "ja": "セッション開始プロトコル（SIP）[RFC3261]は、インターネットマルチメディアセッションのシグナリングプロトコルです。企業におけるSIPの典型的な展開は、複数のベンダーからのSIPエンティティからなります。各SIPエンティティは、独自のフォーマットを使用してログを生成します。ログファイルフォーマットの多様の結果は、サポートスタッフのできないことは簡単に別のエンティティからの呼び出しをトレースしたり、複数のベンダーからのSIPエンティティ間で均一にトレンド分析、デバッグとトラブルシューティングの問題を実行する一般的なツールを作ることです。"
    },
    {
      "indent": 3,
      "text": "Furthermore, the log file must be easily accessible by command-line tools for simple text processing. This allows ad hoc queries against the elements in the log file to retrieve a log record. Furthermore, the log file must be in a format that allows for rapid searches of a particular log record (or records). Because of the large number of records expected in the log file, the records must be in a format that allows for rapid scanning and ease of skipping records that do not match a search criterion. Finally, the generation of the log file must not impose undue burden on the SIP implementation in the form of additional libraries that may not be uniformly available on different platforms and operating environments where a SIP entity generating a log file record may be found.",
      "ja": "また、ログファイルは、単純なテキスト処理のためのコマンドラインツールで簡単にアクセスできなければなりません。これは、ログファイル内の要素に対してアドホッククエリはログレコードを取得することができます。また、ログファイルには、特定のログレコード（またはレコード）の迅速な検索を可能形式でなければなりません。そのため、ログファイルに予想される多数のレコードを、レコードが急速にスキャンし、検索基準に一致しないレコードをスキップを容易にする形式でなければなりません。最後に、ログファイルの生成は、ログファイルのレコードを生成するSIPエンティティは見つけることができる異なるプラットフォームやオペレーティング環境上に均一に利用できない場合があり、追加のライブラリの形でSIPの実装に過度の負担を課さないでなければなりません。"
    },
    {
      "indent": 3,
      "text": "SIP does not currently have a common log format, and this document serves to provide the rationale to establish a SIP CLF and identifies the required minimal information that must appear in any SIP CLF record.",
      "ja": "SIPは現在、共通ログ形式を持っていない、と本書はSIPのCLFを確立するための理論的根拠を提供するためのものであり、任意のSIP CLFレコードに現れなければならない必要最小限の情報を識別します。"
    },
    {
      "indent": 0,
      "text": "4. What SIP CLF Is and What It Is Not",
      "section_title": true,
      "ja": "4.どのようなSIP CLFがあり、それがないもの"
    },
    {
      "indent": 3,
      "text": "The SIP CLF is a standardized manner of producing a log file. This format can be used by SIP clients, SIP servers, proxies, and B2BUAs. The SIP CLF is simply an easily digestible log of currently occurring events and past transactions. It contains enough information to allow humans and automata to derive relationships between discrete transactions handled at a SIP entity or to search for a certain dialog or a related set of transactions.",
      "ja": "SIP CLFは、ログファイルを生成する標準化された方法です。この形式は、SIPクライアント、SIPサーバ、プロキシ、および型B2BUAで使用することができます。 SIP CLFは、単純に現在発生したイベントや過去の取引の簡単に消化ログです。それは人間とオートマトンは、SIPエンティティで取り扱わディスクリート・トランザクション間の関係を導出するか、特定のダイアログやトランザクションの関連セットを検索できるようにするために十分な情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The SIP CLF is amenable to quick parsing (i.e., well-delimited fields), and it is platform and operating system neutral.",
      "ja": "SIP CLFは迅速解析（すなわち、十分に区切られたフィールド）に適している、そしてそれは、プラットフォームおよびオペレーティング・システムに中性です。"
    },
    {
      "indent": 3,
      "text": "Due to the structure imposed by delimited fields, the SIP CLF is amenable to easy parsing and lends itself well to creating other innovative tools such as logfile parsers and trend analytic engines.",
      "ja": "区切られたフィールドによって課された構造のため、SIP CLFは簡単に解析に適しているとよく、このようなログファイルパーサおよび傾向分析エンジンなどの他の革新的なツールを作成するに役立ちます。"
    },
    {
      "indent": 3,
      "text": "The SIP CLF is not a billing tool. It is not expected that enterprises will bill customers based on SIP CLF. The SIP CLF records events at the signaling layer only and does not attempt to correlate the veracity of these events with the media layer. Thus, it cannot be used to trigger customer billing.",
      "ja": "SIP CLFは、課金ツールではありません。企業がSIP CLFに基づいて顧客に請求することが期待されていません。 SIP CLFは、シグナリング層でイベントを記録し、媒体層と、これらのイベントの信憑性を相関しようとしません。このように、顧客請求をトリガするために使用することはできません。"
    },
    {
      "indent": 3,
      "text": "The SIP CLF is not a quality of service (QoS) measurement tool. If QoS is defined as measuring the mean opinion score (MOS) of the received media, then SIP CLF does not aid in this task since it does not summarize events at the media layer.",
      "ja": "SIP CLFは、サービス（QoS）の測定ツールの品質ではありません。 QoSは受信したメディアの平均オピニオン評点（MOS）を測定するように定義されている場合、それはメディア層のイベントを要約していないので、その後、SIP CLFは、この作業を支援しません。"
    },
    {
      "indent": 3,
      "text": "Finally, the SIP CLF is not a tool for supporting lawful intercept.",
      "ja": "最後に、SIP CLFは、合法的傍受をサポートするためのツールではありません。"
    },
    {
      "indent": 0,
      "text": "5. Alternative Approaches to SIP CLF",
      "section_title": true,
      "ja": "SIP CLF 5.代替アプローチ"
    },
    {
      "indent": 3,
      "text": "The sipclf working group discussed four alternative approaches to determine whether they fill the requirements of what is desired of a SIP CLF outlined in Section 3. We conclude that while every scheme discussed below comes with its advantages, its disadvantages may preclude it from being used as a SIP CLF. However, we stress that the information model contained in this document can be used to develop alternative representation formats when desired. Currently, [RFC6873] is an example of a representation format that provides a UTF-8-based logging scheme that meets all the requirements of Section 3.",
      "ja": "私たちは、以下で説明するすべてのスキームは、その利点が付属していながら、その欠点として使用されるのを妨げることと結論第3節で概説しsipclfワーキンググループは、彼らがSIP CLFに望まれているものの要件を満たしかどうかを判断するために4つの代替的なアプローチを議論しましたSIP CLF。しかし、私たちは、この文書に含まれる情報のモデルが必要なときに代替表現形式を開発するために使用することができることを強調します。現在、[RFC6873]は第3のすべての要件を満たしているUTF-8ベースのロギング方式を提供する表現形式の一例です。"
    },
    {
      "indent": 0,
      "text": "5.1. SIP CLF and Call Detail Records",
      "section_title": true,
      "ja": "5.1。 SIP CLFとコール詳細レコード"
    },
    {
      "indent": 3,
      "text": "Call Detail Records (CDRs) are used in operator networks widely and with the adoption of SIP, standardization bodies such as the Third Generation Partnership Project (3GPP) have subsequently defined SIP-related CDRs as well. Today, CDRs are used to implement the functionality approximated by SIP CLF; however, there are important differences.",
      "ja": "コール詳細レコード（CDR）が広くSIPの採用によりオペレータのネットワークで使用されている、そのような第三世代パートナーシッププロジェクト（3GPP）などの標準化団体は、その後も同様にSIP関連のCDRを定義しています。今日では、CDRは、SIP CLFで近似した機能を実装するために使用されています。しかし、重要な違いがあります。"
    },
    {
      "indent": 3,
      "text": "First, SIP CLF operates natively at the transaction layer and maintains enough information in the information elements being logged that dialog-related data can be subsequently derived from the transaction logs. Thus, esoteric SIP fields and parameters like the To header (including tags), the From header (including tags), the Command Sequence (CSeq) number, etc., are logged in SIP CLF. By contrast, a CDR is used mostly for charging and thus saves information to facilitate that very aspect. A CDR will most certainly log the public user identification of a party requesting a service (which may not correspond to the From header) and the public user identification of the party called party (which may not correspond to the To header). Furthermore, the sequence numbers maintained by the CDR may not correspond to the SIP CSeq header. Thus, it will be hard to piece together the state of a dialog through a sequence of CDR records.",
      "ja": "まず、SIP CLFは、トランザクション層でネイティブに動作し、ダイアログに関連したデータは、その後、トランザクション・ログから導出することができることをログに記録される情報要素に十分な情報を保持します。したがって、のような難解なSIPフィールドとパラメータ等、コマンドシーケンス（のCSeq）番号、（タグを含む）ヘッダから、SIP CLFに記録され、（タグを含む）ヘッダします。対照的に、CDRは、充電のために主に使用され、従って、非常にアスペクトを容易にするための情報を保存しています。 CDRは、最も確か（Fromヘッダに対応しない場合もある）サービスと（Toヘッダに対応していなくてもよい）当事者被呼者の公開ユーザ識別を要求する当事者の公開ユーザ識別情報を記録します。さらに、CDRによって維持シーケンス番号は、SIPのCSeqヘッダに対応していなくてもよいです。したがって、CDRレコードのシーケンスを、ダイアログの状態をつなぎ合わせるのは難しいだろう。"
    },
    {
      "indent": 3,
      "text": "Second, a CDR record will, in all probability, be generated at a SIP entity performing some form of proxy-like functionality of a B2BUA providing some service. By contrast, SIP CLF is lightweight enough that it can be generated by a canonical SIP user agent server and user agent client as well, including those that execute on resource constrained devices (mobile phones).",
      "ja": "第二に、CDRレコードは、すべての確率で、いくつかのサービスを提供するB2BUAのプロキシのような機能のいくつかのフォームを実行するSIPエンティティで生成されます。これとは対照的に、SIP CLFは、リソース制約のあるデバイス（携帯電話）上で実行するものを含め、同様に標準的なSIPユーザエージェントサーバとユーザエージェントクライアントによって生成することができることを十分に軽量です。"
    },
    {
      "indent": 3,
      "text": "Finally, SIP is also being deployed outside of operator-managed Voice over IP (VoIP) networks. Universities, research laboratories, and small-to medium-sized companies are deploying SIP-based VoIP solutions on networks owned and managed by them. Many of the latter constituencies will not have an interest in generating CDRs, but they will like to have a concise representation of the messages being handled by the SIP entities in a common format.",
      "ja": "最後に、SIPは、オペレータが管理ボイスオーバーIP（VoIP）のネットワークの外で展開されています。大学、研究機関、および小規模から中規模の企業は、彼らが所有し、管理ネットワーク上のSIPベースのVoIPソリューションを展開しています。後者の選挙の多くは、CDRを生成することに関心を持っていないだろうが、彼らは共通のフォーマットでSIPエンティティによって処理されるメッセージの簡潔な表現を持つことが好きになるでしょう。"
    },
    {
      "indent": 0,
      "text": "5.2. SIP CLF and Packet Capture Tools",
      "section_title": true,
      "ja": "5.2。 SIP CLFとパケットキャプチャツール"
    },
    {
      "indent": 3,
      "text": "Wireshark and tcpdump are popular raw packet capture tools. Wireshark even contains filters that can understand SIP at the protocol level and break down a captured message into its individual header components. While packet capture tools are appropriate to capture and view discrete SIP messages, they do not suffice to serve in the same capacity as SIP CLF for the following reasons: o Using packet capturing tools will not eliminate the need for agreeing to a common set of fields to represent a SIP CLF record. This common understanding is important for interoperability to allow one implementation to read a log file written by a different implementation.",
      "ja": "Wiresharkのとtcpdumpが人気の生のパケットキャプチャツールです。 Wiresharkのも、プロトコルレベルでSIPを理解し、その個々のヘッダ・コンポーネントに取り込まメッセージを打破することができるフィルタを含んでいます。パケットキャプチャツールは個別のSIPメッセージをキャプチャして表示することが適切であるが、それらは次の理由でSIP CLFと同じ容量で提供するために十分ではありません：パケットキャプチャツールを使用してoをフィールドの共通セットに同意の必要性を排除しないだろうSIP CLFレコードを表します。この共通の理解は、一つの実施は、異なる実装によって書き込まれたログファイルを読み取ることができるようにする相互運用性のために重要です。"
    },
    {
      "indent": 3,
      "text": "o The packet capture from these tools is not easily searchable by simple command-line tools for text processing.",
      "ja": "Oこれらのツールからのパケットキャプチャは、テキスト処理のための簡単なコマンドラインツールで簡単に検索できません。"
    },
    {
      "indent": 3,
      "text": "o  Using packet capture tools requires that the underlying libraries\n   related to packet capture be available for all platforms on which\n   a SIP server or a SIP client can execute.  Given the different\n   platforms on which a SIP client or server runs --- mobile, fixed\n   host, tablet, etc. --- this may become an inhibiting factor when\n   compared to the SIP client or server producing a SIP CLF record\n   natively (the SIP client or server has already parsed the SIP\n   message for operation on it; therefore, it seems reasonable to\n   have it write the parsed tokens out to persistent store in an\n   agreed upon format).",
      "raw": true
    },
    {
      "indent": 3,
      "text": "o If SIP messages are exchanged over a secure transport (TLS) packet, capture tools will be unable to decrypt them and render them as individual SIP headers.",
      "ja": "SIPメッセージは、セキュアなトランスポート（TLS）パケット上で交換されている場合は、O、キャプチャツールは、それらを復号化し、個々のSIPヘッダーとしてそれらをレンダリングすることができません。"
    },
    {
      "indent": 3,
      "text": "o Using such tools and related packet capture libraries may imposes a dependency on a third-party library.",
      "ja": "サードパーティのライブラリへの依存を課して、そのようなツールおよび関連するパケットキャプチャライブラリを使用して、O。"
    },
    {
      "indent": 0,
      "text": "5.3. SIP CLF and Syslog",
      "section_title": true,
      "ja": "5.3。 SIP CLFとのSyslog"
    },
    {
      "indent": 3,
      "text": "The syslog protocol [RFC5424] conveys event notification messages from an originator to a collector. While the syslog protocol provides a packet format and transport mechanism, it does not describe any storage format for syslog messages. Pragmatically, while the syslog protocol itself does not describe a storage format, the collector will write the arriving messages into a disk file. A new problem arises due to the general nature of syslog: the disk file will contain log messages from many originators, not just SIP entities. This imposes an additional burden of discarding all extraneous records when analyzing the disk file for SIP CLF records of interest. SIP CLF records are best stored in a log file that is easily searchable by command-line tools.",
      "ja": "syslogプロトコル[RFC5424]はコレクタへの発信者からのイベント通知メッセージを伝達します。 syslogプロトコルは、パケットフォーマットおよびトランスポート機構を提供していますが、それは、syslogメッセージのいずれかの保存形式を説明していません。 syslogプロトコル自体は保存形式を記載していないながら実践的、コレクタは、ディスクファイルに到着したメッセージを書き込みます。新しい問題は、syslogの一般的な性質に起因して生じる：ディスク・ファイルには、多くのオリジネーターだけではなく、SIPエンティティからのログメッセージが含まれます。これは、関心のSIP CLFレコードのディスク・ファイルを分析する際に、すべての余分なレコードを廃棄する追加的な負担を課します。 SIP CLFレコードは最高のコマンドラインツールで簡単に検索可能なログファイルに保存されます。"
    },
    {
      "indent": 3,
      "text": "Other drawbacks of using syslog include the unavailability of the collector under certain scenarios (a mobile SIP phone may be unable to find a collector to which it should send the messages), and the need to have syslog-specific libraries available for each platform on which the SIP server or the SIP client can execute. Finally, because of the frequency and size of SIP log messages, it is not desirable to send every SIP CLF log message to the collector. Instead, a judicious use of syslog could be that only certain events -- those that are pertinent from a network situational awareness perspective, or those that include a periodic statistical summary of the messages processed -- are sent to the collector.",
      "ja": "syslogを使用する他の欠点は、特定のシナリオの下でコレクタの使用不能（携帯SIP電話は、それがメッセージを送信する先のコレクターを見つけることができない場合があります）、そして上の各プラットフォームで使用できるのsyslog-固有のライブラリを持っている必要がありますが含まれますSIPサーバまたはSIPクライアントを実行することができます。最後に、理由はSIPログメッセージの頻度およびサイズで、コレクタに、すべてのSIP CLFログメッセージを送信することは望ましくありません。ネットワーク状況認識の観点から適切なもの、または処理されたメッセージの定期的な統計情報の要約を含むもの -   - コレクタに送信された代わりに、syslogのの賢明な使用は、特定のイベントだけがいる可能性があります。"
    },
    {
      "indent": 0,
      "text": "5.4. SIP CLF and IPFIX",
      "section_title": true,
      "ja": "5.4。 SIP CLFとIPFIX"
    },
    {
      "indent": 3,
      "text": "The IP Flow Information Export (IPFIX) protocol [RFC5101] allows network administrators to aggregate IP packets characterized by some commonality (similar packet header fields, one or more characteristics of the packet itself) into a flow that can be subsequently collected and sent to other elements for analysis and monitoring. However, IPFIX is not a logging format and does not produce a log file that can be examined by ad hoc text processing tools.",
      "ja": "IPフロー情報エクスポート（IPFIX）プロトコル[RFC5101]は、ネットワーク管理者は、その後収集し、他に送信することができるフローにいくつかの共通点（同様のパケットヘッダフィールド、パケット自体の1つのまたは複数の特性）によって特徴付けられるIPパケットを集約することができ分析とモニタリングのための要素。しかし、IPFIXはログ形式ではなく、アドホックテキスト処理ツールで調べることができるログファイルを生成しません。"
    },
    {
      "indent": 0,
      "text": "6. Motivation and Use Cases",
      "section_title": true,
      "ja": "6.動機と使用事例"
    },
    {
      "indent": 3,
      "text": "As SIP becomes pervasive in multiple business domains and ubiquitous in academic and research environments, it is beneficial to establish a CLF for the following reasons:",
      "ja": "SIPは、複数の事業領域に浸透し、学術・研究環境におけるユビキタスになると、次の理由でCLFを確立することは有益です。"
    },
    {
      "indent": 3,
      "text": "Common reference for interpreting events: In a laboratory environment or an enterprise service offering, there will typically be SIP entities from multiple vendors participating in routing requests. Absent a common log format, each entity will produce output records in a native format, making it hard to establish commonality for tools that operate on the log file.",
      "ja": "イベントを解釈するための共通の基準は：実験室の環境や企業のサービス提供では、典型的には、ルーティング要求に参加する複数のベンダーからのSIPエンティティが存在します。共通ログ形式不在、各エンティティは、それが難しいのログファイルを操作するツールのための共通性を確立すること、ネイティブフォーマットで出力レコードが生成されます。"
    },
    {
      "indent": 3,
      "text": "Writing common tools: A common log format allows independent tool providers to craft tools and applications that interpret the CLF data to produce insightful trend analysis and detailed traffic reports. The format should be such that it retains the ability to be read by humans and processed using traditional Unix text processing tools.",
      "ja": "一般的なツールを書く：共通ログ形式は、洞察力の傾向分析と詳細なトラフィックレポートを生成するためにCLFデータを解釈クラフトツールやアプリケーションに依存しないツールプロバイダを可能にします。フォーマットは、それが人間によって読み取られ、伝統的なUnixテキスト処理ツールを使用して処理する能力を保持するようなものであるべきです。"
    },
    {
      "indent": 3,
      "text": "Session correlation across diverse processing elements: In operational SIP networks, a request will typically be processed by more than one SIP server. A SIP CLF will allow the network operator to trace the progression of the request (or a set of requests) as they traverse through the different servers to establish a concise diagnostic trail of a SIP session.",
      "ja": "多様な処理要素間でセッション相関：動作SIPネットワークでは、要求は、典型的には、複数のSIPサーバによって処理されます。それらはSIPセッションの簡潔な診断トレイルを確立するために、異なるサーバを横断としてSIP CLFは、ネットワークオペレータが要求（または要求のセット）の進行を追跡することを可能にします。"
    },
    {
      "indent": 12,
      "text": "Note that tracing the request through a set of servers is\nconsiderably less challenging if all the servers belong to\nthe same administrative domain.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Message correlation across transactions: A SIP CLF can enable a quick lookup of all messages that comprise a transaction (e.g., \"Find all messages corresponding to server transaction X, including all forked branches.\").",
      "ja": "トランザクション間のメッセージの相関：SIP CLF（例えば、「すべてのフォーク支店を含むサーバーのトランザクションXに対応したすべてのメッセージを、検索」）トランザクションを構成するすべてのメッセージの迅速な検索を可能にすることができます。"
    },
    {
      "indent": 3,
      "text": "Message correlation across dialogs: A SIP CLF can correlate transactions that comprise a dialog (e.g., \"Find all messages for dialog created by Call-ID C, From tag F and To tag T.\").",
      "ja": "ダイアログ全体でメッセージ相関：SIP CLF（例えば、「タグFからのCall-ID C、によって作成されたダイアログのすべてのメッセージを検索し、T.にタグを付けるには」）ダイアログを構成するトランザクションを関連付けることができます。"
    },
    {
      "indent": 3,
      "text": "Trend analysis: A SIP CLF allows an administrator to collect data and spot patterns or trends in the information (e.g., \"What is the domain where the most sessions are routed to between 9:00 AM and 1:00 PM?\").",
      "ja": "トレンド分析は：SIP CLFは、管理者がデータを収集し、情報のパターンや傾向を発見することができます（例えば、「ほとんどのセッションは午前9:00と午後1:00の間にルーティングされているドメインとは何ですか？」）。"
    },
    {
      "indent": 3,
      "text": "Train anomaly detection systems: A SIP CLF will allow for the training of anomaly detection systems that once trained can monitor the CLF file to trigger an alarm on the subsequent deviations from accepted patterns in the data set. Currently, anomaly detection systems monitor the network and parse raw packets that comprise a SIP message -- a process that is unsuitable for anomaly detection systems [rieck2008]. With all the necessary event data at their disposal, network operations managers and information technology operation managers are in a much better position to correlate, aggregate, and prioritize log data to maintain situational awareness.",
      "ja": "列車の異常検知システム：SIP CLFは、一度データセットの受け入れパターンの中から、その後の逸脱のアラームをトリガするためにCLFファイルを監視することができます訓練を受けた異常検知システムのトレーニングが可能になります。現在、異常検出システムは、ネットワークを監視し、SIPメッセージを含む生パケット解析 - 異常検出システム[rieck2008]には不向きであるプロセス。彼らの処分ですべての必要なイベントデータを使用すると、ネットワーク運用管理者、情報技術の運用管理者は、相関、集約、および状況認識を維持するために、ログデータの優先順位を決定するためにはるかに良い位置にあります。"
    },
    {
      "indent": 3,
      "text": "Testing: A SIP CLF allows for automatic testing of SIP equipment by writing tools that can parse a SIP CLF file to ensure behavior of a device under test.",
      "ja": "テスト：SIP CLFは、被試験デバイスの動作を保証するために、SIP CLFファイルを解析できるツールを書き込むことによって、SIP機器の自動テストが可能になります。"
    },
    {
      "indent": 3,
      "text": "Troubleshooting: A SIP CLF can enable cursory troubleshooting of a SIP entity (e.g., \"How long did it take to generate a final response for the INVITE associated with Call-ID X?\").",
      "ja": "トラブルシューティング：SIP CLFは、SIPエンティティのぞんざいなトラブルシューティングを可能にすることができます（たとえば、「Call-IDをXに関連したINVITEのためにどのくらい時間が最終的な応答を生成するためにかかりましたか？」）。"
    },
    {
      "indent": 3,
      "text": "Offline analysis: A SIP CLF allows for offline analysis of the data gathered. Once a SIP CLF file has been generated, it can be transported (subject to the security considerations in Section 10) to a host with appropriate computing resources to perform subsequent analysis.",
      "ja": "オフライン分析：SIP CLFは、収集したデータのオフライン解析が可能になります。 SIP CLFファイルが生成されると、その後の分析を実行するための適切なコンピューティングリソースを使用するホストに（セクション10のセキュリティの考慮の対象）に搬送することができます。"
    },
    {
      "indent": 3,
      "text": "Real-time monitoring: A SIP CLF allows administrators to visually notice the events occurring at a SIP entity in real-time providing accurate situational awareness.",
      "ja": "リアルタイム監視：SIP CLFを視覚的に管理者が正確な状況認識を提供するリアルタイムでSIPエンティティで発生するイベントに気づくことができます。"
    },
    {
      "indent": 0,
      "text": "7. Challenges in Establishing a SIP CLF",
      "section_title": true,
      "ja": "SIP CLFの確立7.挑戦"
    },
    {
      "indent": 3,
      "text": "Establishing a CLF for SIP is a challenging task. The behavior of a SIP entity is more complex when compared to the equivalent HTTP entity.",
      "ja": "SIPのためのCLFを確立することは困難な作業です。等価HTTPエンティティと比較した場合、SIPエンティティの挙動はより複雑です。"
    },
    {
      "indent": 3,
      "text": "Base protocol services such as parallel or serial forking elicit multiple final responses. Ensuing delays between sending a request and receiving a final response all add complexity when considering what fields should comprise a CLF and in what manner. Furthermore, unlike HTTP, SIP groups multiple discrete transactions into a dialog, and these transactions may arrive at a varying inter-arrival rate at a proxy. For example, the BYE transaction usually arrives much after the corresponding INVITE transaction was received, serviced, and expunged from the transaction list. Nonetheless, it is advantageous to relate these transactions such that automata or a human monitoring the log file can construct a set consisting of related transactions.",
      "ja": "このようなパラレルまたはシリアルフォーキングのようなベース・プロトコル・サービスは、複数の最終的な応答を誘発します。リクエストを送信すると、フィールドはCLFを含み、どのようにしなければならないものを考えるとき、最終的な応答は、すべての複雑さを加える受信の間の遅延をそれに続きます。また、ダイアログにHTTP、SIPグループ複数の個別のトランザクションとは異なり、これらの取引は、プロキシにおける変化到着レートで到着することができます。例えば、BYEトランザクションは、通常、対応するINVITEトランザクションは、受信サービス、およびトランザクションリストから抹消されたずっと後に到着しました。それにもかかわらず、オートマトンまたはログファイルを監視する人間が関連する取引からなるセットを構築することができるように、これらの取引に関連することが有利です。"
    },
    {
      "indent": 3,
      "text": "ACK requests in SIP need careful consideration as well. In SIP, an ACK is a special method that is associated with an INVITE only. It does not require a response; furthermore, if it is acknowledging a non-2xx response, then the ACK is considered part of the original INVITE transaction. If it is acknowledging a 2xx-class response, then the ACK is a separate transaction consisting of a request only (i.e., there is not a response for an ACK request). CANCEL is another method that is tied to an INVITE transaction, but unlike ACK, the CANCEL request elicits a final response.",
      "ja": "SIPにおけるACKリクエストにも慎重に検討する必要があります。 SIPにおいては、ACKは、INVITEに関連付けられている特別な方法です。これは、応答を必要としません。それは2xx以外の応答を認めている場合は、さらに、その後、ACKは、元のINVITEトランザクションの一部と考えられています。それは2XXクラスの応答を承認された場合、ACKのみ（すなわち、ACK要求に対する応答がない）リクエストから成る別のトランザクションです。 CANCEL INVITEトランザクションに結び付けられているもう一つの方法であるが、ACKとは異なり、CANCEL要求は、最終的な応答を誘発します。"
    },
    {
      "indent": 3,
      "text": "While most requests elicit a response immediately, the INVITE request in SIP can remain in a pending state at a proxy as it forks branches downstream or at a user agent server while it alerts the user. [RFC3261] instructs the server transaction to send a 1xx-class provisional response if a final response is delayed for more than 200 ms. A SIP CLF log file needs to include such provisional responses because they help train automata associated with anomaly detection systems and provide some positive feedback for a human observer monitoring the log file.",
      "ja": "最もリクエストはすぐに応答を惹起しながら、それがユーザーに警告しながら、SIPにおけるINVITEリクエストは、下流またはユーザエージェントサーバでそれフォーク支店としてプロキシで保留状態のままにすることができます。 [RFC3261]は、最終的な応答は、200以上のミリ秒遅延した場合の1xxクラス暫定応答を送信するサーバトランザクションを指示します。彼らは異常検知システムに関連した列車のオートマトンを支援し、ログファイルを監視し、人間の観察者のためのいくつかの肯定的なフィードバックを提供するため、SIP CLFログファイルには、暫定応答を含める必要があります。"
    },
    {
      "indent": 3,
      "text": "Finally, beyond supporting native SIP actors such as proxies, registrars, redirect servers, and user agent servers (UASs), it is beneficial to derive a common log format that supports B2BUA behavior, which may vary considerably depending on the specific nature of the B2BUA.",
      "ja": "最後に、プロキシ、レジストラ、リダイレクトサーバ、およびユーザエージェントサーバ（のUAS）などのネイティブSIPの助演を超え、B2BUAの特定の性質に応じてかなり変化することができるB2BUAの挙動をサポートする共通ログフォーマットを導出することが有益です。"
    },
    {
      "indent": 0,
      "text": "8. Information Model",
      "section_title": true,
      "ja": "8.情報モデル"
    },
    {
      "indent": 3,
      "text": "This document defines the mandatory fields that MUST occur in a SIP CLF record. The maximum size (in number of bytes) for a SIP CLF field is 4096 bytes. This limit is the same regardless of whether the SIP CLF field is a meta-field (see \"Timestamp\" and \"Directionality\" defined below) or a normal SIP header. If the body of the SIP message is to be logged, it MUST conform to this limit as well.",
      "ja": "この文書では、SIP CLFレコードで発生しなければならない必須フィールドを定義します。 SIP CLFフィールドの最大サイズ（バイト数）が4096バイトです。この制限にかかわらず、SIP CLFフィールドはメタフィールド（「タイムスタンプ」と「方向性」は、以下に定義を参照）または通常のSIPヘッダであるかどうかと同じです。 SIPメッセージの本体が記録される場合、それは同様に、この制限に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "SIP bodies may contain characters that do not form a valid UTF-8 sequence. As such, the logging of bodies requires understanding trade-offs with respect to a specific logging format to determine if the body can be logged as is or some encoding will be required. The specific syntax and semantics used to log SIP bodies MUST be defined by the specific representation format document used to generate the SIP CLF record.",
      "ja": "SIP本体は有効なUTF-8シーケンスを形成しない文字が含まれていてもよいです。このように、体のロギングは、身体であるか、またはいくつかの符号化が要求されるように記録されることができるかどうかを決定するために、特定のログフォーマットに対する理解トレードオフを必要とします。 SIPボディを記録するために使用される特定の構文とセマンティクスはSIP CLFレコードを生成するために使用される特定の表現形式の文書で定義されなければなりません。"
    },
    {
      "indent": 3,
      "text": "The information model supports extensibility by providing the capability to log \"optional fields\". Optional fields are those SIP header fields (or field components) that are not mandatory (see Section 8.1 for the mandatory field list). Optional fields may contain SIP headers or other elements present in a SIP message (for example, the Reason-Phrase element from the Status-Line production rule in RFC 3261 [RFC3261]). Optional fields may also contain additional information that a particular vendor desires to log. The specific syntax and semantics to be accorded to optional fields MUST be defined by the specific representation format used to generate the SIP CLF record.",
      "ja": "情報モデルは、「オプションのフィールド」をログに記録する機能を提供することにより、拡張性をサポートしています。オプションのフィールドは、（必須フィールドのリストについては、セクション8.1を参照のこと）は必須ではないそれらのSIPヘッダフィールド（またはフィールド成分）です。オプションフィールドは、SIPヘッダまたは（例えば、RFC 3261におけるステータスラインの生成規則から理由フレーズ要素[RFC3261]）SIPメッセージ内に存在する他の元素を含んでいてもよいです。オプションのフィールドは、特定のベンダーがログに記録することを希望する追加情報が含まれていてもよいです。オプションフィールドに従うべき特定の構文およびセマンティクスは、SIP CLFレコードを生成するために使用される特定の表現形式によって定義されなければなりません。"
    },
    {
      "indent": 0,
      "text": "8.1. SIP CLF Mandatory Fields",
      "section_title": true,
      "ja": "8.1。 SIP CLF必須フィールド"
    },
    {
      "indent": 3,
      "text": "The following SIP CLF fields are defined as the minimal information that MUST appear in any SIP CLF record:",
      "ja": "以下のSIP CLFフィールドは任意のSIP CLFレコードに現れなければならない最低限の情報として定義されています。"
    },
    {
      "indent": 3,
      "text": "Timestamp: Date and time of the request or response represented as the number of seconds and milliseconds since the Unix epoch.",
      "ja": "タイムスタンプ：Unixエポックからの秒とミリ秒数として表され、要求や応答の日付と時刻。"
    },
    {
      "indent": 3,
      "text": "Message type: An indicator of whether the SIP message is a request or a response. The allowable values for this field are 'R' (for Request) and 'r' (for response).",
      "ja": "メッセージタイプ：SIPメッセージが要求または応答であるかどうかの指標。このフィールドの許容値は、（要求用）「R」及び（応答に対する）「R」です。"
    },
    {
      "indent": 3,
      "text": "Directionality: An indicator of whether the SIP message is received by the SIP entity or sent by the SIP entity. The allowable values for this field are 's' (for message sent) and 'r' (for message received).",
      "ja": "方向性：SIPメッセージがSIPエンティティによって受信またはSIPエンティティによって送信されるかどうかのインジケータ。このフィールドの許容値は、（送信されたメッセージのための）「S」および「R」（メッセージを受信した）です。"
    },
    {
      "indent": 3,
      "text": "Transport: The transport over which a SIP message is sent or received. The allowable values for the transport are governed by the \"transport\" production rule in Section 25.1 of RFC 3261 [RFC3261].",
      "ja": "輸送：SIPメッセージが送信または受信されている上搬送。輸送のための許容値は、RFC 3261 [RFC3261]のセクション25.1に「輸送」の生成規則によって支配されています。"
    },
    {
      "indent": 3,
      "text": "Source-address: The IPv4 or IPv6 address of the sender of the SIP message.",
      "ja": "ソースアドレス：SIPメッセージの送信元のIPv4またはIPv6アドレス。"
    },
    {
      "indent": 3,
      "text": "Source-port: The source port number of the sender of the SIP message.",
      "ja": "ソースポート：SIPメッセージの送信者の送信元ポート番号。"
    },
    {
      "indent": 3,
      "text": "Destination-address: The IPv4 or IPv6 address of the recipient of the SIP message.",
      "ja": "宛先アドレス：SIPメッセージの受信者のIPv4またはIPv6アドレス。"
    },
    {
      "indent": 3,
      "text": "Destination-port: The port number of the recipient of the SIP message.",
      "ja": "宛先ポート：SIPメッセージの受信者のポート番号。"
    },
    {
      "indent": 3,
      "text": "From: The From URI. For the sake of brevity, URI parameters should not be logged.",
      "ja": "From：URIから。簡潔にするために、URIパラメータが記録されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "From tag: The tag parameter of the From header.",
      "ja": "タグから：Fromヘッダのタグパラメータ。"
    },
    {
      "indent": 3,
      "text": "To: The To URI. For the sake of brevity, URI parameters should not be logged.",
      "ja": "To：URIへ。簡潔にするために、URIパラメータが記録されるべきではありません。"
    },
    {
      "indent": 3,
      "text": "To tag: The tag parameter of the To header. Note that the tag parameter will be absent in the initial request that forms a dialog.",
      "ja": "タグ付けするには、Toヘッダのタグパラメータ。 tagパラメータがダイアログを形成初期の要求には存在しないだろうことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Callid: The Call-ID.",
      "ja": "Callid：コールID。"
    },
    {
      "indent": 3,
      "text": "CSeq-Method: The method from the CSeq header.",
      "ja": "CSeq-方法：のCSeqヘッダから方法。"
    },
    {
      "indent": 3,
      "text": "CSeq-Number: The number from the CSeq header.",
      "ja": "CSeq-番号：のCSeqヘッダから数。"
    },
    {
      "indent": 3,
      "text": "R-URI: The Request-URI, including any URI parameters.",
      "ja": "R-URI：任意のURIパラメータを含む要求URI、。"
    },
    {
      "indent": 3,
      "text": "Status: The SIP response status code.",
      "ja": "ステータス：SIP応答ステータスコード。"
    },
    {
      "indent": 3,
      "text": "SIP proxies may fork, creating several client transactions that correlate to a single server transaction. Responses arriving on these client transactions or new requests (CANCEL, ACK) sent on the client transaction need log file entries that correlate with a server transaction. Similarly, a B2BUA may create one or more client transactions in response to an incoming request. These transactions will require correlation as well. The last two information model elements provide this correlation.",
      "ja": "SIPプロキシは、単一のサーバートランザクションに相関複数のクライアントのトランザクションを作成し、フォークがあります。クライアントトランザクションに送信され、これらの顧客取引または新しい要求に到着応答は（、ACKをCANCEL）サーバートランザクションと相関ファイルのエントリをログに記録する必要があります。同様に、B2BUAは、着信要求に応じて1つ以上のクライアント・トランザクションを作成することができます。これらの取引は、同様の相関関係が必要になります。最後の二つの情報モデル要素は、この相関関係を提供しています。"
    },
    {
      "indent": 3,
      "text": "Server-Txn: Server transaction identification code - the transaction identifier associated with the server transaction. Implementations can reuse the server transaction identifier (the topmost branch-id of the incoming request, with or without the magic cookie), or they could generate a unique identification string for a server transaction (this identifier needs to be locally unique to the server only). This identifier is used to correlate ACKs and CANCELs to an INVITE transaction; it is also used to aid in forking as explained later in this section. (See Section 9 for usage.)",
      "ja": "サーバTXN：サーバトランザクション識別コード - サーバトランザクションに関連付けられたトランザクション識別子。この識別子は、サーバにローカルで一意である必要があります（実装は（マジッククッキーの有無にかかわらず、着信要求の一番上の枝-ID、）サーバーのトランザクション識別子を再利用することができ、またはそれらをサーバートランザクションのための固有の識別文字列を生成することができる唯一の）。この識別子は、ACKを関連付けるために使用し、INVITEトランザクションにCANCELしています。また、このセクションで後述するようにフォークを支援するために使用されています。 （使用方法については、セクション9を参照してください。）"
    },
    {
      "indent": 3,
      "text": "Client-Txn: Client transaction identification code - this field is used to associate client transactions with a server transaction for forking proxies or B2BUAs. Upon forking, implementations can reuse the value they inserted into the topmost Via header's branch parameter, or they can generate a unique identification string for the client transaction. (See Section 9 for usage.)",
      "ja": "クライアントTXN：クライアントのトランザクション識別コード - このフィールドは、プロキシまたは型B2BUAをフォークするサーバトランザクションにクライアントトランザクションを関連付けるために使用されます。フォークの際に、実装は、最上位のViaヘッダーの分岐パラメータに挿入された値を再利用することができ、またはそれらをクライアント・トランザクションのための固有の識別文字列を生成することができます。 （使用方法については、セクション9を参照してください。）"
    },
    {
      "indent": 3,
      "text": "This information model applies to all SIP entities --- a UAC, UAS,\nproxy, B2BUA, registrar, and redirect server.  The SIP CLF fields\nprescribed for a proxy are equally applicable to the B2BUA.\nSimilarly, the SIP CLF fields prescribed for a UAS are equally\napplicable to registrars and redirect servers.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The next section specifies the individual SIP CLF information model elements that form a log record for specific instances of a SIP entity. It is understood that a SIP CLF record is extensible using extension mechanisms appropriate to the specific representation used to generate the SIP CLF record. This document, however, does not prescribe a specific representation format, and it limits the discussion to the mandatory data elements described above.",
      "ja": "次のセクションでは、SIPエンティティの特定のインスタンスのログレコードを形成する個々のSIP CLF情報モデル要素を指定します。 SIP CLFレコードがSIP CLFレコードを生成するために使用される特定の表現に適した拡張メカニズムを使用して拡張可能であることが理解されます。この文書では、しかし、特定の表現形式を規定しない、そしてそれは、上述した必須のデータ要素に議論を限定します。"
    },
    {
      "indent": 0,
      "text": "8.2. Mandatory Fields and SIP Entities",
      "section_title": true,
      "ja": "8.2。必須フィールド、およびSIPエンティティ"
    },
    {
      "indent": 3,
      "text": "Each SIP CLF record must contain all the mandatory information model elements outlined in Section 8.1. This document does not specify a representation of a logging format; it is expected that other documents will do so.",
      "ja": "各SIP CLFレコードは、8.1節で概説したすべての必須情報モデル要素を含んでいなければなりません。この文書では、ログ形式の表現を指定していません。他の文書がそうすることが期待されます。"
    },
    {
      "indent": 3,
      "text": "An element may not always have an appropriate value to provide for one of these fields, for example, the R-URI field is not applicable when logging a response, the Status field is not applicable when logging a request, the To tag is not known when a request is first sent out, etc. As all the mandatory fields are required to appear in the SIP CLF record, the representation document MUST define how to indicate a field that is not applicable in the context that the SIP",
      "ja": "要素常に応答をログに記録するときに、これらのフィールドのいずれかを提供するために適切な値は、例えば、R-URIフィールドが適用されない要求をログに記録するとき、Statusフィールドが適用されない持っていない可能性があり、タグには知られていません要求は、最初にすべての必須フィールドがSIP CLFレコードに表示されるように要求されているとして、表現文書は、そのSIPコンテキストでは適用されないフィールドを示すために、どのように定義しなければならないなど、送り出されたとき"
    },
    {
      "indent": 3,
      "text": "CLF record was generated. Similarly, to handle parsing errors in a field, the representation document MUST define a means to indicate that a field cannot be parsed.",
      "ja": "CLFレコードが生成されました。同様に、フィールド内のエラーを解析処理するために、表現文書は、フィールドを解析することができないことを示すための手段を定義しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The Client-Txn field is always applicable to a UAC. The Server-Txn field does not apply to a UAC unless the element is also acting as a UAS, and the message associated to this log record corresponds to a message handled by that UAS. For instance, a proxy forwarding a request will populate both the Client-Txn and Server-Txn fields in the record corresponding to the forwarded request.",
      "ja": "クライアントTXNフィールドは常にUACに適用されます。要素はまた、UASとして動作している、このログレコードに関連したメッ​​セージは、そのUASが取り扱うメッセージに対応しない限り、サーバーTXNフィールドは、UACには適用されません。たとえば、要求を転送するプロキシが転送された要求に対応するレコードのクライアント-TXNおよびサーバーTXN両方のフィールドに移入されます。"
    },
    {
      "indent": 3,
      "text": "The Server-Txn field is always applicable to a UAS. The Client-Txn field does not apply to a UAS unless the element is also acting as a UAC, and the message associated to this log record corresponds to a message handled by that UAC. For instance, a proxy forwarding a response will populate both the Server-Txn and Client-Txn fields in the record corresponding to the forwarded response. However, a proxy would only populate the Client-Txn field when creating a log record corresponding to a request.",
      "ja": "サーバーTXNのフィールドは常にUASに適用されます。要素はまた、UACとして動作し、このログレコードに関連したメッ​​セージは、そのUACが取り扱うメッセージに対応しない限り、クライアントTXNフィールドはUASには適用されません。例えば、応答を転送するプロキシが転送された応答に対応するレコード内のサーバー-TXNとクライアントTXN両方のフィールドに移入されます。要求に対応するログレコードを作成するときただし、プロキシはクライアントTXNフィールドを移入します。"
    },
    {
      "indent": 0,
      "text": "9. Examples",
      "section_title": true,
      "ja": "9.例"
    },
    {
      "indent": 3,
      "text": "The examples use only the mandatory data elements defined in Section 8.1. Extension elements are not considered and neither are SIP bodies. When a given mandatory field is not applicable to a SIP entity, we use the horizontal dash (\"-\") to represent it.",
      "ja": "例は、セクション8.1で定義された唯一の必須データ要素を使用します。拡張要素が考慮され、どちらもSIP体であるされていません。それを表現するために - 与えられた必須フィールドは、SIPエンティティには適用されない場合は、我々は水平ダッシュ（「」）を使用します。"
    },
    {
      "indent": 3,
      "text": "There are five principals in the examples below. They are the following: Alice, the initiator of requests. Alice's user agent uses IPv4 address 198.51.100.1, port 5060. P1 is a proxy that Alice's request traverse on their way to Bob, the recipient of the requests. P1 also acts as a registrar to Alice. P1 uses an IPv4 address of 198.51.100.10, port 5060. Bob has two instances of his user agent running on different hosts. The first instance uses an IPv4 address of 203.0.113.1, port 5060 and the second instance uses an IPv6 address of 2001:db8::9, port 5060. P2 is a proxy responsible for Bob's domain. Table 1 summarizes these addresses.",
      "ja": "以下の例では5つのプリンシパルがあります。アリス、リクエストのイニシエータ：彼らは次のとおりです。 Aliceのユーザーエージェントは、IPv4アドレス198.51.100.1を使用して、ポート5060 P1は、ボブ、リクエストの受信者に彼らの方法でそのアリスの要求トラバースプロキシです。 P1はまた、アリスにレジストラとして動作します。 P1は、198.51.100.10のIPv4アドレスを使用して、ポート5060ボブは異なるホスト上で実行されている彼のユーザエージェントの2件のインスタンスがあります。最初のインスタンスは、203.0.113.1のIPv4アドレスを使用するポート5060と第二のインスタンスは、2001年のIPv6アドレスを使用しています：DB8 :: 9、ポート5060 P2は、ボブのドメインを担当するプロキシです。表1は、これらのアドレスをまとめたもの。"
    },
    {
      "indent": 8,
      "text": "+-------------------+--------------------+-------------------+\n| Principal         | IP:port            | Host/Domain name  |\n+-------------------+--------------------+-------------------+\n| Alice             | 198.51.100.1:5060  | alice.example.com |\n| P1                | 198.51.100.10:5060 | p1.example.com    |\n| P2                | 203.0.113.200:5060 | p2.example.net    |\n| Bob UA instance 1 | 203.0.113.1:5060   | bob1.example.net  |\n| Bob UA instance 2 | [2001:db8::9]:5060 | bob2.example.net  |\n+-------------------+--------------------+-------------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Principal to IP Address Assignment",
      "ja": "IPアドレスの割り当てに校長"
    },
    {
      "indent": 34,
      "text": "Table 1",
      "ja": "表1"
    },
    {
      "indent": 3,
      "text": "Illustrative examples of SIP CLF follow.",
      "ja": "SIP CLFの具体例としては以下の通り。"
    },
    {
      "indent": 0,
      "text": "9.1. UAC Registration",
      "section_title": true,
      "ja": "9.1。 UACの登録"
    },
    {
      "indent": 3,
      "text": "Alice sends a registration registrar P1 and receives a 2xx-class response. The register requests causes Alice's UAC to produce a log record shown below.",
      "ja": "アリスは、登録レジストラP1を送信し、2XXクラスの応答を受け取ります。レジスタ要求はアリスのUACは、以下に示すログレコードを生成する原因となります。"
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930743.699\nMessage Type: R\nDirectionality: s\nTransport: udp\nCSeq-Number: 1\nCSeq-Method: REGISTER\nR-URI: sip:example.com\nDestination-address: 198.51.100.10\nDestination-port: 5060\nSource-address: 198.51.100.1\nSource-port: 5060\nTo: sip:example.com\nTo tag: -\nFrom: sip:alice@example.com\nFrom tag: 76yhh\nCall-ID: f81-d4-f6@example.com\nStatus: -\nServer-Txn: -\nClient-Txn: c-tr-1",
      "raw": true
    },
    {
      "indent": 3,
      "text": "After some time, Alice's UAC will receive a response from the registrar. The response causes Alice's agent to produce a log record shown below.",
      "ja": "しばらくすると、アリスのUACは、レジストラからの応答を受信します。応答は、以下に示すログレコードを生成するために、Aliceのエージェントが発生します。"
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930744.100\nMessage Type: r\nDirectionality: r\nTransport: udp\nCSeq-Number: 1\nCSeq-Method: REGISTER\nR-URI: -\nDestination-address: 198.51.100.1\nDestination-port: 5060\nSource-address: 198.51.100.10\nSource-port: 5060\nTo: sip:example.com\nTo tag: reg-1-xtr\nFrom: sip:alice@example.com\nFrom tag: 76yhh\nCall-ID: f81-d4-f6@example.com\nStatus: 100\nServer-Txn: -\nClient-Txn: c-tr-1",
      "raw": true
    },
    {
      "indent": 0,
      "text": "9.2. Direct Call between Alice and Bob",
      "section_title": true,
      "ja": "9.2。アリスとボブの間の直接コール"
    },
    {
      "indent": 3,
      "text": "In this example, Alice sends a session initiation request directly to Bob's agent (instance 1). Bob's agent accepts the session invitation. We first present the SIP CLF logging from the vantage point of Alice's UAC. In line 1, Alice's user agent sends out the INVITE. Shortly, it receives a \"180 Ringing\" (line 2), followed by a \"200 OK\" response (line 3). Upon the receipt of the 2xx-class response, Alice's user agent sends out an ACK request (line 4).",
      "ja": "この例では、アリスは、ボブのエージェント（例えば1）に直接セッション開始要求を送信します。 Bobのエージェントは、セッション招待を受け入れます。私たちは、アリスのUACの視点からSIP CLFログを最初に提示します。 1行目では、Aliceのユーザーエージェントは、INVITEを送信します。まもなく、それは \"200 OK\" 応答（ライン3）、続いて \"180リンギング\"（ライン2）を受信します。 2XXクラスの応答を受信すると、アリスのユーザエージェントは、ACK要求（ライン4）を送出します。"
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930743.699\nMessage Type: R\nDirectionality: s\nTransport: udp\nCSeq-Number: 32\nCSeq-Method: INVITE\nR-URI: sip:bob@bob1.example.net\nDestination-address: 203.0.113.1\nDestination-port: 5060\nSource-address: 198.51.100.1\nSource-port: 5060\nTo: sip:bob@bob1.example.net\nTo tag: -\nFrom: sip:alice@example.com\nFrom tag: 76yhh\nCall-ID: f82-d4-f7@example.com\nStatus: -\nServer-Txn: -\nClient-Txn: c-1-xt6",
      "raw": true
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930745.002 Message Type: r Directionality: r Transport: udp CSeq-Number: 32 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b-in6-iu From: sip:alice@example.com From tag: 76yhh Call-ID: f82-d4-f7@example.com Status: 180 Server-Txn: - Client-Txn: c-1-xt6",
      "ja": "タイムスタンプ：1275930745.002メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：32のCSeq-方法：INVITE R-URI： - 宛先アドレス：198.51.100.1宛先ポート：5060ソースアドレス：203.0.113.1送信元ポート：5060に：SIP：bob@example.netタグに：SIP：alice@example.comタグから：からのB-IN6-IUは、コールID 76yhh：f82-d4-f7@example.comステータス：180サーバー - TXN： - クライアントTXN：C-1-XT6"
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930746.100 Message Type: r Directionality: r Transport: udp CSeq-Number: 32 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b-in6-iu From: sip:alice@example.com From tag: 76yhh Call-ID: f82-d4-f7@example.com Status: 200 Server-Txn: - Client-Txn: c-1-xt6",
      "ja": "タイムスタンプ：1275930746.100メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：32のCSeq-方法：INVITE R-URI： - 宛先アドレス：198.51.100.1宛先ポート：5060ソースアドレス：203.0.113.1送信元ポート：5060に：SIP：bob@example.netタグに：SIP：alice@example.comタグから：からのB-IN6-IUは、コールID 76yhh：f82-d4-f7@example.comステータス：200サーバー - TXN： - クライアントTXN：C-1-XT6"
    },
    {
      "indent": 8,
      "text": "Timestamp: 1275930746.120 Message Type: R Directionality: s Transport: udp CSeq-Number: 32 CSeq-Method: ACK R-URI: sip:bob@bob1.example.net Destination-address: 203.0.113.1 Destination-port: 5060 Source-address: 198.51.100.1 Source-port: 5060 To: sip:bob@example.net To tag: b-in6-iu From: sip:alice@example.com From tag: 76yhh Call-ID: f82-d4-f7@example.com Status: - Server-Txn: - Client-Txn: c-1-xt6",
      "ja": "タイムスタンプ：1275930746.120メッセージタイプ：R方向性：■交通：UDPのCSeq-番号：32のCSeq-方法：ACK R-URI：SIP：bob@bob1.example.net宛先アドレス：203.0.113.1宛先ポート：5060ソース - アドレス：198.51.100.1ソースポート：5060に：SIP：タグにbob@example.net：B-IN6-IUから：SIP：alice@example.comタグから：コールIDを76yhh：F82-D4-F7 @ example.comステータス： - サーバーTXN： - クライアントTXN：C-1-XT6"
    },
    {
      "indent": 0,
      "text": "9.3. Single Downstream Branch Call",
      "section_title": true,
      "ja": "9.3。シングル下流分岐コール"
    },
    {
      "indent": 3,
      "text": "In this example, Alice sends a session invitation request to Bob through proxy P1, which inserts a Record-Route header causing subsequent requests between Alice and Bob to traverse the proxy. The SIP CLF log records appears from the vantage point of P1. The line numbers below refer to Figure 1.",
      "ja": "この例では、アリスは、プロキシを通過するため、アリスとボブの間の後続の要求を引き起こすRecord-Routeヘッダを挿入する、プロキシP1を介してボブにセッション招待要求を送信します。 SIP CLFログレコードP1の視点から表示されます。下の行番号は、図1を参照します。"
    },
    {
      "indent": 8,
      "text": "Alice             P1             Bob\n +---INV--------->|               |  Line 1\n |                |               |\n |<---------100---+               |  Line 2\n |                |               |\n |                +---INV-------->|  Line 3\n |                |               |\n |                |<--------100---+  Line 4\n |                |               |\n |                |<--------180---+  Line 5\n |                |               |\n |<---------180---+               |  Line 6\n |                |               |\n |                |<--------200---+  Line 7\n |                |               |\n |<---------200---+               |  Line 8\n |                |               |\n +---ACK--------->|               |  Line 9\n |                |               |\n |                |---ACK-------->|  Line 10",
      "raw": true
    },
    {
      "indent": 18,
      "text": "Figure 1: Simple Proxy-Aided Call Flow",
      "ja": "図1：単純なプロキシ支援のコールフロー"
    },
    {
      "indent": 3,
      "text": "1 Timestamp: 1275930743.699 Message Type: R Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: sip:bob@example.net Destination-address: 198.51.100.10 Destination-port: 5060 Source-address: 198.51.100.1 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: - Server-Txn: s-x-tr Client-Txn: -",
      "ja": "1つのタイムスタンプ：1275930743.699メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE：SIP：bob@example.net宛先アドレス：198.51.100.10宛先ポート：5060ソース・アドレス：198.51.100.1ソースポート：5060に：SIP：bob@example.netタグに： - から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス： - サーバーTXN：SX-TRクライアントTXN： - "
    },
    {
      "indent": 3,
      "text": "Note that, at this point, P1 has created a server transaction identification code and populated the SIP CLF field Server-Txn with it. P1 has not yet created a client transaction identification code; thus, Client-Txn contains a \"-\".",
      "ja": "なお、この時点で、P1は、サーバトランザクション識別コードを作成し、それをSIP CLFフィールドサーバTXNを移入します。 P1は、まだクライアント・トランザクションの識別コードを作成していません。 「 - 」は、従って、クライアントTXNが含まれています。"
    },
    {
      "indent": 3,
      "text": "2 Timestamp: 1275930744.001 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 198.51.100.10 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 100 Server-Txn: s-x-tr Client-Txn: -",
      "ja": "2タイムスタンプ：1275930744.001メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：198.51.100.10ソース - ポート：5060に：SIP：bob@example.netタグに： - から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：100サーバー-TXN：SX -trクライアントTXN： - "
    },
    {
      "indent": 3,
      "text": "In line 3 below, P1 has created a client transaction identification code for the downstream branch and populated the SIP CLF field Client-Txn.",
      "ja": "下の行3において、P1は下流分岐のクライアントトランザクション識別コードを作成し、SIP CLFフィールドクライアントTXNを移入しています。"
    },
    {
      "indent": 3,
      "text": "3 Timestamp: 1275930744.998 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: sip:bob@bob1.example.net Destination-address: 203.0.113.1 Destination-port: 5060 Source-address: 198.51.100.10 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: - Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "3タイムスタンプ：1275930744.998メッセージタイプ：R方向性：■交通：UDPのCSeq-番号：43のCSeq-方法：INVITE R-URI：SIP：bob@bob1.example.netの宛先アドレス：203.0.113.1宛先ポート：5060ソース-address：198.51.100.10ソースポート：5060に：SIP：bob@example.netタグに： - から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス： - サーバー-TXN：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "4 Timestamp: 1275930745.200 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.10 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 100 Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "4タイムスタンプ：1275930745.200メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.10宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：100サーバーTXN ：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "5 Timestamp: 1275930745.800 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.10 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 180 Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "5タイムスタンプ：1275930745.800メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.10宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：180サーバーTXN ：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "6 Timestamp: 1275930746.009 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 198.51.100.10 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 180 Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "6タイムスタンプ：1275930746.009メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：198.51.100.10ソース - ポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：180サーバーTXN ：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "7 Timestamp: 1275930747.120 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.10 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 200 Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "7タイムスタンプ：1275930747.120メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.10宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：200サーバーTXN ：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "8 Timestamp: 1275930747.300 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 198.51.100.10 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: 200 Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "8タイムスタンプ：1275930747.300メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：198.51.100.10ソース - ポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス：200サーバーTXN ：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "9 Timestamp: 1275930749.100 Message Type: R Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: ACK R-URI: sip:bob@example.net Destination-address: 198.51.100.10 Destination-port: 5060 Source-address: 198.51.100.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: - Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "9タイムスタンプ：1275930749.100メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：ACK R-URI：SIP：bob@example.net宛先アドレス：198.51.100.10宛先ポート：5060ソース・アドレス：198.51.100.1ソースポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：tr-87h@example.comステータス： - サーバー-TXN：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 3,
      "text": "10 Timestamp: 1275930749.100 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: ACK R-URI: sip:bob@bob1.example.net Destination-address: 203.0.113.1 Destination-port: 5060 Source-address: 198.51.100.10 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: al-1 Call-ID: tr-87h@example.com Status: - Server-Txn: s-x-tr Client-Txn: c-x-tr",
      "ja": "10タイムスタンプ：1275930749.100メッセージタイプ：R方向性：■交通：UDPのCSeq-番号：43件のCSeq-方法：ACK R-URI：SIP：bob@bob1.example.netの宛先アドレス：203.0.113.1宛先ポート：5060ソース-address：198.51.100.10ソースポート：5060に：SIP：タグにbob@example.net：B1-1から：SIP：alice@example.comタグから：アル-1のCall-ID：TR-87H例@ .COMステータス： - サーバー-TXN：SX-TRクライアントTXN：CX-TR"
    },
    {
      "indent": 0,
      "text": "9.4. Forked Call",
      "section_title": true,
      "ja": "9.4。フォークされたコール"
    },
    {
      "indent": 3,
      "text": "In this example, Alice sends a session invitation to Bob's proxy, P2. P2 forks the session invitation request to two registered endpoints corresponding to Bob's address-of-record. Both endpoints respond with provisional responses. Shortly thereafter, one of Bob's user agent instances accepts the call, causing P2 to send a CANCEL request to the second user agent. P2 does not Record-Route; therefore, the subsequent ACK request from Alice to Bob's user agent does not traverse through P2 (and is not shown below).",
      "ja": "この例では、アリスはボブのプロキシ、P2へのセッションの招待状を送信します。 P2フォークボブのアドレス・オブ・レコードに対応する2つの登録されたエンドポイントへのセッションの招待要求。両方のエンドポイントは、暫定応答で応答します。その後まもなく、Bobのユーザエージェントインスタンスの一つは、第2のユーザエージェントにCANCELリクエストを送信するためにP2を引き起こして、コールを受け入れます。 P2は、レコードルートをしません。従って、アリスからボブのユーザエージェントに続くACK要求は、P2を横断しない（及び以下に示されていません）。"
    },
    {
      "indent": 3,
      "text": "Figure 2 depicts the call flow.\n                        Bob            Bob\n     Alice      P2   (Instance 1) (Instance 2)\n      +---INV--->|          |         |  Line 1\n      |          |          |         |\n      |<---100---+          |         |  Line 2\n      |          |          |         |\n      |          +---INV--->|         |  Line 3\n      |          |          |         |\n      |          +---INV----+-------->|  Line 4\n      |          |          |         |\n      |          |<---100---+         |  Line 5\n      |          |          |         |\n      |          |<---------+---100---+  Line 6\n      |          |          |         |\n      |          |<---180---+---------+  Line 7\n      |          |          |         |\n      |<---180---+          |         |  Line 8\n      |          |          |         |\n      |          |<---180---+         |  Line 9\n      |          |          |         |\n      |<---180---+          |         |  Line 10\n      |          |          |         |\n      |          |<---200---+         |  Line 11\n      |          |          |         |\n      |<---200---+          |         |  Line 12\n      |          |          |         |\n      |          +---CANCEL-+-------->|  Line 13\n      |          |          |         |\n      |          |<---------+---487---+  Line 14\n      |          |          |         |\n      |          +---ACK----+-------->|  Line 15\n      |          |          |         |\n      |          |<---------+---200---+  Line 16",
      "raw": true
    },
    {
      "indent": 24,
      "text": "Figure 2: Forked Call Flow",
      "ja": "図2：フォークコールフロー"
    },
    {
      "indent": 3,
      "text": "The SIP CLF log appears from the vantage point of P2. The fields logged are shown below; the line numbers refer to Figure 2.",
      "ja": "SIP CLFログは、P2の視点から表示されます。ログインフィールドは以下の通りです。行番号は、図2を参照します。"
    },
    {
      "indent": 3,
      "text": "1 Timestamp: 1275930743.699 Message Type: R Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: sip:bob@example.net Destination-address: 203.0.113.200 Destination-port: 5060 Source-address: 198.51.100.1 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: - Server-Txn: s-1-tr Client-Txn: -",
      "ja": "1つのタイムスタンプ：1275930743.699メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE：SIP：bob@example.net宛先アドレス：203.0.113.200宛先ポート：5060ソース・アドレス：198.51.100.1ソースポート：5060に：SIP：bob@example.netタグに： - から：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス： - サーバーTXN：S-1-TRクライアントTXN： - "
    },
    {
      "indent": 3,
      "text": "2 Timestamp: 1275930744.001 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 100 Server-Txn: s-1-tr Client-Txn: -",
      "ja": "2タイムスタンプ：1275930744.001メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：203.0.113.200ソース - ポート：5060に：SIP：タグにbob@example.net： - から：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：100サーバー-TXN：S -1-TRクライアントTXN： - "
    },
    {
      "indent": 3,
      "text": "3 Timestamp: 1275930744.998 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: sip:bob@bob1.example.net Destination-address: 203.0.113.1 Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: - Server-Txn: s-1-tr Client-Txn: c-1-tr",
      "ja": "3タイムスタンプ：1275930744.998メッセージタイプ：R方向性：■交通：UDPのCSeq-番号：43のCSeq-方法：INVITE R-URI：SIP：bob@bob1.example.netの宛先アドレス：203.0.113.1宛先ポート：5060ソース-address：203.0.113.200ソースポート：5060に：SIP：タグにbob@example.net： - から：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス： - サーバー-TXN：S-1-TRクライアントTXN：C-1-TR"
    },
    {
      "indent": 3,
      "text": "4 Timestamp: 1275930745.500 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: sip:bob@bob2.example.net Destination-address: [2001:db8::9] Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: - From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: - Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "4タイムスタンプ：1275930745.500メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE：SIP：bob@bob2.example.net宛先アドレス：[2001：DB8 :: 9]先-port：5060ソースアドレス：203.0.113.200ソースポート：5060に：SIP：タグにbob@example.net： -  alice@example.comタグから：：：SIPとA1-1のCall-ID：TR- 88h@example.comステータス： - サーバー-TXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "5 Timestamp: 1275930745.800 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1=-1 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com 100 Status: 100 Server-Txn: s-1-tr Client-Txn: c-1-tr",
      "ja": "5タイムスタンプ：1275930745.800メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：タグにbob@example.net：B1 = -1から：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.com 100ステータス：100サーバー-Txn：S-1-TRクライアントTXN：C-1-TR"
    },
    {
      "indent": 3,
      "text": "6 Timestamp: 1275930746.100 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: udp Source-address: [2001:db8::9] Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 100 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "6タイムスタンプ：1275930746.100メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：UDP送信元アドレス：[2001：DB8： ：9]ソースポート：5060に：SIP：bob@example.netタグに：SIP：：からB2-2をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス100サーバーTXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "7 Timestamp: 1275930746.700 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: udp Source-address: [2001:db8::9] Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 180 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "7タイムスタンプ：1275930746.700メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：UDP送信元アドレス：[2001：DB8： ：9]ソースポート：5060に：SIP：bob@example.netタグに：SIP：：からB2-2をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス180サーバーTXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "8 Timestamp: 1275930746.990 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 180 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "8タイムスタンプ：1275930746.990メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：203.0.113.200ソース - ポート：5060に：SIP：bob@example.netタグに：SIP：：からB2-2をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：180サーバーTXN ：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "9 Timestamp: 1275930747.100 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com 100 Status: 180 Server-Txn: s-1-tr Client-Txn: c-1-tr",
      "ja": "9タイムスタンプ：1275930747.100メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：bob@example.netタグに：B1-1をから：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.com 100ステータス：180サーバー - TXN：S-1-TRクライアントTXN：C-1-TR"
    },
    {
      "indent": 3,
      "text": "10 Timestamp: 1275930747.300 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 180 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "10タイムスタンプ：1275930747.300メッセージタイプ：R指向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：203.0.113.200ソース - ポート：5060に：SIP：bob@example.netタグに：SIP：：からB1-1をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：180サーバーTXN ：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "11 Timestamp: 1275930747.800 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: 5060 Source-address: 203.0.113.1 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com 100 Status: 200 Server-Txn: s-1-tr Client-Txn: c-1-tr",
      "ja": "11タイムスタンプ：1275930747.800メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：5060ソース・アドレス：203.0.113.1ソース - ポート：5060に：SIP：bob@example.netタグに：B1-1をから：SIP：alice@example.comタグから：A1-1のCall-ID：tr-88h@example.com 100ステータス：200サーバー - TXN：S-1-TRクライアントTXN：C-1-TR"
    },
    {
      "indent": 3,
      "text": "12 Timestamp: 1275930748.000 Message Type: r Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 198.51.100.1 Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: b1-1 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 200 Server-Txn: s-1-tr Client-Txn: c-1-tr",
      "ja": "12タイムスタンプ：1275930748.000メッセージタイプ：R指向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：198.51.100.1宛先ポート：5060ソース・アドレス：203.0.113.200ソース - ポート：5060に：SIP：bob@example.netタグに：SIP：：からB1-1をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：200サーバーTXN ：S-1-TRクライアントTXN：C-1-TR"
    },
    {
      "indent": 3,
      "text": "13 Timestamp: 1275930748.201 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: CANCEL R-URI: sip:bob@bob2.example.net Destination-address: [2001:db8::9] Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: - Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "13タイムスタンプ：1275930748.201メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：SIP：bob@bob2.example.net宛先アドレス：[2001：DB8 :: 9]先R-URIをCANCEL -port：5060ソースアドレス：203.0.113.200ソースポート：5060に：SIP：bob@example.netタグに：SIP：alice@example.comタグから：からB2-2 A1-1コールID： tr-88h@example.comステータス： - サーバー-TXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "14 Timestamp: 1275930748.300 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: INVITE R-URI: - Destination-address: 203.0.113.200 Destination-port: udp Source-address: [2001:db8::9] Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 487 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "14タイムスタンプ：1275930748.300メッセージタイプ：R方向性：Rトランスポート：UDPのCSeq-番号：43のCSeq-方法：R-URIをINVITE： - 宛先アドレス：203.0.113.200宛先ポート：UDP送信元アドレス：[2001：DB8： ：9]ソースポート：5060に：SIP：bob@example.netタグに：SIP：：からB2-2をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：487サーバーTXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "15 Timestamp: 1275930748.355 Message Type: R Directionality: s Transport: udp CSeq-Number: 43 CSeq-Method: ACK R-URI: sip:bob@bob2.example.net Destination-address: [2001:db8::9] Destination-port: 5060 Source-address: 203.0.113.200 Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: - Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "15タイムスタンプ：1275930748.355メッセージタイプ：R方向性：Sトランスポート：UDPのCSeq-番号：43のCSeq-方法：ACK R-URI：SIP：bob@bob2.example.net宛先アドレス：[2001：DB8 :: 9]先-port：5060ソースアドレス：203.0.113.200ソースポート：5060に：SIP：bob@example.netタグに：SIP：alice@example.comタグから：からB2-2 A1-1コールID： tr-88h@example.comステータス： - サーバー-TXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "16 Timestamp: 1275930748.698 Message Type: r Directionality: r Transport: udp CSeq-Number: 43 CSeq-Method: CANCEL R-URI: - Destination-address: 203.0.113.200 Destination-port: udp Source-address: [2001:db8::9] Source-port: 5060 To: sip:bob@example.net To tag: b2-2 From: sip:alice@example.com From tag: a1-1 Call-ID: tr-88h@example.com Status: 200 Server-Txn: s-1-tr Client-Txn: c-2-tr",
      "ja": "16タイムスタンプ：1275930748.698メッセージタイプ：R方向性：R交通：UDPのCSeq-番号：43のCSeq-方法：R-URIをCANCEL： - 宛先アドレス：203.0.113.200宛先ポート：UDP送信元アドレス：[2001：DB8： ：9]ソースポート：5060に：SIP：bob@example.netタグに：SIP：：からB2-2をalice@example.comタグから：A1-1のCall-ID：tr-88h@example.comステータス：200サーバーTXN：S-1-TRクライアントTXN：C-2-TR"
    },
    {
      "indent": 3,
      "text": "The above SIP CLF log makes it easy to search for a specific transaction or a state of the session. Searching for the string \"c-1-tr\" on the log records will readily yield the information that an INVITE was sent to sip:bob@bob1.example.com, it elicited a 100 followed by a 180 and then a 200. Because the ACK request in this case would be exchanged end-to-end, this element does not see (and therefore will not log) the ACK.",
      "ja": "SIP CLFログ上の特定のトランザクションまたはセッションの状態を検索することが容易になります。ログレコードに文字列「C-1-TR」を検索すると、容易にSIPに送信されたINVITEという情報が得られます：bob@bob1.example.comを、それがため180に続く100を誘発し、次いで200この場合のACK要求は、エンドツーエンドを交換することになる、この要素は、ACKを参照しない（したがって、ログインしないであろう）。"
    },
    {
      "indent": 3,
      "text": "Searching for \"c-2-tr\" yields a more complex scenario of sending an INVITE to sip:bob@bob2.example.net, receiving 100 and 180. However, the log makes it apparent that the request to sip:bob@bob2.example.net was subsequently CANCEL'ed before a final response was generated, and that the pending INVITE returned a 487. The ACK to the final non-2xx response and a 200 to the CANCEL request complete the exchange on that branch.",
      "ja": "bob@bob2.example.netは、しかし、100と180を受け、ログはリクエストがSIPするということが明らかになります：ボブ@のBOB2「C-2-TR」を検索すると、一口にINVITEを送信するより複雑なシナリオを生成します.example.netは、最終応答が生成された前に、その後CANCEL'edし、保留中のことをその枝の交換を完了CANCELリクエストへの487の最終的な非2xxの応答に対するACKおよび200を返さINVITE。"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "A log file by its nature reveals both the state of the entity producing it and the nature of the information being logged. To the extent that this state should not be publicly accessible and that the information is to be considered private, appropriate file and directory permissions attached to the log file SHOULD be used. It is outside the scope of this document to specify how to protect the log file while it is stored on disk; however, certain precautions can be taken. Operators SHOULD consider using common administrative features such as disk encryption and securing log files [schneier-1]. Operators SHOULD also consider hardening the machine on which the log file is stored by restricting physical access to the host as well as restricting access to the file itself. Depending on the specific operating system and environment, the file and directory permissions SHOULD be set to be most restrictive such that the file is not publicly readable and writable and the directory where the file is stored is not publicly accessible.",
      "ja": "その性質により、ログファイルには、それと情報の性質を生成するエンティティの両方の状態が記録されて明らかになりました。この状態が公的にアクセス可能な情報は、プライベートと見なされるべきであることであってはならない程度に、ログファイルに添付、適切なファイルとディレクトリのアクセス権を使用する必要があります。それはそれは、ディスク上に格納されている間、ログファイルを保護する方法を指定するには、この文書の範囲外です。しかし、一定の注意が撮影することができます。オペレータは、このようなディスク暗号化などの一般的な管理機能を使用して、ログファイル[シュナイアー-1]を確保する検討すべきです。オペレータはまた、ログファイルがホストに物理的にアクセスを制限するだけでなく、ファイル自体へのアクセスを制限することで、保存されているマシンを硬化検討すべきです。特定のオペレーティングシステムや環境に応じて、ファイルとディレクトリのアクセス権は、ファイルが公に読み書き可能なものではなく、ファイルが格納されているディレクトリは、パブリックにアクセスしないように、最も限定的に設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The following threats may be considered for the log file while it is stored:",
      "ja": "それが保存されている間、以下の脅威は、ログファイルのために考慮することができます。"
    },
    {
      "indent": 3,
      "text": "o An attacker may gain access to view the log file, or may surreptitiously make a copy of the log file for later viewing.",
      "ja": "O攻撃者がログファイルを表示するためにアクセスすることができる、あるいはこっそりと、後で表示するためにログファイルのコピーを作成することができます。"
    },
    {
      "indent": 3,
      "text": "o An attacker who is unable to eavesdrop on real-time SIP traffic on the network, but, nonetheless, can access the log file, is able to easily mount replay attack or other attacks that result from channel eavesdropping. Encrypting SIP traffic does not help here because the SIP entity generating the log file would have decrypted the message for processing and subsequent logging.",
      "ja": "O、ネットワーク上でリアルタイムのSIPトラフィックを盗聴することができませんが、攻撃者がそれにもかかわらず、ログファイルにアクセスすることができ、簡単にリプレイ攻撃やチャンネル盗聴から生じる他の攻撃をマウントすることができます。ログファイルを生成するSIPエンティティは、処理およびその後のロギングのためのメッセージを復号化していたので、SIPトラフィックを暗号化すると、ここには役立ちません。"
    },
    {
      "indent": 3,
      "text": "o  An attacker may delete parts of --- or indeed, the whole --- file.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Public access to the SIP log file creates more of a privacy leak when compared to an adversary eavesdropping cleartext SIP traffic on the network. If all SIP traffic on a network segment is encrypted, then as noted above, special attention must be directed to the file and directory permissions associated with the log file to preserve privacy such that only a privileged user can access the contents of the log file.",
      "ja": "ネットワーク上の敵の盗聴平文のSIPトラフィックと比較すると、SIPログファイルへのパブリック・アクセスは、プライバシー漏洩の多くを作成します。ネットワークセグメント上のすべてのSIPトラフィックが暗号化されている場合は上記のように、そして、特別な注意が唯一の特権ユーザーは、ログファイルの内容にアクセスできるようにプライバシーを保護するために、ログ・ファイルに関連付けられたファイルとディレクトリのアクセス権に向けなければなりません。"
    },
    {
      "indent": 3,
      "text": "Transporting SIP CLF files across the network pose special challenges as well. The following threats may be considered for transferring log files or while transferring individual log records:",
      "ja": "ネットワーク経由で輸送SIP CLFファイルも同様に特別な課題を提起します。以下の脅威は、ログファイルを転送するか、個々のログ・レコードを転送中に考慮することができます。"
    },
    {
      "indent": 3,
      "text": "o An attacker may view the records;",
      "ja": "O攻撃者は、レコードを表示すること。"
    },
    {
      "indent": 3,
      "text": "o An attacker may modify the records in transit or insert previously captured records into the stream;",
      "ja": "O攻撃者は、輸送中のレコードを変更したり、ストリームに以前に捕捉されたレコードを挿入することができます。"
    },
    {
      "indent": 3,
      "text": "o An attacker may remove records in transit, or may stage a man-in-the-middle attack to deliver a partially or entirely falsified log file.",
      "ja": "O攻撃者は、輸送中にレコードを削除する、または部分的または完全に偽造ログファイルを提供するman-in-the-middle攻撃を上演します。"
    },
    {
      "indent": 3,
      "text": "It is also outside the scope of this document to specify protection methods for log files or log records that are being transferred between hosts; however, certain precautions can be taken. Operators SHOULD require mutual authentication, channel confidentiality, and channel integrity while transferring the log file. The use of a secure shell transport layer protocol [RFC4253] or TLS [RFC5246] accomplishes this.",
      "ja": "これは、ホスト間で転送されるログファイルやログレコードのための保護方法を指定するには、この文書の範囲外でもあります。しかし、一定の注意が撮影することができます。ログファイルを転送しながら、オペレータは、相互認証、チャネルの機密性、およびチャネルの整合性を必要とすべきです。セキュアシェルトランスポート層プロトコル[RFC4253]またはTLS [RFC5246]を使用することは、これを達成します。"
    },
    {
      "indent": 3,
      "text": "Even with such care, sensitive information can be leaked during or after the transfer. SIP CLF fields like IP addresses and URIs contain potentially sensitive information. Before transferring the log file across domains, operators SHOULD ensure that any fields that contain sensitive information are appropriately anonymized or obfuscated. A specification for a format that describes which fields are obfuscated and with what characteristics (e.g., what correlations still work) is needed to allow interoperable but privacy-friendly exchange of SIP CLF between administrative domains. Such a specification is not attempted here, but is for further study.",
      "ja": "でも、このような注意を払って、機密情報が転送中または後に漏洩することができます。 IPアドレスとURIのようなSIP CLFフィールドは、潜在的に機密情報が含まれています。ドメイン間でログファイルを転送する前に、オペレータは、機密情報を含むすべてのフィールドが適切に匿名化又は難読化されていることを確実にすべきです。難読化や管理ドメイン間のSIP CLFの相互運用が、プライバシー向け交換を可能にするために必要とされるものの特性（例えば、どのような相関がまだ動作）とされているフィールドについて説明フォーマットの仕様。このような仕様は、ここにしようとしましたが、今後の検討課題であるされていません。"
    },
    {
      "indent": 3,
      "text": "The SIP CLF represents the minimum fields that lend themselves to trend analysis and serve as information that may be deemed useful. Other formats can be defined that include more headers (and the body) from Section 8.1. However, where to draw a judicial line regarding the inclusion of non-mandatory headers can be challenging. Clearly, the more information a SIP entity logs, the longer time the logging process will take, the more disk space the log entry will consume, and the more potentially sensitive information could be breached. Therefore, adequate trade-offs should be taken in account when logging more fields than the ones recommended in Section 8.1.",
      "ja": "SIP CLF分析トレンドに役立つと有用とみなすことができる情報となる最小のフィールドを表します。他の形式は、セクション8.1からの複数のヘッダ（およびボディ）を含むように定義することができます。しかし、ここで挑戦することができ、非必須ヘッダーを含めることに関する司法線を描画します。明らかに、より多くの情報のSIPエンティティのログ、ロギングプロセスがかかります長い時間、ログエントリが消費するより多くのディスクスペース、およびより多くの潜在的な機密情報が破られる可能性があります。 8.1節で推奨したものよりも多くのフィールドをログに記録するときので、十分なトレードオフを考慮に取られるべきです。"
    },
    {
      "indent": 3,
      "text": "Implementers need to pay particular attention to buffer handling when reading or writing log files. SIP CLF entries can be unbounded in length. It would be reasonable for a full dump of a SIP message to be thousands of octets long. This is of particular importance to CLF log parsers, as a SIP CLF log writers may add one or more extension fields to the message to be logged.",
      "ja": "実装者は、ログファイルを読み書きする際の取り扱いをバッファリングするために特に注意を払う必要があります。 SIP CLFエントリの長さは無制限することができます。 SIPメッセージの完全なダンプが長いオクテットの数千人であることが合理的です。 SIP CLFログライターが記録されるメッセージへの1つ以上の拡張フィールドを追加することができるので、これは、CLFログパーサに特に重要です。"
    },
    {
      "indent": 0,
      "text": "11. Operational Guidance",
      "section_title": true,
      "ja": "11.操作ガイダンス"
    },
    {
      "indent": 3,
      "text": "SIP CLF log files will take up a substantial amount of disk space depending on traffic volume at a processing entity and the amount of information being logged. As such, any organization using SIP CLF should establish operational procedures for file rollovers and periodic retrieval of logs before rollover as appropriate to the needs of the organization.",
      "ja": "SIP CLFログファイルには、トラフィックの処理エンティティでボリュームとログに記録される情報の量に応じて、ディスクスペースのかなりの量を取るだろう。そのため、SIP CLFを使用して、任意の組織は、組織のニーズに、適切なロールオーバーする前に、ファイルのロールオーバーとログの定期的な検索のための操作手順を確立しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Listing such operational guidelines in this document is out of scope for this work.",
      "ja": "この文書では、このような運用ガイドラインをリストこの仕事の範囲外です。"
    },
    {
      "indent": 0,
      "text": "12. Acknowledgments",
      "section_title": true,
      "ja": "12.謝辞"
    },
    {
      "indent": 3,
      "text": "Members of the sipping, dispatch, ipfix, and syslog working groups provided invaluable input to the formulation of the document. These include Benoit Claise, Spencer Dawkins, John Elwell, David Harrington, Christer Holmberg, Hadriel Kaplan, Atsushi Kobayashi, Jiri Kuthan, Scott Lawrence, Chris Lonvick, Peter Musgrave, Simon Perreault, Adam Roach, Dan Romascanu, Robert Sparks, Brian Trammell, Dale Worley, Theo Zourzouvillys, and others that we have undoubtedly, but inadvertently, missed.",
      "ja": "シッピング、派遣、IPFIX、およびsyslogワーキンググループのメンバーは、文書の策定に貴重な入力を提供します。これらはブノワClaise、スペンサードーキンス、ジョンエルウェル、デヴィッド・ハリントン、クリステルHolmbergの、Hadrielカプラン、敦小林、智異Kuthan、スコット・ローレンス、クリスLonvick、ピーター・マスグレイブ、サイモン・ペロー、アダムローチ、ダンRomascanu、ロバートスパークス、ブライアン・トラメルが含まれ、デールウォーリー、テオZourzouvillys、と私たちは間違いなく持っていますが、不注意、見落としなどがあります。"
    },
    {
      "indent": 3,
      "text": "Rainer Gerhards, David Harrington, Cullen Jennings, and Gonzalo Salgueiro helped tremendously in discussions related to arriving at the beginnings of an information model.",
      "ja": "レイナー・ガーハーズ、デヴィッド・ハリントン、カレン・ジェニングス、そしてゴンサロSalgueiroは、情報モデルの始まりに到着に関連する議論に大いに役立ちました。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3261] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[RFC3261]ローゼンバーグ、J.、Schulzrinneと、H.、カマリロ、G.、ジョンストン、A.、ピーターソン、J.、スパークス、R.、ハンドレー、M.、およびE.学生、 \"SIP：セッション開始プロトコル\" 、RFC 3261、2002年6月。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC4253] Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH) Transport Layer Protocol\", RFC 4253, January 2006.",
      "ja": "[RFC4253] Ylonenと、T.とC. Lonvick、 \"セキュアシェル（SSH）トランスポート層プロトコル\"、RFC 4253、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5101] Claise, B., \"Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information\", RFC 5101, January 2008.",
      "ja": "[RFC5101] Claise、B.、 \"IPトラフィックフロー情報を交換するためのIPフロー情報のエクスポート（IPFIX）プロトコルの仕様\"、RFC 5101、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5424] Gerhards, R., \"The Syslog Protocol\", RFC 5424, March 2009.",
      "ja": "[RFC5424] Gerhards氏、R.、 \"Syslogのプロトコル\"、RFC 5424、2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6873] Salgueiro, G., Gurbani, V., and A. B. Roach, \"Format for the Session Initiation Protocol (SIP) Common Log Format (CLF)\", RFC 6873, February 2013.",
      "ja": "[RFC6873] Salgueiro、G.、Gurbani、V.、およびA. B.ローチ、 \"セッション開始プロトコル（SIP）共通ログ形式（CLF）用フォーマット\"、RFC 6873、2013年2月。"
    },
    {
      "indent": 3,
      "text": "[rieck2008] Rieck, K., Wahl, S., Laskov, P., Domschitz, P., and K-R. Muller, \"A Self-learning System for Detection of Anomalous SIP Messages\", Principles, Systems and Applications of IP Telecommunications Services and Security for Next Generation Networks (IPTComm), LNCS 5310, pp. 90-106, 2008.",
      "ja": "【rieck2008] Rieck、K.、ワール、S.、Laskov、P.、Domschitz、P.、およびK-R。ミュラー、「異常SIPメッセージの検出のための自己学習システム」、原則、システム及びIP通信サービスや次世代ネットワークのセキュリティ（IPTComm）の応用、LNCS 5310、頁90から106、2008。"
    },
    {
      "indent": 3,
      "text": "[schneier-1] Schneier, B. and J. Kelsey, \"Secure audit logs to support computer forensics\", ACM Transactions on Information and System Security (TISSEC), 2(2), pp. 159,176, May 1999.",
      "ja": "[シュナイアー-1]シュナイアー、B.及びJ.ケルシー、 \"コンピュータフォレンジックをサポートするセキュア監査ログ\"、情報システムセキュリティに関するACMトランザクション（TISSEC）、2（2）、PP。159176、1999年5月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Vijay K. Gurbani (editor) Bell Laboratories, Alcatel-Lucent 1960 Lucent Lane Naperville, IL 60566 USA",
      "ja": "ビジェイK. Gurbani（エディタ）ベル研究所、アルカテル・ルーセント1960ルーセントレーンネーパーヴィル、IL 60566 USA"
    },
    {
      "indent": 3,
      "text": "EMail: vkg@bell-labs.com",
      "ja": "メールアドレス：vkg@bell-labs.com"
    },
    {
      "indent": 3,
      "text": "Eric W. Burger (editor) Georgetown University USA",
      "ja": "エリック・W.バーガー（編集者）ジョージタウン大学USA"
    },
    {
      "indent": 3,
      "text": "EMail: eburger@standardstrack.com URI: http://www.standardstrack.com",
      "ja": "電子メール：eburger@standardstrack.com URI：http://www.standardstrack.com"
    },
    {
      "indent": 3,
      "text": "Tricha Anjali Illinois Institute of Technology 316 Siegel Hall Chicago, IL 60616 USA",
      "ja": "テクノロジーのTrichaアンジャリイリノイ大学316シーゲル・ホール、シカゴ、IL 60616 USA"
    },
    {
      "indent": 3,
      "text": "EMail: tricha@ece.iit.edu",
      "ja": "メールアドレス：tricha@ece.iit.edu"
    },
    {
      "indent": 3,
      "text": "Humberto Abdelnur INRIA INRIA - Nancy Grant Est Campus Scientifique 54506, Vandoeuvre-les-Nancy Cedex France",
      "ja": "ウンベルトAbdelnour INRIA INRIA  - ナンシー・グラント東キャンパス科学研究54506、ヴァンドゥーヴルレナンシーセデックスフランス"
    },
    {
      "indent": 3,
      "text": "EMail: humbol@gmail.com",
      "ja": "メールアドレス：humbol@gmail.com"
    },
    {
      "indent": 3,
      "text": "Olivier Festor INRIA INRIA - Nancy Grant Est Campus Scientifique 54506, Vandoeuvre-les-Nancy Cedex France",
      "ja": "オリヴィエFestor INRIA INRIA  - ナンシー・グラント東キャンパス科学研究54506、ヴァンドゥーヴルレナンシーセデックスフランス"
    },
    {
      "indent": 3,
      "text": "EMail: Olivier.Festor@loria.fr",
      "ja": "メールアドレス：Olivier.Festor@loria.fr"
    }
  ]
}