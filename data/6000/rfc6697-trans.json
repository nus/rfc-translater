{
  "title": {
    "text": "RFC 6697 - Handover Keying (HOKEY) Architecture Design",
    "ja": "RFC 6697 - ハンドオーバキーイング（HOKEY）アーキテクチャの設計"
  },
  "number": 6697,
  "created_at": "2019-10-29 09:16:25.140576+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      G. Zorn, Ed.\nRequest for Comments: 6697                                   Network Zen\nCategory: Informational                                            Q. Wu\nISSN: 2070-1721                                                T. Taylor\n                                                                  Huawei\n                                                                  Y. Nir\n                                                             Check Point\n                                                               K. Hoeper\n                                                Motorola Solutions, Inc.\n                                                              S. Decugis\n                                                           INSIDE Secure\n                                                               July 2012",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Handover Keying (HOKEY) Architecture Design",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Handover Keying (HOKEY) Working Group seeks to minimize handover delay due to authentication when a peer moves from one point of attachment to another. Work has progressed on two different approaches to reduce handover delay: early authentication (so that authentication does not need to be performed during handover), and reuse of cryptographic material generated during an initial authentication to save time during re-authentication. A basic assumption is that the mobile host or \"peer\" is initially authenticated using the Extensible Authentication Protocol (EAP), executed between the peer and an EAP server as defined in RFC 3748.",
      "ja": "ハンドオーバキーイング（HOKEY）ワーキンググループは、認証に起因するハンドオーバ遅延を最小化しようとするときに、別の1つの結合点からピア移動します。初期の認証を（そのため、認証は、ハンドオーバー中に実行する必要はありません）、および初期認証時に生成された暗号材料の再利用は再認証中に時間を節約するために：作業は、ハンドオーバ遅延を減らすために2つの異なるアプローチで進められています。基本的な仮定は、RFC 3748で定義されているモバイルホストまたは「ピア」は、最初のピアとEAPサーバとの間で実行される拡張認証プロトコル（EAP）を使用して認証されることです。"
    },
    {
      "indent": 3,
      "text": "This document defines the HOKEY architecture. Specifically, it describes design objectives, the functional environment within which handover keying operates, the functions to be performed by the HOKEY architecture itself, and the assignment of those functions to architectural components. It goes on to illustrate the operation of the architecture within various deployment scenarios that are described more fully in other documents produced by the HOKEY Working Group.",
      "ja": "この文書はHOKEYアーキテクチャを定義しています。具体的には、設計目標、ハンドオーバキーイングが動作する機能的環境、HOKEYアーキテクチャ自体によって実行される機能、およびアーキテクチャコンポーネントにそれらの機能の割り当てを記述する。それはHOKEYワーキンググループによって作成他の文書に、より完全に記載されているさまざまな展開シナリオ内アーキテクチャの動作を説明するために行きます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6697.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6697で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n2. Terminology .....................................................6\n3. Design Goals ....................................................6\n   3.1. Reducing Signaling Overhead ................................7\n        3.1.1. Minimized Communications with Home Servers ..........7\n        3.1.2. Minimized User Interaction for Authentication .......7\n   3.2. Integrated Local Domain Name (LDN) Discovery ...............7\n   3.3. Fault-Tolerant Re-Authentication ...........................8\n   3.4. Improved Deployment Scalability ............................8\n4. Required Functionality ..........................................8\n   4.1. Authentication Subsystem Functional Overview ...............8\n   4.2. Pre-Authentication Function (Direct or Indirect) ...........9\n   4.3. EAP Re-Authentication Function .............................9\n   4.4. EAP Authentication Function ...............................10\n   4.5. Authenticated Anticipatory Keying (AAK) Function ..........10\n   4.6. Management of EAP-Based Handover Keys .....................10\n5. Components of the HOKEY Architecture ...........................11\n   5.1. Functions of the Peer .....................................12\n   5.2. Functions of the Serving Authenticator ....................13\n   5.3. Functions of the Candidate Authenticator ..................14\n   5.4. Functions of the EAP Server ...............................15\n   5.5. Functions of the ER Server ................................16\n6. Usage Scenarios ................................................16\n   6.1. Simple Re-Authentication ..................................16\n   6.2. Intra-Domain Handover .....................................17\n   6.3. Inter-Domain Handover .....................................17\n   6.4. Inter-Technology Handover .................................17\n7. AAA Considerations .............................................17\n   7.1. Authorization .............................................17\n   7.2. Transport Aspect ..........................................18\n8. Security Considerations ........................................18\n9. Acknowledgments ................................................18\n10. References ....................................................18\n   10.1. Normative References .....................................18\n   10.2. Informative References ...................................19",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Extensible Authentication Protocol (EAP) [RFC3748] is an authentication framework that supports different types of authentication methods. Originally designed for dial-up connections, EAP is now commonly used for authentication in a variety of access networks.",
      "ja": "拡張認証プロトコル（EAP）[RFC3748]は認証方法の種類をサポートする認証フレームワークです。もともとダイヤルアップ接続用に設計された、EAPは、現在一般的にアクセスネットワークのさまざまな認証のために使用されています。"
    },
    {
      "indent": 3,
      "text": "When a host (or \"peer\", the term used from this point onward) changes its point of attachment to the network, it must be re-authenticated. If a full EAP authentication must be repeated, several message round trips between the peer and the home EAP server may be involved. The resulting delay will result in degradation -- or, in the worst case, loss of any service session in progress -- if communication is suspended while re-authentication is carried out. The delay is worse if the new point of attachment is in a visited network rather than the peer's home network because of the extra procedural steps involved as well as the probable increase in round-trip time.",
      "ja": "ホスト（または「ピア」、以降この点から、使用される用語）は、ネットワークへの接続点を変更した場合、それが再認証されなければなりません。完全なEAP認証を繰り返さなければならない場合、ピアとホームEAPサーバとの間のいくつかのメッセージのラウンドトリップが関与している可能性があります。得られた遅延劣化につながる - 又は、最悪の場合、進行中のサービスセッションの喪失 - 再認証が行われている間の通信が中断された場合。新しい接続点が訪問先ネットワークではなく、理由は往復時間の可能性の増加だけでなく、関連する追加の手順工程のピアのホームネットワーク内にある場合に遅延が悪化しています。"
    },
    {
      "indent": 3,
      "text": "Clancy, et al. [RFC5169] describe this problem more fully and establish design goals for solutions to reduce re-authentication delay for transfers within a single administrative domain. They also suggest a number of ways to achieve a solution:",
      "ja": "クランシーら。 [RFC5169]より完全にこの問題を説明し、単一の管理ドメイン内での転送のための再認証の遅延を低減するためのソリューションの設計目標を確立します。彼らはまた、溶液を達成するために、いくつかの方法をお勧め："
    },
    {
      "indent": 3,
      "text": "o specification of a method-independent, efficient re-authentication protocol based upon EAP;",
      "ja": "EAPに基づく方法に依存しない、効率的な再認証プロトコルのO仕様。"
    },
    {
      "indent": 3,
      "text": "o reuse of keying material from the initial EAP authentication;",
      "ja": "初期EAP認証からの鍵材料のOの再利用。"
    },
    {
      "indent": 3,
      "text": "o deployment of re-authentication servers local to the peer to reduce round-trip delay; and",
      "ja": "往復遅延を低減するために、ピアへのローカル再認証サーバのO展開。そして"
    },
    {
      "indent": 3,
      "text": "o specification of the additional protocol needed to allow the EAP server to pass authentication information to the local re-authentication servers.",
      "ja": "EAPサーバがローカル再認証サーバに認証情報を渡すことができるように必要な追加のプロトコルのO仕様。"
    },
    {
      "indent": 3,
      "text": "Salowey, et al. [RFC5295] tackle the problem of the reuse of keying material by specifying how to derive a hierarchy of cryptographically independent purpose-specific keys from the results of the original EAP authentication, while Cao, et al. [RFC6696] specify a method-independent re-authentication protocol (the EAP Re-authentication Protocol (ERP)) applicable to two specific deployment scenarios:",
      "ja": "Salowey、ら。 [RFC5295]ツァオつつ、ら、元のEAP認証の結果から暗号独立目的、特定のキーの階層を導出する方法を指定することにより、鍵材料の再利用の問題に取り組みます。 [RFC6696] 2つの特定の展開シナリオに適用可能な方法に依存しない再認証プロトコル（EAP再認証プロトコル（ERP））を指定します。"
    },
    {
      "indent": 3,
      "text": "o where the peer's home EAP server also performs re-authentication; and",
      "ja": "OピアのホームEAPサーバも再認証を行っています。そして"
    },
    {
      "indent": 3,
      "text": "o where a local re-authentication server exists but is co-located with an Authentication, Authorization, and Accounting (AAA) proxy within the domain.",
      "ja": "Oここでローカル再認証サーバが存在するが、認証、認可と同じ場所に配置され、およびアカウンティング（AAA）プロキシドメイン内。"
    },
    {
      "indent": 3,
      "text": "Other work provides further pieces of the solution or insight into the problem. For the purpose of this memo, Hoeper, et al. [RFC5749] provide an abstract mechanism for distribution of keying material from the EAP server to re-authentication servers. Ohba, et al. [RFC5836] contrast the EAP Re-authentication (ER) strategy provided by ERP with an alternative strategy called \"early authentication\". RFC 5836 defines EAP early authentication as the use of EAP by a mobile peer to establish authenticated keying material on a target attachment point prior to its arrival. Hence, the goal of EAP early authentication is to complete all EAP-related communications, including AAA signaling, in preparation for the handover, before the mobile device actually moves. Early authentication includes direct and indirect pre-authentication as well as Authenticated Anticipatory Keying (AAK). All three early authentication mechanisms provide means to securely establish authenticated keying material on a Candidate Attachment Point (CAP) while still being connected to the Serving Attachment Point (SAP) but vary in their respective system assumptions and communication paths. In particular, direct pre-authentication assumes that clients are capable of discovering CAPs and all communications are routed through the SAP. On the other hand, indirect pre-authentication assumes an existing relationship between the SAP and CAP, whereas the discovery and selection of CAPs is outside the scope of AAK. Furthermore, both direct and indirect pre-authentication require a full EAP execution to occur before the handover of the peer takes place, while AAK techniques (like ERP [RFC6696]) use keys derived from the initial EAP authentication.",
      "ja": "他の仕事は、問題への解決策や洞察力の更なる部分を提供します。このメモの目的のために、Hoeperら。 [RFC5749]はEAPサーバに再認証サーバから鍵材料を分配するための抽象メカニズムを提供します。大場ら。 [RFC5836]「初期認証」と呼ばれる別の戦略ERPによって提供されるEAP再認証（ER）戦略を対比。 RFC 5836は、前の到着に目標接続ポイントで認証鍵材料を確立するためにモバイルピアによってEAPを使用するようにEAP初期認証を定義します。したがって、EAP初期認証の目標は、モバイルデバイスが実際に移動する前に、ハンドオーバの準備のために、AAAシグナリングを含む、すべてのEAPに関連する通信を完了することです。初期の認証は、直接および間接事前認証だけでなく、認証された予期キーイング（AAK）が含まれています。すべての3つの初期の認証メカニズムは依然としてサービングアタッチメントポイント（SAP）に接続されているが、それらのそれぞれのシステムの仮定と通信路で変化させながら確実候補アタッチメントポイント（CAP）で認証鍵材料を確立するための手段を提供します。特に、直接事前認証は、クライアントがキャップを発見することが可能であり、すべての通信は、SAPを介してルーティングされることを前提としています。 CAPの発見および選択はAAKの範囲外であるのに対し、一方、間接事前認証は、SAPとCAPとの間の既存の関係を想定しています。 （ERP [RFC6696]など）AAK技術は初期EAP認証に由来するキーを使用しながら、さらに、直接的および間接的の両方の事前認証は、ピアのハンドオーバが行われる前に発生する完全なEAPの実行を必要とします。"
    },
    {
      "indent": 3,
      "text": "Both EAP re-authentication and early authentication enable faster inter-authenticator handovers. However, it is currently unclear how the necessary handover infrastructure can be deployed and integrated into existing EAP infrastructures. In particular, previous work has not described how ER servers that act as endpoints in the re-authentication process should be integrated into local and home domain networks. Furthermore, how EAP infrastructure can support the timely triggering of early authentications and aid with the selection of CAPs is currently unspecified.",
      "ja": "EAPの再認証と初期の認証の両方が速い間オーセンティケータのハンドオーバを可能にします。しかし、必要なハンドオーバインフラストラクチャが展開され、既存のEAPインフラストラクチャに統合することができる方法は現在不明です。特に、前作は再認証プロセスでのエンドポイントとして動作するERサーバがローカルとホームドメインネットワークに統合する方法を説明していません。さらに、EAP基盤を早期に認証のタイムリーなトリガをサポートするとキャップの選択を支援することができますどのように現在指定されていません。"
    },
    {
      "indent": 3,
      "text": "This document proposes a general HOKEY architecture and demonstrates how it can be adapted to different deployment scenarios. To begin with, Section 3 recalls the design objectives for the HOKEY architecture. Section 4 reviews the functions that must be supported within the architecture. Section 5 describes the components of the HOKEY architecture. Section 6 describes the different deployment scenarios that the HOKEY Working Group has addressed and the information flows that must occur within those scenarios, by reference to the documents summarized above where possible and otherwise within this document itself. Finally, Section 7 provides an analysis of how AAA protocols can be applied in the HOKEY architecture.",
      "ja": "この文書は、一般的なHOKEYアーキテクチャを提案し、それがさまざまな展開シナリオに適合させることができる方法を示しています。まず、第3節ではHOKEYアーキテクチャの設計目標を思い出します。第4節では、アーキテクチャ内でサポートされなければならない機能をレビュー。第5節はHOKEYアーキテクチャのコンポーネントについて説明します。第6節は上にまとめた文書を参照することで、HOKEYワーキンググループが対処してきたさまざまな展開シナリオとそれらのシナリオ内で発生しなければならない情報の流れを説明し、可能な場合とそうでない場合は、この文書自体の中に。最後に、第7章は、AAAプロトコルがHOKEYアーキテクチャに適用することができる方法の分析を提供します。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "This document reuses terms defined in Section 2 of Ohba, et al. [RFC5836] and Section 2 of Cao, et al. [RFC6696]. In addition, it defines the following:",
      "ja": "この文書ら大場のセクション2で定義された用語を再利用します。 [RFC5836]とCaOの第2、ら。 [RFC6696]。また、それは次のように定義しています。"
    },
    {
      "indent": 3,
      "text": "DS-rRK Domain-Specific re-authentication Root Key.",
      "ja": "DS-RRKドメイン固有の再認証ルートキー。"
    },
    {
      "indent": 3,
      "text": "pMSK pre-established Master Session Key.",
      "ja": "pMSK事前に確立マスターセッションキー。"
    },
    {
      "indent": 3,
      "text": "EAP Early Authentication The use of EAP by a mobile peer to establish authenticated keying material on a target attachment point prior to its arrival; see Ohba, et al. [RFC5836].",
      "ja": "EAP初期認証前の到着に目標接続ポイントで認証鍵材料を確立するためにモバイルピアによってEAPの使用。ら大場を参照してください。 [RFC5836]。"
    },
    {
      "indent": 3,
      "text": "ER Key Management An instantiation of the mechanism described in Hoeper, et al. [RFC5749] for creating and delivering root keys from an EAP server to an ER server.",
      "ja": "ERキー管理Hoeperで説明したメカニズムらのインスタンス化。 ERサーバにEAPサーバからルート鍵を作成し、配信するための[RFC5749]。"
    },
    {
      "indent": 3,
      "text": "EAP Re-authentication (ER) The use of keying material derived from an initial EAP authentication to enable single-round-trip re-authentication of a mobile peer. For a detailed description of the keying material, see Section 4 of Cao, et al. [RFC6696].",
      "ja": "EAP再認証（ER）モバイルピアの単一往復の再認証を可能にするために、最初のEAP認証に由来キーイング材料を使用します。鍵材料の詳細については、ツァオら、の第4章を参照。 [RFC6696]。"
    },
    {
      "indent": 3,
      "text": "ER Server A component of the HOKEY architecture that terminates the EAP re-authentication exchange with the peer.",
      "ja": "ERサーバーピアとEAP再認証交換を終了HOKEYアーキテクチャのコンポーネント。"
    },
    {
      "indent": 0,
      "text": "3. Design Goals",
      "section_title": true,
      "ja": "3.設計目標"
    },
    {
      "indent": 3,
      "text": "This section investigates the design goals for the HOKEY architecture. These include reducing the signaling overhead for re-authentication and early authentication, integrating local domain name discovery, enabling fault-tolerant re-authentication, and improving deployment scalability. These goals supplement those discussed in Section 4 of RFC 5169. Note that the identification and selection of CAPs is not a goal of the architecture, since those operations are generally specific to the lower layer in use.",
      "ja": "このセクションでは、HOKEYアーキテクチャの設計目標を調査します。これらは、再認証および早期の認証のためのシグナリングオーバーヘッドを削減するローカルドメイン名の発見を統合し、フォールトトレラント再認証を有効にすると、展開のスケーラビリティを向上させることがあります。 CAPの同定および選択は、アーキテクチャの目標ではないことをこれらの操作は、一般的に使用されている下層に特異的であるので、これらの目標は、RFC 5169.注のセクション4で述べたものを補足します。"
    },
    {
      "indent": 0,
      "text": "3.1. Reducing Signaling Overhead",
      "section_title": true,
      "ja": "3.1. シグナリングオーバーヘッドの削減"
    },
    {
      "indent": 0,
      "text": "3.1.1. Minimized Communications with Home Servers",
      "section_title": true,
      "ja": "3.1.1. ホームサーバーとの通信を最小化"
    },
    {
      "indent": 3,
      "text": "ERP [RFC6696] requires only one round trip; however, this round trip may require communication between a peer and its home ER and/or home AAA server in explicit bootstrapping and communication between local servers and the home server in implicit bootstrapping even if the peer is currently attached to a visited (local) network. As a result, even this one round trip may introduce long delays because the home ER and home AAA servers may be distant from the peer and the network to which it is attached. To lower signaling overhead, communication with the home ER server and home AAA server should be minimized. Ideally, a peer should only need to communicate with local servers and other local entities.",
      "ja": "ERP [RFC6696]は一つだけのラウンドトリップが必要です。しかし、このラウンドトリップは、ピアが現在訪問（ローカル）ネットワークに接続されている場合でも、ローカルサーバとの暗黙のブートストラップでホームサーバとの間の明示的なブートストラップおよび通信におけるピアとそのホームERおよび/またはホームAAAサーバ間の通信を必要とするかもしれません。ホームERとホームAAAサーバは、それが接続されているピアとのネットワークから離れた可能性があるため、結果として、でもこの1つの往復は長い遅延を導入することができます。シグナリングオーバーヘッド下げるには、ホームERサーバとホームAAAサーバとの通信は最小限にすべきです。理想的には、ピアは、ローカルサーバーや他のローカルエンティティと通信する必要があるはずです。"
    },
    {
      "indent": 0,
      "text": "3.1.2. Minimized User Interaction for Authentication",
      "section_title": true,
      "ja": "3.1.2. 認証のための最小化ユーザとの対話"
    },
    {
      "indent": 3,
      "text": "When the peer is initially attached to the network or moves between heterogeneous networks, full EAP authentication between the peer and EAP server occurs and user interaction may be needed, e.g., a dialog to prompt the user for credentials. To reduce latency, user interaction for authentication at each handover should be minimized. Ideally, user involvement should take place only during initial authentication and subsequent re-authentication should occur transparently.",
      "ja": "ピアが最初にネットワークまたは異種ネットワーク間の移動に装着されると、ピア及びEAPサーバ間の完全なEAP認証が発生し、ユーザ対話は、例えば、資格情報をユーザーに促すダイアログを必要とすることができます。待ち時間を短縮するために、各ハンドオーバ時の認証のためのユーザーとの対話は最小限にすべきです。理想的には、ユーザの関与は、最初の認証中に行われるべきであるとその後の再認証が透過的に行わなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. Integrated Local Domain Name (LDN) Discovery",
      "section_title": true,
      "ja": "3.2. 統合ローカルドメイン名（LDN）発見"
    },
    {
      "indent": 3,
      "text": "ERP bootstrapping must occur before (implicit) or during (explicit) a handover to transport the necessary keys to the local ER server involved. Implicit bootstrapping is preferable because it does not require communication with the home ER server during handover, but it requires that the peer know the domain name of the ER server before the subsequent local ERP exchange happens in order to derive the necessary re-authentication keying material. ERP [RFC6696] does not specify such a domain name discovery mechanism and suggests that the peer may learn the domain name through the EAP-Initiate/Re-auth-Start message or via lower-layer announcements. However, domain name discovery happens after the implicit bootstrapping completes, which may introduce extra latency. To allow more efficient handovers, a HOKEY architecture should support an efficient domain name discovery mechanism (for example, see Zorn, Wu & Wang [RFC6440]) and allow its integration with ERP implicit bootstrapping. Even in the case of explicit bootstrapping, LDN discovery should be optimized such that it does not require contacting the home AAA server, as is currently the case.",
      "ja": "ERPのブートストラップは、関係するローカルERサーバに必要なキーを輸送する（暗黙的）または（明示的）の間ハンドオーバ前に発生しなければなりません。それは、ハンドオーバー時のホームERサーバとの通信を必要としないため、暗黙のブートストラップが好適であるが、それは、その後の地元のERP交換が必要な再認証鍵材料を引き出すために起こる前にピアがERサーバのドメイン名を知っている必要があります。 ERP [RFC6696]は、ドメイン名の発見メカニズムを指定し、ピアがEAP-開始/再AUTHスタートメッセージを介して、または下層のアナウンスを介してドメイン名を学習することができることを示唆しません。ただし、ドメイン名の発見は、暗黙のブートストラップは、余分な遅延を導入することができるこれ、完了した後に発生します。より効率的なハンドオーバを可能にするには、HOKEYアーキテクチャは、効率的なドメイン名ディスカバリメカニズムをサポートする（例えば、ソーン、呉＆王[RFC6440]を参照）、ERP、暗黙のブートストラップとの統合を可能にしなければなりません。でも、明示的なブートストラップの場合には、LDNの発見は、現在そうであるように、それは、ホームAAAサーバに連絡する必要はありませんように最適化されなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.3. Fault-Tolerant Re-Authentication",
      "section_title": true,
      "ja": "3.3. フォールトトレラントな再認証"
    },
    {
      "indent": 3,
      "text": "If all authentication services depend upon a remote server, a network partition can result in the denial of service to valid users. However, if for example an ER server exists in the local network, previously authenticated users can re-authenticate even though a link to the home or main authentication server doesn't exist.",
      "ja": "すべての認証サービスは、リモート・サーバに依存している場合、ネットワークパーティションが有効なユーザーへのサービス拒否が発生することができます。例えばERサーバがローカルネットワーク内に存在する場合は、事前に認証されたユーザーは、自宅やメイン認証サーバへのリンクが存在しないにもかかわらず、再認証することができます。"
    },
    {
      "indent": 0,
      "text": "3.4. Improved Deployment Scalability",
      "section_title": true,
      "ja": "3.4. 改善された展開のスケーラビリティ"
    },
    {
      "indent": 3,
      "text": "To provide better deployment scalability, there should be no requirement for the co-location of entities providing handover keying services (e.g., ER servers) and AAA servers or proxies. Separation of these entities may cause problems with routing but allows greater flexibility in deployment and implementation.",
      "ja": "より良い展開のスケーラビリティを提供するために、ハンドオーバキーイングサービス（例えば、ERサーバ）とAAAサーバやプロキシを提供するエンティティのコロケーションのための要件が​​あってはなりません。これらの事業体の分離は、ルーティングの問題を引き起こしますが、展開と実装の柔軟性を可能にすることがあります。"
    },
    {
      "indent": 0,
      "text": "4. Required Functionality",
      "section_title": true,
      "ja": "4.必要な機能"
    },
    {
      "indent": 0,
      "text": "4.1. Authentication Subsystem Functional Overview",
      "section_title": true,
      "ja": "4.1. 認証サブシステム機能の概要"
    },
    {
      "indent": 3,
      "text": "The operation of the authentication subsystem provided by HOKEY also depends on the availability of a number of discovery functions:",
      "ja": "HOKEYが提供する認証サブシステムの動作も発見機能の数の可用性に依存します。"
    },
    {
      "indent": 3,
      "text": "o discovery of CAPs by the peer, by the SAP, or by some other entity;",
      "ja": "Oピアによって、SAPによって、または何らかの他のエンティティによってのCAPの発見。"
    },
    {
      "indent": 3,
      "text": "o discovery of the authentication services supported at a given CAP;",
      "ja": "与えられたCAPでサポートされている認証サービスのO発見。"
    },
    {
      "indent": 3,
      "text": "o discovery of the required server in the home domain when a CAP is not in the same domain as the SAP, or no local server is available;",
      "ja": "Oホームドメインで必要なサーバーの発見CAPは、SAPと同じドメインではないか、またはローカルサーバが利用できない場合。"
    },
    {
      "indent": 3,
      "text": "o peer discovery of the LDN when EAP re-authentication is used with a local server.",
      "ja": "EAP再認証は、ローカルサーバで使用されLDNのOピア発見。"
    },
    {
      "indent": 3,
      "text": "It is assumed that these functions are provided by the environment within which the authentication subsystem operates and are outside the scope of the authentication subsystem itself. LDN discovery is a possible exception.",
      "ja": "なお、これらの機能は、認証サブシステムが動作し、認証サブシステム自体の範囲外である内環境によって提供されているものとします。 LDNの発見が可能例外です。"
    },
    {
      "indent": 3,
      "text": "The major functions comprising the authentication subsystem and their interdependencies are discussed in greater detail below.",
      "ja": "主要な認証サブシステムを構成する機能とその相互依存性は、以下に詳細に説明されています。"
    },
    {
      "indent": 3,
      "text": "o When AAA is invoked to authorize network access, it uses one of two services offered by the authentication subsystem: full EAP authentication or EAP re-authentication. Note that although AAA may perform authentication directly in some cases, when EAP is utilized AAA functions only as a transport for EAP messages and the encryption keys (if any) resulting from successful EAP authentication.",
      "ja": "完全なEAP認証またはEAPの再認証：AAAは、ネットワークアクセスを許可するために呼び出されると、O、それは認証サブシステムによって提供される2つのサービスのいずれかを使用しています。 （もしあれば）EAPが成功したEAP認証から生じるのみEAPメッセージと暗号化キーのためのトランスポートとしてAAA機能を利用する場合、AAAは、いくつかのケースでは、直接認証を実行するかもしれないことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "o Pre-authentication triggers AAA network access authorization at each CAP, which in turn causes full EAP authentication to be invoked.",
      "ja": "O事前認証は、順番に、完全なEAP認証が呼び出されます各CAP、でAAAのネットワークアクセス認可をトリガします。"
    },
    {
      "indent": 3,
      "text": "o EAP re-authentication invokes ER key management at the time of authentication to create and distribute keying material to ER servers.",
      "ja": "O EAPの再認証は、作成およびERサーバに鍵材料を配布するために、認証時にERキーの管理を起動します。"
    },
    {
      "indent": 3,
      "text": "o AAK relies on ER key management to establish keying material on ER/AAK servers but uses an extension to ER key management to derive and establish keying material on candidate authenticators. AAK uses an extension to EAP re-authentication to communicate with ER/AAK servers.",
      "ja": "O AAKは、ER / AAKサーバー上の鍵材料を確立するために、ERキー管理に依存していますが、派生し、候補オーセンティケータ上に材料をキーイング確立するために、ERキー管理の拡張機能を使用しています。 AAKは、ER / AAKサーバーと通信するためのEAP再認証の拡張機能を使用しています。"
    },
    {
      "indent": 3,
      "text": "EAP authentication, EAP re-authentication, and handover key distribution depend on the routing and secure transport service provided by AAA. Discovery functions and the function of authentication and authorization of network entities (access points, ER servers) are not shown. As stated above, these are external to the authentication subsystem.",
      "ja": "EAP認証、EAP再認証、およびハンドオーバキー配布は、ルーティングおよびAAAによって提供される安全な伝送サービスに依存します。ディスカバリー機能、ネットワークエンティティの認証および承認の機能（アクセスポイント、ERサーバ）が示されていません。上述したように、これらは認証サブシステムの外部にあります。"
    },
    {
      "indent": 0,
      "text": "4.2. Pre-Authentication Function (Direct or Indirect)",
      "section_title": true,
      "ja": "4.2.  （直接的または間接的な）事前認証機能"
    },
    {
      "indent": 3,
      "text": "The pre-authentication function is responsible for discovery of CAPs and completion of network access authentication and authorization at each CAP in advance of handover. The operation of this function is described in general terms in Ohba, et al. [RFC5836]. No document is yet available to describe the implementation of pre-authentication in terms of specific protocols; pre-authentication support for the Protocol for Carrying Authentication for Network Access (PANA) [RFC5873] could be part of the solution.",
      "ja": "事前認証機能は、ハンドオーバーの事前に各CAPのCAPとネットワークアクセスの認証と承認が完了したことを発見する責任があります。この関数の動作は、ら大場に一般的に記載されています。 [RFC5836]。いいえ文書は、特定のプロトコルの面で事前認証の実装を記述するためにはまだ利用できません。溶液の一部とすることができるネットワーク・アクセス（PANA）[RFC5873]のための認証を搬送するプロトコルのための事前認証サポート。"
    },
    {
      "indent": 0,
      "text": "4.3. EAP Re-Authentication Function",
      "section_title": true,
      "ja": "4.3.  EAP再認証機能"
    },
    {
      "indent": 3,
      "text": "The EAP re-authentication function is responsible for authenticating the peer at a specific access point using keying material derived from a prior full EAP authentication. RFC 5169 [RFC5169] provides the design objectives for an implementation of this function. ERP [RFC6696] describes a protocol to implement EAP re-authentication.",
      "ja": "EAP再認証機能は、従来の完全なEAP認証から派生鍵材料を使用して、特定のアクセスポイントのピアを認証する責任があります。 RFC 5169 [RFC5169]は、この機能の実装のための設計目標を提供します。 ERP [RFC6696]はEAP再認証を実装するためのプロトコルを記述しています。"
    },
    {
      "indent": 0,
      "text": "4.4. EAP Authentication Function",
      "section_title": true,
      "ja": "4.4.  EAP認証機能"
    },
    {
      "indent": 3,
      "text": "The EAP authentication function is responsible for authenticating the peer at a specific access point using a full EAP exchange. Aboba, et al. [RFC3748] define the associated protocol, while Ohba, et al. [RFC5836] describe the use of EAP as part of pre-authentication. Note that the HOKEY Working Group has not specified the non-AAA protocol required to transport EAP frames over IP that is shown in Figures 3 and 5 of Ohba, et al. [RFC5836], although PANA [RFC5873] is a candidate.",
      "ja": "EAP認証機能は、完全なEAP交換を使用して、特定のアクセスポイントで、ピアを認証するための責任があります。 2005 Aboba、他。 [RFC3748]大場つつ、ら、関連するプロトコルを定義します。 [RFC5836]事前認証の一部としてEAPの使用を記載しています。 HOKEYワーキンググループら、大場の図3及び図5に示されているIP上EAPフレームを輸送するために必要な非AAAプロトコルを指定していないことに留意されたいです。 [RFC5836]、PANA [RFC5873]が候補であるが。"
    },
    {
      "indent": 0,
      "text": "4.5. Authenticated Anticipatory Keying (AAK) Function",
      "section_title": true,
      "ja": "4.5. 認証された予期キーイング（AAK）機能"
    },
    {
      "indent": 3,
      "text": "The AAK function is responsible for pre-placing keying material derived from an initial full EAP authentication on CAPs. The operation is carried out in two steps: ER key management (with trigger not currently specified) places root keys derived from initial EAP authentication onto an ER/AAK server associated with the peer. When requested by the peer, the ER/AAK server derives and pushes predefined master session keys to one or more CAPs. The operation of the AAK function is described in very general terms in Ohba, et al. [RFC5836]. A protocol specification exists (see Cao, et al. [RFC6630]).",
      "ja": "AAK機能は、CAPの上の最初の完全なEAP認証由来事前配置鍵材料を担当しています。操作は二段階で行われる：（現在指定されていないトリガーを有する）ERキー管理ピアに関連付けられているER / AAKサーバに最初のEAP認証に由来するルートキーを置きます。ピアによって要求された場合には、ER / AAKサーバーが派生し、一の以上のCAPにマスターセッション鍵を事前に定義プッシュします。 AAK機能の動作は、ら大場に非常に一般的な用語で説明されています。 [RFC5836]。プロトコル仕様は、（ら曹を参照。[RFC6630]）が存在します。"
    },
    {
      "indent": 0,
      "text": "4.6. Management of EAP-Based Handover Keys",
      "section_title": true,
      "ja": "4.6.  EAP-基づいて、ハンドオーバキーの管理"
    },
    {
      "indent": 3,
      "text": "Handover key management consists of EAP method-independent key derivation and distribution and comprises the following specific functions:",
      "ja": "ハンドオーバキー管理は、EAPメソッド非依存性の鍵導出および配信で構成され、以下の特定の機能を含みます。"
    },
    {
      "indent": 3,
      "text": "o handover key derivation",
      "ja": "Oハンドオーバキー導出"
    },
    {
      "indent": 3,
      "text": "o handover key distribution",
      "ja": "Oハンドオーバキー配布"
    },
    {
      "indent": 3,
      "text": "The derivation of handover keys is specified in Salowey, et al. [RFC5295], and AAA-based key distribution is specified in Hoeper, Nakhjiri & Ohba [RFC5749].",
      "ja": "ハンドオーバキーの導出がら、Saloweyで指定されています。 [RFC5295]、およびAAAベースの鍵配布はHoeper、Nakhjiri＆大場[RFC5749]で指定されています。"
    },
    {
      "indent": 0,
      "text": "5. Components of the HOKEY Architecture",
      "section_title": true,
      "ja": "HOKEY建築5.コンポーネント"
    },
    {
      "indent": 3,
      "text": "This section describes the components of the HOKEY architecture in terms of the functions they perform. The components cooperate as described in this section to carry out the functions described in the previous section. Section 6 describes the different deployment scenarios that are possible using these functions.",
      "ja": "このセクションでは、それらが実行する機能の点でHOKEYアーキテクチャのコンポーネントを記述する。このセクションで説明するように、コンポーネントは、前のセクションで説明した機能を実行するように協働します。第6節では、これらの機能を使用可能なさまざまな展開シナリオについて説明します。"
    },
    {
      "indent": 3,
      "text": "The components of the HOKEY architecture are as follows:",
      "ja": "次のようにHOKEYアーキテクチャのコンポーネントは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o the peer;",
      "ja": "ピアO;"
    },
    {
      "indent": 3,
      "text": "o the authenticator, which is a part of the SAP and CAPs;",
      "ja": "SAPとキャップの一部であり、オーセンティケータ、O。"
    },
    {
      "indent": 3,
      "text": "o the EAP server;",
      "ja": "EAPサーバO;"
    },
    {
      "indent": 3,
      "text": "o the ER server; and",
      "ja": "ERサーバO;そして"
    },
    {
      "indent": 3,
      "text": "o the ER/AAK server [RFC6630], either in the home domain or local to the authenticator.",
      "ja": "ER / AAKサーバO [RFC6630]、ホームドメイン内またはオーセンティケータにローカルのどちらか。"
    },
    {
      "indent": 0,
      "text": "5.1. Functions of the Peer",
      "section_title": true,
      "ja": "5.1. ピアの機能"
    },
    {
      "indent": 3,
      "text": "The peer participates in the functions described in Section 4, as shown in Table 1.",
      "ja": "表1に示すように、ピアは、セクション4で説明した機能に関与します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Function           | Peer Role                                    |\n+--------------------+----------------------------------------------+\n| EAP authentication | Determines that full EAP authentication is   |\n|                    | needed based on context (e.g., initial       |\n|                    | authentication), prompting from the          |\n|                    | authenticator, or discovery that only EAP    |\n|                    | authentication is supported.  Participates   |\n|                    | in the EAP exchange with the EAP server.     |\n| -                  | -                                            |\n| Direct             | Discovers CAPs.  Initiates                   |\n| pre-authentication | pre-authentication with each, followed by    |\n|                    | EAP authentication as above, but using IP    |\n|                    | rather than L2 transport for the EAP frames. |\n| -                  | -                                            |\n| Indirect           | Enters into a full EAP exchange when         |\n| pre-authentication | triggered, using either L2 or L3 transport   |\n|                    | for the frames.                              |\n| -                  | -                                            |\n| EAP                | Determines that EAP re-authentication is     |\n| re-authentication  | possible based on discovery or authenticator |\n|                    | prompting.  Participates in ERP exchange     |\n|                    | with the ER server.                          |\n| -                  | -                                            |\n| AAK                | Determines that AAK is possible based on     |\n|                    | discovery or serving authenticator           |\n|                    | prompting.  Discovers CAPs.  Participates in |\n|                    | ERP/AAK exchange, requesting distribution of |\n|                    | keying material to the CAPs.                 |\n| -                  | -                                            |\n| ER key management  | No role.                                     |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Table 1: Functions of the Peer",
      "ja": "表1：ピアの機能"
    },
    {
      "indent": 0,
      "text": "5.2. Functions of the Serving Authenticator",
      "section_title": true,
      "ja": "5.2. サービングオーセンティケータの機能"
    },
    {
      "indent": 3,
      "text": "The serving authenticator participates in the functions described in Section 4, as shown in Table 2.",
      "ja": "表2に示すようになるオーセンティケータは、セクション4で説明した機能に関与します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Function           | Serving Authenticator Role                   |\n+--------------------+----------------------------------------------+\n| EAP authentication | No role.                                     |\n| -                  | -                                            |\n| Direct             | No role.                                     |\n| pre-authentication |                                              |\n| -                  | -                                            |\n| Indirect           | Discovers CAPs.  Initiates an EAP exchange   |\n| pre-authentication | between the peer and the EAP server through  |\n|                    | each candidate authenticator.  Mediates      |\n|                    | between L2 transport of EAP frames on the    |\n|                    | peer side and a non-AAA protocol over IP     |\n|                    | toward the CAP.                              |\n| -                  | -                                            |\n| EAP                | No role.                                     |\n| re-authentication  |                                              |\n| -                  | -                                            |\n| AAK                | Mediates between L2 transport of AAK frames  |\n|                    | on the peer side and AAA transport toward    |\n|                    | the ER/AAK server.                           |\n| -                  | -                                            |\n| ER key management  | No role.                                     |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Table 2: Functions of the Serving Authenticator",
      "ja": "表2：サービング認証の機能"
    },
    {
      "indent": 0,
      "text": "5.3. Functions of the Candidate Authenticator",
      "section_title": true,
      "ja": "5.3. 候補オーセンティケータの機能"
    },
    {
      "indent": 3,
      "text": "The candidate authenticator participates in the functions described in Section 4, as shown in Table 3.",
      "ja": "表3に示すように、候補オーセンティケータは、セクション4で説明した機能に関与します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Function           | Candidate Authenticator Role                 |\n+--------------------+----------------------------------------------+\n| EAP authentication | Invokes AAA network access authentication    |\n|                    | and authorization upon handover/initial      |\n|                    | attachment.  Mediates between L2 transport   |\n|                    | of EAP frames on the peer link and AAA       |\n|                    | transport toward the EAP server.             |\n| -                  | -                                            |\n| Direct             | Invokes AAA network access authentication    |\n| pre-authentication | and authorization when the peer initiates    |\n|                    | authentication.  Mediates between non-AAA L3 |\n|                    | transport of EAP frames on the peer side and |\n|                    | AAA transport toward the EAP server.         |\n| -                  | -                                            |\n| Indirect           | Same as direct pre-authentication, except    |\n| pre-authentication | that it communicates with the serving        |\n|                    | authenticator rather than the peer.          |\n| -                  | -                                            |\n| EAP                | Invokes AAA network access authentication    |\n| re-authentication  | and authorization upon handover.  Discovers  |\n|                    | or is configured with the address of the ER  |\n|                    | server.  Mediates between L2 transport of    |\n|                    | ERP frames on the peer side and AAA          |\n|                    | transport toward the ER server.              |\n| -                  | -                                            |\n| AAK                | Receives and saves the pMSK.                 |\n| -                  | -                                            |\n| ER key management  | No role.                                     |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 13,
      "text": "Table 3: Functions of the Candidate Authenticator",
      "ja": "表3：候補オーセンティケータの機能"
    },
    {
      "indent": 0,
      "text": "5.4. Functions of the EAP Server",
      "section_title": true,
      "ja": "5.4.  EAPサーバの機能"
    },
    {
      "indent": 3,
      "text": "The EAP server participates in the functions described in Section 4, as shown in Table 4.",
      "ja": "表4に示すように、EAPサーバは、セクション4で説明した機能に関与します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Function           | EAP Server Role                              |\n+--------------------+----------------------------------------------+\n| EAP authentication | Terminates EAP signaling between it and the  |\n|                    | peer via the candidate authenticator.        |\n|                    | Determines whether network access            |\n|                    | authentication succeeds or fails.  Provides  |\n|                    | the MSK to the authenticator (via AAA).      |\n| -                  | -                                            |\n| Direct             | Same as for EAP authentication.              |\n| pre-authentication |                                              |\n| -                  | -                                            |\n| Indirect           | Same as for EAP authentication.              |\n| pre-authentication |                                              |\n| -                  | -                                            |\n| EAP                | Provides an rRK or DS-rRK to the ER server   |\n| re-authentication  | (via AAA).                                   |\n| -                  | -                                            |\n| AAK                | Same as for EAP re-authentication.           |\n| -                  | -                                            |\n| ER key management  | Creates an rRK or DS-rRK and distributes it  |\n|                    | to the ER server requesting the information. |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 4: Functions of the EAP Server",
      "ja": "表4：EAPサーバの機能"
    },
    {
      "indent": 0,
      "text": "5.5. Functions of the ER Server",
      "section_title": true,
      "ja": "5.5.  ERサーバの機能"
    },
    {
      "indent": 3,
      "text": "The ER server participates in the functions described in Section 4, as shown in Table 5.",
      "ja": "表5に示されるようにERサーバは、セクション4で説明した機能に関与します。"
    },
    {
      "indent": 3,
      "text": "+--------------------+----------------------------------------------+\n| Function           | ER Server Role                               |\n+--------------------+----------------------------------------------+\n| EAP authentication | No role.                                     |\n| -                  | -                                            |\n| Direct             | No role.                                     |\n| pre-authentication |                                              |\n| -                  | -                                            |\n| Indirect           | No role.                                     |\n| pre-authentication |                                              |\n| -                  | -                                            |\n| EAP                | Acquires an rRK or DS-rRK as applicable when |\n| re-authentication  | necessary.  Terminates ERP signaling between |\n|                    | it and the peer via the candidate            |\n|                    | authenticator.  Determines whether network   |\n|                    | access authentication succeeds or fails.     |\n|                    | Provides an MSK to the authenticator.        |\n| -                  | -                                            |\n| AAK                | Acquires an rRK or DS-rRK as applicable when |\n|                    | necessary.  Derives pMSKs and passes them to |\n|                    | the CAPs.                                    |\n| -                  | -                                            |\n| ER key management  | Receives and saves an rRK or DS-rRK as       |\n|                    | applicable.                                  |\n+--------------------+----------------------------------------------+",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Table 5: Functions of the ER Server",
      "ja": "表5：ERサーバの機能"
    },
    {
      "indent": 0,
      "text": "6. Usage Scenarios",
      "section_title": true,
      "ja": "6.使用シナリオ"
    },
    {
      "indent": 3,
      "text": "Depending upon whether a change in a domain or access technology is involved, we have the following usage scenarios.",
      "ja": "ドメインまたはアクセス技術の変化が関与しているかどうかに応じて、我々は以下の使用シナリオを持っています。"
    },
    {
      "indent": 0,
      "text": "6.1. Simple Re-Authentication",
      "section_title": true,
      "ja": "6.1. シンプルな再認証"
    },
    {
      "indent": 3,
      "text": "The peer remains stationary and re-authenticates to the original access point. Note that in this case, the SAP takes the role of the CAP in the discussion above.",
      "ja": "ピアは静止したままで、元のアクセスポイントに再認証します。この場合には、SAPは、上記の説明ではCAPの役割を取ることに注意してください。"
    },
    {
      "indent": 0,
      "text": "6.2. Intra-Domain Handover",
      "section_title": true,
      "ja": "6.2. ドメイン内ハンドオーバ"
    },
    {
      "indent": 3,
      "text": "The peer moves between two authenticators in the same domain. In this scenario, the peer communicates with the ER server via the ER authenticator within the same network.",
      "ja": "同じドメイン内の2つのオーセンティケータとの間のピア移動します。このシナリオでは、ピアは、同じネットワーク内のERのオーセンティケータを介してERサーバと通信します。"
    },
    {
      "indent": 0,
      "text": "6.3. Inter-Domain Handover",
      "section_title": true,
      "ja": "6.3. ドメイン間ハンドオーバ"
    },
    {
      "indent": 3,
      "text": "The peer moves between two different domains. In this scenario, the peer communicates with more than one ER server via one or two different ER authenticators. One ER server is located in the current network as the peer, and one is located in the previous network from which the peer moves. Another ER server is located in the home network to which the peer belongs.",
      "ja": "ピアは、2つの異なるドメイン間を移動します。このシナリオでは、ピアは、1つのまたは2つの異なるERのオーセンティケータを介して複数のERサーバと通信します。一台のERサーバはピアとして現在のネットワークに位置し、1は、前のネットワークからピア移動に位置しています。別のERサーバは、ピアが所属するホームネットワーク内に位置しています。"
    },
    {
      "indent": 0,
      "text": "6.4. Inter-Technology Handover",
      "section_title": true,
      "ja": "6.4. 技術間ハンドオーバ"
    },
    {
      "indent": 3,
      "text": "The peer moves between two heterogeneous networks. In this scenario, the peer needs to support at least two access technologies. The coverage of two access technologies usually is overlapped during handover. In this case, only authentication corresponding to intra-domain handover is required; i.e., the peer can communicate with the same local ER server to complete authentication and obtain keying material corresponding to the peer.",
      "ja": "ピアは、二つの異種ネットワーク間を移動します。このシナリオでは、ピアは、少なくとも2つのアクセス技術をサポートする必要があります。 2つのアクセス技術の適用範囲は、通常、ハンドオーバー中に重なっています。この場合、ドメイン内ハンドオーバに対応する唯一の認証が必要とされます。すなわち、ピアは認証を完了し、ピアに対応する鍵材料を得るために、同じローカルERサーバと通信することができます。"
    },
    {
      "indent": 0,
      "text": "7. AAA Considerations",
      "section_title": true,
      "ja": "7. AAAに関する注意事項"
    },
    {
      "indent": 3,
      "text": "This section provides an analysis of how the AAA protocol can be applied in the HOKEY architecture in accordance with Section 4.1 (\"Authentication Subsystem Functional Overview\").",
      "ja": "このセクションでは、AAAプロトコルは、セクション4.1（「認証サブシステム機能の概要」）に従ってHOKEYアーキテクチャに適用することができる方法の分析を提供します。"
    },
    {
      "indent": 0,
      "text": "7.1. Authorization",
      "section_title": true,
      "ja": "7.1. 認定"
    },
    {
      "indent": 3,
      "text": "Authorization is a major issue in deployments. Wherever the peer moves around, the home AAA server provides authorization for the peer during its handover. However, it is unnecessary to couple authorization with authentication at every handover, since authorization is only needed when the peer is initially attached to the network or moves between two different AAA domains. The EAP key management document [RFC5247] discusses several vulnerabilities that are common to handover mechanisms. One important issue arises from the way that the authorization decisions might be handled at the AAA server during network access authentication. For example, if AAA proxies are involved, they may also influence authorization decisions. Furthermore, the reasons for choosing a particular decision are not communicated to the AAA clients. In fact, the AAA client only knows the final authorization result. Another issue relates to session management. In some circumstances, when the peer moves from one authenticator to another, the peer may be authenticated by the different authenticator during a period of time, and the authenticator to which the peer is currently attached needs to create a new AAA user session; however, the AAA server should not view these handoffs as different sessions. Otherwise, this may affect user experience and also cause accounting or logging issues. For example, session ID creation, in most cases, is done by each authenticator to which the peer attaches. In this sense, the new authenticator acting as AAA client needs to create a new AAA user session from scratch, which forces its corresponding AAA server to terminate the existing user session with the previous authenticator and set up a new user session with the new authenticator. This may complicate the setup and maintenance of the AAA user session.",
      "ja": "認可は、展開の主要な問題です。どこピアがホームAAAサーバは、そのハンドオーバー中のピアの認証を提供し、周りに移動します。しかし、ピアが最初にネットワークまたは2つの異なるAAAドメイン間の移動に取り付けられたときに許可のみ必要とされるので、すべてのハンドオーバ時の認証と結合認証に不要です。 EAPキー管理文献[RFC5247]は、ハンドオーバ機構に共通するいくつかの脆弱性を論じています。一つの重要な問題は、認可決定がネットワークアクセス認証中にAAAサーバで処理される可能性があります方法から生じます。 AAAプロキシが関与している場合たとえば、彼らはまた、許可の決定に影響を与える可能性があります。さらに、特定の意思決定を選んだ理由は、AAAクライアントに伝達されていません。実際には、AAAクライアントは、最終的な認証結果を知っています。もう一つの問題は、セッション管理に関するものです。いくつかの状況、別のオーセンティケータからピア移動で、ピアが一定期間の間に異なるオーセンティケータによって認証することができ、ピアは、現在、新しいAAAユーザセッションを作成する必要が結合されているオーセンティケータ。しかし、AAAサーバは、別のセッションとしてこれらのハンドオフを見るべきではありません。そうでなければ、これは、ユーザーエクスペリエンスに影響を与え、また、会計や伐採の問題を引き起こす可能性があります。例えば、セッションIDの作成は、ほとんどの場合、ピアと接続している各オーセンティケータによって行われます。この意味で、AAAクライアントとして動作する新しいオーセンティケータは、前オーセンティケータとの既存のユーザセッションを終了するには、それに対応するAAAサーバを強制し、新しいオーセンティケータで新しいユーザーセッションをセットアップする最初から新しいAAAのユーザーセッションを作成する必要があります。これはAAAのユーザーセッションのセットアップやメンテナンスを複雑にする可能性があります。"
    },
    {
      "indent": 0,
      "text": "7.2. Transport Aspect",
      "section_title": true,
      "ja": "7.2. 交通機関の外観"
    },
    {
      "indent": 3,
      "text": "The existing AAA protocols can be used to carry EAP and ERP messages between the AAA server and AAA clients. AAA transport of ERP messages is specified in Hoeper, Nakhjiri & Ohba [RFC5749] and Bournelle, et al. [DIAMETER-ERP]. AAA transport of EAP messages is specified in [RFC4072]. Key transport also can be performed through a AAA protocol. Zorn, Wu & Cakulev [DIAMETER-AVP] specify a set of Attribute-Value Pairs (AVPs) providing native Diameter support of cryptographic key delivery.",
      "ja": "既存のAAAプロトコルは、AAAサーバとAAAクライアント間のEAPとERPのメッセージを運ぶために使用することができます。 ERPメッセージのAAA輸送がら、Hoeper、Nakhjiri＆大場[RFC5749]とBournelleで指定されています。 [DIAMETER-ERP]。 EAPメッセージをAAA輸送は[RFC4072]で指定されています。主な交通機関はまた、AAAプロトコルを介して行うことができます。ゾルン、ウー＆Cakulev [DIAMETER-AVP]は暗号鍵配送のネイティブ直径サポートを提供する属性値ペア（AVPの）のセットを指定します。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not introduce any new security vulnerabilities.",
      "ja": "このドキュメントは、新しいセキュリティの脆弱性を導入しません。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgments",
      "section_title": true,
      "ja": "9.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Mark Jones, Zhen Cao, Semyon Mizikovsky, Stephen Farrell, Ondrej Sury, Richard Barnes, Jari Arkko, and Lionel Morand for their reviews and comments.",
      "ja": "作者は彼らのレビューとコメントのためにマーク・ジョーンズ、ジェン曹操、セミヨンMizikovsky、スティーブン・ファレル、オンドレイSury、リチャード・バーンズ、ヤリArkko、とライオネル・モランに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC3748] Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H. Levkowetz, Ed., \"Extensible Authentication Protocol (EAP)\", RFC 3748, June 2004.",
      "ja": "[RFC3748] Aboba、B.、ブルンク、L.、Vollbrecht、J.、カールソン、J.、およびH. Levkowetz、編、 \"拡張認証プロトコル（EAP）\"、RFC 3748、2004年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5169] Clancy, T., Nakhjiri, M., Narayanan, V., and L. Dondeti, \"Handover Key Management and Re-Authentication Problem Statement\", RFC 5169, March 2008.",
      "ja": "[RFC5169]クランシー、T.、Nakhjiri、M.、ナラヤナン、V.、およびL. Dondeti、 \"ハンドオーバキー管理と再認証問題声明\"、RFC 5169、2008年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5836] Ohba, Y., Ed., Wu, Q., Ed., and G. Zorn, Ed., \"Extensible Authentication Protocol (EAP) Early Authentication Problem Statement\", RFC 5836, April 2010.",
      "ja": "[RFC5836]オオバ、Y.、エド。、ウー、Q.、エド。、及びG.ゾルン、編、 \"拡張認証プロトコル（EAP）は、初期認証問題文\"、RFC 5836、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6696] Cao, Z., He, B., Shi, Y., Wu, Q., Ed., and G. Zorn, Ed., \"EAP Extensions for the EAP Re-authentication Protocol (ERP)\", RFC 6696, July 2012.",
      "ja": "[RFC6696]ツァオ、Z.、彼、B.、市、Y.、ウー、Q.、エド。、及びG.ゾルン、エド。、 \"EAP再認証プロトコル（ERP）のためのEAP拡張\"、RFC 6696、2012年7月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[DIAMETER-AVP] Zorn, G., Wu, Q., and V. Cakulev, \"Diameter Attribute-Value Pairs for Cryptographic Key Transport\", Work in Progress, August 2011.",
      "ja": "[DIAMETER-AVP]ソーン、G.、呉、Q.、およびV. Cakulev、 \"暗号鍵輸送のための直径アトリビュートと値のペア\"、進歩、2011年8月での作業。"
    },
    {
      "indent": 3,
      "text": "[DIAMETER-ERP] Bournelle, J., Morand, L., Decugis, S., Wu, Q., and G. Zorn, \"Diameter Support for the EAP Re-authentication Protocol (ERP)\", Work in Progress, June 2012.",
      "ja": "[DIAMETER-ERP] Bournelle、J.、モラン、L.、Decugis、S.、ウー、Q.、およびG.ゾルン、 \"EAP再認証プロトコル（ERP）は直径サポート\"、進歩、月にワーク2012。"
    },
    {
      "indent": 3,
      "text": "[RFC4072] Eronen, P., Ed., Hiller, T., and G. Zorn, \"Diameter Extensible Authentication Protocol (EAP) Application\", RFC 4072, August 2005.",
      "ja": "[RFC4072] Eronen、P.編、ヒラー、T.、およびG.ゾルン、 \"直径拡張認証プロトコル（EAP）アプリケーション\"、RFC 4072、2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5247] Aboba, B., Simon, D., and P. Eronen, \"Extensible Authentication Protocol (EAP) Key Management Framework\", RFC 5247, August 2008.",
      "ja": "[RFC5247] Aboba、B.、サイモン、D.、およびP. Eronen、 \"拡張認証プロトコル（EAP）鍵管理フレームワーク\"、RFC 5247、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5295] Salowey, J., Dondeti, L., Narayanan, V., and M. Nakhjiri, \"Specification for the Derivation of Root Keys from an Extended Master Session Key (EMSK)\", RFC 5295, August 2008.",
      "ja": "[RFC5295] Salowey、J.、Dondeti、L.、ナラヤナン、V.、およびM. Nakhjiri、RFC 5295 \"拡張マスタセッションキー（EMSK）からルート鍵の導出のための仕様\"、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5749] Hoeper, K., Ed., Nakhjiri, M., and Y. Ohba, Ed., \"Distribution of EAP-Based Keys for Handover and Re-Authentication\", RFC 5749, March 2010.",
      "ja": "[RFC5749] Hoeper、K.、エド。、Nakhjiri、M.、およびY.オオバ、編、 \"ハンドオーバおよび再認証のためのEAPベースの鍵の配布\"、RFC 5749、2010年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5873] Ohba, Y. and A. Yegin, \"Pre-Authentication Support for the Protocol for Carrying Authentication for Network Access (PANA)\", RFC 5873, May 2010.",
      "ja": "[RFC5873]オオバ、Y.及びA. Yegin、RFC 5873、2010年5月 \"ネットワークアクセス（PANA）の認証を搬送するプロトコルのための事前認証サポート\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6440] Zorn, G., Wu, Q., and Y. Wang, \"The EAP Re-authentication Protocol (ERP) Local Domain Name DHCPv6 Option\", RFC 6440, December 2011.",
      "ja": "[RFC6440]ゾルン、G.、ウー、Q.、及びY.ワン、 \"EAP再認証プロトコル（ERP）ローカル・ドメインネームのDHCPv6オプション\"、RFC 6440、2011年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6630] Cao, Z., Deng, H., Wu, Q., and G. Zorn, Ed., \"EAP Re-authentication Protocol Extensions for Authenticated Anticipatory Keying (ERP/AAK)\", RFC 6630, June 2012.",
      "ja": "[RFC6630]曹操、Z.、鄧小平、H.、呉、Q.、およびG.ツォルン、エド。、 \"認証予期キーイング（ERP / AAK）のためのEAP再認証プロトコル拡張\"、RFC 6630、2012年6月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Glen Zorn (editor) Network Zen 227/358 Thanon Sanphawut Bang Na, Bangkok 10260 Thailand Phone: +66 (0) 909 201060 EMail: glenzorn@gmail.com",
      "ja": "グレンソーン（エディタ）ネットワーク禅358分の227タノンSanphawutバンナー、バンコク10260タイ電話：+66（0）909 201060 Eメール：glenzorn@gmail.com"
    },
    {
      "indent": 3,
      "text": "Qin Wu Huawei Technologies Co., Ltd. 101 Software Avenue, Yuhua District Nanjing, JiangSu 210012 China Phone: +86-25-84565892 EMail: bill.wu@huawei.com",
      "ja": "技術協力、（株）101ソフトウェアの大通りなど蕪湖AにおけるQ、Y Uは地区のNaN北京、江蘇省210012中国電話：。+ 86-25-84565892メール:.ビル・ノーHuawei社@ .COMを描きます"
    },
    {
      "indent": 3,
      "text": "Tom Taylor Huawei Technologies Co., Ltd. Ottawa, Ontario Canada EMail: tom.taylor.stds@gmail.com",
      "ja": "トム・テイラー華為技術有限公司オタワ、オンタリオ州カナダEメール：tom.taylor.stds@gmail.com"
    },
    {
      "indent": 3,
      "text": "Yoav Nir Check Point 5 Hasolelim St. Tel Aviv 67897 Israel EMail: ynir@checkpoint.com",
      "ja": "ヨアフニールチェック・ポイント5 Hasolelim聖テルアビブ67897イスラエルメール：ynir@checkpoint.com"
    },
    {
      "indent": 3,
      "text": "Katrin Hoeper Motorola Solutions, Inc. 1301 E. Algonquin Road Schaumburg, IL 60196 USA EMail: khoeper@motorolasolutions.com>",
      "ja": "カトリンHoeperモトローラ・ソリューションズ株式会社1301 E.アルゴンキンロードショームバーグ、IL 60196 USA電子メール：khoeper@motorolaso​​lutions.com>"
    },
    {
      "indent": 3,
      "text": "Sebastien Decugis INSIDE Secure 41 Parc Club du Golf Aix-en-Provence 13856 France Phone: +33 (0)4 42 39 63 00 EMail: sdecugis@freediameter.net",
      "ja": "セバスチャンDecugis INSIDEセキュア41パークゴルフクラブエクサンプロバンス13856フランス電話：+33（0）4 42 39 63 00 Eメール：sdecugis@freediameter.net"
    }
  ]
}