{
  "title": {
    "text": "RFC 6719 - The Minimum Rank with Hysteresis Objective Function",
    "ja": "RFC 6719 - ヒステリシス目的関数と最低ランク"
  },
  "number": 6719,
  "created_at": "2019-10-29 20:26:08.039586+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        O. Gnawali\nRequest for Comments: 6719                         University of Houston\nCategory: Standards Track                                       P. Levis\nISSN: 2070-1721                                      Stanford University\n                                                          September 2012",
      "raw": true
    },
    {
      "indent": 10,
      "text": "The Minimum Rank with Hysteresis Objective Function",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Routing Protocol for Low-Power and Lossy Networks (RPL) constructs routes by using Objective Functions that optimize or constrain the routes it selects and uses. This specification describes the Minimum Rank with Hysteresis Objective Function (MRHOF), an Objective Function that selects routes that minimize a metric, while using hysteresis to reduce churn in response to small metric changes. MRHOF works with additive metrics along a route, and the metrics it uses are determined by the metrics that the RPL Destination Information Object (DIO) messages advertise.",
      "ja": "低消費電力と非可逆ネットワークのためのルーティングプロトコル（RPL）は、最適化するか、選択して使用するルートを制限目的関数を使用してルートを構築します。この仕様は、ヒステリシス目的関数と最低ランク（MRHOF）、小メトリックの変化に応答して解約を減少させるためにヒステリシスを使用しながら、メトリックを最小化する経路を選択する目的関数を記述する。 MRHOFは、ルートに沿っ添加物メトリクスで動作し、それが使用するメトリックは、RPL先情報オブジェクト（DIO）のメッセージが宣伝メトリックによって決定されます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6719.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6719で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2\n2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n3.  The Minimum Rank with Hysteresis Objective Function  . . . . .  4\n  3.1.  Computing the Path Cost  . . . . . . . . . . . . . . . . .  4\n  3.2.  Parent Selection . . . . . . . . . . . . . . . . . . . . .  5\n    3.2.1.  When Parent Selection Runs . . . . . . . . . . . . . .  6\n    3.2.2.  Parent Selection Algorithm . . . . . . . . . . . . . .  6\n  3.3.  Computing Rank . . . . . . . . . . . . . . . . . . . . . .  7\n  3.4.  Advertising the Path Cost  . . . . . . . . . . . . . . . .  8\n  3.5.  Working without Metric Containers  . . . . . . . . . . . .  8\n4.  Using MRHOF for Metric Maximization  . . . . . . . . . . . . .  9\n5.  MRHOF Variables and Parameters . . . . . . . . . . . . . . . .  9\n6.  Manageability  . . . . . . . . . . . . . . . . . . . . . . . . 10\n  6.1.  Device Configuration . . . . . . . . . . . . . . . . . . . 10\n  6.2.  Device Monitoring  . . . . . . . . . . . . . . . . . . . . 11\n7.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 12\n8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 12\n9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12\n10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n  10.1. Normative References . . . . . . . . . . . . . . . . . . . 12\n  10.2. Informative References . . . . . . . . . . . . . . . . . . 13",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "An Objective Function specifies how RPL [RFC6550] selects paths. For example, if an RPL instance uses an Objective Function that minimizes hop count, RPL will select paths with a minimum hop count. RPL requires that all nodes in a network use a common Objective Function; relaxing this requirement may be a subject of future study.",
      "ja": "目的関数は、RPL [RFC6550]はパスを選択する方法を指定します。 RPLインスタンスはホップカウントを最小化する目的関数を使用する場合、例えば、RPLは、最小ホップ数を有する経路を選択します。 RPLは、ネットワーク内のすべてのノードが共通の目的関数を使用する必要があります。この要件を緩和することは、今後の研究の対象とすることができます。"
    },
    {
      "indent": 3,
      "text": "The nodes running RPL might use a number of metrics to describe a link or a node [RFC6551] and make these metrics available for route selection. RPL advertises metrics in RPL Destination Information Object (DIO) messages with a Metric Container suboption. An Objective Function can use these metrics to choose routes.",
      "ja": "ノード走行RPLは、リンクまたはノード[RFC6551]を記述し、経路選択のためのこれらの指標を利用できるようにする指標の数を使用するかもしれません。 RPLは、メトリックコンテナサブオプションを持つRPL先情報オブジェクト（DIO）のメッセージにメトリックをアドバタイズします。目的関数は、ルートを選択するために、これらのメトリックを使用することができます。"
    },
    {
      "indent": 3,
      "text": "To decouple the details of an individual metric or Objective Function from forwarding and routing, RPL describes routes through a value called Rank. Rank, roughly speaking, corresponds to the distance associated with a route. RPL defines how nodes decide on paths based on Rank and advertise their Rank. An Objective Function defines how nodes calculate Rank, based on the Rank of its potential parents, metrics, and other network properties.",
      "ja": "転送およびルーティングから個々のメトリックまたは目的関数の詳細を分離するために、RPLはランクと呼ばれる値を介して経路を記述する。ランクは、大まかに言えば、ルートに関連付けられた距離に相当します。 RPLは、ノードがランクに基づいてパスを決定し、そのランクを宣伝方法を定義します。目的関数は、ノードがその潜在的な親、メトリクス、およびその他のネットワークプロパティのランクに基づいて、ランクを計算する方法を定義します。"
    },
    {
      "indent": 3,
      "text": "This specification describes the Minimum Rank with Hysteresis Objective Function (MRHOF), an Objective Function for RPL, which uses hysteresis while selecting the path with the smallest metric value. The metric that MRHOF uses is determined by the metrics in the DIO Metric Container. For example, the use of MRHOF with the latency metric allows RPL to find stable minimum-latency paths from the nodes to a root in the Directed Acyclic Graph (DAG) instance [RFC6550]. The use of MRHOF with the Expected Transmission Count (ETX) metric [RFC6551] allows RPL to find the stable minimum-ETX paths from the nodes to a root in the DAG instance. In the absence of a metric in the DIO Metric Container or of a DIO Metric Container, MRHOF defaults to using ETX to compute Rank, as described in Section 3.5.",
      "ja": "この仕様は、最小のメトリック値を有する経路を選択しながら、ヒステリシスを使用ヒステリシス目的関数（MRHOF）、RPLのための目的関数を用いて最小ランクが記載されています。 MRHOFが使用するメトリックは、DIOメトリックコンテナのメトリックによって決定されます。例えば、待ち時間測定基準とMRHOFの使用は、RPLは、有向非巡回グラフ（DAG）インスタンス[RFC6550]のルートへのノードから安定した最小遅延パスを見つけることができます。予想伝送カウント（ETX）メトリック[RFC6551]とMRHOFの使用は、RPLは、DAGインスタンスのルートへのノードから安定した最小ETXパスを見つけることができます。セクション3.5で説明したようにDIOメトリックのコンテナまたはDIOメトリック容器のメトリックの非存在下で、ETXを使用するMRHOFのデフォルトは、ランクを計算します。"
    },
    {
      "indent": 3,
      "text": "Because MRHOF seeks to minimize path costs as described by metrics, it can only be used with additive metrics. MRHOF does not support metrics that are not additive.",
      "ja": "MRHOFメトリックによって記載されているように、パスコストを最小限にしようとするので、それが唯一の添加剤メトリックで使用することができます。 MRHOFは加算されていないメトリックをサポートしていません。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "キーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、 \"SHALL\"、 \"SHOULD\"、 \"ないもの\"、 \"推奨\" \"ない（SHOULD NOT）\"、 \"MAY\"、 \"推奨NOT\"、および「OPTIONAL RFC 2119 [RFC2119]に記載されているように「この文書に解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "The terminologies used in this document are consistent with the terminologies described in [ROLL-TERM] and [RFC6551].",
      "ja": "本書で使用される用語は、[ROLL-TERM]と[RFC6551]に記載の用語と一致しています。"
    },
    {
      "indent": 3,
      "text": "The terminologies used in this document are also consistent with the terminologies described in [RFC6550], except the term Rank. In this document, Rank refers to the value of the Rank field, not DAGRank as in [RFC6550].",
      "ja": "本書で使用される用語は、用語ランクを除き、また、[RFC6550]に記載の用語と一致しています。この文書では、ランクは、[RFC6550]のように順位フィールドの値ではなく、DAGRankを指します。"
    },
    {
      "indent": 3,
      "text": "This document introduces three terms:",
      "ja": "この文書では、3つの用語が導入されています。"
    },
    {
      "indent": 3,
      "text": "Selected metric: The metric chosen for path selection by the network operator. MRHOF supports using a single metric for path selection. The decision to use a metric (other than ETX) as the selected metric is indicated by the presence of the chosen metric in the DIO Metric Container. The selection of the ETX metric is indicated by the absence of the Metric Container, in which case ETX is advertised as Rank.",
      "ja": "選択されたメトリック：ネットワークオペレータによって経路選択のために選択されたメトリック。 MRHOFはパス選択のための単一のメトリックを使用してサポートしています。選択メトリックとして（ETX以外）メトリックを使用する決定は、DIOメトリックコンテナ内の選択されたメトリックの存在によって示されます。 ETXメトリックの選択は、ETXは、ランクとして宣伝されている場合にはメトリック容器の不在によって示されます。"
    },
    {
      "indent": 3,
      "text": "Path cost: Path cost quantifies a property of an end-to-end path. Path cost is obtained by each node summing up the selected link metric to the path cost advertised by the parent. Path cost can be used by RPL to compare different paths.",
      "ja": "パスコスト：パスコストは、エンドツーエンドのパスの性質を定量化します。パスコストは、親によってアドバタイズパスコストに選択されたリンクメトリックを合計する各ノードによって得られます。パスコストが異なるパスを比較するためにRPLで使用することができます。"
    },
    {
      "indent": 3,
      "text": "Worst parent: The node in the parent set with the largest path cost.",
      "ja": "最悪の親：最大のパスコストを設定し、親ノード。"
    },
    {
      "indent": 0,
      "text": "3. The Minimum Rank with Hysteresis Objective Function",
      "section_title": true,
      "ja": "ヒステリシス目的関数を持つ3.最低ランク"
    },
    {
      "indent": 3,
      "text": "The Minimum Rank with Hysteresis Objective Function, MRHOF, is designed to find the paths with the smallest path cost while preventing excessive churn in the network. It does so by using two mechanisms. First, it finds the minimum cost path, i.e., path with the minimum Rank. Second, it switches to that minimum Rank path only if it is shorter (in terms of path cost) than the current path by at least a given threshold. This second mechanism is called \"hysteresis\".",
      "ja": "ヒステリシス目的関数MRHOFと最低ランクは、ネットワークに過度の解約を防止しつつ、最小のパスコストを有する経路を見つけるように設計されています。これは、2つのメカニズムを使用することにより、そのようにします。まず、最小ランクの最小コスト経路、すなわち、経路を発見します。第二に、それは、少なくとも所定の閾値による電流経路よりも（パスコストの点で）より短い場合にのみ、その最小ランクパスに切り替えます。この第二のメカニズムは、「ヒステリシス」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "MRHOF may be used with any additive metric listed in [RFC6551] as long as the routing objective is to minimize the given routing metric. Nodes MUST support at least one of these metrics: hop count, latency, or ETX. Nodes SHOULD support the ETX metric. MRHOF does not support non-additive metrics.",
      "ja": "MRHOFであれば、ルーティングの目的は、所定のルーティングメトリックを最小化することであるように、[RFC6551]に記載されている任意の添加剤のメトリックと共に使用することができます。ホップ数、遅延、またはETX：ノードは、これらのメトリックの少なくとも一つをサポートしなければなりません。ノードは、ETXメトリックをサポートする必要があります。 MRHOFは非加算メトリックをサポートしていません。"
    },
    {
      "indent": 0,
      "text": "3.1. Computing the Path Cost",
      "section_title": true,
      "ja": "3.1。パスコストの計算"
    },
    {
      "indent": 3,
      "text": "Root nodes (Grounded or Floating) set the variable cur_min_path_cost to the metric value that computes to a Rank of MinHopRankIncrease.",
      "ja": "ルートノード（接地又はフローティング）がMinHopRankIncreaseのランクを計算するメトリック値に変数cur_min_path_costを設定しました。"
    },
    {
      "indent": 3,
      "text": "If a non-root node does not have metrics to compute the path cost through any of the candidate neighbors, it MUST join one of the candidate neighbors as a RPL Leaf.",
      "ja": "非ルートノードが候補隣人のいずれかを介してパスコストを計算するためのメトリックを持っていない場合は、RPLの葉のように候補隣人の1に参加する必要があります。"
    },
    {
      "indent": 3,
      "text": "Otherwise, nodes compute the path cost for each candidate neighbor reachable on an interface. The path cost of a neighbor represents the cost of the path, in terms of the selected metric, from a node to the root of the Destination-Oriented DAG (DODAG) through that neighbor. A non-root node computes a neighbor's path cost by adding two components:",
      "ja": "そうでない場合、ノードは、インターフェース上の到達可能な各候補隣接のパスコストを計算します。近隣のパスコストは、そのネイバーを介してノードから宛先指向DAG（DODAG）のルートに、選択されたメトリックの観点から、経路のコストを表します。非ルート・ノードは、2つのコンポーネントを追加することによって、隣人のパスコストを計算します。"
    },
    {
      "indent": 3,
      "text": "1. If the selected metric is a link metric, the selected metric for the link to the candidate neighbor. If the selected metric is a node metric, the selected metric for the node.",
      "ja": "1.選択されたメトリックは、リンクメトリック、候補隣人へのリンクのための選択されたメトリックである場合。選択されたメトリックは、ノードメトリック、ノードのために選択されたメトリックである場合。"
    },
    {
      "indent": 3,
      "text": "2. The value of the selected metric in the Metric Container in the DIO sent by that neighbor. In case the Metric Container is empty, ETX is the selected metric -- use the Rank advertised by that neighbor as the second component. See Section 3.5 for details on how an ETX metric is used in MRHOF.",
      "ja": "2.そのネイバーによって送信されたDIO内のメトリックのコンテナ内の選択されたメトリックの値。第二成分としてそのネイバーによってアドバタイズランクを使用する - 場合メトリックコンテナETXは、選択されたメトリックであり、空です。 ETXメトリックはMRHOFに使用されている方法の詳細については、セクション3.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "A node SHOULD compute the path cost for the path through each candidate neighbor reachable through an interface. If a node cannot compute the path cost for the path through a candidate neighbor, the node MUST NOT select the candidate neighbor as its preferred parent. However, if the node cannot compute the path cost through any neighbor, it may join the candidate neighbor as a Leaf, as described above.",
      "ja": "ノードは、インターフェースを介して到達可能な各候補隣接通る経路のための経路コストを計算すべきです。ノードが候補隣人を通るパスのパスコストを計算することができない場合、ノードは、その好ましい親として候補隣人を選択してはなりません。ノードが隣接通る経路コストを計算できない場合しかし、上述したように、それは、リーフとして候補隣人に参加することができます。"
    },
    {
      "indent": 3,
      "text": "If the selected metric is a link metric and the metric of the link to a neighbor is not available, the path cost for the path through that neighbor SHOULD be set to MAX_PATH_COST. This cost value will prevent this path from being considered for path selection.",
      "ja": "選択されたメトリックは、リンクメトリックと隣人へのリンクのメトリックが利用できない場合、そのネイバーを通るパスのパスコストがMAX_PATH_COSTに設定する必要があります。このコスト値は、パス選択のために検討されてから、このパスを防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "If the selected metric is a node metric, and the metric is not available, the path cost through all the neighbors SHOULD be set to MAX_PATH_COST.",
      "ja": "選択されたメトリックは、ノードの指標であり、メトリックが使用できない場合、すべてのネイバーを通るパスコストはMAX_PATH_COSTに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The path cost corresponding to a neighbor SHOULD be recomputed each time any of the following conditions are met:",
      "ja": "隣人に対応するパスコストは、以下のいずれかの条件が満たされるたびに再計算されるべきです。"
    },
    {
      "indent": 3,
      "text": "1. The selected metric of the link to the candidate neighbor is updated.",
      "ja": "1.候補隣人へのリンクを選択したメトリックが更新されます。"
    },
    {
      "indent": 3,
      "text": "2. The selected metric is a node metric and the metric is updated.",
      "section_title": true,
      "ja": "2.選択されたメトリックは、ノードのメトリックであり、メトリックが更新されます。"
    },
    {
      "indent": 3,
      "text": "3. A node receives a new metric advertisement from the candidate neighbor.",
      "ja": "3.ノードが候補隣人から新しいメトリック広告を受け取ります。"
    },
    {
      "indent": 3,
      "text": "This computation SHOULD also be performed periodically. While it is harmless to delay this computation up to a minimum Trickle interval [RFC6550], longer delays in updating the path cost after the metric is updated or a new metric advertisement is received can lead to stale information.",
      "ja": "この計算はまた、定期的に実行する必要があります。それが最低限のトリクル間隔[RFC6550]までこの計算を遅らせるためには無害ですが、メトリックが更新されたり、新しいメトリック広告が受信された後にパスコストの更新に長い遅延が古い情報につながることができます。"
    },
    {
      "indent": 0,
      "text": "3.2. Parent Selection",
      "section_title": true,
      "ja": "3.2。親の選択"
    },
    {
      "indent": 3,
      "text": "After computing the path cost for all the candidate neighbors reachable through an interface for the current DODAG iteration [RFC6550], a node selects the preferred parent. This process is called \"parent selection\". To allow hysteresis, parent selection maintains a variable, cur_min_path_cost, which is the path cost of the current preferred parent.",
      "ja": "現在DODAG反復のためのインタフェースを介して到達可能な全ての候補近隣のパスコスト[RFC6550]を計算した後、ノードは、好ましい親を選択します。このプロセスは、「親の選択」と呼ばれています。ヒステリシスを可能にするために、親の選択は、現在の好ましい親のパスコストである変数、cur_min_path_costを維持します。"
    },
    {
      "indent": 0,
      "text": "3.2.1. When Parent Selection Runs",
      "section_title": true,
      "ja": "3.2.1。親の選択が実行されると"
    },
    {
      "indent": 3,
      "text": "A MRHOF implementation SHOULD perform Parent Selection each time:",
      "ja": "MRHOFの実装では、親の選択を毎回実行する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. The path cost for an existing candidate neighbor, including the preferred parent, changes. This condition can be checked immediately after the path cost is computed.",
      "ja": "好ましい親、変更を含む既存の候補隣人、1.パスコスト。パスコストが計算された後、この状態はすぐに確認することができます。"
    },
    {
      "indent": 3,
      "text": "2. A new candidate neighbor is inserted into the neighbor table.",
      "section_title": true,
      "ja": "2.新しい候補隣人は、ネイバーテーブルに挿入されています。"
    },
    {
      "indent": 3,
      "text": "If, despite the above, it is necessary to defer the parent selection until a later time (e.g., up to the Trickle minimum interval [RFC6550]), note that doing so can delay the use of better paths available in the network.",
      "ja": "上記にもかかわらず、それは後の時間まで、親の選択を延期する必要がある場合（例えば、トリクル最小間隔[RFC6550]まで）、そうすることが、ネットワークで利用可能なより良いパスの使用を遅らせることができることに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.2.2. Parent Selection Algorithm",
      "section_title": true,
      "ja": "3.2.2。親選択アルゴリズム"
    },
    {
      "indent": 3,
      "text": "If the selected metric for a link is greater than MAX_LINK_METRIC, the node SHOULD exclude that link from consideration during parent selection.",
      "ja": "リンクの選択メトリックがMAX_LINK_METRICよりも大きい場合、ノードは親の選択の際に考慮からそのリンクを除外する必要があります。"
    },
    {
      "indent": 3,
      "text": "A node MUST select the candidate neighbor with the lowest path cost as its preferred parent, except as indicated below:",
      "ja": "ノードは、以下に示す場合を除き、その好ましい親として最小のパスコストを有する候補ネイバーを選択する必要があります。"
    },
    {
      "indent": 3,
      "text": "1. A node MAY declare itself as a Floating root, and hence have no preferred parent, depending on system configuration.",
      "ja": "1.ノードはフローティングルートとして自身を宣言し、ひいてはシステムの構成に応じて、いかなる好適な親を持っていなくてもよいです。"
    },
    {
      "indent": 3,
      "text": "2. If cur_min_path_cost is greater than MAX_PATH_COST, the node MAY declare itself as a Floating root.",
      "ja": "2. cur_min_path_costがMAX_PATH_COSTより大きい場合、ノードはフローティングルートとして自身を宣言することができます。"
    },
    {
      "indent": 3,
      "text": "3. If the smallest path cost for paths through the candidate neighbors is smaller than cur_min_path_cost by less than PARENT_SWITCH_THRESHOLD, the node MAY continue to use the current preferred parent. This is the hysteresis component of MRHOF.",
      "ja": "3.候補近隣介してパスの最小パスコストがPARENT_SWITCH_THRESHOLD未満だけcur_min_path_costよりも小さい場合、ノードは、現在の好ましい親を使用し続けることができます。これはMRHOFのヒステリシスコンポーネントです。"
    },
    {
      "indent": 3,
      "text": "4. If ALLOW_FLOATING_ROOT is 0 and no neighbors are discovered, the node does not have a preferred parent and MUST set cur_min_path_cost to MAX_PATH_COST.",
      "ja": "4. ALLOW_FLOATING_ROOTは0で、何の隣人が発見されていない場合は、ノードが優先親を持っていないとMAX_PATH_COSTにcur_min_path_costを設定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If there are multiple neighbors that share the smallest path cost, a node MAY use a different selection criteria to select which of these neighbors should be considered to have the lowest cost.",
      "ja": "最小のパスコストを共有する複数のネイバーが存在する場合、ノードは最低のコストを持っていると考えるべきであるこれらの隣人のかを選択するために、異なる選択基準を使用するかもしれません。"
    },
    {
      "indent": 3,
      "text": "A node MAY include up to PARENT_SET_SIZE-1 additional candidate neighbors in its parent set. The cost of the path through the nodes in the parent set is smaller than or equal to the cost of the paths through any of the nodes that are not in the parent set. If the cost of the path through the preferred parent and the worst parent is too large, a node MAY keep a smaller parent set than PARENT_SET_SIZE.",
      "ja": "ノードは、その親セットで最大PARENT_SET_SIZE-1の追加候補隣人を含むかもしれません。親セット内のノードを通る経路のコストより小さいか、親セット内にないノードのいずれかを通る経路のコストに等しいです。有利な親と最悪の親を通過する経路のコストが大きすぎる場合、ノードはPARENT_SET_SIZEよりも小さい親セットを保持してもよいです。"
    },
    {
      "indent": 3,
      "text": "Once the preferred parent is selected, the node sets its cur_min_path_cost variable to the path cost corresponding to the preferred parent. The value of the cur_min_path_cost is carried in the Metric Container corresponding to the selected metric when DIO messages are sent.",
      "ja": "好適な親が選択されると、ノードは、好ましい親に対応する経路コストへのcur_min_path_cost変数を設定します。 DIOメッセージが送信されるときcur_min_path_costの値は、選択されたメトリックに対応するメトリックのコンテナで運ばれます。"
    },
    {
      "indent": 0,
      "text": "3.3. Computing Rank",
      "section_title": true,
      "ja": "3.3。コンピューティングランク"
    },
    {
      "indent": 3,
      "text": "DAG roots set their Rank to MinHopRankIncrease.",
      "ja": "DAGの根はMinHopRankIncreaseに自分のランクを設定します。"
    },
    {
      "indent": 3,
      "text": "Once a non-root node selects its parent set, it can use the following table to covert the path cost of a parent (written as Cost in the table) to a Rank value:",
      "ja": "非ルートノードは、その親のセットを選択すると、それは、ランク値（表中のコストとして書かれた）親のパスコストをひそかには、次の表を使用することができます。"
    },
    {
      "indent": 21,
      "text": "+------------------+------------+\n| Node/link Metric |    Rank    |\n+------------------+------------+\n|     Hop-Count    |    Cost    |\n|      Latency     | Cost/65536 |\n|        ETX       |    Cost    |\n+------------------+------------+",
      "raw": true
    },
    {
      "indent": 19,
      "text": "Table 1: Conversion of Metric to Rank",
      "ja": "表1：ランクにメートル法の変換"
    },
    {
      "indent": 3,
      "text": "If MRHOF is used with other metrics, the Rank is undefined. If the Rank is undefined, the node must join one of the neighbors as a RPL Leaf node according to [RFC6550].",
      "ja": "MRHOFは、他のメトリックを使用した場合、ランクは未定義です。ランクが定義されていない場合、ノードは、[RFC6550]に記載RPLリーフノードとして近隣のいずれかに参加しなければなりません。"
    },
    {
      "indent": 3,
      "text": "MRHOF uses this Rank value to compute the Rank it associates with the path through each member of the parent set. The Rank associated with a path through a member of the parent set is the maximum of two values. The first is the corresponding Rank value calculated with the table above, the second is that nodes' advertised Rank plus MinHopRankIncrease.",
      "ja": "MRHOFは、親セットの各メンバーを通る経路と関連付けるランクを計算するために、このランク値を使用します。親セットの部材を介してパスに関連付けられたランクは、2つの値の最大値です。第一は、第二のノードのアドバタイズランクプラスMinHopRankIncreaseことで、上記の表で計算し、対応するランク値です。"
    },
    {
      "indent": 3,
      "text": "A node sets its Rank to the maximum of three values:",
      "ja": "ノードは、3つの値の最大のランクを設定します。"
    },
    {
      "indent": 3,
      "text": "1. The Rank calculated for the path through the preferred parent.",
      "section_title": true,
      "ja": "1.好ましい親通る経路について計算ランク。"
    },
    {
      "indent": 3,
      "text": "2. The Rank of the member of the parent set with the highest advertised Rank, rounded to the next higher integral Rank, i.e., to MinHopRankIncrease * (1 + floor(Rank/MinHopRankIncrease)).",
      "ja": "2.最高アドバタイズランクで設定親のメンバーのランク、即ち、MinHopRankIncrease *（1つの+床（ランク/ MinHopRankIncrease））に、次に高いランク一体に丸め。"
    },
    {
      "indent": 3,
      "text": "3. The largest calculated Rank among paths through the parent set, minus MaxRankIncrease.",
      "ja": "3.最大の計算された親のセットを通るパスのうちランク、マイナスMaxRankIncrease。"
    },
    {
      "indent": 3,
      "text": "The first case is the Rank associated with the path through the preferred parent. The second case covers requirement 5 of Rank advertisements in Section 8.2.1 of [RFC6550]. The third case ensures that a node does not advertise a Rank, which then precludes it from using members of its parent set.",
      "ja": "最初の場合は、好ましい親通る経路に関連付けられたランクです。第二の場合は、[RFC6550]のセクション8.2.1にランク広告の要件5を覆っています。第三の場合は、ノードがその親セットのメンバーを使用してからそれを排除するランクをアドバタイズしないことを保証します。"
    },
    {
      "indent": 3,
      "text": "Note that the third case means that a node advertises a conservative Rank value based on members of its parent set. This conservative value might be significantly higher than the Rank calculated for the path through the preferred parent. Accordingly, picking a parent set whose paths have a large range of Ranks will likely result in subptimal routing: nodes might not choose good paths because they are advertised as much worse than they actually are. The exact selection of a parent set is an implementation decision.",
      "ja": "第三の場合は、ノードは、その親のセットのメンバに基づいて保守的ランク値をアドバタイズすることを意味することに留意されたいです。この保守的な値は、好ましい親通る経路について算出ランクよりも有意に高いかもしれません。したがって、そのパスランクの大規模な範囲を持っている親セットを選ぶことはおそらくsubptimalルーティングになります：彼らは同じくらい悪化し、彼らが実際よりも宣伝されているため、ノードは、良いパスを選択しない場合があります。親セットの正確な選択は、実装決定です。"
    },
    {
      "indent": 0,
      "text": "3.4. Advertising the Path Cost",
      "section_title": true,
      "ja": "3.4。パスコストを宣伝"
    },
    {
      "indent": 3,
      "text": "Once the preferred parent is selected, the node sets its cur_min_path_cost variable to the path cost corresponding to its preferred parent. It then calculates the metric it will advertise in its metric container. This value is the path cost of the member of the parent set with the highest path cost. Thus, while cur_min_path_cost is the cost through the preferred parent, a node advertises the highest cost path from the node to the root through a member of the parent set. The value of the highest cost path is carried in the metric container corresponding to the selected metric when DIO messages are sent.",
      "ja": "好適な親が選択されると、ノードは、その好適な親に対応する経路コストへのcur_min_path_cost変数を設定します。それはそれはそのメトリックの容器にアドバタイズしますメトリックを計算します。この値は、最高のパスコストを設定し、親のメンバーのパスコストです。 cur_min_path_costが好ましい親によるコストであるしたがって、ノードは、親セットの部材を介してルートへのノードから最高コストのパスをアドバタイズ。 DIOメッセージが送信されるとき、最も高いコストパスの値が選択されたメトリックに対応するメトリック容器に運ばれます。"
    },
    {
      "indent": 3,
      "text": "If ETX is the selected metric, a node MUST NOT advertise it in a metric container. Instead, a node MUST advertise an approximation of its ETX in its advertised Rank value, following the rules described in Section 3.3. If a node receives a DIO with a Metric Container holding an ETX metric, MRHOF MUST ignore the ETX metric value in its Rank calculations.",
      "ja": "ETXは、選択したメトリックの場合、ノードは、メトリックの容器でそれを広告してはなりません。その代わりに、ノードは、セクション3.3で説明した規則に従って、そのアドバタイズランク値そのETXの近似値をアドバタイズしなければなりません。ノードは、メトリックコンテナETXメトリックを保持してDIOを受信した場合、MRHOFは、そのランクの計算にETXメトリック値を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "DODAG Roots advertise a metric value that computes to a Rank value of MinHopRankIncrease.",
      "ja": "DODAGルーツはMinHopRankIncreaseのランク値を計算メトリック値をアドバタイズします。"
    },
    {
      "indent": 0,
      "text": "3.5. Working without Metric Containers",
      "section_title": true,
      "ja": "3.5。メトリックコンテナなしでの作業"
    },
    {
      "indent": 3,
      "text": "In the absence of a Metric Container, MRHOF uses ETX as its metric. It locally computes the ETX of links to its neighbors and adds this value to their advertised Rank to compute the associated Rank of routes. Once parent selection and rank computation is performed using the ETX metric, the node advertises the Rank and MUST NOT include a metric container in its DIO messages. While assigning Rank in this case, use the representation of ETX described in [RFC6551], i.e., assign Rank equal to ETX * 128.",
      "ja": "メトリックのコンテナが存在しない場合には、MRHOFは、その指標としてETXを使用しています。これは、ローカルでその隣人へのリンクのETXを計算し、ルートの関連するランクを計算するために彼らの広告を出してランクにこの値を追加します。親の選択とランク計算がETXメトリックを使用して実行されると、ノードは、ランクをアドバタイズし、そのDIOメッセージ内のメトリックの容器を含んではいけません。この場合のランクを割り当てるが、[RFC6551]に記載ETXの表現を使用し、すなわち、ETX×128に等しいランクを割り当てます。"
    },
    {
      "indent": 0,
      "text": "4. Using MRHOF for Metric Maximization",
      "section_title": true,
      "ja": "4.メトリックの最大化のためのMRHOFを使用します"
    },
    {
      "indent": 3,
      "text": "MRHOF cannot be directly used for parent selection using metrics that require finding paths with a maximum value of the selected metric, such as path reliability. It is possible to convert such a metric maximization problem to a metric minimization problem for some metrics and use MRHOF provided:",
      "ja": "MRHOFは、直接そのような経路の信頼性として選択したメトリックの最大値を有するパスを見つける必要とするメトリックを使用して、親の選択のために使用することができません。いくつかのメトリックのメトリックの最小化問題に、このようなメトリック最大化問題に変換して提供MRHOFを使用することが可能です。"
    },
    {
      "indent": 6,
      "text": "There is a fixed and well-known maximum metric value corresponding to the best path. This is the path cost for the DAG root. For example, the logarithm of the best link reliability has a value of 0.",
      "ja": "最良の経路に対応する固定され、周知の最大メトリック値があります。これは、DAGのルートのパスコストです。例えば、最良のリンクの信頼性の対数の値は0になります。"
    },
    {
      "indent": 6,
      "text": "The metrics in the maximization problem are all negative. The logarithm of the link reliability is always negative.",
      "ja": "最大化問題のメトリックは、すべて陰性です。リンクの信頼性の対数は常に負です。"
    },
    {
      "indent": 3,
      "text": "For metrics meeting the above conditions, the problem of maximizing the metric value is equivalent to minimizing the modified metric value, e.g., logarithm of link reliability. MRHOF is not required to work with these metrics.",
      "ja": "メトリックが上記の条件を満たすため、メトリック値を最大の問題は、例えば、修飾されたメトリック値、リンクの信頼性の対数を最小化することと等価です。 MRHOFは、これらの指標で動作するために必要とされていません。"
    },
    {
      "indent": 0,
      "text": "5. MRHOF Variables and Parameters",
      "section_title": true,
      "ja": "5. MRHOF変数とパラメータ"
    },
    {
      "indent": 3,
      "text": "MRHOF uses the following variable:",
      "ja": "MRHOFは、次の変数を使用しています。"
    },
    {
      "indent": 6,
      "text": "cur_min_path_cost: The cost of the path from a node through its preferred parent to the root computed at the last parent selection.",
      "ja": "cur_min_path_cost：最後の親の選択で計算ルートにその好ましい親を介してノードからのパスのコスト。"
    },
    {
      "indent": 3,
      "text": "MRHOF uses the following parameters:",
      "ja": "MRHOFは、次のパラメータを使用します。"
    },
    {
      "indent": 6,
      "text": "MAX_LINK_METRIC: Maximum allowed value for the selected link metric for each link on the path.",
      "ja": "MAX_LINK_METRIC：パス上の各リンクのための選択されたリンクメトリックの最大許容値。"
    },
    {
      "indent": 6,
      "text": "MAX_PATH_COST: Maximum allowed value for the path metric of a selected path.",
      "ja": "MAX_PATH_COST：選択したパスのパスメトリックの最大許容値。"
    },
    {
      "indent": 6,
      "text": "PARENT_SWITCH_THRESHOLD: The difference between the cost of the path through the preferred parent and the minimum cost path in order to trigger the selection of a new preferred parent.",
      "ja": "PARENT_SWITCH_THRESHOLD：新規好ましい親の選択をトリガするために好適な親を通る経路のコストと最小コスト経路との間の差。"
    },
    {
      "indent": 6,
      "text": "PARENT_SET_SIZE: The number of candidate parents, including the preferred parent, in the parent set.",
      "ja": "PARENT_SET_SIZE：親セットで有利な親、などの候補親の数、。"
    },
    {
      "indent": 6,
      "text": "ALLOW_FLOATING_ROOT: If set to 1, allows a node to become a floating root.",
      "ja": "ALLOW_FLOATING_ROOT：1に設定した場合、ノードはフローティングルートになることができます。"
    },
    {
      "indent": 3,
      "text": "The parameter values are assigned depending on the selected metric. The best values for these parameters are determined by the requirement of the specific RPL deployment. For instance, if we use ETX as the selected metric and UDP as the transport protocol, we should use a small MAX_LINK_METRIC (e.g., ETX of 1.1) so that link-layer retransmissions are sufficient to provide a good chance of end-to-end reliability.",
      "ja": "パラメータ値が選択されたメトリックに応じて割り当てられます。これらのパラメータのための最高値は、特定のRPLの展開の要件によって決定されます。我々は、トランスポートプロトコルとして選択されたメトリックおよびUDPとしてETXを使用している場合たとえば、私たちは小さな（例えば、1.1のETX）MAX_LINK_METRICので、リンク層の再送が十分であることは、エンドツーエンドの良い機会を提供するために、を使用する必要があります信頼性。"
    },
    {
      "indent": 3,
      "text": "The working group has extensive experience routing with the ETX metric [Hui08b]. Based on those experiences, the following values are RECOMMENDED when ETX is the selected metric:",
      "ja": "ワーキンググループは、ETXメトリック[Hui08b]とルーティング豊富な経験を有しています。 ETXは、選択したメトリックであるとき、それらの経験に基づいて、次の値が推奨されています："
    },
    {
      "indent": 6,
      "text": "MAX_LINK_METRIC: 512. Disallow links with greater than 4 expected transmission counts on the selected path.",
      "ja": "MAX_LINK_METRIC：選択されたパス上の4つのより大きい予想伝送カウントと512を許可しないリンク。"
    },
    {
      "indent": 6,
      "text": "MAX_PATH_COST: 32768. Disallow paths with greater than 256 expected transmission counts.",
      "ja": "MAX_PATH_COST：256のより大きい予想伝送カウントの32768禁止するパス。"
    },
    {
      "indent": 6,
      "text": "PARENT_SWITCH_THRESHOLD: 192. Switch to a new path only if it is expected to require at least 1.5 fewer transmissions than the current path.",
      "ja": "PARENT_SWITCH_THRESHOLD：現在のパスよりも少なくとも1.5少ない伝送を必要とすると予想されている場合にのみ、新しいパスに192切り替えます。"
    },
    {
      "indent": 6,
      "text": "PARENT_SET_SIZE: 3. If the preferred parent is not available, two candidate parents are still available without triggering a new round of route discovery.",
      "ja": "PARENT_SET_SIZE：3.優先親が利用できない場合、2人の候補の親がルート発見の新ラウンドをトリガすることなく、まだ使用可能です。"
    },
    {
      "indent": 6,
      "text": "ALLOW_FLOATING_ROOT: 0. Do not allow a node to become a floating root.",
      "ja": "ALLOW_FLOATING_ROOT：0は、ノードが浮いルートになることを許可しないでください。"
    },
    {
      "indent": 0,
      "text": "6. Manageability",
      "section_title": true,
      "ja": "6.管理性"
    },
    {
      "indent": 3,
      "text": "Section 18 of [RFC6550] depicts the management of RPL. This specification inherits from that section and its subsections, with the exception that metrics as specified in [RFC6551] are not used and do not require management.",
      "ja": "[RFC6550]のセクション18は、RPLの管理を示します。この仕様は、[RFC6551]で指定されるようにメトリックが使用されず、管理を必要としないことを除いて、そのセクションおよびそのサブセクションから継承します。"
    },
    {
      "indent": 0,
      "text": "6.1. Device Configuration",
      "section_title": true,
      "ja": "6.1。デバイス設定"
    },
    {
      "indent": 3,
      "text": "An implementation SHOULD allow the following parameters to be configured at installation time: MAX_LINK_METRIC, MAX_PATH_COST, PARENT_SWITCH_THRESHOLD, PARENT_SET_SIZE, and ALLOW_FLOATING_ROOT. An implementation MAY allow these parameters to be configured dynamically at run time once a network has been deployed.",
      "ja": "実装は、次のパラメータは、インストール時に設定することができるようにする必要があります：MAX_LINK_METRIC、MAX_PATH_COST、PARENT_SWITCH_THRESHOLD、PARENT_SET_SIZE、およびALLOW_FLOATING_ROOT。実装は、ネットワークが展開された後、これらのパラメータは、実行時に動的に構成できるようにすることができます。"
    },
    {
      "indent": 3,
      "text": "A MRHOF implementation MUST support the DODAG Configuration option as described in [RFC6550] and apply the parameters it specifies. Care should be taken in the relationship between the MRHOF PARENT_SWITCH_THRESHOLD parameter and the RPL MaxRankIncrease parameter. For example, if MaxRankIncrease is smaller than PARENT_SWITCH_THRESHOLD, a RPL node using MRHOF could enter a situation in which its current preferred parent causes the node's Rank to increase more than MaxRankIncrease but MRHOF does not change preferred parents. This could cause the node to leave the routing topology even though there may be other members of the parent set that would allow the node's Rank to remain within MaxRankIncrease.",
      "ja": "MRHOFの実装は、[RFC6550]で説明したようにDODAG設定オプションをサポートし、それが指定するパラメータを適用しなければなりません。ケアはMRHOF PARENT_SWITCH_THRESHOLDパラメータとRPL MaxRankIncreaseパラメータとの関係に注意する必要があります。 MaxRankIncreaseがPARENT_SWITCH_THRESHOLDよりも小さい場合、例えば、MRHOFを使用してRPLノードは、その現在の優先親がMaxRankIncrease以上を高めるために、ノードのランクを引き起こしている状況を入力することができますがMRHOFが好ましい両親は変更されません。これは、ノードのランクがMaxRankIncrease内に留まることを可能にする親セットの他のメンバーがあっても、ノードがルーティングトポロジを残すようになる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Unless configured otherwise, a MRHOF implementation SHOULD use the default parameters as specified in Section 5.",
      "ja": "それ以外の場合は設定されない限り、第5節で指定されるように、MRHOF実装は、デフォルトパラメータを使用すべきです。"
    },
    {
      "indent": 3,
      "text": "Because of the partially coupled relationship between Rank and metric values, networks using MRHOF require care in setting MinHopRankIncrease. A large MinHopRankIncrease will cause MRHOF to be unable to select paths with different hop counts but similar metric values. If MinHopRankIncrease is large enough that its increment is greater than that caused by link cost, then metrics will be used to select a preferred parent, but the advertised Rank will be a simple hop count. This behavior might be desirable, but it also might be unintended; care is recommended.",
      "ja": "なぜならランクとメトリック値との間の部分的に結合された関係を、MRHOFを使用してネットワークがMinHopRankIncrease設定に注意を要します。大MinHopRankIncreaseはMRHOFが異なるホップ数が、同様のメトリック値とパスを選択することができないことになります。 MinHopRankIncreaseは、その増分はリンクコストによって引き起こされるものよりも大きいことを十分に大きい場合、メトリックは優先親を選択するために使用されますが、広告を出してランクは、単純なホップ数となります。この動作は望ましいかもしれないが、それはまた、予期しないかもしれません。ケアが推奨されます。"
    },
    {
      "indent": 3,
      "text": "With ETX as the selected metric, RPL's Rank advertisement rules can require a DODAG Root to advertise a Rank higher than its corresponding ETX value, as a DODAG Root advertises a Rank of MinHopRankIncrease. Because all DODAG Roots within a DODAG Version advertise the same Rank, this constant value typically does not affect route selection. Nevertheless, it means that if a DODAG Version has a MinHopRankIncrease of M and a path has an advertised ETX of E, then the actual ETX of the path is likely closer to a value of E-M than a value of E.",
      "ja": "DODAGルートがMinHopRankIncreaseのランクを広告として選択したメトリックとしてETXでは、RPLのランクの広告ルールは、それに対応するETX値よりもランクが高い広告を掲載するDODAGルートを要求することができます。 DODAGバージョン内のすべてのDODAGルーツが同じランクを宣伝するので、この定数値は、典型的には、ルート選択に影響を与えません。それにもかかわらず、DODAG版MのMinHopRankIncreaseを有し、パスはEのアドバタイズETXがある場合、パスの実際のETXは、Eの値よりもE-Mの値に近い可能性が高いことを意味します"
    },
    {
      "indent": 0,
      "text": "6.2. Device Monitoring",
      "section_title": true,
      "ja": "6.2。デバイスの監視"
    },
    {
      "indent": 3,
      "text": "A MRHOF implementation should provide an interface for monitoring its operation. At a minimum, the information provided should include:",
      "ja": "MRHOF実装は、その動作を監視するためのインタフェースを提供しなければなりません。最低でも、提供される情報は含まれている必要があります"
    },
    {
      "indent": 6,
      "text": "DAG information as specified in Section 6.3.1 of [RFC6550], including the DODAGID, the RPLInstanceID, the Mode of Operation, the Rank of this node, the current Version Number, and the value of the Grounded flag.",
      "ja": "DODAGID、RPLInstanceID、動作モード、このノードは、現在のバージョン番号、接地フラグの値の順位を含む、[RFC6550]のセクション6.3.1で指定されたDAG情報。"
    },
    {
      "indent": 6,
      "text": "A list of neighbors indicating the preferred parent. The list should indicate, for each neighbor, the Rank, the current Version Number, the value of the Grounded flag, and associated metrics.",
      "ja": "好適な親を示すネイバーのリスト。リストには、各ネイバー、ランク、現在のバージョン番号、接地フラグの値、および関連するメトリックに対して、示すべきです。"
    },
    {
      "indent": 0,
      "text": "7. Acknowledgements",
      "section_title": true,
      "ja": "7.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Antonio Grilo, Nicolas Tsiftes, Matteo Paris, JP Vasseur, and Phoebus Chen for their comments. Thanks to Barry Leiba, Brian Haberman, Martin Stiemerling, Ralph Droms, Robert Sparks, Russ Housley, Stephen Farrell, Wesley Eddy, Miguel A. Garcia, Mukul Goyal, and Michael Richardson for their feedback during the publication phase of this document.",
      "ja": "彼らのコメントのためのアントニオ・グリロ、ニコラスTsiftes、マッテオ・パリ、JP Vasseur、およびポイボス陳に感謝します。このドキュメントの発行フェーズ中にそのフィードバックのためのバリー・レイバ、ブライアンハーバーマン、マーティンStiemerling、ラルフDroms、ロバート・スパークス、ラスHousley、スティーブン・ファレル、ウェズリーエディ、ミゲルA.ガルシア、Mukul Goyal氏、そしてマイケル・リチャードソンに感謝します。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Per this document, IANA has allocated value 1 from the \"Objective Code Point (OCP)\" sub-registry of the \"Routing Protocol for Low Power and Lossy Networks (RPL)\" registry.",
      "ja": "このドキュメントごとに、IANAは「客観コードポイント（OCP）」「低消費電力とロッシーネットワークのルーティングプロトコル（RPL）」のサブレジストリレジストリから値1を割り当てています。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification makes simple extensions to RPL and so is vulnerable to and benefits from the security issues and mechanisms described in [RFC6550] and [ROLL-SEC]. This document does not introduce new flows or new messages, and thus requires no specific mitigation for new threats.",
      "ja": "この仕様は、RPLへの簡単な拡張を行い、これに対して脆弱であり、セキュリティ上の問題とメカニズム[RFC6550]で説明し、[ROLL-SEC]から恩恵を受けています。この文書は、新しいフローまたは新しいメッセージを導入し、これにより新たな脅威のための具体的な緩和策を必要としません。"
    },
    {
      "indent": 3,
      "text": "MRHOF depends on information exchanged in a number of RPL protocol elements. If those elements were compromised, then an implementation of MRHOF might generate the wrong path for a packet, resulting in it being misrouted. Therefore, deployments are RECOMMENDED to use RPL security mechanisms if there is a risk that routing information might be modified or spoofed.",
      "ja": "MRHOFはRPLプロトコル要素の数で交換される情報に依存します。これらの要素が危険にさらされた場合には、MRHOFの実装は、それが誤ってルーティングされ、その結果、パケットのために間違ったパスを生成することがあります。したがって、配備は、ルーティング情報が変更または偽装されるかもしれないというリスクがある場合RPLセキュリティメカニズムを使用することが推奨されます。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6550] Winter, T., Thubert, P., Brandt, A., Hui, J., Kelsey, R., Levis, P., Pister, K., Struik, R., Vasseur, JP., and R. Alexander, \"RPL: IPv6 Routing Protocol for Low-Power and Lossy Networks\", RFC 6550, March 2012.",
      "ja": "[RFC6550]冬、T.、Thubert、P.、ブラント、A.、ホイ、J.、ケルシー、R.、リーバイス、P.、ピスター教授、K.、Struik、R.、Vasseur、JP。、及びRアレクサンダー、「RPL：IPv6ルーティングプロトコルの低消費電力とロッシーネットワークの」、RFC 6550、2012年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6551] Vasseur, JP., Kim, M., Pister, K., Dejean, N., and D. Barthel, \"Routing Metrics Used for Path Calculation in Low-Power and Lossy Networks\", RFC 6551, March 2012.",
      "ja": "[RFC6551] Vasseur、JP。、キム、M.、ピスター教授、K.、Dejean、N.、およびD.バーセル、 \"低消費電力とロッシーネットワークにおけるパス計算のために使用されるルーティングメトリック\"、RFC 6551、2012年3月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Hui08b] Hui, J. and D. Culler, \"IP is dead, long live IP for wireless sensor networks\", Proceedings of the 6th ACM Conference on Embedded Networked Systems SenSys 2008, November 2008, <http://portal.acm.org/citation.cfm?id=1460412.1460415>.",
      "ja": "\"無線センサネットワークのためのIPが死んでいる、長く生きIP\" [Hui08b]ホイ、J.とD. Culler、組込みネットワークシステムSENSYS 2008、2008年11月、<HTTP第6回ACM会議議事録：//portal.acm .ORG / citation.cfm？ID = 1460412.1460415>。"
    },
    {
      "indent": 3,
      "text": "[ROLL-SEC] Tsao, T., Alexander, R., Dohler, M., Daza, V., and A. Lozano, \"A Security Framework for Routing over Low Power and Lossy Networks\", Work in Progress, January 2012.",
      "ja": "[ROLL-SEC] Tsaoさん、T.、アレクサンダー、R.、のDohler、M.、ダサ、V.、およびA.ロサノ、 \"低消費電力とロッシーネットワーク経由のルーティングのためのセキュリティフレームワーク\" が進行中で働いて、2012年1月。"
    },
    {
      "indent": 3,
      "text": "[ROLL-TERM] Vasseur, J., \"Terminology in Low power And Lossy Networks\", Work in Progress, September 2011.",
      "ja": "[ROLL-TERM] Vasseur、J.、 \"低消費電力、ロッシーネットワークにおける用語\"、進歩、2011年9月での作業。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Omprakash Gnawali University of Houston PGH 577, University of Houston Houston, TX 77204 USA",
      "ja": "ヒューストンPGH 577、ヒューストン大学、TX 77204 USAのOmprakash Gnawali大学"
    },
    {
      "indent": 3,
      "text": "Phone: +1 713 743 3356 EMail: gnawali@cs.uh.edu",
      "ja": "電話：+1 713 743 3356 Eメール：gnawali@cs.uh.edu"
    },
    {
      "indent": 3,
      "text": "Philip Levis Stanford University 412 Gates Hall, Stanford University Stanford, CA 94305 USA",
      "ja": "フィリップ・リーバイススタンフォード大学412ゲイツ・ホール、スタンフォード大学のスタンフォード、CA 94305 USA"
    },
    {
      "indent": 3,
      "text": "EMail: pal@cs.stanford.edu",
      "ja": "メールアドレス：pal@cs.stanford.edu"
    }
  ]
}