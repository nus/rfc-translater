{
  "title": {
    "text": "RFC 6891 - Extension Mechanisms for DNS (EDNS(0))",
    "ja": "RFC 6891 - DNS用拡張メカニズム（EDNS（0））"
  },
  "number": 6891,
  "created_at": "2019-11-01 07:22:13.834021+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          J. Damas\nRequest for Comments: 6891                         Bond Internet Systems\nSTD: 75                                                         M. Graff\nObsoletes: 2671, 2673\nCategory: Standards Track                                       P. Vixie\nISSN: 2070-1721                              Internet Systems Consortium\n                                                              April 2013",
      "raw": true
    },
    {
      "indent": 17,
      "text": "Extension Mechanisms for DNS (EDNS(0))",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.",
      "ja": "ドメインネームシステムのワイヤプロトコルは、範囲となっているか、すぐに排出され、要求者がレスポンダにその機能を宣伝することはできません固定フィールドの数を含んでいます。このドキュメントは、プロトコルが成長することを可能にするための下位互換性のメカニズムを説明しています。"
    },
    {
      "indent": 3,
      "text": "This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 (\"Binary Labels in the Domain Name System\") and adds considerations on the use of extended labels in the DNS.",
      "ja": "この文書では、いくつかの実装での展開の経験からのフィードバックに基づいて、DNS（EDNS（0））の仕様（およびRFC 2671を廃止）するための拡張メカニズムを更新します。また、RFC 2673（「ドメインネームシステムでバイナリラベル」）を廃止し、DNSの拡張ラベルの使用上の注意事項を追加します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6891.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6891で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  4\n2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n3.  EDNS Support Requirement . . . . . . . . . . . . . . . . . . .  5\n4.  DNS Message Changes  . . . . . . . . . . . . . . . . . . . . .  5\n  4.1.  Message Header . . . . . . . . . . . . . . . . . . . . . .  5\n  4.2.  Label Types  . . . . . . . . . . . . . . . . . . . . . . .  5\n  4.3.  UDP Message Size . . . . . . . . . . . . . . . . . . . . .  6\n5.  Extended Label Types . . . . . . . . . . . . . . . . . . . . .  6\n6.  The OPT Pseudo-RR  . . . . . . . . . . . . . . . . . . . . . .  6\n  6.1.  OPT Record Definition  . . . . . . . . . . . . . . . . . .  6\n    6.1.1.  Basic Elements . . . . . . . . . . . . . . . . . . . .  6\n    6.1.2.  Wire Format  . . . . . . . . . . . . . . . . . . . . .  7\n    6.1.3.  OPT Record TTL Field Use . . . . . . . . . . . . . . .  9\n    6.1.4.  Flags  . . . . . . . . . . . . . . . . . . . . . . . .  9\n  6.2.  Behaviour  . . . . . . . . . . . . . . . . . . . . . . . . 10\n    6.2.1.  Cache Behaviour  . . . . . . . . . . . . . . . . . . . 10\n    6.2.2.  Fallback . . . . . . . . . . . . . . . . . . . . . . . 10\n    6.2.3.  Requestor's Payload Size . . . . . . . . . . . . . . . 10\n    6.2.4.  Responder's Payload Size . . . . . . . . . . . . . . . 11\n    6.2.5.  Payload Size Selection . . . . . . . . . . . . . . . . 11\n    6.2.6.  Support in Middleboxes . . . . . . . . . . . . . . . . 11\n7.  Transport Considerations . . . . . . . . . . . . . . . . . . . 12\n8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 13\n9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 13\n  9.1.  OPT Option Code Allocation Procedure . . . . . . . . . . . 15\n10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 15\n  10.1. Normative References . . . . . . . . . . . . . . . . . . . 15\n  10.2. Informative References . . . . . . . . . . . . . . . . . . 15\nAppendix A.  Changes since RFCs 2671 and 2673  . . . . . . . . . . 16",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "DNS [RFC1035] specifies a message format, and within such messages there are standard formats for encoding options, errors, and name compression. The maximum allowable size of a DNS message over UDP not using the extensions described in this document is 512 bytes. Many of DNS's protocol limits, such as the maximum message size over UDP, are too small to efficiently support the additional information that can be conveyed in the DNS (e.g., several IPv6 addresses or DNS Security (DNSSEC) signatures). Finally, RFC 1035 does not define any way for implementations to advertise their capabilities to any of the other actors they interact with.",
      "ja": "DNS [RFC1035]はメッセージの形式を指定し、そのようなメッセージ内の符号化オプション、エラー、名前圧縮の標準フォーマットが存在します。本書では説明の拡張を使用していないUDP上のDNSメッセージの最大許容サイズは512バイトです。そのようなUDP上の最大メッセージサイズなどのDNSのプロトコルの制限の多くは、効率的にDNS（例えば、いくつかのIPv6アドレスまたはDNSセキュリティ（DNSSEC）の署名）に搬送することができる追加情報をサポートするには小さすぎます。最後に、RFC 1035は、実装は、それらが相互作用する他の俳優のいずれかに自分の能力を宣伝するための任意の方法を定義していません。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] added extension mechanisms to DNS. These mechanisms are widely supported, and a number of new DNS uses and protocol extensions depend on the presence of these extensions. This memo refines and obsoletes [RFC2671].",
      "ja": "[RFC2671]はDNSに拡張メカニズムを追加しました。これらのメカニズムは、広くサポートされ、新しいDNSの用途やプロトコルの拡張機能の数は、これらの拡張の存在に依存します。このメモ洗練と時代遅れに[RFC2671]。"
    },
    {
      "indent": 3,
      "text": "Unextended agents will not know how to interpret the protocol extensions defined in [RFC2671] and restated here. Extended agents need to be prepared for handling the interactions with unextended clients in the face of new protocol elements and fall back gracefully to unextended DNS.",
      "ja": "未伸長剤には、[RFC2671]で定義されたプロトコル拡張を解釈する方法を知っているし、ここでは修正再表示されません。拡張エージェントは、新しいプロトコル要素の顔に伸長していないクライアントとの対話を処理するための準備と伸長していないDNSに優雅にフォールバックする必要があります。"
    },
    {
      "indent": 3,
      "text": "EDNS is a hop-by-hop extension to DNS. This means the use of EDNS is negotiated between each pair of hosts in a DNS resolution process, for instance, the stub resolver communicating with the recursive resolver or the recursive resolver communicating with an authoritative server.",
      "ja": "EDNSは、DNSへのホップバイホップの拡張機能です。これはEDNSの使用は、例えば、スタブリゾルバが再帰リゾルバ又は認証サーバと通信再帰リゾルバと通信する、DNS解決プロセスにおけるホストの各対の間で交渉されています。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] specified extended label types. The only such label proposed was in [RFC2673] for a label type called \"Bit-String Label\" or \"Binary Labels\", with this latest term being the one in common use. For various reasons, introducing a new label type was found to be extremely difficult, and [RFC2673] was moved to Experimental. This document obsoletes [RFC2673], deprecating Binary Labels. Extended labels remain defined, but their use is discouraged due to practical difficulties with deployment; their use in the future SHOULD only be considered after careful evaluation of the deployment hindrances.",
      "ja": "[RFC2671]は、拡張ラベルタイプを指定しました。提案されているだけなラベルは、この最新の用語が一般に使用されている一つであると、「ビット列ラベル」または「バイナリラベル」と呼ばれるラベルタイプのために[RFC2673]にありました。様々な理由から、新しいラベルタイプを導入することは極めて困難であることが判明した、と[RFC2673]は実験的に移動されました。このドキュメントは、バイナリラベルを卑下、[RFC2673]を廃止します。展開と実用的な困難に拡張ラベルは定義されたまま、その使用は推奨されます。将来的にはそれらの使用はのみの展開支障を慎重に評価した後に検討すべきです。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "\"Requestor\" refers to the side that sends a request. \"Responder\" refers to an authoritative, recursive resolver or other DNS component that responds to questions. Other terminology is used here as defined in the RFCs cited by this document.",
      "ja": "「リクエスタは、」リクエストを送信する側を指します。 「レスポンダ」との質問に応答する権限を持つ、再帰リゾルバまたは他のDNSコンポーネントを指します。本書で引用されたRFCで定義されている他の用語は、ここで使用されています。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. EDNS Support Requirement",
      "section_title": true,
      "ja": "3. EDNSサポート要件"
    },
    {
      "indent": 3,
      "text": "EDNS provides a mechanism to improve the scalability of DNS as its uses get more diverse on the Internet. It does this by enabling the use of UDP transport for DNS messages with sizes beyond the limits specified in RFC 1035 as well as providing extra data space for additional flags and return codes (RCODEs). However, implementation experience indicates that adding new RCODEs should be avoided due to the difficulty in upgrading the installed base. Flags SHOULD be used only when necessary for DNS resolution to function.",
      "ja": "EDNSは、その用途は、インターネット上でより多様な取得とDNSのスケーラビリティを向上させるためのメカニズムを提供します。これは、RFC 1035で指定された制限を超えたサイズのDNSメッセージのためのUDPトランスポートの使用を可能にするだけでなく、追加のフラグのための余分なデータ空間を提供し、コード（RCODEs）を返すことでこれを行います。しかし、実装経験は、新しいRCODEsを追加は原因インストールベースをアップグレードすることが困難に避けるべきであることを示しています。フラグは、関数へのDNS解決のために、必要な場合にのみ使用されるべきです。"
    },
    {
      "indent": 3,
      "text": "For many uses, an EDNS Option Code may be preferred.",
      "ja": "多くの用途のために、EDNSオプションコードは好ましいかもしれません。"
    },
    {
      "indent": 3,
      "text": "Over time, some applications of DNS have made EDNS a requirement for their deployment. For instance, DNSSEC uses the additional flag space introduced in EDNS to signal the request to include DNSSEC data in a DNS response.",
      "ja": "時間が経つにつれて、DNSの一部のアプリケーションは、EDNS彼らの展開のための要件で作られています。例えば、DNSSECは、DNS応答のDNSSECデータを含む要求を通知するEDNSに導入された追加フラグスペースを使用します。"
    },
    {
      "indent": 3,
      "text": "Given the increase in DNS response sizes when including larger data items such as AAAA records, DNSSEC information (e.g., RRSIG or DNSKEY), or large TXT records, the additional UDP payload capabilities provided by EDNS can help improve the scalability of the DNS by avoiding widespread use of TCP for DNS transport.",
      "ja": "このようAAAAレコード、DNSSECの情報（例えば、RRSIGまたはDNSKEY）、または大規模なTXTレコードのような大きなデータ項目を含むDNS応答のサイズの増加を考えると、EDNSによって提供される追加のUDPペイロード能力は回避することにより、DNSの拡張性を向上させることができますDNSの輸送のためのTCPの普及。"
    },
    {
      "indent": 0,
      "text": "4. DNS Message Changes",
      "section_title": true,
      "ja": "4. DNSメッセージの変更"
    },
    {
      "indent": 0,
      "text": "4.1. Message Header",
      "section_title": true,
      "ja": "4.1。メッセージのヘッダー"
    },
    {
      "indent": 3,
      "text": "The DNS message header's second full 16-bit word is divided into a 4-bit OPCODE, a 4-bit RCODE, and a number of 1-bit flags (see Section 4.1.1 of [RFC1035]). Some of these flag values were marked for future use, and most of these have since been allocated. Also, most of the RCODE values are now in use. The OPT pseudo-RR specified below contains extensions to the RCODE bit field as well as additional flag bits.",
      "ja": "DNSメッセージヘッダーの第二の完全な16ビット・ワードは、4ビットのオペコード、4ビットのRCODE、及び1ビットのフラグの数に分割される（[RFC1035]のセクション4.1.1を参照）。これらのフラグ値の一部は、将来の使用のためにマークし、これらのほとんどは、以来、割り当てられています。また、RCODE値のほとんどは、現在使用中です。以下に指定OPT疑似RRはRCODEビットフィールドの拡張だけでなく、追加のフラグビットを含みます。"
    },
    {
      "indent": 0,
      "text": "4.2. Label Types",
      "section_title": true,
      "ja": "4.2。ラベルタイプ"
    },
    {
      "indent": 3,
      "text": "The first 2 bits of a wire format domain label are used to denote the type of the label. [RFC1035] allocates 2 of the 4 possible types and reserves the other 2. More label types were defined in [RFC2671]. The use of the 2-bit combination defined by [RFC2671] to identify extended label types remains valid. However, it has been found that deployment of new label types is noticeably difficult and so is only recommended after careful evaluation of alternatives and the need for deployment.",
      "ja": "ワイヤ形式ドメインラベルの最初の2ビットは、ラベルの種類を示すために使用されます。 [RFC1035]は4つの可能なタイプの2を割り当て、他の2より多くのラベルの種類は[RFC2671]で定義された留保します。拡張されたラベルの種類を識別するために[RFC2671]で定義された2ビットの組み合わせの使用が有効のままです。しかし、新しいラベルタイプの展開が著しく困難であるので、唯一の慎重な代替案の評価と展開の必要性の後に推奨されていることが判明しています。"
    },
    {
      "indent": 0,
      "text": "4.3. UDP Message Size",
      "section_title": true,
      "ja": "4.3。 UDPメッセージサイズ"
    },
    {
      "indent": 3,
      "text": "Traditional DNS messages are limited to 512 octets in size when sent over UDP [RFC1035]. Fitting the increasing amounts of data that can be transported in DNS in this 512-byte limit is becoming more difficult. For instance, inclusion of DNSSEC records frequently requires a much larger response than a 512-byte message can hold.",
      "ja": "UDP [RFC1035]を介して送信されたときに、伝統的なDNSメッセージのサイズは512オクテットに制限されています。この512バイトの制限でDNSに輸送することができるデータ量の増加をフィッティングすることは、より困難になってきています。例えば、DNSSECレコードを含めることは、しばしば保持することができ、512バイトのメッセージよりもはるかに大きい応答を必要とします。"
    },
    {
      "indent": 3,
      "text": "EDNS(0) specifies a way to advertise additional features such as larger response size capability, which is intended to help avoid truncated UDP responses, which in turn cause retry over TCP. It therefore provides support for transporting these larger packet sizes without needing to resort to TCP for transport.",
      "ja": "EDNSは（0）、このようなターン原因でTCP上で再試行切り捨てUDP応答を避けるために意図され、より大きな応答サイズ機能、などの追加機能を宣伝する方法を指定します。したがって、トランスポートにTCPに頼る必要はなく、これらのより大きなパケットサイズを輸送するためのサポートを提供します。"
    },
    {
      "indent": 0,
      "text": "5. Extended Label Types",
      "section_title": true,
      "ja": "5.拡張ラベルタイプ"
    },
    {
      "indent": 3,
      "text": "The first octet in the on-the-wire representation of a DNS label specifies the label type; the basic DNS specification [RFC1035] dedicates the 2 most significant bits of that octet for this purpose.",
      "ja": "DNSラベルのオン・ワイヤー表現における最初のオクテットは、ラベルの種類を指定します。基本的なDNS仕様[RFC1035]は、この目的のためにそのオクテットの2つの最上位ビットを捧げ。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] defined DNS label type 0b01 for use as an indication for extended label types. A specific extended label type was selected by the 6 least significant bits of the first octet. Thus, extended label types were indicated by the values 64-127 (0b01xxxxxx) in the first octet of the label.",
      "ja": "[RFC2671]に定義DNSラベルタイプ0B01拡張ラベルタイプの指標として使用するため。特定の拡張ラベルタイプは、最初のオクテットの6つの最下位ビットによって選択されました。したがって、拡張されたラベルの種類は、ラベルの最初のオクテットの値64-127（0b01xxxxxx）によって示されました。"
    },
    {
      "indent": 3,
      "text": "Extended label types are extremely difficult to deploy due to lack of support in clients and intermediate gateways, as described in [RFC3363], which moved [RFC2673] to Experimental status; and [RFC3364], which describes the pros and cons. As such, proposals that contemplate extended labels SHOULD weigh this deployment cost against the possibility of implementing functionality in other ways.",
      "ja": "実験状態に[RFC2673]移動[RFC3363]に記載の拡張可能な標識の種類は、クライアントによる中間ゲートウェイでのサポートの欠如に展開することが極めて困難です。長所と短所を説明し、[RFC3364]。そのため、拡張されたラベルを考え提案は他の方法で機能を実装する可能性に対して、この展開のコストを比較検討する必要があります。"
    },
    {
      "indent": 3,
      "text": "Finally, implementations MUST NOT generate or pass Binary Labels in their communications, as they are now deprecated.",
      "ja": "それらが廃止されている最後に、実装は、その通信のバイナリラベルを生成したり、渡してはなりません。"
    },
    {
      "indent": 0,
      "text": "6. The OPT Pseudo-RR",
      "section_title": true,
      "ja": "6. OPT疑似RR"
    },
    {
      "indent": 0,
      "text": "6.1. OPT Record Definition",
      "section_title": true,
      "ja": "6.1。 OPTレコード定義"
    },
    {
      "indent": 0,
      "text": "6.1.1. Basic Elements",
      "section_title": true,
      "ja": "6.1.1。基本要素"
    },
    {
      "indent": 3,
      "text": "An OPT pseudo-RR (sometimes called a meta-RR) MAY be added to the additional data section of a request.",
      "ja": "（時々メタRRと呼ばれる）OPT疑似RRは、要求の追加データセクションに添加することができます。"
    },
    {
      "indent": 3,
      "text": "The OPT RR has RR type 41.",
      "ja": "OPT RRはRRタイプ41を持っています。"
    },
    {
      "indent": 3,
      "text": "If an OPT record is present in a received request, compliant responders MUST include an OPT record in their respective responses.",
      "ja": "OPTレコードは、受信した要求に存在する場合、対応レスポンダは、それぞれの応答にOPTレコードを含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "An OPT record does not carry any DNS data. It is used only to contain control information pertaining to the question-and-answer sequence of a specific transaction. OPT RRs MUST NOT be cached, forwarded, or stored in or loaded from master files.",
      "ja": "OPTレコードは、任意のDNSデータを運ぶことはありません。特定のトランザクションの質疑応答のシーケンスに関連する制御情報を含むためにのみ使用されます。 OPT RRは、キャッシュされた転送、またはに保存されているか、マスターファイルからロードされてはなりません。"
    },
    {
      "indent": 3,
      "text": "The OPT RR MAY be placed anywhere within the additional data section. When an OPT RR is included within any DNS message, it MUST be the only OPT RR in that message. If a query message with more than one OPT RR is received, a FORMERR (RCODE=1) MUST be returned. The placement flexibility for the OPT RR does not override the need for the TSIG or SIG(0) RRs to be the last in the additional section whenever they are present.",
      "ja": "OPT RRは、追加のデータセクション内の任意の場所に配置することができます。 OPTのRRは、任意のDNSメッセージ内に含まれている場合、そのメッセージにのみOPTのRRでなければなりません。複数のOPTのRRとクエリメッセージを受信した場合、FORMERR（RCODE = 1）が返されなければなりません。 OPTのRRの配置の柔軟性は、彼らが存在しているときに、追加のセクションの最後になるようにTSIGまたはSIG（0）のRRの必要性を上書きしません。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Wire Format",
      "section_title": true,
      "ja": "6.1.2。ワイヤー・フォーマット"
    },
    {
      "indent": 3,
      "text": "An OPT RR has a fixed part and a variable set of options expressed as {attribute, value} pairs. The fixed part holds some DNS metadata, and also a small collection of basic extension elements that we expect to be so popular that it would be a waste of wire space to encode them as {attribute, value} pairs.",
      "ja": "OPT RRは固定部分と{属性、値}の対として表現オプションの変数セットを有しています。固定部分は、いくつかのDNSのメタデータを保持し、また、我々は{属性、値}のペアとしてそれらをエンコードするワイヤスペースの無駄になるほど人気が​​あることを期待し、基本的な拡張要素の小さなコレクション。"
    },
    {
      "indent": 3,
      "text": "The fixed part of an OPT RR is structured as follows:",
      "ja": "次のようにOPT RRの固定部が構成されています。"
    },
    {
      "indent": 7,
      "text": "+------------+--------------+------------------------------+\n| Field Name | Field Type   | Description                  |\n+------------+--------------+------------------------------+\n| NAME       | domain name  | MUST be 0 (root domain)      |\n| TYPE       | u_int16_t    | OPT (41)                     |\n| CLASS      | u_int16_t    | requestor's UDP payload size |\n| TTL        | u_int32_t    | extended RCODE and flags     |\n| RDLEN      | u_int16_t    | length of all RDATA          |\n| RDATA      | octet stream | {attribute,value} pairs      |\n+------------+--------------+------------------------------+",
      "raw": true
    },
    {
      "indent": 31,
      "text": "OPT RR Format",
      "ja": "OPT RRのフォーマット"
    },
    {
      "indent": 3,
      "text": "The variable part of an OPT RR may contain zero or more options in the RDATA. Each option MUST be treated as a bit field. Each option is encoded as:",
      "ja": "OPT RRの可変部分は、RDATAにゼロ以上のオプションを含んでいてもよいです。各オプションはビットフィールドとして扱わなければなりません。各オプションは、次のようにコード化されています。"
    },
    {
      "indent": 4,
      "text": "              +0 (MSB)                            +1 (LSB)\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n0: |                          OPTION-CODE                          |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n2: |                         OPTION-LENGTH                         |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n4: |                                                               |\n   /                          OPTION-DATA                          /\n   /                                                               /\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "OPTION-CODE Assigned by the Expert Review process as defined by the DNSEXT working group and the IESG.",
      "ja": "DNSEXTワーキンググループとIESGによって定義されている専門家レビュー・プロセスによって割り当てられOPTION-CODE。"
    },
    {
      "indent": 3,
      "text": "OPTION-LENGTH Size (in octets) of OPTION-DATA.",
      "ja": "OPTION-DATAのOPTION-LENGTHサイズ（オクテットで）。"
    },
    {
      "indent": 3,
      "text": "OPTION-DATA Varies per OPTION-CODE. MUST be treated as a bit field.",
      "ja": "OPTION-DATAは、OPTION-CODEごとに異なります。ビットフィールドとして扱わなければなりません。"
    },
    {
      "indent": 3,
      "text": "The order of appearance of option tuples is not defined. If one option modifies the behaviour of another or multiple options are related to one another in some way, they have the same effect regardless of ordering in the RDATA wire encoding.",
      "ja": "オプションのタプルの出現順序が定義されていません。一つの選択肢は、何らかの方法で互いに関連している別のまたは複数のオプションの動作を変更した場合、彼らは関係なく、RDATAのワイヤーエンコーディングで注文するのと同じ効果を持ちます。"
    },
    {
      "indent": 3,
      "text": "Any OPTION-CODE values not understood by a responder or requestor MUST be ignored. Specifications of such options might wish to include some kind of signaled acknowledgement. For example, an option specification might say that if a responder sees and supports option XYZ, it MUST include option XYZ in its response.",
      "ja": "応答または要求者によって理解されていない任意のOPTION-CODEの値は無視しなければなりません。そのようなオプションの仕様は、合図の確認応答のいくつかの種類を含めたいかもしれません。たとえば、オプション仕様では、応答者が見て、オプションXYZをサポートしている場合、それはその応答でオプションXYZを含まなければならないことを言うかもしれません。"
    },
    {
      "indent": 0,
      "text": "6.1.3. OPT Record TTL Field Use",
      "section_title": true,
      "ja": "6.1.3。 OPTレコードのTTLフィールドの使用"
    },
    {
      "indent": 3,
      "text": "The extended RCODE and flags, which OPT stores in the RR Time to Live (TTL) field, are structured as follows:",
      "ja": "次のように（TTL）フィールドを生きてRR時間の格納をOPT拡張RCODEとフラグは、構造化されています。"
    },
    {
      "indent": 4,
      "text": "              +0 (MSB)                            +1 (LSB)\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n0: |         EXTENDED-RCODE        |            VERSION            |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n2: | DO|                           Z                               |\n   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "EXTENDED-RCODE Forms the upper 8 bits of extended 12-bit RCODE (together with the 4 bits defined in [RFC1035]. Note that EXTENDED-RCODE value 0 indicates that an unextended RCODE is in use (values 0 through 15).",
      "ja": "拡張RCODEは（一緒に[RFC1035]で定義される4ビットの拡張された12ビットのRCODEの上位8ビットフォーム。EXTENDED-RCODE値0は未伸長RCODEを使用（値0〜15）であることを示すことに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "VERSION Indicates the implementation level of the setter. Full conformance with this specification is indicated by version '0'. Requestors are encouraged to set this to the lowest implemented level capable of expressing a transaction, to minimise the responder and network load of discovering the greatest common implementation level between requestor and responder. A requestor's version numbering strategy MAY ideally be a run-time configuration option. If a responder does not implement the VERSION level of the request, then it MUST respond with RCODE=BADVERS. All responses MUST be limited in format to the VERSION level of the request, but the VERSION of each response SHOULD be the highest implementation level of the responder. In this way, a requestor will learn the implementation level of a responder as a side effect of every response, including error responses and including RCODE=BADVERS.",
      "ja": "VERSIONは、セッターの実装レベルを示します。この仕様に完全準拠し、バージョンによって示される「0」。リクエスタは、リクエスタとレスポンダとの間の最大公約数実装レベルを発見する応答及びネットワーク負荷を最小にするために、トランザクションを発現することができる最も低い実施レベルにこれを設定することが推奨されています。要求元のバージョン番号の戦略は、理想的には、実行時の設定オプションかもしれ。応答者は、要求のバージョンレベルを実装していない場合、それはRCODE = BADVERSで応じなければなりません。すべての応答は、要求のVERSIONレベルに形式に限定されなければならないが、各応答のVERSIONは、応答者の最高の実装レベルであるべきです。このように、要求者はRCODE = BADVERSを含むエラー応答を含め、すべての応答の副作用としてレスポンダの実装レベルを学びます。"
    },
    {
      "indent": 0,
      "text": "6.1.4. Flags",
      "section_title": true,
      "ja": "6.1.4。国旗"
    },
    {
      "indent": 3,
      "text": "DO DNSSEC OK bit as defined by [RFC3225].",
      "ja": "[RFC3225]で定義されるようにDNSSEC OKビットを行います。"
    },
    {
      "indent": 3,
      "text": "Z Set to zero by senders and ignored by receivers, unless modified in a subsequent specification.",
      "ja": "Zは、送信者によってゼロに設定し、その後の仕様に変更しない限り、受信機によって無視します。"
    },
    {
      "indent": 0,
      "text": "6.2. Behaviour",
      "section_title": true,
      "ja": "6.2。動作"
    },
    {
      "indent": 0,
      "text": "6.2.1. Cache Behaviour",
      "section_title": true,
      "ja": "6.2.1。キャッシュの挙動"
    },
    {
      "indent": 3,
      "text": "The OPT record MUST NOT be cached.",
      "ja": "OPTレコードがキャッシュされてはなりません。"
    },
    {
      "indent": 0,
      "text": "6.2.2. Fallback",
      "section_title": true,
      "ja": "6.2.2。後退する"
    },
    {
      "indent": 3,
      "text": "If a requestor detects that the remote end does not support EDNS(0), it MAY issue queries without an OPT record. It MAY cache this knowledge for a brief time in order to avoid fallback delays in the future. However, if DNSSEC or any future option using EDNS is required, no fallback should be performed, as these options are only signaled through EDNS. If an implementation detects that some servers for the zone support EDNS(0) while others would force the use of TCP to fetch all data, preference MAY be given to servers that support EDNS(0). Implementers SHOULD analyse this choice and the impact on both endpoints.",
      "ja": "リクエスタは、リモートエンドがEDNSをサポートしていないことを検出した場合（0）、それはOPTレコードなしにクエリを発行することができます。これは、将来的にフォールバック遅延を回避するために、短い時間のためにこの知識をキャッシュすることができます。 DNSSECやEDNSを使用して、任意の将来のオプションが必要な場合、これらのオプションはのみEDNSを通じて通知されているようしかし、フォールバックは、実行されるべきではありません。実装は、他の人が、すべてのデータをフェッチするためにTCPの使用を強制するでしょうが、ゾーンのサポートEDNSのためのいくつかのサーバーが（0）、好みはEDNS（0）をサポートしているサーバーに与えてもよいことを検出した場合。実装者は、この選択し、両方のエンドポイントへの影響を分析する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.2.3. Requestor's Payload Size",
      "section_title": true,
      "ja": "6.2.3。リクエスタのペイロードサイズ"
    },
    {
      "indent": 3,
      "text": "The requestor's UDP payload size (encoded in the RR CLASS field) is the number of octets of the largest UDP payload that can be reassembled and delivered in the requestor's network stack. Note that path MTU, with or without fragmentation, could be smaller than this.",
      "ja": "（RRクラスフィールドで符号化された）要求元のUDPペイロードサイズは、要求者のネットワークスタックで再構築し、送達することができる最大UDPペイロードのオクテットの数です。これより小さくすることができ、または断片化することなく、そのパスMTUに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Values lower than 512 MUST be treated as equal to 512.",
      "ja": "512は512に等しいものとして扱われなければならないよりも低い値。"
    },
    {
      "indent": 3,
      "text": "The requestor SHOULD place a value in this field that it can actually receive. For example, if a requestor sits behind a firewall that will block fragmented IP packets, a requestor SHOULD NOT choose a value that will cause fragmentation. Doing so will prevent large responses from being received and can cause fallback to occur. This knowledge may be auto-detected by the implementation or provided by a human administrator.",
      "ja": "リクエスタは、それが実際に受け取ることができます。このフィールドに値を配置する必要があります。要求者は、断片化されたIPパケットをブロックしますファイアウォールの背後に座っている場合たとえば、要求者は、断片化が発生します値を選択すべきではありません。そうすることで受信されてから大きな反応を防ぐことができますし、フォールバックが発生する可能性があります。この知識は、自動検出の実装によって、または人間の管理者によって提供されてもよいです。"
    },
    {
      "indent": 3,
      "text": "Note that a 512-octet UDP payload requires a 576-octet IP reassembly buffer. Choosing between 1280 and 1410 bytes for IP (v4 or v6) over Ethernet would be reasonable.",
      "ja": "512オクテットUDPペイロードが576オクテットのIP再アセンブリバッファを必要とすることに留意されたいです。・オーバー・イーサネット（V4またはV6）が合理的であるIPのための1280年と1410バイトの間で選択します。"
    },
    {
      "indent": 3,
      "text": "Where fragmentation is not a concern, use of bigger values SHOULD be considered by implementers. Implementations SHOULD use their largest configured or implemented values as a starting point in an EDNS transaction in the absence of previous knowledge about the destination server.",
      "ja": "断片化は問題ではない場合は、より大きな値の使用は、実装によって考慮されるべきです。実装は、宛先サーバに関する事前知識の非存在下でEDNSトランザクションの開始点として、それらの最大構成又は実現値を使用すべきです。"
    },
    {
      "indent": 3,
      "text": "Choosing a very large value will guarantee fragmentation at the IP layer, and may prevent answers from being received due to loss of a single fragment or to misconfigured firewalls.",
      "ja": "非常に大きな値を選択すると、IP層で断片化を保証します、とによる単一の断片の損失または誤設定のファイアウォールに受信されてから答えを防ぐことができます。"
    },
    {
      "indent": 3,
      "text": "The requestor's maximum payload size can change over time. It MUST NOT be cached for use beyond the transaction in which it is advertised.",
      "ja": "要求者の最大ペイロードサイズは、時間の経過とともに変化することができます。それは、それが宣伝されているトランザクションを越えて使用するためにキャッシュしてはなりません。"
    },
    {
      "indent": 0,
      "text": "6.2.4. Responder's Payload Size",
      "section_title": true,
      "ja": "6.2.4。レスポンダのペイロードサイズ"
    },
    {
      "indent": 3,
      "text": "The responder's maximum payload size can change over time but can reasonably be expected to remain constant between two closely spaced sequential transactions, for example, an arbitrary QUERY used as a probe to discover a responder's maximum UDP payload size, followed immediately by an UPDATE that takes advantage of this size. This is considered preferable to the outright use of TCP for oversized requests, if there is any reason to suspect that the responder implements EDNS, and if a request will not fit in the default 512-byte payload size limit.",
      "ja": "レスポンダの最大ペイロードサイズが経時的に変化することができるが、合理的に、例えば2つの近接したシーケンシャルトランザクション間レス​​ポンダの最大UDPペイロードサイズを発見するためのプローブとして使用される任意のQUERY一定のままであると予想することができ、かかるUPDATE直後このサイズの利点。レスポンダがEDNSを実装していることを疑うに足りる、と要求はデフォルトの512バイトのペイロードサイズ制限に収まらない場合は何らかの理由がある場合には、特大の要求のためのTCPのあからさまな使用に好ましいと考えられます。"
    },
    {
      "indent": 0,
      "text": "6.2.5. Payload Size Selection",
      "section_title": true,
      "ja": "6.2.5。ペイロードサイズの選択"
    },
    {
      "indent": 3,
      "text": "Due to transaction overhead, it is not recommended to advertise an architectural limit as a maximum UDP payload size. Even on system stacks capable of reassembling 64 KB datagrams, memory usage at low levels in the system will be a concern. A good compromise may be the use of an EDNS maximum payload size of 4096 octets as a starting point.",
      "ja": "トランザクションのオーバーヘッドに、最大のUDPペイロードサイズなどの建築制限を宣伝することは推奨されません。システムに64Kバイトのデータグラムを再組み立てすることが可能なスタック、システムにおける低レベルでメモリ使用量が問題であろう。良好な妥協は、出発点として4096オクテットのEDNS最大ペイロードサイズを使用してもよいです。"
    },
    {
      "indent": 3,
      "text": "A requestor MAY choose to implement a fallback to smaller advertised sizes to work around firewall or other network limitations. A requestor SHOULD choose to use a fallback mechanism that begins with a large size, such as 4096. If that fails, a fallback around the range of 1280-1410 bytes SHOULD be tried, as it has a reasonable chance to fit within a single Ethernet frame. Failing that, a requestor MAY choose a 512-byte packet, which with large answers may cause a TCP retry.",
      "ja": "要求者は、ファイアウォールやその他のネットワーク制限を回避するために小さな広告を出してサイズへのフォールバックを実装することを選択できます。それは単一のイーサネットに収まるように合理的なチャンスを持っているよう要求者は、それが失敗した場合、1280から1410バイトの範囲の周りのフォールバックが試行すべきであるなど、4096大きなサイズで始まるフォールバックメカニズムを、使用することを選択する必要がありますフレーム。その失敗、要求者は、TCPの再試行を引き起こす可能性があり、大きな答えと512バイトのパケットを、選ぶかもしれません。"
    },
    {
      "indent": 3,
      "text": "Values of less than 512 bytes MUST be treated as equal to 512 bytes.",
      "ja": "512バイト未満の値は512バイトに等しいものとして扱わなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.2.6. Support in Middleboxes",
      "section_title": true,
      "ja": "6.2.6。 Middleboxesでサポート"
    },
    {
      "indent": 3,
      "text": "In a network that carries DNS traffic, there could be active equipment other than that participating directly in the DNS resolution process (stub and caching resolvers, authoritative servers) that affects the transmission of DNS messages (e.g., firewalls, load balancers, proxies, etc.), referred to here as \"middleboxes\".",
      "ja": "DNSトラフィックを伝送するネットワークでは、DNSメッセージ（例えば、ファイアウォール、ロードバランサ、プロキシなどの伝送に影響を与えるDNS解決プロセスに直接関与するもの以外の活性機器（スタブとキャッシングリゾルバ、権威サーバー）が存在し得ます。）、「ミドルボックス」とここでいいます。"
    },
    {
      "indent": 3,
      "text": "Conformant middleboxes MUST NOT limit DNS messages over UDP to 512 bytes.",
      "ja": "準拠のミドルボックスは、512バイトにUDP上でDNSメッセージを制限してはなりません。"
    },
    {
      "indent": 3,
      "text": "Middleboxes that simply forward requests to a recursive resolver MUST NOT modify and MUST NOT delete the OPT record contents in either direction.",
      "ja": "再帰リゾルバへ単純に転送要求は変更してはいけませんし、どちらの方向にOPTレコードの内容を削除してはならないのMiddleboxes。"
    },
    {
      "indent": 3,
      "text": "Middleboxes that have additional functionality, such as answering queries or acting as intelligent forwarders, SHOULD be able to process the OPT record and act based on its contents. These middleboxes MUST consider the incoming request and any outgoing requests as separate transactions if the characteristics of the messages are different.",
      "ja": "このようなクエリに答えるかなどのインテリジェントフォワーダを演技などの追加機能を持っているのMiddleboxesは、OPTレコードを処理することができ、その内容に基づいて行動しなければなりません。メッセージの特性が異なっている場合、これらのミドルボックスは、着信要求と別々のトランザクションとして任意の発信要求を考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "A more in-depth discussion of this type of equipment and other considerations regarding their interaction with DNS traffic is found in [RFC5625].",
      "ja": "DNSトラフィックとの相互作用に関する機器およびその他の考慮事項のこのタイプのより詳細な議論は[RFC5625]で発見されました。"
    },
    {
      "indent": 0,
      "text": "7. Transport Considerations",
      "section_title": true,
      "ja": "7.輸送の考慮事項"
    },
    {
      "indent": 3,
      "text": "The presence of an OPT pseudo-RR in a request should be taken as an indication that the requestor fully implements the given version of EDNS and can correctly understand any response that conforms to that feature's specification.",
      "ja": "要求にOPT疑似RRの存在は、リクエスタが完全EDNSの所与のバージョンを実装し、正しくその機能の仕様に準拠する任意の応答を理解することができることを示すものとして解釈されるべきです。"
    },
    {
      "indent": 3,
      "text": "Lack of presence of an OPT record in a request MUST be taken as an indication that the requestor does not implement any part of this specification and that the responder MUST NOT include an OPT record in its response.",
      "ja": "要求にOPTレコードの存在の欠如は、リクエスタは、本明細書の任意の部分を実装していないと応答者がその応答にOPTレコードを含んではならないことを示すように注意しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Extended agents MUST be prepared for handling interactions with unextended clients in the face of new protocol elements and fall back gracefully to unextended DNS when needed.",
      "ja": "拡張エージェントは、新しいプロトコル要素の顔に伸長していないクライアントとの相互作用を扱うために準備し、必要に応じて伸長していないDNSに優雅にフォールバックしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Responders that choose not to implement the protocol extensions defined in this document MUST respond with a return code (RCODE) of FORMERR to messages containing an OPT record in the additional section and MUST NOT include an OPT record in the response.",
      "ja": "追加セクションにOPTレコードを含むメッセージにFORMERRのリターンコード（RCODE）で応じなければなりません。この文書で定義されたプロトコルの拡張機能を実装しないことを選択すると応答したOPTレコードを含んではいけませんレスポンダ。"
    },
    {
      "indent": 3,
      "text": "If there is a problem with processing the OPT record itself, such as an option value that is badly formatted or that includes out-of-range values, a FORMERR MUST be returned. If this occurs, the response MUST include an OPT record. This is intended to allow the requestor to distinguish between servers that do not implement EDNS and format errors within EDNS.",
      "ja": "そのようなひどくフォーマットまたはそれが範囲外の値を含むオプション値と、OPTレコード自体の処理に問題がある場合、FORMERRが返さなければなりません。この問題が発生した場合、応答は、OPTレコードを含まなければなりません。これは、要求者がEDNS内EDNSとフォーマットエラーを実装していないサーバを区別できるようにするためのものです。"
    },
    {
      "indent": 3,
      "text": "The minimal response MUST be the DNS header, question section, and an OPT record. This MUST also occur when a truncated response (using the DNS header's TC bit) is returned.",
      "ja": "最小の応答は、DNSヘッダ、質問部と、OPTレコードでなければなりません。 （DNSヘッダーのTCビットを使用して）切断型応答が返された場合にも発生しなければなりません。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "Requestor-side specification of the maximum buffer size may open a DNS denial-of-service attack if responders can be made to send messages that are too large for intermediate gateways to forward, thus leading to potential ICMP storms between gateways and responders.",
      "ja": "応答者はこのように、ゲートウェイとレスポンダとの間の潜在的なICMPの嵐につながる、中間ゲートウェイが転送するには大きすぎるメッセージを送信させることができれば最大バッファサイズの要求者側の仕様では、DNSサービス拒否攻撃を開くことができます。"
    },
    {
      "indent": 3,
      "text": "Announcing very large UDP buffer sizes may result in dropping of DNS messages by middleboxes (see Section 6.2.6). This could cause retransmissions with no hope of success. Some devices have been found to reject fragmented UDP packets.",
      "ja": "（6.2.6項を参照）、非常に大きなUDPバッファサイズは、ミドルボックスによって、DNSメッセージの落下をもたらす可能性が発表。これが成功の無い希望を持って再送信を引き起こす可能性があります。一部のデバイスは、断片化されたUDPパケットを拒否することが見出されています。"
    },
    {
      "indent": 3,
      "text": "Announcing UDP buffer sizes that are too small may result in fallback to TCP with a corresponding load impact on DNS servers. This is especially important with DNSSEC, where answers are much larger.",
      "ja": "DNSサーバ上の対応する負荷の影響で、TCPのフォールバックをもたらす可能性が小さすぎてUDPバッファサイズを発表。これは答えがはるかに大きいDNSSEC、と特に重要です。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "The IANA has assigned RR type code 41 for OPT.",
      "ja": "IANAは、OPTのためのRRタイプコード41が割り当てられています。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] specified a number of IANA subregistries within \"DOMAIN NAME SYSTEM PARAMETERS\":",
      "ja": "[RFC2671]は、「ドメインネームシステムパラメータ」内のIANA subregistriesの数を指定しました。"
    },
    {
      "indent": 3,
      "text": "o DNS EDNS(0) Options",
      "ja": "O DNS EDNS（0）オプション"
    },
    {
      "indent": 3,
      "text": "o EDNS Version Number",
      "ja": "ああEddinsのバージョン番号"
    },
    {
      "indent": 3,
      "text": "o EDNS Header Flags",
      "ja": "O EDNSヘッダフラグ"
    },
    {
      "indent": 3,
      "text": "Additionally, two entries were generated in existing registries:",
      "ja": "さらに、2つのエントリは、既存のレジストリで生成されました："
    },
    {
      "indent": 3,
      "text": "o EDNS Extended Label Type in the DNS Label Types registry",
      "ja": "DNSラベルタイプレジストリのO EDNS拡張ラベルタイプ"
    },
    {
      "indent": 3,
      "text": "o Bad OPT Version in the DNS RCODES registry",
      "ja": "DNS RCODESレジストリの不正OPTバージョンO"
    },
    {
      "indent": 3,
      "text": "IANA has updated references to [RFC2671] in these entries and subregistries to this document.",
      "ja": "IANAは、この文書にこれらのエントリとsubregistriesで[RFC2671]への参照を更新しました。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] created the DNS Label Types registry. This registry is to remain open.",
      "ja": "[RFC2671]はDNSラベルタイプのレジストリを作成しました。このレジストリは開いたままにすることです。"
    },
    {
      "indent": 3,
      "text": "The registration procedure for the DNS Label Types registry is Standards Action.",
      "ja": "DNSラベルタイプレジストリの登録手順は、標準アクションです。"
    },
    {
      "indent": 3,
      "text": "This document assigns option code 65535 in the DNS EDNS0 Options registry to \"Reserved for future expansion\".",
      "ja": "この文書は、「将来の拡張のために予約する」DNS EDNS0オプションレジストリにオプションコード65535が割り当てられます。"
    },
    {
      "indent": 3,
      "text": "The current status of the IANA registry for EDNS Option Codes at the time of publication of this document is",
      "ja": "このドキュメントの発行時点でEDNSオプションコードのためのIANAレジストリの現在のステータスがあります"
    },
    {
      "indent": 3,
      "text": "o 0-4 assigned, per references in the registry",
      "ja": "0-4 Oレジストリの参照ごとに、割り当てられました"
    },
    {
      "indent": 3,
      "text": "o 5-65000 Available for assignment, unassigned",
      "ja": "未割り当て、割り当て可能なO 5から65000"
    },
    {
      "indent": 3,
      "text": "o 65001-65534 Local/Experimental use",
      "ja": "O 65001から65534ローカル/実験的使用"
    },
    {
      "indent": 3,
      "text": "o 65535 Reserved for future expansion",
      "ja": "65535 O将来の拡張のために予約"
    },
    {
      "indent": 3,
      "text": "[RFC2671] expands the RCODE space from 4 bits to 12 bits. This allows more than the 16 distinct RCODE values allowed in [RFC1035]. IETF Review is required to add a new RCODE.",
      "ja": "[RFC2671]は12ビットに4ビットからRCODE空間を拡張します。これは[RFC1035]で許可さ16個の異なるRCODE値以上のものを可能にします。 IETFレビューは、新しいRCODEを追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "This document assigns EDNS Extended RCODE 16 to \"BADVERS\" in the DNS RCODES registry.",
      "ja": "この文書では、DNS RCODESレジストリにEDNS拡張RCODE 16に「BADVERS」を割り当てます。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] called for the recording of assignment of extended label types 0bxx111111 as \"Reserved for future extended label types\"; the IANA registry currently contains \"Reserved for future expansion\". This request implied, at that time, a request to open a new registry for extended label types, but due to the possibility of ambiguity, new text registrations were instead made within the general DNS Label Types registry, which also registers entries originally defined by [RFC1035]. There is therefore no Extended Label Types registry, with all label types registered in the DNS Label Types registry.",
      "ja": "[RFC2671]「将来拡張ラベルタイプのために予約」として0bxx111111拡張ラベルタイプの割り当ての記録を求めました。 IANAレジストリは、現在、「将来の拡張のために予約済み」が含まれています。この要求は、その時点で、拡張ラベルタイプのための新しいレジストリを開く要求を暗示が、原因曖昧さの可能性に、新しいテキスト登録が代わりにも、もともと[によって定義されたエントリを登録する一般的なDNSラベルタイプレジストリ内で行われましたRFC1035]。 DNSラベルタイプレジストリに登録されているすべてのラベルタイプとは拡張ラベルタイプレジストリは、したがって、ありません。"
    },
    {
      "indent": 3,
      "text": "This document deprecates Binary Labels. Therefore, the status for the DNS Label Types registration \"Binary Labels\" is now \"Historic\".",
      "ja": "このドキュメントは、バイナリラベルを非難します。そのため、DNSラベルタイプ登録「バイナリラベル」のステータスは、「歴史的」になりました。"
    },
    {
      "indent": 3,
      "text": "IETF Standards Action is required for assignments of new EDNS(0) flags. Flags SHOULD be used only when necessary for DNS resolution to function. For many uses, an EDNS Option Code may be preferred.",
      "ja": "IETF標準化アクションは新しいEDNS（0）フラグの割り当てのために必要とされます。フラグは、関数へのDNS解決のために、必要な場合にのみ使用されるべきです。多くの用途のために、EDNSオプションコードは好ましいかもしれません。"
    },
    {
      "indent": 3,
      "text": "IETF Standards Action is required to create new entries in the EDNS Version Number registry. Within the EDNS Option Code space, Expert Review is required for allocation of an EDNS Option Code. Per this document, IANA maintains a registry for the EDNS Option Code space.",
      "ja": "IETF標準化アクションはEDNSバージョン番号のレジストリに新しいエントリを作成するために必要です。 EDNSオプションコードスペース内では、専門家レビューはEDNSオプションコードの割り当てのために必要とされます。このドキュメントごとに、IANAはEDNSオプションコード空間のレジストリを維持します。"
    },
    {
      "indent": 0,
      "text": "9.1. OPT Option Code Allocation Procedure",
      "section_title": true,
      "ja": "9.1。 OPTオプション・コード割り当て手順"
    },
    {
      "indent": 3,
      "text": "OPT Option Codes are assigned by Expert Review.",
      "ja": "OPTオプションコードは、専門家レビューによって割り当てられます。"
    },
    {
      "indent": 3,
      "text": "Assignment of Option Codes should be liberal, but duplicate functionality is to be avoided.",
      "ja": "オプションコードの割り当ては、リベラルである必要がありますが、重複した機能性は避けるべきです。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC1035] Mockapetris, P., \"Domain names - implementation and specification\", STD 13, RFC 1035, November 1987.",
      "ja": "[RFC1035] Mockapetris、P.、 \"ドメイン名 - 実装及び仕様\"、STD 13、RFC 1035、1987年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2671] Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\", RFC 2671, August 1999.",
      "ja": "[RFC2671]いるVixie、P.、 \"DNS用拡張メカニズム（EDNS0）\"、RFC 2671、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3225] Conrad, D., \"Indicating Resolver Support of DNSSEC\", RFC 3225, December 2001.",
      "ja": "[RFC3225]コンラッド、D.、 \"DNSSECのレゾルバサポートを示す\"、RFC 3225、2001年12月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2673] Crawford, M., \"Binary Labels in the Domain Name System\", RFC 2673, August 1999.",
      "ja": "[RFC2673]クロフォード、M.、 \"ドメインネームシステムにおけるバイナリラベル\"、RFC 2673、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3363] Bush, R., Durand, A., Fink, B., Gudmundsson, O., and T. Hain, \"Representing Internet Protocol version 6 (IPv6) Addresses in the Domain Name System (DNS)\", RFC 3363, August 2002.",
      "ja": "[RFC3363]ブッシュ、R.、デュラン、A.、フィンク、B.、グドムンソン、O.、およびT.ハイン、RFC 3363 \"ドメインネームシステム（DNS）にインターネットプロトコルバージョン6（IPv6）アドレスを表します\" 、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3364] Austein, R., \"Tradeoffs in Domain Name System (DNS) Support for Internet Protocol version 6 (IPv6)\", RFC 3364, August 2002.",
      "ja": "[RFC3364] Austeinと、R.、 \"ドメインネームシステム（DNS）でのトレードオフのインターネットプロトコルバージョン6（IPv6）のサポート\"、RFC 3364、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5625] Bellis, R., \"DNS Proxy Implementation Guidelines\", BCP 152, RFC 5625, August 2009.",
      "ja": "[RFC5625]ベリス、R.、 \"DNSプロキシ実装ガイドライン\"、BCP 152、RFC 5625、2009年8月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Changes since RFCs 2671 and 2673",
      "ja": "付録A.のRFC 2671および2673からの変更点"
    },
    {
      "indent": 3,
      "text": "Following is a list of high-level changes to RFCs 2671 and 2673.",
      "ja": "RFC 2671および2673にハイレベルの変更の一覧です。"
    },
    {
      "indent": 3,
      "text": "o Support for the OPT record is now mandatory.",
      "ja": "OPTレコードのOサポートは現在、必須です。"
    },
    {
      "indent": 3,
      "text": "o Extended label types remain available, but their use is discouraged as a general solution due to observed difficulties in their deployment on the Internet, as illustrated by the work with the \"Binary Labels\" type.",
      "ja": "O拡張ラベルタイプは、利用可能なままですが、「バイナリラベル」タイプでの作業によって示されるように、それらの使用は、原因インターネット上の彼らの展開で観測された困難に一般的な解決策として推奨されません。"
    },
    {
      "indent": 3,
      "text": "o RFC 2673, which defined the \"Binary Labels\" type and is currently Experimental, is requested to be moved to Historic.",
      "ja": "「バイナリラベル」タイプを定義し、現在は実験的であるOのRFC 2673は、歴史的に移動することが要求されます。"
    },
    {
      "indent": 3,
      "text": "o Made changes in how EDNS buffer sizes are selected, and provided recommendations on how to select them.",
      "ja": "O EDNSバッファサイズが選択されている方法に変更を加え、それらを選択する方法について提言を提供。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Joao Damas Bond Internet Systems Av Albufera 14 S.S. Reyes, Madrid 28701 ES",
      "ja": "ジョアンダマボンドインターネットシステムのAvアルブフェラ14 S.S.レイエス、マドリード28701 ES"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650.423.1312 EMail: joao@bondis.org",
      "ja": "電話：+1 650.423.1312 Eメール：joao@bondis.org"
    },
    {
      "indent": 3,
      "text": "Michael Graff",
      "ja": "マイケルGraffの"
    },
    {
      "indent": 3,
      "text": "EMail: explorer@flame.org",
      "ja": "メールアドレス：explorer@flame.org"
    },
    {
      "indent": 3,
      "text": "Paul Vixie Internet Systems Consortium 950 Charter Street Redwood City, California 94063 US",
      "ja": "ポール・ヴィクシーインターネットシステムコンソーシアム950憲章ストリートレッドウッドシティ、カリフォルニア州94063米国"
    },
    {
      "indent": 3,
      "text": "Phone: +1 650.423.1301 EMail: vixie@isc.org",
      "ja": "電話：+1 650.423.1301 Eメール：vixie@isc.org"
    }
  ]
}