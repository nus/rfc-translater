{
  "title": {
    "text": "RFC 6062 - Traversal Using Relays around NAT (TURN) Extensions for TCP Allocations",
    "ja": "RFC 6062 - TCPの配分のためのNATの周りのリレー（TURN）拡張機能を使用したトラバーサル"
  },
  "number": 6062,
  "created_at": "2019-10-27 15:05:24.879007+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                 S. Perreault, Ed.\nRequest for Comments: 6062                                      Viagenie\nCategory: Standards Track                                   J. Rosenberg\nISSN: 2070-1721                                              jdrosen.net\n                                                           November 2010",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Traversal Using Relays around NAT (TURN) Extensions for TCP Allocations",
      "ja": "TCPの配分のためのNATの周りのリレー（TURN）拡張機能を使用したトラバーサル"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This specification defines an extension of Traversal Using Relays around NAT (TURN), a relay protocol for Network Address Translator (NAT) traversal. This extension allows a TURN client to request TCP allocations, and defines new requests and indications for the TURN server to open and accept TCP connections with the client's peers. TURN and this extension both purposefully restrict the ways in which the relayed address can be used. In particular, it prevents users from running general-purpose servers from ports obtained from the TURN server.",
      "ja": "この仕様は、NAT（TURN）の周りにリレーを使用トラバーサルの拡張、ネットワークアドレス変換（NAT）トラバーサルのための中継プロトコルを定義します。この拡張は、TURNクライアントは、TCPの割り当てを要求することができます、と開いて、クライアントのピアとのTCP接続を受け入れるようにTURNサーバー用の新しい要求や指示を定義します。 TURNこの拡張は、両方の意図中継アドレスを使用することができる方法を制限します。特に、TURNサーバから取得したポートからの汎用サーバーを実行してからユーザーを防ぐことができます。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6062.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6062で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2010 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n3.  Overview of Operation  . . . . . . . . . . . . . . . . . . . .  4\n4.  Client Processing  . . . . . . . . . . . . . . . . . . . . . .  6\n  4.1.  Creating an Allocation . . . . . . . . . . . . . . . . . .  6\n  4.2.  Refreshing an Allocation . . . . . . . . . . . . . . . . .  7\n  4.3.  Initiating a Connection  . . . . . . . . . . . . . . . . .  7\n  4.4.  Receiving a Connection . . . . . . . . . . . . . . . . . .  7\n  4.5.  Sending and Receiving Data . . . . . . . . . . . . . . . .  8\n  4.6.  Data Connection Maintenance  . . . . . . . . . . . . . . .  8\n5.  TURN Server Behavior . . . . . . . . . . . . . . . . . . . . .  8\n  5.1.  Receiving a TCP Allocate Request . . . . . . . . . . . . .  8\n  5.2.  Receiving a Connect Request  . . . . . . . . . . . . . . .  9\n  5.3.  Receiving a TCP Connection on a Relayed Transport\n        Address  . . . . . . . . . . . . . . . . . . . . . . . . . 10\n  5.4.  Receiving a ConnectionBind Request . . . . . . . . . . . . 11\n  5.5.  Data Connection Maintenance  . . . . . . . . . . . . . . . 11\n6.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11\n  6.1.  New STUN Methods . . . . . . . . . . . . . . . . . . . . . 11\n  6.2.  New STUN Attributes  . . . . . . . . . . . . . . . . . . . 12\n    6.2.1.  CONNECTION-ID  . . . . . . . . . . . . . . . . . . . . 12\n  6.3.  New STUN Error Codes . . . . . . . . . . . . . . . . . . . 12\n7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 12\n8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 12\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 12\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 13",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Traversal Using Relays around NAT (TURN) [RFC5766] is an extension to the Session Traversal Utilities for NAT [RFC5389] protocol. TURN allows for clients to communicate with a TURN server and ask it to allocate ports on one of its host interfaces, and then relay traffic between that port and the client itself. TURN, when used in concert with STUN and Interactive Connectivity Establishment (ICE) [RFC5245], forms a solution for NAT traversal for UDP-based media sessions.",
      "ja": "NAT（TURN）の周りにリレーを使用トラバーサル[RFC5766]はNATのためのセッショントラバーサルユーティリティ[RFC5389]プロトコルの拡張です。クライアントは、TURNサーバと通信し、ホストインターフェースのいずれかにポートを割り当て、そのポートとクライアント自身の間のトラフィックを中継するように依頼するためのターンが可能となります。 TURNは、STUNとインタラクティブ接続確立（ICE）[RFC5245]と協調して使用される場合、UDPベースのメディアセッションのためのNATトラバーサルのための溶液を形成します。"
    },
    {
      "indent": 3,
      "text": "However, TURN itself does not provide a way for a client to allocate a TCP-based port on a TURN server. Such an allocation is needed for cases where a TCP-based session is desired with a peer, and NATs prevent a direct TCP connection. Examples include application sharing between desktop softphones, or transmission of pictures during a voice communications session.",
      "ja": "しかし、クライアントはTURNサーバーにTCPベースのポートを割り当てるための方法を提供していない自分自身を回します。そのような割り当ては、TCPベースのセッションがピアで所望される場合に必要な、及びNATは、直接TCP接続を防止しています。例としては、デスクトップソフトフォン、または音声通信セッション中の画像の送信との間のアプリケーション共有を含みます。"
    },
    {
      "indent": 3,
      "text": "This document defines an extension to TURN that allows a client to obtain a TCP allocation. It also allows the client to initiate outgoing TCP connections from that allocation to peers and to accept incoming TCP connection requests from peers made towards that allocation.",
      "ja": "この文書では、それは、クライアントがTCPの割り当てを得ることを可能にするオンにする拡張機能を定義します。また、クライアントがピアにその割り当てからの発信TCP接続を開始し、その配分に向けたピアからの着信TCP接続要求を受け入れることができます。"
    },
    {
      "indent": 3,
      "text": "The term \"TCP allocation\" means a TURN allocation where TCP is used as the transport protocol instead of UDP. Such an allocation is uniquely identified by its relayed transport address, which consists of an IP address and TCP port (defined in [RFC5766]).",
      "ja": "用語「TCP割り当ては、」TCPはなくUDPのトランスポートプロトコルとして使用されているTURN割り当てを意味します。このような割り当ては、一意（[RFC5766]で定義された）IPアドレスとTCPポートで構成され、その中継トランスポートアドレスによって識別されます。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2.表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Overview of Operation",
      "section_title": true,
      "ja": "操作の概要3。"
    },
    {
      "indent": 6,
      "text": "                                                +--------+\n                                                |        |\n                                                | Peer1  |\n                                             /  |        |\n                                            /   |        |\n                                           /    +--------+\n                                          /\n                                         /\n                                        / Peer Data 1\n                                       /\n+--------+  Control       +--------+  /\n|        | -------------- |        | /\n| Client | Client Data 1  | TURN   |\n|        | -------------- | Server | \\\n|        | -------------- |        |  \\\n+--------+ Client Data 2  +--------+   \\\n                                        \\\n                                         \\\n                                          \\     +--------+\n                                           \\    |        |\n                                Peer Data 2 \\   | Peer2  |\n                                             \\  |        |\n                                                |        |\n                                                +--------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 1: TURN TCP Model",
      "ja": "図1：TCPモデルを回します"
    },
    {
      "indent": 3,
      "text": "The overall model for TURN-TCP is shown in Figure 1. The client will have two different types of connections to its TURN server. For each allocated relayed transport address, it will have a single control connection. Control connections are used to obtain allocations and open up new connections. Furthermore, for each connection to a peer, the client will have a single connection to its TURN server. These connections are called data connections. Consequently, there is a data connection from the client to its TURN server (the client data connection) and one from the TURN server to a peer (the peer data connection). Actual application data is sent on these connections. Indeed, after an initial TURN message that binds the client data connection to a peer data connection, only application data can be sent -- no TURN messaging. This is in contrast to the control connection, which only allows TURN messages and not application data.",
      "ja": "TURN-TCPのための全体的なモデルは、クライアントがTURNサーバーへの接続の二つの異なるタイプがあります。図1に示されています。それぞれ割り当てられた中継伝送アドレスの場合は、単一の制御コネクションを持つことになります。制御接続は、割り当てを取得し、新しい接続を開くために使用されています。さらに、ピアへの接続ごとに、クライアントはTURNサーバーへの単一の接続を持つことになります。これらの接続は、データ接続と呼ばれています。したがって、ピア（ピアデータ接続）にTURNサーバからTURNサーバ（クライアント・データ接続）と1つのクライアントからのデータ接続があります。実際のアプリケーションデータは、これらの接続に送信されます。確かに、ピアデータ接続へのクライアントのデータ接続をバインドする初期TURNメッセージの後、唯一のアプリケーションのデータが送信されないことができます - 何TURNメッセージを。これは、メッセージのみとしないアプリケーションデータを回し可能に制御接続とは対照的です。"
    },
    {
      "indent": 3,
      "text": "To obtain a TCP-based allocation, a client first opens a TCP or TLS connection to its TURN server. The client then sends an Allocate request over that control connection. That request contains a REQUESTED-TRANSPORT attribute, which indicates a TCP-based allocation is desired. A server that supports this extension will allocate a TCP relayed transport address and begin listening for connection requests on it. It then returns the allocated relayed transport address to the client in the response to the Allocate request. The connection on which the Allocate request was sent is the control connection.",
      "ja": "TCPベースの割り当てを取得するには、クライアントはまずTCPまたはそのTURNサーバーへのTLS接続を開きます。クライアントは、その制御接続を介して割り当て要求を送信します。その要求は、TCPベースの割り当てが所望されていることを示しREQUESTED輸送属性を含んでいます。この拡張をサポートするサーバは、TCPはトランスポートアドレスを中継割り当て、その上に接続要求をリスニングを開始します。その後、割り当て要求に応答して、クライアントに割り当てられた中継されるトランスポートアドレスを返します。割り当て要求を送信した上で接続が制御接続です。"
    },
    {
      "indent": 3,
      "text": "If a client wishes to establish a TCP connection to a peer from that relayed transport address, it issues a Connect request to the TURN server over the control connection. That request contains an XOR-PEER-ADDRESS attribute identifying the peer IP address and port (i.e., its \"transport address\") to which a connection is to be made. The TURN server attempts to open the TCP connection, and assuming it succeeds, then responds to the Connect request with a success response. The server also creates a connection identifier associated with this connection and passes that connection identifier back to the client in the success response. Note that a maximum of one connection to a given peer transport address can be established per allocation.",
      "ja": "クライアントは、トランスポートアドレスを中継しているから、ピアへのTCP接続を確立することを希望する場合は、それが制御接続を介してTURNサーバーへの接続要求を発行します。その要求は、ピアのIPアドレスとポートを識別するXOR-PEER-ADDRESS属性を含む（すなわち、その「トランスポートアドレス」）を行うことへの接続がされています。 TURNサーバーは、TCP接続を開こうと、それが成功したと仮定すると、その後、成功応答との接続要求に応答します。また、サーバは、この接続に関連付けられた接続識別子を作成し、成功応答で、クライアントにその接続識別子を渡します。所与のピアトランスポートアドレスへの1つの接続の最大割当ごとに確立することができることに留意されたいです。"
    },
    {
      "indent": 6,
      "text": "Note: Establishing a relayed connection from the client to a peer is done in two steps. First, the allocation is created, and second, the connection is established. Combining the two is not desirable for NAT traversal. It is expected that, between the first and second steps, the client will communicate off-band with the peer (e.g., using ICE [RFC5245]) and tell it the relayed transport address that the TURN server allocated and from which it is about to initiate a connection. The peer can then \"get ready\": open holes in its firewall, try to poke holes in a NAT, attempt a TCP simultaneous open, etc.",
      "ja": "注意：ピアにクライアントから中継された接続を確立するには2つのステップで行われます。まず、割り当てが作成され、そして第二に、接続が確立されています。 2を組み合わせることで、NATトラバーサルのために望ましいことではありません。第1および第2ステップの間、クライアントがピア（例えば、ICE [RFC5245]を使用して）とオフバンド通信及びTURNサーバが割り当てられていること、それを中継トランスポート・アドレスを教えてくれることが期待されると、それは約あるです接続を開始します。ピアは、「準備」することができます：そのファイアウォールで開いて穴を、NATの穴を突くしようとすると、TCP同時オープンなどを試みます"
    },
    {
      "indent": 3,
      "text": "In order to actually send data on the new connection or otherwise utilize it in any way, the client establishes a new TCP connection to its TURN server. Once established, it issues a ConnectionBind request to the server over this new connection. That request echoes back the connection identifier to the TURN server. The TURN server uses it to correlate the two connections. As a consequence, the TCP connection to the peer is associated with a TCP connection to the client one-to-one. The two connections are now data connections. At this point, if the server receives data from the peer, it forwards that data towards the client, without any kind of encapsulation. Any data received by the TURN server from the client over the client data connection is forwarded to the peer, again without encapsulation or framing of any kind. Once a connection has been bound using the ConnectionBind request, TURN messaging is no longer permitted on the connection.",
      "ja": "実際に新しい接続でデータを送信したり、その他の方法でそれを利用するために、クライアントはTURNサーバーへの新しいTCP接続を確立します。確立したら、それはこの新しい接続を介してサーバーにConnectionBind要求を発行します。その要求には、TURNサーバーに接続識別子をエコーバック。 TURNサーバーは、2つの接続を相関させるために、それを使用しています。その結果、ピアへのTCP接続は、クライアントの1対1のTCP接続に関連付けられています。 2つの接続は現在、データ接続されています。サーバは、ピアからのデータを受信した場合は、この時点で、それはカプセル化のいずれかの種類せずに、クライアントへのそのデータを転送します。クライアントのデータ接続を介してクライアントからTURNサーバーが受信したすべてのデータは、あらゆる種類のカプセル化やフレーミングなしで再び、ピアに転送されます。接続がConnectionBind要求を使用してバインドされた後、TURNメッセージングは​​、もはや接続で許可されていません。"
    },
    {
      "indent": 3,
      "text": "In a similar way, when a peer opens a TCP connection towards the relayed transport address, the server checks if there is a permission in place for that peer. If there is none, the connection is closed. Permissions are created with the CreatePermission request sent over the control connection, just as for UDP TURN. If there is a permission in place, the TURN server sends to the client a ConnectionAttempt Indication over the control connection. That indication contains a connection identifier. Once again, the client initiates a separate TCP connection to its TURN server, and over that connection, issues a ConnectionBind request. Once received, the TURN server will begin relaying data back and forth. The server closes the peer data connection if no ConnectionBind request is received after a timeout.",
      "ja": "ピアが中継されたトランスポートアドレスへのTCP接続をオープンし、同様の方法では、そのピアのための場所での許可は、サーバーのチェックがある場合。何も存在しない場合、接続が閉じられています。パーミッションはちょうどUDP TURN用として、制御接続を介して送信されるCreatePermission要求を使用して作成されます。代わりに権限がある場合は、TURNサーバーがクライアントへの制御接続を介してConnectionAttemptの指示を送ります。その表示は、接続識別子が含まれています。もう一度、クライアントはそのTURNサーバーへの別のTCP接続を開始し、その接続を介して、ConnectionBind要求を発行します。一度受信、TURNサーバーは、前後のデータを中継開始されます。何ConnectionBind要求がタイムアウト後に受信されない場合、サーバは、ピアデータ接続を閉じます。"
    },
    {
      "indent": 3,
      "text": "If the client closes a client data connection, the corresponding peer data connection is closed. If the peer closes a peer data connection, the corresponding client data connection is closed. In this way, the status of the connection is directly known to the client.",
      "ja": "クライアントは、クライアントのデータ接続を閉じた場合、対応するピアデータ接続が閉じられています。ピアがピアデータ接続を閉じた場合、対応するクライアントデータ接続が閉じられています。このように、接続の状態を直接クライアントに知られています。"
    },
    {
      "indent": 3,
      "text": "The TURN server will relay the data between the client and peer data connections. End-to-end flow control is maintained by the relay process: if the relay process is no longer able to write data to the destination of the relayed data, the relay process stops reading data from the source.",
      "ja": "TURNサーバーは、クライアントとピアデータ接続の間でデータを中継します。エンド・ツー・エンドのフロー制御は、中継処理によって維持される：中継プロセスがもはや中継データの送信先にデータを書き込むことができる場合、中継プロセスは、ソースからのデータの読み出しを停止しません。"
    },
    {
      "indent": 0,
      "text": "4. Client Processing",
      "section_title": true,
      "ja": "4.クライアント処理"
    },
    {
      "indent": 0,
      "text": "4.1. Creating an Allocation",
      "section_title": true,
      "ja": "4.1。割り当てを作成します"
    },
    {
      "indent": 3,
      "text": "To create a TCP allocation, a client MUST initiate a new TCP or TLS connection to its TURN server, identical to the TCP or TLS procedures defined in [RFC5766]. TCP allocations cannot be obtained using a UDP association between client and server.",
      "ja": "TCPの割り当てを作成するには、クライアントは、TCPまたは[RFC5766]で定義されたTLS手順と同一の新しいTCPまたはそのTURNサーバーへのTLS接続を開始する必要があります。 TCPの割り当ては、クライアントとサーバ間のUDPの関連付けを使用して取得することはできません。"
    },
    {
      "indent": 3,
      "text": "Once set up, a client MUST send a TURN Allocate request. That request MUST contain a REQUESTED-TRANSPORT attribute whose value is 6, corresponding to TCP.",
      "ja": "一度設定すると、クライアントは要求を割り当てTURNを送らなければなりません。その要求は、TCPに対応し、その値が6であるREQUESTED-TRANSPORT属性を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "The request MUST NOT include a DONT-FRAGMENT, RESERVATION-TOKEN, or EVEN-PORT attribute. The corresponding features are specific to UDP-based capabilities and are not utilized by TURN-TCP. However, a LIFETIME attribute MAY be included, with semantics identical to the UDP case.",
      "ja": "リクエストはDONT-FRAGMENT、RESERVATION-TOKEN、またはEVEN-PORT属性を含んではいけません。対応する特徴は、UDPベースの機能に固有のものであり、TURN-TCPにより利用されていません。しかし、LIFETIME属性はUDPの場合と同じセマンティクスで、含まれるかもしれません。"
    },
    {
      "indent": 3,
      "text": "The procedures for authentication of the Allocate request and processing of success and failure responses are identical to those for UDP.",
      "ja": "成功と失敗の応答の割り当て要求および処理の認証のための手順は、UDPの場合と同じです。"
    },
    {
      "indent": 3,
      "text": "Once a success response is received, the TCP connection to the TURN server is called the control connection for that allocation.",
      "ja": "成功応答が受信されると、TURNサーバーへのTCP接続は、その割り当てのための制御接続と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "4.2. Refreshing an Allocation",
      "section_title": true,
      "ja": "4.2。割り当ての更新"
    },
    {
      "indent": 3,
      "text": "The procedures for refreshing an allocation are identical to those for UDP. Note that the Refresh MUST be sent on the control connection.",
      "ja": "割り当てをリフレッシュするための手順は、UDPの場合と同じです。リフレッシュ制御接続上で送らなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.3. Initiating a Connection",
      "section_title": true,
      "ja": "4.3。接続を開始します"
    },
    {
      "indent": 3,
      "text": "To initiate a TCP connection to a peer, a client MUST send a Connect request over the control connection for the desired allocation. The Connect request MUST include an XOR-PEER-ADDRESS attribute containing the transport address of the peer to which a connection is desired.",
      "ja": "ピアへのTCP接続を開始するために、クライアントは、所望の割り当てのための制御接続を介して接続要求を送信しなければなりません。接続要求は、接続が所望されるピアのトランスポートアドレスを含むXOR-PEER-ADDRESS属性を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the connection is successfully established, the client will receive a success response. That response will contain a CONNECTION-ID attribute. The client MUST initiate a new TCP connection to the server, utilizing the same destination transport address to which the control connection was established. This connection MUST be made using a different local transport address. Authentication of the client by the server MUST use the same method and credentials as for the control connection. Once established, the client MUST send a ConnectionBind request over the new connection. That request MUST include the CONNECTION-ID attribute, echoed from the Connect Success response. When a response to the ConnectionBind request is received, if it is a success, the TCP connection on which it was sent is called the client data connection corresponding to the peer.",
      "ja": "接続が正常に確立された場合、クライアントは成功応答を受信します。その応答は、接続ID属性が含まれます。クライアントが制御接続が確立されたと同じ宛先トランスポートアドレスを利用して、サーバーへの新しいTCP接続を開始しなければなりません。この接続は、別のローカルトランスポートアドレスを使用して行われなければなりません。サーバによるクライアントの認証は、制御接続の場合と同じ方法と資格情報を使用しなければなりません。確立されると、クライアントは新しい接続を介してConnectionBind要求を送らなければなりません。その要求は、Connect成功応答からエコーCONNECTION-ID属性を含まなければなりません。 ConnectionBind要求に対する応答が受信されると、それが成功であれば、それが送信されたTCP接続がピアに対応するクライアントデータ接続と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "If the result of the Connect request was an Error Response, and the response code was 447 (Connection Timeout or Failure), it means that the TURN server was unable to connect to the peer. The client MAY retry with the same XOR-PEER-ADDRESS attribute, but MUST wait at least 10 seconds.",
      "ja": "接続要求の結果がエラー応答で、応答コードが447（接続タイムアウトまたは失敗）した場合は、TURNサーバーがピアに接続できなかったことを意味します。クライアントは、同じXOR-PEER-ADDRESS属性で再試行するかもしれないが、少なくとも10秒を待たなければなりません。"
    },
    {
      "indent": 3,
      "text": "As with any other request, multiple Connect requests MAY be sent simultaneously. However, Connect requests with the same XOR-PEER-ADDRESS parameter MUST NOT be sent simultaneously.",
      "ja": "他の要求と同様に、複数の接続要求が同時に送信されるかもしれません。しかし、同じXOR-PEER-ADDRESSパラメータを使用して接続要求が同時に送ってはいけません。"
    },
    {
      "indent": 0,
      "text": "4.4. Receiving a Connection",
      "section_title": true,
      "ja": "4.4。接続を受けます"
    },
    {
      "indent": 3,
      "text": "After an Allocate request is successfully processed by the server, the client will start receiving a ConnectionAttempt indication each time a peer for which a permission has been installed attempts a new connection to the relayed transport address. This indication will contain CONNECTION-ID and XOR-PEER-ADDRESS attributes. If the client wishes to accept this connection, it MUST initiate a new TCP connection to the server, utilizing the same destination transport address to which the control connection was established. This connection MUST be made using a different local transport address. Authentication of the client by the server MUST use the same method and credentials as for the control connection. Once established, the client MUST send a ConnectionBind request over the new connection. That request MUST include the CONNECTION-ID attribute, echoed from the ConnectionAttempt indication. When a response to the ConnectionBind request is received, if it is a success, the TCP connection on which it was sent is called the client data connection corresponding to the peer.",
      "ja": "割り当て要求が正常にサーバーで処理された後、クライアントは許可がインストールされているピアいるたびに中継されたトランスポートアドレスへの新しい接続を試みるConnectionAttempt表示の受信を開始します。この指示は、接続IDとXOR-PEER-ADDRESS属性が含まれています。クライアントはこの接続を受け入れることを希望する場合は、制御接続が確立されたと同じ宛先トランスポートアドレスを利用して、サーバーへの新しいTCP接続を開始しなければなりません。この接続は、別のローカルトランスポートアドレスを使用して行われなければなりません。サーバによるクライアントの認証は、制御接続の場合と同じ方法と資格情報を使用しなければなりません。確立されると、クライアントは新しい接続を介してConnectionBind要求を送らなければなりません。その要求はConnectionAttempt表示からエコーCONNECTION-ID属性を含まなければなりません。 ConnectionBind要求に対する応答が受信されると、それが成功であれば、それが送信されたTCP接続がピアに対応するクライアントデータ接続と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "4.5. Sending and Receiving Data",
      "section_title": true,
      "ja": "4.5。データの送受信"
    },
    {
      "indent": 3,
      "text": "Once a client data connection is established, data sent on it by the client will be relayed as-is to the peer by the server. Similarly, data sent by the peer to the server will be relayed as-is to the client over the data connection.",
      "ja": "クライアントデータ接続が確立されると、クライアントによってそれに送られたデータは、サーバによってピアにそのまま中継されます。同様に、サーバにピアによって送信されたデータは、データ接続を介してクライアントにそのまま中継されます。"
    },
    {
      "indent": 0,
      "text": "4.6. Data Connection Maintenance",
      "section_title": true,
      "ja": "4.6。データ接続のメンテナンス"
    },
    {
      "indent": 3,
      "text": "The client MUST refresh the allocation (corresponding to a data connection) using the Refresh request as defined in [RFC5766] for as long as it wants to keep the data connection alive.",
      "ja": "クライアントは、それが生きているデータ接続を維持したいとのために[RFC5766]で定義された更新要求を使用して（データ接続に対応する）の割り当てを更新する必要があります。"
    },
    {
      "indent": 3,
      "text": "When the client wishes to terminate its relayed connection to the peer, it closes the data connection to the server.",
      "ja": "クライアントがピアへの中継接続を終了したいときは、サーバーへのデータ接続を閉じます。"
    },
    {
      "indent": 6,
      "text": "Note: No mechanism for keeping alive the NAT bindings (potentially on the client data connection as well as on the peer data connection) is included. This service is not provided by TURN-TCP. If such a feature is deemed necessary, it can be implemented higher up the stack, in the application protocol being tunneled inside TURN-TCP. Also, TCP keep-alives MAY be used to keep the NAT bindings on the client data connection alive.",
      "ja": "注意：NATバインディングを（潜在的にクライアントのデータ接続上だけでなく、ピアのデータ接続上で）生きている保つためのメカニズムが含まれていません。このサービスはTURN-TCPによって提供されていません。そのような機能が必要と判断された場合、アプリケーションプロトコルでTURN-TCPの内部にトンネリングされ、スタックまで高く実現することができます。また、TCPキープアライブは、生きているクライアントのデータ接続にNATバインディングを維持するために使用されるかもしれません。"
    },
    {
      "indent": 0,
      "text": "5. TURN Server Behavior",
      "section_title": true,
      "ja": "5. TURNサーバーの動作"
    },
    {
      "indent": 0,
      "text": "5.1. Receiving a TCP Allocate Request",
      "section_title": true,
      "ja": "5.1。 TCPは、割り振り要求の受信"
    },
    {
      "indent": 3,
      "text": "The process is similar to that defined in [RFC5766], Section 6.2, with the following exceptions:",
      "ja": "このプロセスは、以下の例外を除いて、セクション6.2、[RFC5766]で定義されたものと同様です。"
    },
    {
      "indent": 3,
      "text": "1. If the REQUESTED-TRANSPORT attribute is included and specifies a protocol other than UDP or TCP, the server MUST reject the request with a 442 (Unsupported Transport Protocol) error. If the value is UDP, and if UDP transport is allowed by local policy, the server MUST continue with the procedures of [RFC5766] instead of this document. If the value is UDP, and if UDP transport is forbidden by local policy, the server MUST reject the request with a 403 (Forbidden) error.",
      "ja": "1. REQUESTED-TRANSPORT属性が含まれており、UDPまたはTCP以外のプロトコルを指定された場合、サーバは442（サポートされていないトランスポートプロトコル）エラーで要求を拒絶しなければなりません。値はUDPであり、UDPトランスポートがローカルポリシーで許可されている場合、サーバは[RFC5766]の手順の代わりに、この資料を続行する必要があります。値がUDPの場合は、UDPトランスポートがローカルポリシーで禁止されている場合、サーバは403（禁止）エラーで要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. If the client connection transport is not TCP or TLS, the server MUST reject the request with a 400 (Bad Request) error.",
      "ja": "2.クライアント接続トランスポートはTCPまたはTLSでない場合、サーバは400（不正な要求）エラーで要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "3. If the request contains the DONT-FRAGMENT, EVEN-PORT, or RESERVATION-TOKEN attribute, the server MUST reject the request with a 400 (Bad Request) error.",
      "ja": "3.要求がDONT-FRAGMENT、EVEN-PORT、または予約-TOKEN属性が含まれている場合、サーバは400（不正な要求）エラーで要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "4. A TCP relayed transport address MUST be allocated instead of a UDP one.",
      "ja": "4. A TCPはトランスポート・アドレスではなくUDPの一つで割り当てられなければならない中継されます。"
    },
    {
      "indent": 3,
      "text": "5. The RESERVATION-TOKEN attribute MUST NOT be present in the success response.",
      "ja": "5.ご予約-TOKEN属性は、成功応答で存在してはなりません。"
    },
    {
      "indent": 3,
      "text": "If all checks pass, the server MUST start accepting incoming TCP connections on the relayed transport address. Refer to Section 5.3 for details.",
      "ja": "すべてのチェックに合格した場合、サーバは中継トランスポートアドレス上で着信TCP接続の受け付けを開始しなければなりません。詳細については、5.3節を参照してください。"
    },
    {
      "indent": 0,
      "text": "5.2. Receiving a Connect Request",
      "section_title": true,
      "ja": "5.2。接続要求を受信します"
    },
    {
      "indent": 3,
      "text": "When the server receives a Connect request, it processes the request as follows.",
      "ja": "サーバが接続要求を受信すると、以下のように、それは要求を処理します。"
    },
    {
      "indent": 3,
      "text": "If the request is received on a TCP connection for which no allocation exists, the server MUST return a 437 (Allocation Mismatch) error.",
      "ja": "要求が全く割り当てが存在しないためにTCPコネクション上で受信された場合、サーバは437（割当不一致）エラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the server is currently processing a Connect request for this allocation with the same XOR-PEER-ADDRESS, it MUST return a 446 (Connection Already Exists) error.",
      "ja": "サーバが現在同じXOR-PEER-ADDRESSこの割り当てのための接続要求を処理している場合、それは446（接続が既に存在する）がエラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the server has already successfully processed a Connect request for this allocation with the same XOR-PEER-ADDRESS, and the resulting client and peer data connections are either pending or active, it MUST return a 446 (Connection Already Exists) error.",
      "ja": "サーバがすでに正常同じXOR-PEER-ADDRESSこの割り当てのための接続要求を処理し、そして得られたクライアントとピアデータ接続のいずれか保留されているまたはアクティブ場合、それは446（接続が既に存在する）がエラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the request does not contain an XOR-PEER-ADDRESS attribute, or if such attribute is invalid, the server MUST return a 400 (Bad Request) error.",
      "ja": "リクエストはXOR-PEER-ADDRESS属性が含まれていない、またはそのような属性が無効な場合、サーバは400（不正な要求）エラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the new connection is forbidden by local policy, the server MUST reject the request with a 403 (Forbidden) error.",
      "ja": "新しい接続がローカルポリシーで禁止されている場合、サーバは403（禁止）エラーで要求を拒絶しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Otherwise, the server MUST initiate an outgoing TCP connection. The local endpoint is the relayed transport address associated with the allocation. The remote endpoint is the one indicated by the XOR-PEER-ADDRESS attribute. If the connection attempt fails or times out, the server MUST return a 447 (Connection Timeout or Failure) error. The timeout value MUST be at least 30 seconds.",
      "ja": "そうしないと、サーバーは、発信TCP接続を開始しなければなりません。ローカルエンドポイントは、割り当てに関連付けられている中継トランスポート・アドレスです。リモートエンドポイントは、XOR-PEER-ADDRESS属性で示されているものです。接続に失敗したか、タイムアウトになった場合、サーバは447（接続タイムアウトまたは失敗）、エラーを返さなければなりません。タイムアウト値は30秒​​以上でなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the connection is successful, it is now called a peer data connection. The server MUST buffer any data received from the client. The server adjusts its advertised TCP receive window to reflect the amount of empty buffer space.",
      "ja": "接続に成功すると、それは今のピア・データ接続と呼ばれています。サーバは、クライアントから受信したすべてのデータをバッファリングしなければなりません。サーバーは、その広告を出しTCPは空のバッファ領域の量を反映するために、受信ウィンドウを調整します。"
    },
    {
      "indent": 3,
      "text": "The server MUST include the CONNECTION-ID attribute in the Connect success response. The attribute's value MUST uniquely identify the peer data connection.",
      "ja": "サーバーは接続成功応答でCONNECTION-ID属性を含まなければなりません。属性の値は一意にピアデータ接続を特定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "If no ConnectionBind request associated with this peer data connection is received after 30 seconds, the peer data connection MUST be closed.",
      "ja": "このピアデータ接続に関連付けられConnectionBind要求は30秒後に受信されない場合、ピアのデータ接続を閉じなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.3. Receiving a TCP Connection on a Relayed Transport Address",
      "section_title": true,
      "ja": "5.3。中継されたトランスポートアドレス上のTCPコネクションを受け取ります"
    },
    {
      "indent": 3,
      "text": "When a server receives an incoming TCP connection on a relayed transport address, it processes the request as follows.",
      "ja": "サーバーが中継されるトランスポートアドレス上で着信TCP接続を受信すると、以下のように、それは要求を処理します。"
    },
    {
      "indent": 3,
      "text": "The server MUST accept the connection. If it is not successful, nothing is sent to the client over the control connection.",
      "ja": "サーバーは接続を受け入れなければなりません。それが成功しなかった場合は、何も制御接続を介してクライアントに送信されません。"
    },
    {
      "indent": 3,
      "text": "If the connection is successfully accepted, it is now called a peer data connection. The server MUST buffer any data received from the peer. The server adjusts its advertised TCP receive window to reflect the amount of empty buffer space.",
      "ja": "接続が正常に受理された場合、それは今のピア・データ接続と呼ばれています。サーバは、ピアから受信したデータをバッファしなければなりません。サーバーは、その広告を出しTCPは空のバッファ領域の量を反映するために、受信ウィンドウを調整します。"
    },
    {
      "indent": 3,
      "text": "If no permission for this peer has been installed for this allocation, the server MUST close the connection with the peer immediately after it has been accepted.",
      "ja": "このピアには許可がこの割り当てのためにインストールされていない場合、サーバーは、それが承認された直後のピアとの接続を閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "Otherwise, the server sends a ConnectionAttempt indication to the client over the control connection. The indication MUST include an XOR-PEER-ADDRESS attribute containing the peer's transport address, as well as a CONNECTION-ID attribute uniquely identifying the peer data connection.",
      "ja": "そうしないと、サーバーは、制御接続を介してクライアントにConnectionAttemptの表示を送信します。指示は、ピアのトランスポートアドレスを含むXOR-PEER-ADDRESS属性、ならびに一意のピアデータコネクションを識別するコネクションID属性を含まなければなりません。"
    },
    {
      "indent": 3,
      "text": "If no ConnectionBind request associated with this peer data connection is received after 30 seconds, the peer data connection MUST be closed.",
      "ja": "このピアデータ接続に関連付けられConnectionBind要求は30秒後に受信されない場合、ピアのデータ接続を閉じなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.4. Receiving a ConnectionBind Request",
      "section_title": true,
      "ja": "5.4。 ConnectionBind要求を受信します"
    },
    {
      "indent": 3,
      "text": "When a server receives a ConnectionBind request, it processes the request as follows.",
      "ja": "サーバはConnectionBind要求を受信すると、以下のように、それは要求を処理します。"
    },
    {
      "indent": 3,
      "text": "If the client connection transport is not TCP or TLS, the server MUST return a 400 (Bad Request) error.",
      "ja": "クライアント接続トランスポートはTCPまたはTLSでない場合、サーバは400（不正な要求）エラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "If the request does not contain the CONNECTION-ID attribute, or if this attribute does not refer to an existing pending connection, the server MUST return a 400 (Bad Request) error.",
      "ja": "リクエストがCONNECTION-ID属性が含まれていない場合、この属性は、既存の保留中の接続を参照していない場合、または、サーバは400（不正な要求）エラーを返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "Otherwise, the client connection is now called a client data connection. Data received on it MUST be sent as-is to the associated peer data connection.",
      "ja": "それ以外の場合は、クライアント接続は現在のクライアントのデータ接続と呼ばれています。その上に受信されたデータは、関連するピアデータ接続にそのまま送らなければなりません。"
    },
    {
      "indent": 3,
      "text": "Data received on the associated peer data connection MUST be sent as-is on this client data connection. This includes data that was received after the associated Connect or request was successfully processed and before this ConnectionBind request was received.",
      "ja": "このクライアントデータ接続にそのまま関連ピアデータ接続上で受信されたデータが送信されなければなりません。これは、このConnectionBind要求が受信される前に、関連する接続または要求が正常に処理された後に受信したデータを含んでいます。"
    },
    {
      "indent": 0,
      "text": "5.5. Data Connection Maintenance",
      "section_title": true,
      "ja": "5.5。データ接続のメンテナンス"
    },
    {
      "indent": 3,
      "text": "If the allocation associated with a data connection expires, the data connection MUST be closed.",
      "ja": "データ接続に関連付けられた割り当てが満了した場合、データ接続を閉じなければなりません。"
    },
    {
      "indent": 3,
      "text": "When a client data connection is closed, the server MUST close the corresponding peer data connection.",
      "ja": "クライアントデータ接続が閉じているとき、サーバは、対応するピアデータ接続を閉じる必要があります。"
    },
    {
      "indent": 3,
      "text": "When a peer data connection is closed, the server MUST close the corresponding client data connection.",
      "ja": "ピアデータ接続が閉じているとき、サーバは、対応するクライアントのデータ接続を閉じる必要があります。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This specification defines several new STUN methods, STUN attributes, and STUN error codes. IANA added these new protocol elements to the Session Traversal Utilities for NAT (STUN) Parameters registry.",
      "ja": "この仕様は、いくつかの新しいSTUN方法、STUN属性、およびSTUNエラーコードを定義します。 IANAは、NAT（STUN）パラメータレジストリのセッショントラバーサルユーティリティにこれらの新しいプロトコル要素を追加しました。"
    },
    {
      "indent": 0,
      "text": "6.1. New STUN Methods",
      "section_title": true,
      "ja": "6.1。新しいSTUNメソッド"
    },
    {
      "indent": 3,
      "text": "This section lists the codepoints for the new STUN methods defined in this specification. See Sections 4 and 5 for the semantics of these new methods.",
      "ja": "このセクションでは、この仕様で定義された新しいSTUNメソッドのコードポイントを示しています。これらの新しいメソッドのセマンティクスのためにセクション4および5を参照してください。"
    },
    {
      "indent": 3,
      "text": "0x000a : Connect 0x000b : ConnectionBind 0x000c : ConnectionAttempt",
      "ja": "0x000a：ConnectionBindの0x000c：ConnectionAttempt 0x000bを接続します"
    },
    {
      "indent": 0,
      "text": "6.2. New STUN Attributes",
      "section_title": true,
      "ja": "6.2。新しいSTUN属性"
    },
    {
      "indent": 3,
      "text": "This STUN extension defines the following new attributes:",
      "ja": "このSTUN拡張機能は、次の新しい属性を定義します。"
    },
    {
      "indent": 3,
      "text": "0x002a : CONNECTION-ID",
      "ja": "0x002a：CONNECTION-ID"
    },
    {
      "indent": 0,
      "text": "6.2.1. CONNECTION-ID",
      "section_title": true,
      "ja": "6.2.1。接続ID"
    },
    {
      "indent": 3,
      "text": "The CONNECTION-ID attribute uniquely identifies a peer data connection. It is a 32-bit unsigned integral value.",
      "ja": "接続ID属性が一意のピアデータ接続を識別する。これは、32ビットの符号なし整数値です。"
    },
    {
      "indent": 0,
      "text": "6.3. New STUN Error Codes",
      "section_title": true,
      "ja": "6.3。新しいSTUNエラーコード"
    },
    {
      "indent": 3,
      "text": "446 Connection Already Exists 447 Connection Timeout or Failure",
      "ja": "446接続はすでに447接続のタイムアウトや失敗を存在します"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "After a TCP connection is established between the server and a peer, and before a ConnectionBind request is received from the client, the server buffers all data received from the peer. This protocol specification lets the server drop the connection if the buffer size is about to exceed a limit defined by local policy. This policy should ensure that memory resources are not exceeded. See also [RFC4732], Section 2.1.3.",
      "ja": "TCP接続がサーバーとピアとの間で確立された後、およびConnectionBind要求をクライアントから受信される前に、サーバは、ピアから受信したすべてのデータをバッファリングします。このプロトコル仕様では、バッファサイズがローカルポリシーによって定義された限界を超えてしようとしている場合、サーバは接続をドロップすることができます。このポリシーは、メモリリソースを超えていないことを確認する必要があります。また、[RFC4732]、セクション2.1.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "All the security considerations applicable to STUN [RFC5389] and TURN [RFC5766] are applicable to this document as well.",
      "ja": "[RFC5389]をSTUNと[RFC5766]をオンにするに適用されるすべてのセキュリティ上の考慮事項は、同様に、この文書に適用されます。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Rohan Mahy and Philip Matthews for their initial work on getting this document started.",
      "ja": "このドキュメントは、はじめに彼らの最初の仕事のためローハンマーイとフィリップ・マシューズに感謝します。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to thank Alfred E. Heggestad, Ari Keranen, Marc Petit-Huguenin, Dave Thaler, and Dan Wing for their comments and suggestions.",
      "ja": "著者はまた、彼らのコメントや提案のためのアルフレッドE. Heggestad、アリKeranen、マーク・プティ・Huguenin、デーブターラー、およびダンウィングに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5389] Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session Traversal Utilities for NAT (STUN)\", RFC 5389, October 2008.",
      "ja": "[RFC5389]ローゼンバーグ、J.、マーイ、R.、マシューズ、P.、およびD.翼、 \"NAT（STUN）のセッショントラバーサルユーティリティ\"、RFC 5389、2008年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5766] Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)\", RFC 5766, April 2010.",
      "ja": "[RFC5766]マーイ、R.、マシューズ、P.、およびJ.ローゼンバーグ、 \"トラバーサルNAT（TURN）の周りにリレーを使用してリレー拡張NAT（STUN）のセッショントラバーサルユーティリティに\"、RFC 5766、2010年4月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC4732] Handley, M., Rescorla, E., and IAB, \"Internet Denial-of-Service Considerations\", RFC 4732, December 2006.",
      "ja": "[RFC4732]ハンドリー、M.、レスコラ、E.、およびIAB、 \"インターネットサービス拒否の注意事項\"、RFC 4732、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, April 2010.",
      "ja": "[RFC5245]ローゼンバーグ、J.、 \"インタラクティブ接続確立（ICE）：オファー/回答プロトコルのためのネットワークアドレス変換（NAT）トラバーサルのための議定書\"、RFC 5245、2010年4月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Simon Perreault (editor) Viagenie 2875 boul. Laurier, suite D2-630 Quebec, QC G1V 2M2 Canada",
      "ja": "サイモン・ペロー（エディタ）Viagénie2875 BOUL。ローリエ、スイートD2-630ケベック、QC G1V 2M2カナダ"
    },
    {
      "indent": 3,
      "text": "Phone: +1 418 656 9254 EMail: simon.perreault@viagenie.ca URI: http://www.viagenie.ca",
      "ja": "電話：+1 418 656 9254 Eメール：URI simon.perreault@viagenie.ca：http://www.viagenie.ca"
    },
    {
      "indent": 3,
      "text": "Jonathan Rosenberg jdrosen.net Monmouth, NJ US",
      "ja": "ジョナサン・ローゼンバーグjdrosen.netモンマス、NJ US"
    },
    {
      "indent": 3,
      "text": "EMail: jdrosen@jdrosen.net URI: http://www.jdrosen.net",
      "ja": "電子メール：jdrosen@jdrosen.net URI：http://www.jdrosen.net"
    }
  ]
}