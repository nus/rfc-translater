{
  "title": {
    "text": "RFC 6211 - Cryptographic Message Syntax (CMS) Algorithm Identifier Protection Attribute",
    "ja": "RFC 6211 - 暗号メッセージ構文（CMS）アルゴリズム識別子保護属性"
  },
  "number": 6211,
  "created_at": "2019-10-29 21:09:12.704035+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         J. Schaad\nRequest for Comments: 6211                       Soaring Hawk Consulting\nCategory: Standards Track                                     April 2011\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 15,
      "text": "    Cryptographic Message Syntax (CMS)\nAlgorithm Identifier Protection Attribute",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Cryptographic Message Syntax (CMS), unlike X.509/PKIX certificates, is vulnerable to algorithm substitution attacks. In an algorithm substitution attack, the attacker changes either the algorithm being used or the parameters of the algorithm in order to change the result of a signature verification process. In X.509 certificates, the signature algorithm is protected because it is duplicated in the TBSCertificate.signature field with the proviso that the validator is to compare both fields as part of the signature validation process. This document defines a new attribute that contains a copy of the relevant algorithm identifiers so that they are protected by the signature or authentication process.",
      "ja": "暗号メッセージ構文（CMS）は、X.509 / PKIX証明書とは異なり、アルゴリズム置換攻撃に対して脆弱です。アルゴリズム置換攻撃では、攻撃者は、署名検証プロセスの結果を変更するために使用されているアルゴリズムまたはアルゴリズムのパラメータのいずれかを変更します。それはバリデータは、署名検証プロセスの一部として、両方のフィールドを比較することである条件でTBSCertificate.signatureフィールドに重複しているため、X.509証明書は、署名アルゴリズムは保護されています。この文書では、それらが署名や認証プロセスによって保護されているように、関連するアルゴリズム識別子のコピーを含む新しい属性を定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6211.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6211で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3\n  1.1.  Notation  . . . . . . . . . . . . . . . . . . . . . . . . . 5\n2.  Attribute Structure . . . . . . . . . . . . . . . . . . . . . . 5\n3.  Verification Process  . . . . . . . . . . . . . . . . . . . . . 7\n  3.1.  Signed Data Verification Changes  . . . . . . . . . . . . . 7\n  3.2.  Authenticated Data Verification Changes . . . . . . . . . . 7\n4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 8\n5.  Security Considerations . . . . . . . . . . . . . . . . . . . . 8\n6.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n  6.1.  Normative References  . . . . . . . . . . . . . . . . . . . 8\n  6.2.  Informational References  . . . . . . . . . . . . . . . . . 9\nAppendix A.  2008 ASN.1 Module  . . . . . . . . . . . . . . . . .  10",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The Cryptographic Message Syntax [CMS], unlike X.509/PKIX certificates [RFC5280], is vulnerable to algorithm substitution attacks. In an algorithm substitution attack, the attacker changes either the algorithm being used or the parameters of the algorithm in order to change the result of a signature verification process. In X.509 certificates, the signature algorithm is protected because it is duplicated in the TBSCertificate.signature field with the proviso that the validator is to compare both fields as part of the signature validation process. This document defines a new attribute that contains a copy of the relevant algorithm identifiers so that they are protected by the signature or authentication process.",
      "ja": "暗号メッセージ構文[CMS]は、X.509 / PKIX証明書[RFC5280]とは異なり、アルゴリズム置換攻撃に対して脆弱です。アルゴリズム置換攻撃では、攻撃者は、署名検証プロセスの結果を変更するために使用されているアルゴリズムまたはアルゴリズムのパラメータのいずれかを変更します。それはバリデータは、署名検証プロセスの一部として、両方のフィールドを比較することである条件でTBSCertificate.signatureフィールドに重複しているため、X.509証明書は、署名アルゴリズムは保護されています。この文書では、それらが署名や認証プロセスによって保護されているように、関連するアルゴリズム識別子のコピーを含む新しい属性を定義します。"
    },
    {
      "indent": 3,
      "text": "In an algorithm substitution attack, the attacker looks for a different algorithm that produces the same result as the algorithm used by the signer. As an example, if the creator of the message used SHA-1 as the digest algorithm to hash the message content, then the attacker looks for a different hash algorithm that produces a result that is of the same length, but with which it is easier to find collisions. Examples of other algorithms that produce a hash value of the same length would be SHA-0 or RIPEMD-160. Similar attacks can be mounted against parameterized algorithm identifiers. When looking at some of the proposed randomized hashing functions, such as that in [RANDOM-HASH], the associated security proofs assume that the parameters are solely under the control of the originator and not subject to selection by the attacker.",
      "ja": "アルゴリズムの代替攻撃では、攻撃者は、署名者によって使用されるアルゴリズムと同じ結果を生成する別のアルゴリズムを探します。メッセージの作成者がメッセージの内容をハッシュするダイジェストアルゴリズムとしてSHA-1を使用した場合、一例として、攻撃者は、同じ長さである結果を生じる異なったハッシュアルゴリズムを探し、それは容易であると衝突を見つけることができます。同じ長さのハッシュ値を生成する他のアルゴリズムの例は、SHA-0またはRIPEMD-160であろう。同様の攻撃は、パラメータ化されたアルゴリズム識別子に対してマウントすることができます。このような[RANDOM-HASH]のものとして提案ランダム化ハッシュ関数のいくつかを見たときに、関連付けられたセキュリティ証明パラメータは単独攻撃者による選択の対象発信としないの制御下にあると仮定する。"
    },
    {
      "indent": 3,
      "text": "Some algorithms have been internally designed to be more resistant to this type of attack. Thus, an RSA PKCS #1 v.15 signature [RFC3447] cannot have the associated hash algorithm changed because it is encoded as part of the signature. The Digital Signature Algorithm (DSA) was originally defined so that it would only work with SHA-1 as a hash algorithm; thus, by knowing the public key from the certificate, a validator can be assured that the hash algorithm cannot be changed. There is a convention, undocumented as far as I can tell, that the same hash algorithm should be used for both the content digest and the signature digest. There are cases, such as third-party signers that are only given a content digest, where such a convention cannot be enforced.",
      "ja": "いくつかのアルゴリズムは、内部的にこの種の攻撃に対してより耐性があるように設計されています。したがって、RSA PKCS＃1 V.15署名[RFC3447]は、それが署名の一部として符号化されているため、関連したハッシュ・アルゴリズムを変更することはできません。それが唯一のハッシュアルゴリズムとしてSHA-1で動作するであろうように、デジタル署名アルゴリズム（DSA）は、最初に定義されました。このように、証明書から公開鍵を知ることにより、バリデータは、ハッシュアルゴリズムを変更することができないことを保証することができます。私の知る限り文書化されていない慣習がある、同じハッシュアルゴリズムは、コンテンツの両方に使用されるべきであるとダイジェストと署名ダイジェスト。唯一、このような規則が施行できないコンテンツのダイジェストを、与えられているように、サードパーティの署名者などのケースがあります。"
    },
    {
      "indent": 3,
      "text": "As with all attacks, the attack is going to be desirable on items that are both long term and high value. One would expect that these attacks are more likely to be made on older documents, as the algorithms being used when the message was signed would be more likely to have degraded over time. Countersigning, the classic method of protecting a signature, does not provide any additional protection against an algorithm substitution attack because countersignatures sign just the signature, but the algorithm substitution attacks leave the signature value alone while changing the algorithms being used.",
      "ja": "すべての攻撃と同じように、攻撃は長期的かつ高い値の両方である項目に望ましいことになるだろう。一つは、メッセージが署名されたときに使用されているアルゴリズムは、時間の経過とともに劣化している可能性が高いだろうと、これらの攻撃は、古い文書に行われる可能性が高いことを期待します。 countersignaturesだけの署名を署名しているため副署、署名を保護する古典的な方法は、アルゴリズムの置換攻撃に対する追加の保護を提供しませんが、使用しているアルゴリズムを変更しながら、アルゴリズムの置換攻撃は単独の署名値のままにしておきます。"
    },
    {
      "indent": 3,
      "text": "Using the SignerInfo structure from CMS, let's take a more detailed look at each of the fields in the structure and discuss what fields are and are not protected by the signature. I have included a copy of the ASN.1 here for convenience. A similar analysis of the AuthenticatedData structure is left to the reader, but it can be done in much the same way.",
      "ja": "CMSからのSignerInfo構造を使用して、のは、構造内の各フィールドでより詳細を見て、あると署名によって保護されていないものを分野について議論しましょう。私はここでは便宜上ASN.1のコピーが含まれています。 AuthenticatedData構造の同様の分析は、読者に残され、それはほとんど同じ方法で行うことができます。"
    },
    {
      "indent": 9,
      "text": "SignerInfo ::= SEQUENCE {\n  version CMSVersion,\n  sid SignerIdentifier,\n  digestAlgorithm DigestAlgorithmIdentifier,\n  signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n  signatureAlgorithm SignatureAlgorithmIdentifier,\n  signature SignatureValue,\n  unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "version is not protected by the signature. As many implementations of CMS today ignore the value of this field, that is not a problem. If the value is increased, then no changes in the processing are expected. If the value is decreased, implementations that respect the structure would fail to decode, but an erroneous signature validation would not be completed successfully.",
      "ja": "バージョンは、署名によって保護されていません。 CMSの多くの実装今日はこのフィールドの値を無視すると、それは問題ではありません。値が増加された場合、処理には変化は予想されません。値が減少する場合は、構造を尊重実装は、復号に失敗しますが、誤った署名検証が正常に完了されないであろう。"
    },
    {
      "indent": 3,
      "text": "sid can be protected using either version of the signing certificate authenticated attribute. SigningCertificateV2 is defined in [RFC5035]. SigningCertificate is defined in [ESS-BASE]. In addition to allowing for the protection of the signer identifier, the specific certificate is protected by including a hash of the certificate to be used for validation.",
      "ja": "SIDは、署名証明書、認証属性のいずれかのバージョンを使用して保護することができます。 SigningCertificateV2は[RFC5035]で定義されています。 SigningCertificateは[ESS-BASE]で定義されています。署名者識別子の保護を可能にすることに加えて、特定の証明書は、検証のために使用される証明書のハッシュを含むことによって保護されています。"
    },
    {
      "indent": 3,
      "text": "digestAlgorithm has been implicitly protected by the fact that CMS has only defined one digest algorithm for each hash value length. (The algorithm RIPEMD-160 was never standardized.) There is also an unwritten convention that the same digest algorithm should be used both here and for the signature algorithm. If newer digest algorithms are defined so that there are multiple algorithms for a given hash length (it is expected that the SHA-3 project will do so), or that parameters are defined for a specific algorithm, much of the implicit protection will be lost.",
      "ja": "digestAlgorithmは、暗黙的にCMSは一つだけが各ハッシュ値の長さのダイジェストアルゴリズムを定義しているという事実により保護されています。 （アルゴリズムRIPEMD-160は、標準化されなかった。）同じダイジェストアルゴリズムの両方ここで、署名アルゴリズムのために使用されるべきであること未書き込み規則もあります。与えられたハッシュ長のための複数のアルゴリズムが存在するように、新しいダイジェストアルゴリズムが定義されている場合（SHA-3のプロジェクトがそうすることが予想される）、またはパラメータは、特定のアルゴリズムのために定義されていることを、暗黙の保護の多くは失われます。"
    },
    {
      "indent": 3,
      "text": "signedAttributes are directly protected by the signature when they are present. The Distinguished Encoding Rules (DER) encoding of this value is what is hashed for the signature computation.",
      "ja": "それらが存在するときsignedAttributesの直接署名により保護されています。この値の識別符号化規則（DER）符号化は、署名計算のためにハッシュされるものです。"
    },
    {
      "indent": 3,
      "text": "signatureAlgorithm has been protected by implication in the past. The use of an RSA public key implied that the RSA v1.5 signature algorithm was being used. The hash algorithm and this fact could be checked by the internal padding defined. This is no longer true with the addition of the RSA-PSS signature algorithms. The use of a DSA public key implied the SHA-1 hash algorithm as that was the only possible hash algorithm and the DSA was the public signature algorithm. This is still somewhat true as there is an implicit tie between the length of the DSA public key and the length of the hash algorithm to be used, but this is known by convention and there is no explicit enforcement for this.",
      "ja": "signatureAlgorithmは、過去に暗ににより保護されています。 RSA公開鍵の使用は、RSA V1.5署名アルゴリズムが使用されたことを暗示しました。ハッシュアルゴリズムと、この事実は、定義された内部パディングによって確認することができます。これは、RSA-PSS署名アルゴリズムの追加により、もはや真実ではありません。それが唯一の可能なハッシュアルゴリズムとDSAは公開署名アルゴリズムであったとしてDSA公開鍵の使用は、SHA-1ハッシュアルゴリズムを暗示しました。これはDSA公開鍵と、使用するハッシュアルゴリズムの長さの長さとの間に暗黙のネクタイがあるとして、まだ多少真実であるが、これは慣例で知られており、このための明示的な強制はありません。"
    },
    {
      "indent": 3,
      "text": "signature is not directly protected by any other value unless a counter signature is present. However, this represents the cryptographically computed value that protects the rest of the signature information.",
      "ja": "カウンタ署名が存在しない限り、署名は、直接他の値によって保護されていません。しかしながら、これは、署名情報の残りの部分を保護する暗号計算された値を表します。"
    },
    {
      "indent": 3,
      "text": "unsignedAttrs is not protected by the signature value. The SignedData structure was explicitly designed that unsignedAttrs are not protected by the signature value.",
      "ja": "unsignedAttrsは、署名値によって保護されていません。 SignedData構造は、明示的にunsignedAttrsが署名値によって保護されていないことを設計されました。"
    },
    {
      "indent": 3,
      "text": "As can be seen above, the digestAlgorithm and signatureAlgorithm fields have been indirectly rather than explicitly protected in the past. With new algorithms that have been or are being defined, this will no longer be the case. This document defines and describes a new attribute that will explicitly protect these fields along with the macAlgorithm field of the AuthenticatedData structure.",
      "ja": "上記の図から分かるように、digestAlgorithmとのsignatureAlgorithmフィールドは、間接的になってではなく、明示的に過去に保護されています。または定義されているされている新しいアルゴリズムでは、これはもはやケースません。この文書は、明示的にAuthenticatedData構造のmacAlgorithmフィールドと一緒に、これらのフィールドを保護する新しい属性を定義し、説明しています。"
    },
    {
      "indent": 0,
      "text": "1.1. Notation",
      "section_title": true,
      "ja": "1.1。表記法"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はあります[RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. Attribute Structure",
      "section_title": true,
      "ja": "2.属性構造"
    },
    {
      "indent": 3,
      "text": "The following defines the algorithm protection attribute:",
      "ja": "以下は、アルゴリズムの保護属性を定義します。"
    },
    {
      "indent": 3,
      "text": "The algorithm protection attribute has the ASN.1 type CMSAlgorithmProtection:",
      "ja": "アルゴリズムの保護属性は、ASN.1タイプCMSAlgorithmProtectionがあります。"
    },
    {
      "indent": 7,
      "text": "aa-cmsAlgorithmProtection ATTRIBUTE ::= {\n    TYPE CMSAlgorithmProtection\n    IDENTIFIED BY { id-aa-CMSAlgorithmProtection }\n}",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The following object identifier identifies the algorithm protection attribute:",
      "ja": "以下のオブジェクト識別子は、アルゴリズムの保護属性を識別します。"
    },
    {
      "indent": 7,
      "text": "id-aa-CMSAlgorithmProtection OBJECT IDENTIFIER ::= { iso(1)\n     member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9) 52 }",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The algorithm protection attribute uses the following ASN.1 type:",
      "ja": "アルゴリズムの保護属性は以下のASN.1タイプを使用しています。"
    },
    {
      "indent": 6,
      "text": "CMSAlgorithmProtection ::= SEQUENCE {\n    digestAlgorithm         DigestAlgorithmIdentifier,\n    signatureAlgorithm  [1] SignatureAlgorithmIdentifier OPTIONAL,\n    macAlgorithm        [2] MessageAuthenticationCodeAlgorithm\n                                     OPTIONAL\n}\n(WITH COMPONENTS { signatureAlgorithm PRESENT,\n                   macAlgorithm ABSENT } |\n WITH COMPONENTS { signatureAlgorithm ABSENT,\n                   macAlgorithm PRESENT })",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The fields are defined as follows:",
      "ja": "次のようにフィールドが定義されています。"
    },
    {
      "indent": 3,
      "text": "digestAlgorithm contains a copy of the SignerInfo.digestAlgorithm field or the AuthenticatedData.digestAlgorithm field including any parameters associated with it.",
      "ja": "digestAlgorithmはSignerInfo.digestAlgorithmフィールドまたはそれに関連するすべてのパラメータを含むAuthenticatedData.digestAlgorithmフィールドのコピーが含まれています。"
    },
    {
      "indent": 3,
      "text": "signatureAlgorithm contains a copy of the signature algorithm identifier and any parameters associated with it (SignerInfo.signatureAlgorithm). This field is populated only if the attribute is placed in a SignerInfo.signedAttrs sequence.",
      "ja": "signatureAlgorithmは、署名アルゴリズム識別子と、それに関連する任意のパラメータ（SignerInfo.signatureAlgorithm）のコピーを含みます。このフィールドは、属性はSignerInfo.signedAttrs列に配置されている場合にのみ取り込まれます。"
    },
    {
      "indent": 3,
      "text": "macAlgorithm contains a copy of the message authentication code algorithm identifier and any parameters associated with it (AuthenticatedData.macAlgorithm). This field is populated only if the attribute is placed in an AuthenticatedData.authAttrs sequence.",
      "ja": "macAlgorithmは、メッセージ認証コードアルゴリズム識別子のコピーと（AuthenticatedData.macAlgorithm）に関連する任意のパラメータを含みます。このフィールドは、属性はAuthenticatedData.authAttrs列に配置されている場合にのみ取り込まれます。"
    },
    {
      "indent": 3,
      "text": "Exactly one of signatureAlgorithm or macAlgorithm SHALL be present.",
      "ja": "丁度のsignatureAlgorithmまたはmacAlgorithmの一つが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "An algorithm protection attribute MUST have a single attribute value, even though the syntax is defined as a SET OF AttributeValue. There MUST NOT be zero or multiple instances of AttributeValue present.",
      "ja": "アルゴリズムの保護属性は、構文はAttributeValueの集合として定義されていても、単一の属性値を持たなければなりません。 AttributeValueの存在のゼロか複数のインスタンスがあってはなりません。"
    },
    {
      "indent": 3,
      "text": "The algorithm protection attribute MUST be a signed attribute or an authenticated attribute; it MUST NOT be an unsigned attribute, an unauthenticated attribute, or an unprotected attribute.",
      "ja": "アルゴリズムの保護属性は署名している属性または認証された属性であるに違いありません。それは未署名の属性、認証されていない属性、または保護されていない属性にすることはできません。"
    },
    {
      "indent": 3,
      "text": "The SignedAttributes and AuthAttributes syntax are each defined as a SET of Attributes. The SignedAttributes in a signerInfo MUST include only one instance of the algorithm protection attribute. Similarly, the AuthAttributes in an AuthenticatedData MUST include only one instance of the algorithm protection attribute.",
      "ja": "signedAttributesのとAuthAttributes構文は、各属性の集合として定義されています。 SignerInfoでsignedAttributesのは、アルゴリズムの保護属性のインスタンスを1つだけ含まなければなりません。同様に、AuthenticatedDataでAuthAttributesは、アルゴリズムの保護属性のインスタンスを1つだけ含まなければなりません。"
    },
    {
      "indent": 0,
      "text": "3. Verification Process",
      "section_title": true,
      "ja": "3.検証プロセス"
    },
    {
      "indent": 3,
      "text": "While the exact verification steps depend on the structure that is being validated, there are some common rules to be followed when comparing the two algorithm structures:",
      "ja": "正確な検証ステップが検証されている構造に依存しながら、2つのアルゴリズムの構造を比較する際に従うべきいくつかの共通のルールがあります。"
    },
    {
      "indent": 3,
      "text": "o A field with a default value MUST compare as identical, independently of whether the value is defaulted or is explicitly provided. This implies that a binary compare of the encoded bytes is insufficient.",
      "ja": "Oデフォルト値を持つフィールドの値が初期設定され、または明示的に提供されているかどうかを独立して、同じような比較しなければなりません。これは、符号化されたバイトの比較バイナリが不十分であることを意味します。"
    },
    {
      "indent": 3,
      "text": "o For some algorithms, such as SHA-1, the parameter value of NULL can be included in the ASN.1 encoding by some implementations and be omitted by other implementations. It is left to the implementer of this attribute to decide the comparison for equality is satisfied in this case. As a general rule, the same implementation is expected to produce both encoded values thus making it unlikely that this corner case should exist. This is an issue because some implementations will omit a NULL element, while others will encode a NULL element for some digest algorithms such as SHA-1 (see the comments in Section 2.1 of [RFC3370]). The issue is even worse because the NULL is absent in some cases (e.g., [RFC3370]), but is required in other cases (e.g., [RFC4056]).",
      "ja": "Oの場合、このようなSHA-1、NULLのパラメータ値として、いくつかのアルゴリズムは、いくつかの実装によってASN.1符号化に含めることができ、他の実装によって省略すること。平等のための比較はこのケースで満たされているかを決定するために、この属性の実装に任されています。原則として、同一の実装は、このように、このコーナーケースが存在する必要があることをそれがそうなって両方の符号化された値を生成することが期待されます。他の人がそのようなSHA-1などのいくつかのダイジェストアルゴリズム（[RFC3370]のセクション2.1のコメントを参照）NULL要素をコードする一方、いくつかの実装では、NULL要素を省略するので、これは問題です。 NULL（例えば、[RFC3370]）いくつかの場合には存在しないが、他の場合（例えば、[RFC4056]）で必要とされるため、問題はさらに悪くなります。"
    },
    {
      "indent": 0,
      "text": "3.1. Signed Data Verification Changes",
      "section_title": true,
      "ja": "3.1。署名されたデータの検証の変更"
    },
    {
      "indent": 3,
      "text": "If a CMS validator supports this attribute, the following additional verification steps MUST be performed:",
      "ja": "CMSのバリデータはこの属性をサポートしている場合は、次の追加の検証手順を実行する必要があります"
    },
    {
      "indent": 3,
      "text": "1. The SignerInfo.digestAlgorithm field MUST be compared to the digestAlgorithm field in the attribute. If the fields are not the same (modulo encoding), then signature validation MUST fail.",
      "ja": "1. SignerInfo.digestAlgorithmフィールドは、属性にdigestAlgorithmフィールドと比較されなければなりません。フィールドが同じ（モジュロ符号化）されていない場合、署名の検証が失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The SignerInfo.signatureAlgorithm field MUST be compared to the signatureAlgorithm field in the attribute. If the fields are not the same (modulo encoding), then the signature validation MUST fail.",
      "ja": "2. SignerInfo.signatureAlgorithmフィールドは、属性でのsignatureAlgorithmフィールドと比較されなければなりません。フィールドが同じ（モジュロ符号化）されていない場合、署名の検証が失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.2. Authenticated Data Verification Changes",
      "section_title": true,
      "ja": "3.2。認証されたデータの検証の変更"
    },
    {
      "indent": 3,
      "text": "If a CMS validator supports this attribute, the following additional verification steps MUST be performed:",
      "ja": "CMSのバリデータはこの属性をサポートしている場合は、次の追加の検証手順を実行する必要があります"
    },
    {
      "indent": 3,
      "text": "1. The AuthenticatedData.digestAlgorithm field MUST be compared to the digestAlgorithm field in the attribute. If the fields are not same (modulo encoding), then authentication MUST fail.",
      "ja": "1. AuthenticatedData.digestAlgorithmフィールドは、属性にdigestAlgorithmフィールドと比較されなければなりません。フィールドが（モジュロエンコーディング）と同じでない場合は、認証が失敗しなければなりません。"
    },
    {
      "indent": 3,
      "text": "2. The AuthenticatedData.macAlgorithm field MUST be compared to the macAlgorithm field in the attribute. If the fields are not the same (modulo encoding), then the authentication MUST fail.",
      "ja": "2. AuthenticatedData.macAlgorithmフィールドは、属性にmacAlgorithmフィールドと比較されなければなりません。フィールドが同じ（モジュロエンコーディング）でない場合、認証は失敗しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "ja": "4. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "All identifiers are assigned out of the S/MIME OID arc.",
      "ja": "すべての識別子は、S / MIME OIDアークの外に割り当てられています。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5.セキュリティについての考慮事項"
    },
    {
      "indent": 3,
      "text": "This document is designed to address the security issue of algorithm substitutions of the algorithms used by the validator. At this time, there is no known method to exploit this type of attack. If the attack could be successful, then either a weaker algorithm could be substituted for a stronger algorithm or the parameters could be modified by an attacker to change the behavior of the hashing algorithm used. (One example would be changing the initial parameter value for [RFC6210].)",
      "ja": "このドキュメントは、バリデーターによって使用されるアルゴリズムのアルゴリズム置換のセキュリティ問題に対処するように設計されています。このとき、この種の攻撃を悪用する方法は知られていません。攻撃が成功する可能性があれば、弱いアルゴリズムは、より強力なアルゴリズムの代わりに用いることができるかのパラメータが使用されハッシュアルゴリズムの動作を変更するために、攻撃者によって変更される可能性のいずれか。 （一例としては、[RFC6210]のための初期パラメータ値を変更することになります。）"
    },
    {
      "indent": 3,
      "text": "The attribute defined in this document is to be placed in a location that is protected by the signature or message authentication code. This attribute does not provide any additional security if placed in an unsigned or unauthenticated location.",
      "ja": "この文書で定義された属性は、署名又はメッセージ認証コードで保護されている場所に配置されます。符号なしまたは認証されていない場所に配置された場合、この属性は、追加のセキュリティを提供しません。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6.参照"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[ASN.1-2008] ITU-T, \"ITU-T Recommendations X.680, X.681, X.682, and X.683\", 2008.",
      "ja": "[ASN.1-2008] ITU-T、 \"ITU-T勧告X.680、X.681、X.682、およびX.683\"、2008年。"
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 5652, September 2009.",
      "ja": "[CMS] Housley氏、R.、 \"暗号メッセージ構文（CMS）\"、RFC 5652、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[ESS-BASE] Hoffman, P., \"Enhanced Security Services for S/MIME\", RFC 2634, June 1999.",
      "ja": "\"S / MIMEのためのセキュリティ強化サービス\" [ESS-BASE]ホフマン、P.、RFC 2634、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5035] Schaad, J., \"Enhanced Security Services (ESS) Update: Adding CertID Algorithm Agility\", RFC 5035, August 2007.",
      "ja": "[RFC5035] Schaad、J.、 \"拡張セキュリティサービス（ESS）更新：CertIDアルゴリズムアジリティを追加\"、RFC 5035、2007年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912, June 2010.",
      "ja": "[RFC5912]ホフマン、P.およびJ. Schaad、RFC 5912、2010年6月 \"公開鍵インフラストラクチャの使用X.509（PKIX）のための新しいASN.1モジュール\"。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RANDOM-HASH] Halevi, S. and H. Krawczyk, \"Strengthening Digital Signatures via Random Hashing\", January 2007, <http://webee.technion.ac.il/~hugo/rhash/rhash.pdf>.",
      "ja": "\"ランダムハッシュを経由してデジタル署名の強化\" [RANDOM-HASH] Halevi、S.およびH. Krawczyk、2007年1月、<http://webee.technion.ac.il/~hugo/rhash/rhash.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC3370] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, August 2002.",
      "ja": "[RFC3370] Housley氏、R.、 \"暗号メッセージ構文（CMS）アルゴリズム\"、RFC 3370、2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3447] Jonsson, J. and B. Kaliski, \"Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1\", RFC 3447, February 2003.",
      "ja": "[RFC3447]ジョンソン、J.とB. Kaliski、 \"公開鍵暗号規格（PKCS）＃1：RSA暗号仕様バージョン2.1\"、RFC 3447、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4056] Schaad, J., \"Use of the RSASSA-PSS Signature Algorithm in Cryptographic Message Syntax (CMS)\", RFC 4056, June 2005.",
      "ja": "[RFC4056] Schaad、J.、 \"暗号メッセージ構文（CMS）でRSASSA-PSS署名アルゴリズムの使用\"、RFC 4056、2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC6210] Schaad, J., \"Experiment: Hash Functions with Parameters in the Cryptographic Message Syntax (CMS) and S/MIME\", RFC 6210, April 2011.",
      "ja": "[RFC6210] Schaad、J.、 \"実験：ハッシュ暗号メッセージ構文（CMS）のパラメータを持つ関数とS / MIME\"、RFC 6210、2011年4月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. 2008 ASN.1 Module",
      "ja": "付録A. 2008 ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "The ASN.1 module defined uses the 2008 ASN.1 definitions found in [ASN.1-2008]. This module contains the ASN.1 module that contains the required definitions for the types and values defined in this document. The module uses the ATTRIBUTE class defined in [RFC5912].",
      "ja": "定義されたASN.1モジュールは、[ASN.1-2008]で見つかった2008 ASN.1定義を使用しています。このモジュールは、この文書で定義されたタイプと値のために必要な定義が含まれているASN.1モジュールが含まれています。モジュールは、[RFC5912]で定義された属性クラスを使用します。"
    },
    {
      "indent": 2,
      "text": "CMSAlgorithmProtectionAttribute\n  { iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0)\n    id-mod-cms-algorithmProtect(52) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\n IMPORTS",
      "raw": true
    },
    {
      "indent": 5,
      "text": "-- Cryptographic Message Syntax (CMS) [CMS]",
      "ja": " - 暗号メッセージ構文（CMS）[CMS]"
    },
    {
      "indent": 5,
      "text": "DigestAlgorithmIdentifier, MessageAuthenticationCodeAlgorithm, SignatureAlgorithmIdentifier FROM CryptographicMessageSyntax-2009 { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2004-02(41) }",
      "ja": "DigestAlgorithmIdentifier、MessageAuthenticationCodeAlgorithm、SignatureAlgorithmIdentifier暗号メッセージ構文-2009 FROM {ISO（1）部材本体（2）米国（840）RSADSI（113549）PKCS（1）PKCS-9（9）SMIME（16）モジュール（0）ID-mod- CMS-2004-02（41）}"
    },
    {
      "indent": 5,
      "text": "-- Common PKIX structures [RFC5912]",
      "ja": " - 共通PKIX構造[RFC5912]"
    },
    {
      "indent": 5,
      "text": "ATTRIBUTE FROM PKIX-CommonTypes-2009 { iso(1) identified-organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)};",
      "ja": "PKIX-CommonTypes-2009から属性{ISO（1）同定された組織（3）DOD（6）インターネット（1）セキュリティ（5）メカニズム（5）PKIX（7）ID-MOD（0）ID-MOD-pkixCommon- 02（57）}。"
    },
    {
      "indent": 5,
      "text": "-- -- The CMS Algorithm Protection attribute is a Signed Attribute or -- an Authenticated Attribute. -- -- Add this attribute to SignedAttributesSet in [CMS] -- Add this attribute to AuthAttributeSet in [CMS] --",
      "ja": " -   - 認証された属性 -  CMSアルゴリズム保護属性は署名している属性かです。 -   -  [CMS]でSignedAttributesSetにこの属性を追加 -  [CMS]でAuthAttributeSetにこの属性を追加します - "
    },
    {
      "indent": 5,
      "text": "aa-cmsAlgorithmProtection ATTRIBUTE ::= {\n   TYPE CMSAlgorithmProtection\n   IDENTIFIED BY { id-aa-cmsAlgorithmProtect }\n}",
      "raw": true
    },
    {
      "indent": 5,
      "text": "id-aa-cmsAlgorithmProtect OBJECT IDENTIFIER ::= {\n   iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n   pkcs9(9) 52 }",
      "raw": true
    },
    {
      "indent": 5,
      "text": "CMSAlgorithmProtection ::= SEQUENCE {\n   digestAlgorithm         DigestAlgorithmIdentifier,\n   signatureAlgorithm  [1] SignatureAlgorithmIdentifier OPTIONAL,\n   macAlgorithm        [2] MessageAuthenticationCodeAlgorithm\n                                     OPTIONAL\n}\n(WITH COMPONENTS { signatureAlgorithm PRESENT,\n                   macAlgorithm ABSENT } |\n WITH COMPONENTS { signatureAlgorithm ABSENT,\n                   macAlgorithm PRESENT })",
      "raw": true
    },
    {
      "indent": 2,
      "text": "END",
      "ja": "終わり"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Jim Schaad Soaring Hawk Consulting",
      "ja": "ジムSchaad高騰ホークコンサルティング"
    },
    {
      "indent": 3,
      "text": "EMail: ietf@augustcellars.com",
      "ja": "メールアドレス：ietf@augustcellars.com"
    }
  ]
}