{
  "title": {
    "text": "RFC 6816 - Simple Low-Density Parity Check (LDPC) Staircase Forward Error Correction (FEC) Scheme for FECFRAME",
    "ja": "RFC 6816 - FECFRAME用のシンプルな低密度パリティチェック（LDPC）階段前方誤り訂正（FEC）スキーム"
  },
  "number": 6816,
  "created_at": "2019-10-31 07:20:35.397355+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           V. Roca\nRequest for Comments: 6816                                         INRIA\nCategory: Standards Track                                      M. Cunche\nISSN: 2070-1721                                          INSA-Lyon/INRIA\n                                                                J. Lacan\n                                                 ISAE, Univ. of Toulouse\n                                                           December 2012",
      "raw": true
    },
    {
      "indent": 11,
      "text": " Simple Low-Density Parity Check (LDPC) Staircase\nForward Error Correction (FEC) Scheme for FECFRAME",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a fully specified simple Forward Error Correction (FEC) scheme for Low-Density Parity Check (LDPC) Staircase codes that can be used to protect media streams along the lines defined by FECFRAME. These codes have many interesting properties: they are systematic codes, they perform close to ideal codes in many use-cases, and they also feature very high encoding and decoding throughputs. LDPC-Staircase codes are therefore a good solution to protect a single high bitrate source flow or to protect globally several mid-rate flows within a single FECFRAME instance. They are also a good solution whenever the processing load of a software encoder or decoder must be kept to a minimum.",
      "ja": "この文書では、FECFRAMEによって定義された線に沿ってメディアストリームを保護するために使用することができる低密度パリティチェック（LDPC）階段コードの完全指定されたシンプルな前方誤り訂正（FEC）方式を説明しています。彼らは多くのユースケースでは理想的なコードに近い実行し、彼らは組織符号であり、彼らはまた、非常に高い符号化と復号化スループットを備えています：これらのコードは、多くの興味深い特性を有しています。 LDPC-階段コードは、単一の高ビットレートのソース・フローを保護するために、または単一FECFRAMEインスタンス内でグローバルにいくつかの中間レートフローを保護することは良い解決策です。彼らはまた、ソフトウェア・エンコーダまたはデコーダの処理負荷を最小限に抑えなければならないときはいつでも良い解決策です。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6816.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6816で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................4\n2. Terminology .....................................................5\n3. Definitions Notations and Abbreviations .........................5\n   3.1. Definitions ................................................5\n   3.2. Notations ..................................................7\n   3.3. Abbreviations ..............................................8\n4. Common Procedures Related to the ADU Block and Source\n   Block Creation ..................................................8\n   4.1. Restrictions ...............................................9\n   4.2. ADU Block Creation .........................................9\n   4.3. Source Block Creation .....................................11\n5. LDPC-Staircase FEC Scheme for Arbitrary ADU Flows ..............13\n   5.1. Formats and Codes .........................................13\n        5.1.1. FEC Framework Configuration Information ............13\n        5.1.2. Explicit Source FEC Payload ID .....................14\n        5.1.3. Repair FEC Payload ID ..............................16\n   5.2. Procedures ................................................17\n   5.3. FEC Code Specification ....................................17\n6. Security Considerations ........................................17\n   6.1. Attacks against the Data Flow .............................17\n        6.1.1. Access to Confidential Content .....................17\n        6.1.2. Content Corruption .................................18\n   6.2. Attacks against the FEC Parameters ........................18\n   6.3. When Several Source Flows Are to Be Protected Together ....19\n   6.4. Baseline Secure FEC Framework Operation ...................19\n7. Operations and Management Considerations .......................19\n   7.1. Operational Recommendations ...............................19\n8. IANA Considerations ............................................21\n9. Acknowledgments ................................................21\n10. References ....................................................21\n   10.1. Normative References .....................................21\n   10.2. Informative References ...................................22",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The use of Forward Error Correction (FEC) codes is a classic solution to improve the reliability of unicast, multicast, and broadcast Content Delivery Protocols (CDPs) and applications [RFC3453]. \"Forward Error Correction (FEC) Framework\" [RFC6363] describes a generic framework to use FEC schemes with media delivery applications and, for instance, with real-time streaming media applications based on the RTP real-time protocol. Similarly, \"Forward Error Correction (FEC) Building Block\" [RFC5052] describes a generic framework to use FEC schemes with objects (e.g., files) delivery applications based on either the Asynchronous Layered Coding (ALC) [RFC5775] or the NACK-Oriented Reliable Multicast (NORM) [RFC5740] protocols.",
      "ja": "前方誤り訂正（FEC）符号を使用することは、ユニキャスト、マルチキャストの信頼性を向上させ、コンテンツ配信プロトコル（のCDP）とアプリケーション[RFC3453]を放送するための古典的な解決策です。 「前方誤り訂正（FEC）フレームワーク」[RFC6363]はRTPリアルタイムプロトコルに基づいて、リアルタイムストリーミングメディアアプリケーションと、例えば、メディア配信アプリケーションとFEC方式を使用してするための一般的なフレームワークを記述する。同様に、「前方誤り訂正（FEC）ビルディングブロック」[RFC5052]は非同期階層符号化（ALC）[RFC5775]またはいずれかに基づいて、オブジェクト（例えば、ファイル）配信アプリケーションとFECスキームを使用する一般的なフレームワークについて説明NACK指向高信頼マルチキャスト（NORM）[RFC5740]プロトコル。"
    },
    {
      "indent": 3,
      "text": "More specifically, the [RFC5053] (Raptor) and [RFC5170] (LDPC-Staircase and LDPC-Triangle) FEC schemes introduce erasure codes based on sparse parity check matrices for object delivery protocols like ALC and NORM. Similarly, \"Reed-Solomon Forward Error Correction (FEC) Schemes\" [RFC5510] introduces Reed-Solomon codes based on Vandermonde matrices for the same object delivery protocols. All these codes are systematic codes, meaning that the k source symbols are part of the n encoding symbols. Additionally, the Reed-Solomon FEC codes belong to the class of Maximum Distance Separable (MDS) codes that are optimal in terms of erasure recovery capabilities. It means that a receiver can recover the k source symbols from any set of exactly k encoding symbols out of n. This is not the case with either Raptor or LDPC-Staircase codes, and these codes require a certain number of encoding symbols in excess to k. However, this number is small in practice when an appropriate decoding scheme is used at the receiver [Cunche08]. Another key difference is the high encoding/decoding complexity of Reed-Solomon codecs compared to Raptor or LDPC-Staircase codes. A difference of one or more orders of magnitude in terms of encoding/decoding speed exists between the Reed-Solomon and LDPC-Staircase software codecs [Cunche08][CunchePHD10]. Finally, Raptor and LDPC-Staircase codes are large block FEC codes, in the sense of [RFC3453], since they can efficiently deal with a large number of source symbols.",
      "ja": "より具体的には、[RFC5053]（ラプター）と[RFC5170]（LDPC-階段及びLDPC-三角）FECスキームは、ALCおよびNORM等オブジェクト配信プロトコルの疎なパリティチェック行列に基づいて、消去コードを導入します。同様に、「リードソロモン前方誤り訂正（FEC）スキーム」[RFC5510]は、同じオブジェクトの配信プロトコルのバンデルモンド行列に基づいて、リードソロモン符号を導入します。これらのすべてのコードは、K個のソースシンボルは、N個の符号化シンボルの一部であることを意味し、系統的コードです。また、リードソロモンFEC符号は、消去復旧機能の面で最適な最大距離分離（MDS）コードのクラスに属します。これは、受信機がn個のうちの正確にk個の符号化シンボルの任意のセットからのk個のソースシンボルを回復することができることを意味します。これは、ラプター又はLDPC-階段コードのいずれかの場合ではなく、これらのコードは、kに過剰に符号化シンボルの一定数を必要とします。適切な復号方式は、受信機[Cunche08]で使用される場合しかし、この数は実際には小さいです。別の重要な違いは、ラプター又はLDPC-階段符号に比べて、リードソロモンコーデックの高い符号化/復号化の複雑さです。符号化/復号化速度の点で一桁以上の差がリードソロモン及びLDPC-階段ソフトウェアコーデック[Cunche08] [CunchePHD10]の間に存在します。彼らは効率的にソースシンボルの多数に対処することができるので、最終的に、ラプター及びLDPC-階段符号は、[RFC3453]の意味で、大ブロックFECコードです。"
    },
    {
      "indent": 3,
      "text": "The present document focuses on LDPC-Staircase codes that belong to the well-known class of \"Low Density Parity Check\" codes. Because of their key features, these codes are a good solution in many situations, as detailed in Section 7.",
      "ja": "本書では、よく知られたクラスに属するコードを「低密度パリティチェック」LDPC-階段コードに焦点を当てています。なぜなら彼らの主要な機能を、これらのコードは、第7節で詳述するように、多くの状況で優れたソリューションです。"
    },
    {
      "indent": 3,
      "text": "This document inherits from [RFC5170], Section 6 \"Full Specification of the LDPC-Staircase Scheme\", the specifications of the core LDPC-Staircase codes, and from Section 5.7 \"Pseudo-Random Number Generator\", the specifications of the PRNG used by these codes. Therefore, this document specifies only the information specific to the FECFRAME context and refers to [RFC5170] for the core specifications of the codes. To that purpose, the present document introduces:",
      "ja": "この文書は、で使用されるPRNGの仕様、[RFC5170]、第6章「LDPC-階段スキームの完全な仕様」、コアLDPC-階段コードの仕様から、セクション5.7「擬似乱数発生器」から継承しますこれらのコード。したがって、この文書はFECFRAMEコンテキストに固有の情報のみを指定するとコードのコア仕様のために[RFC5170]を指します。その目的のために、本文書が導入されています。"
    },
    {
      "indent": 3,
      "text": "o the Fully Specified FEC Scheme with FEC Encoding ID 7 that specifies a simple way of using LDPC-Staircase codes in order to protect arbitrary Application Data Unit (ADU) flows.",
      "ja": "完全に指定されたFECスキーム任意のアプリケーションデータユニット（ADU）のフローを保護するためにLDPC-階段符号を使用する簡単な方法を指定するFEC符号化ID 7とO。"
    },
    {
      "indent": 3,
      "text": "Therefore Sections 4 and 5 (except Section 5.7, see above) of [RFC5170], that define [RFC5052] specific Formats and Procedures, are not considered and are replaced by FECFRAME specific Formats and Procedures.",
      "ja": "したがって、[RFC5052]特定のフォーマットおよび手順を定義する[RFC5170]のセクション4および5は、（セクション5.7を除いて、上記参照）、考慮されていないとFECFRAME特定のフォーマットと手順によって置き換えられています。"
    },
    {
      "indent": 3,
      "text": "Finally, publicly available reference implementations of these codes are available [LDPC-codec] [LDPC-codec-OpenFEC].",
      "ja": "最後に、これらのコードの公的に利用可能なリファレンス実装が利用可能である[LDPC-コーデック] [LDPC-コーデックOpenFEC]。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2.用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Definitions Notations and Abbreviations",
      "section_title": true,
      "ja": "3.定義表記と略語"
    },
    {
      "indent": 0,
      "text": "3.1. Definitions",
      "section_title": true,
      "ja": "3.1。定義"
    },
    {
      "indent": 3,
      "text": "This document uses the following terms and definitions. Those in the list below are FEC scheme specific and are in line with [RFC5052]:",
      "ja": "このドキュメントでは、次の用語と定義を使用しています。以下のリスト中のものは、FECスキーム特異的であり、[RFC5052]と一致しています。"
    },
    {
      "indent": 3,
      "text": "Source symbol: unit of data used during the encoding process. In this specification, there is always one source symbol per ADU.",
      "ja": "ソースシンボル：符号化プロセス中に使用されるデータの単位。本明細書では、ADUあたり1つのソースシンボルは常にあります。"
    },
    {
      "indent": 3,
      "text": "Encoding symbol: unit of data generated by the encoding process. With systematic codes, source symbols are part of the encoding symbols.",
      "ja": "符号化シンボル：符号化処理によって生成されたデータの単位。体系的なコードでは、ソースシンボルは、符号化シンボルの一部です。"
    },
    {
      "indent": 3,
      "text": "Repair symbol: encoding symbol that is not a source symbol.",
      "ja": "修復シンボル：シンボル符号化ソースシンボルではありません。"
    },
    {
      "indent": 3,
      "text": "Code rate: the k/n ratio, i.e., the ratio between the number of source symbols and the number of encoding symbols. By definition, the code rate is such that: 0 < code rate <= 1. A code rate close to 1 indicates that a small number of repair symbols have been produced during the encoding process.",
      "ja": "符号化率：K / N比、即ち、ソースシンボルの数と符号化シンボルの数との比。 <1に近いコードレート<= 1のコードレートがリペアシンボルの数が少ない符号化プロセス中に生成されたことを示す0：定義により、符号化率は、ようなものです。"
    },
    {
      "indent": 3,
      "text": "Systematic code: FEC code in which the source symbols are part of the encoding symbols. The LDPC-Staircase codes introduced in this document are systematic.",
      "ja": "システマティックコード：ソースシンボルは、符号化シンボルの一部である、FECコード。本書で紹介したLDPC-階段コードが体系的です。"
    },
    {
      "indent": 3,
      "text": "Source block: a block of k source symbols that are considered together for the encoding.",
      "ja": "ソースブロック：符号化のために一緒に考慮されるk個のソースシンボルのブロック。"
    },
    {
      "indent": 3,
      "text": "Packet erasure channel: a communication path where packets are either dropped (e.g., by a congested router, or because the number of transmission errors exceeds the correction capabilities of the physical layer codes) or received. When a packet is received, it is assumed that this packet is not corrupted.",
      "ja": "パケット消去チャネル：パケットがいずれかの（輻輳ルータによって、例えば、または伝送エラーの数は、物理レイヤコードの訂正能力を超えているため）、ドロップまたは受信された通信経路。パケットが受信されると、このパケットが破損していないことが想定されます。"
    },
    {
      "indent": 3,
      "text": "The following are FECFRAME specific and are in line with [RFC6363]:",
      "ja": "以下の特定のFECFRAMEであり、[RFC6363]と一致しています。"
    },
    {
      "indent": 3,
      "text": "Application Data Unit (ADU): the unit of source data provided as payload to the transport layer. Depending on the use-case, an ADU may use an RTP encapsulation.",
      "ja": "アプリケーション・データ・ユニット（ADU）：トランスポート層にペイロードとして提供されたソースデータの単位。ユースケースによっては、ADUは、RTPカプセル化を使用することができます。"
    },
    {
      "indent": 3,
      "text": "(Source) ADU Flow: a sequence of ADUs associated with a transport-layer flow identifier (such as the standard 5-tuple {Source IP address, source port, destination IP address, destination port, transport protocol}). Depending on the use-case, several ADU flows may be protected together by FECFRAME.",
      "ja": "（ソース）ADUフロー：トランスポート・レイヤ・フロー識別子に関連付けられているのADUの配列（例えば、標準的な5タプル{送信元IPアドレス、送信元ポート、宛先IPアドレス、宛先ポート、トランスポートプロトコル}など）。ユースケースに応じて、いくつかのADUフローはFECFRAMEによって一緒に保護されていてもよいです。"
    },
    {
      "indent": 3,
      "text": "ADU Block: a set of ADUs that are considered together by the FECFRAME instance for the purpose of the FEC scheme. Along with the flow ID (F[]), length (L[]), and padding (Pad[]) fields, they form the set of source symbols over which FEC encoding will be performed.",
      "ja": "ADUブロック：FECスキームの目的のためにFECFRAMEインスタンスで一緒に考えられているのADUのセット。フローID（F []）、長さ（L []）、及びパディング（パッド[]）フィールドと一緒に、彼らはFEC符号化が実行される上にソースシンボルのセットを形成します。"
    },
    {
      "indent": 3,
      "text": "ADU Information (ADUI): a unit of data constituted by the ADU and the associated Flow ID, Length, and Padding fields (Section 4.3). This is the unit of data that is used as source symbol.",
      "ja": "ADU情報（ADUI）：ADUと関連するフローID、長さ、およびパディングフィールド（第4.3節）によって構成されるデータの単位。これは、ソースシンボルとして使用されるデータの単位です。"
    },
    {
      "indent": 3,
      "text": "FEC Framework Configuration Information (FFCI): information that controls the operation of the FEC Framework. The FFCI enables the synchronization of the FECFRAME sender and receiver instances.",
      "ja": "FECフレームワークの設定情報（FFCI）：FECフレームワークの動作を制御する情報。 FFCIはFECFRAMEの送信者と受信者のインスタンスの同期を可能にします。"
    },
    {
      "indent": 3,
      "text": "FEC Source Packet: at a sender (respectively, at a receiver) a payload submitted to (respectively, received from) the transport protocol containing an ADU along with an optional Explicit Source FEC Payload ID.",
      "ja": "FECソースパケット（受信機でそれぞれ）送信側ATに送信ペイロードは任意明示ソースFECペイロードIDとともにADUを含むトランスポートプロトコル（それぞれから受信しました）。"
    },
    {
      "indent": 3,
      "text": "FEC Repair Packet: at a sender (respectively, at a receiver) a payload submitted to (respectively, received from) the transport protocol containing one repair symbol along with a Repair FEC Payload ID and possibly an RTP header.",
      "ja": "FECリペアパケット：送信側で（それぞれ、受信機で）に提出されたペイロードは、リペアFECペイロードIDおよびおそらくRTPヘッダと共に1つのリペアシンボルを含むトランスポートプロトコル（それぞれから受信しました）。"
    },
    {
      "indent": 3,
      "text": "The above terminology is illustrated in Figure 1 (sender's point of view):",
      "ja": "上記用語は、図1（ビューの送信者のポイント）に示されています。"
    },
    {
      "indent": 3,
      "text": "+----------------------+\n|     Application      |\n+----------------------+\n           |\n           | (1) Application Data Units (ADUs)\n           |\n           v\n+----------------------+                           +----------------+\n|    FEC Framework     |                           |                |\n|                      |-------------------------->|   FEC Scheme   |\n|(2) Construct source  |(3) Source Block           |                |\n|    blocks            |                           |(4) FEC Encoding|\n|(6) Construct FEC     |<--------------------------|                |\n|    source and repair |                           |                |\n|    packets           |(5) Explicit Source FEC    |                |\n+----------------------+    Payload IDs            +----------------+\n           |                Repair FEC Payload IDs\n           |                Repair symbols\n           |\n           |(7) FEC source and repair packets\n           v\n+----------------------+\n|   Transport Layer    |\n|     (e.g., UDP)      |\n+----------------------+",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Figure 1: Terminology Used in This Document (Sender)",
      "ja": "図1：この文書で使用される用語（送信者）"
    },
    {
      "indent": 0,
      "text": "3.2. Notations",
      "section_title": true,
      "ja": "3.2。表記"
    },
    {
      "indent": 3,
      "text": "This document uses the following notations. Those in the list below are FEC scheme specific:",
      "ja": "このドキュメントでは、次の表記法を使用しています。以下のリストにあるものはFECスキーム固有のものです："
    },
    {
      "indent": 3,
      "text": "k denotes the number of source symbols in a source block.",
      "ja": "Kは、ソースブロック内のソースシンボルの数を表します。"
    },
    {
      "indent": 3,
      "text": "max_k denotes the maximum number of source symbols for any source block.",
      "ja": "max_kは、任意のソースブロックのソースシンボルの最大数を示します。"
    },
    {
      "indent": 3,
      "text": "n denotes the number of encoding symbols generated for a source block.",
      "ja": "Nは、ソースブロックに対して生成された符号化シンボルの数を表します。"
    },
    {
      "indent": 3,
      "text": "E denotes the encoding symbol length in bytes.",
      "ja": "Eは、バイト単位の符号化シンボル長です。"
    },
    {
      "indent": 3,
      "text": "CR denotes the \"code rate\", i.e., the k/n ratio.",
      "ja": "CRは、「符号化率」、即ち、K / N比を示します。"
    },
    {
      "indent": 3,
      "text": "N1 denotes the target number of \"1s\" per column in the left side of the parity check matrix.",
      "ja": "N1は、パリティ検査行列の左側の列ごとに「1」の目標数を表します。"
    },
    {
      "indent": 3,
      "text": "N1m3 denotes the value N1 - 3.",
      "ja": "3  -  N1m3は、値N1を示しています。"
    },
    {
      "indent": 3,
      "text": "G G denotes the number of encoding symbols per group, i.e., the number of symbols sent in the same packet.",
      "ja": "G Gは、グループごとに符号化シンボル、すなわち、同一のパケットで送信されるシンボルの数の数を示します。"
    },
    {
      "indent": 3,
      "text": "a^^b denotes a raised to the power b.",
      "ja": "^^ bは、電力Bに上げ表します。"
    },
    {
      "indent": 3,
      "text": "The following are FECFRAME specific:",
      "ja": "次FECFRAME固有のものです："
    },
    {
      "indent": 3,
      "text": "B denotes the number of ADUs per ADU block.",
      "ja": "Bは、ADUブロック当たりのADUの数を表します。"
    },
    {
      "indent": 3,
      "text": "max_B denotes the maximum number of ADUs for any ADU block.",
      "ja": "MAX_Bは、任意のADUブロックのためのADUの最大数を示します。"
    },
    {
      "indent": 0,
      "text": "3.3. Abbreviations",
      "section_title": true,
      "ja": "3.3。略語"
    },
    {
      "indent": 3,
      "text": "This document uses the following abbreviations:",
      "ja": "このドキュメントでは、次の略語を使用しています："
    },
    {
      "indent": 3,
      "text": "ADU Application Data Unit",
      "ja": "ADUアプリケーションデータユニット"
    },
    {
      "indent": 3,
      "text": "ESI Encoding Symbol ID",
      "ja": "パパイヤ符号化シンボルID"
    },
    {
      "indent": 3,
      "text": "FEC Forward Error (or Erasure) Correction",
      "ja": "FECフォワードエラー（または消去）補正"
    },
    {
      "indent": 3,
      "text": "FFCI FEC Framework Configuration Information",
      "ja": "FFCI FECフレームワークの設定情報"
    },
    {
      "indent": 3,
      "text": "FSSI FEC Scheme-Specific Information",
      "ja": "FSSI FECスキーム固有の情報"
    },
    {
      "indent": 3,
      "text": "LDPC Low-Density Parity Check",
      "ja": "LDPC低密度パリティ検査"
    },
    {
      "indent": 3,
      "text": "MDS Maximum Distance Separable",
      "ja": "MDSの最大距離分離"
    },
    {
      "indent": 3,
      "text": "PRNG Pseudo-Random Number Generator",
      "ja": "PRNG疑似乱数ジェネレータ"
    },
    {
      "indent": 3,
      "text": "SDP Session Description Protocol",
      "ja": "SDPセッション記述プロトコル"
    },
    {
      "indent": 0,
      "text": "4. Common Procedures Related to the ADU Block and Source Block Creation",
      "section_title": true,
      "ja": "ADUブロックとソースブロックの作成に関連する4.共通手順"
    },
    {
      "indent": 3,
      "text": "This section introduces the procedures that are used during the ADU block and related source block creation, for the FEC scheme considered.",
      "ja": "このセクションでは、考えFEC方式として、ADUブロックと関連するソースブロックの作成時に使用される手順を導入します。"
    },
    {
      "indent": 0,
      "text": "4.1. Restrictions",
      "section_title": true,
      "ja": "4.1。制限事項"
    },
    {
      "indent": 3,
      "text": "This specification has the following restrictions:",
      "ja": "この仕様は、次の制限があります。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one source symbol per ADUI, and therefore per ADU;",
      "ja": "O ADUごとに1つのソースADUIあたりシンボル、したがってそこでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one repair symbol per FEC repair packet;",
      "ja": "O FECリペアパケットごとに1つのリペアシンボルがでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o there MUST be exactly one source block per ADU block;",
      "ja": "O ADUブロックごとに1つのソースブロックが存在しなければなりません。"
    },
    {
      "indent": 3,
      "text": "o the use of the LDPC-Staircase scheme is such that there MUST be exactly one encoding symbol per group; i.e., G MUST be equal to 1 [RFC5170];",
      "ja": "O LDPC-階段方式の使用は、グループごとに1つの符号化シンボルが存在しなければならないようなものです。すなわち、G 1 [RFC5170]に等しくなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.2. ADU Block Creation",
      "section_title": true,
      "ja": "4.2。 ADUブロックの作成"
    },
    {
      "indent": 3,
      "text": "Two kinds of limitations exist that impact the ADU block creation:",
      "ja": "制限の二種類がそのインパクトにADUブロックの作成を存在します。"
    },
    {
      "indent": 3,
      "text": "o at the FEC scheme level: the FEC scheme and the FEC codec have limitations that define a maximum source block size;",
      "ja": "FECスキームレベル○：FECスキーム及びFECコーデックは、最大ソースブロックサイズを定義する限界があります。"
    },
    {
      "indent": 3,
      "text": "o at the FECFRAME instance level: the target use-case can have real-time constraints that can/will define a maximum ADU block size;",
      "ja": "FECFRAMEインスタンスレベルでO：ターゲット・ユースケースは/最大ADUブロックサイズを定義することができ、リアルタイム制約を有することができます。"
    },
    {
      "indent": 3,
      "text": "Note that the use of the terminology \"maximum source block size\" and \"maximum ADU block size\" depends on the point of view that is adopted (FEC scheme versus FECFRAME instance). However, in this document, both refer to the same value since Section 4.1 requires there be exactly one source symbol per ADU. We now detail each of these aspects.",
      "ja": "用語「最大ソースブロックサイズ」と「最大ADUブロックサイズ」の使用は、（FECFRAMEインスタンスに対するFEC方式）を採用している視点に依存することに留意されたいです。 4.1節は、ADUごとに1つのソースシンボルがあることが必要ですので、この文書では、両方が同じ値を参照してください。現在、詳細これらの側面のそれぞれ。"
    },
    {
      "indent": 3,
      "text": "The maximum source block size in symbols, max_k, depends on several parameters: the code rate (CR) and the Encoding Symbol ID (ESI) field length in the Explicit Source/Repair FEC Payload ID (16 bits), as well as possible internal codec limitations. More specifically, max_k cannot be larger than the following values, derived from the ESI field size limitation, for a given code rate:",
      "ja": "シンボルの最大ソースブロックサイズは、max_kは、いくつかのパラメータに依存する：符号レート（CR）及び明示的な送信元/リペアFECペイロードIDで符号化シンボルID（ESI）フィールド長（16ビット）、並びに内部可能コーデックの制限。より具体的には、max_kは、所与のコードレートのために、ESIフィールドサイズ制限に由来する以下の値より大きくすることはできません。"
    },
    {
      "indent": 6,
      "text": "max1_k = 2^^(16 - ceil(Log2(1/CR)))",
      "ja": "max1_k = 2 ^^（16  -  CEIL（LOG2（1 / CR）））"
    },
    {
      "indent": 3,
      "text": "Some common max1_k values are:",
      "ja": "いくつかの一般的なmax1_k値は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "o CR == 1 (no repair symbol): max1_k = 2^^16 = 65536 symbols",
      "ja": "O CR == 1（なし修復シンボル）：max1_k = 2 ^^ 16 = 65536シンボル"
    },
    {
      "indent": 3,
      "text": "o 1/2 <= CR < 1: max1_k = 2^^15 = 32,768 symbols",
      "ja": "1/2 <= CR <1：max1_k = 2 15 = 32,768シンボル^^"
    },
    {
      "indent": 3,
      "text": "o 1/4 <= CR < 1/2: max1_k = 2^^14 = 16,384 symbols",
      "ja": "1/4 <= CR <1/2：max1_k ^^ = 2 14 = 16,384シンボル"
    },
    {
      "indent": 3,
      "text": "Additionally, a codec can impose other limitations on the maximum source block size, for instance, because of a limited working memory size. This decision MUST be clarified at implementation time, when the target use-case is known. This results in a max2_k limitation.",
      "ja": "また、コーデックは、制限のためワーキングメモリのサイズを、例えば、最大ソースブロックサイズに他の制限を課すことができます。この決定は、対象ユースケースが知られている場合、実装時に明らかにしなければなりません。これはmax2_kの制限につながります。"
    },
    {
      "indent": 3,
      "text": "Then, max_k is given by:",
      "ja": "その後、max_kは、次式で与えられます。"
    },
    {
      "indent": 6,
      "text": "max_k = min(max1_k, max2_k)",
      "ja": "max_k =分（max1_k、max2_k）"
    },
    {
      "indent": 3,
      "text": "Note that this calculation is only required at the encoder (sender), since the actual k parameter (k <= max_k) is communicated to the decoder (receiver) through the Explicit Source/Repair FEC Payload ID.",
      "ja": "実際のkパラメータ（kは<= max_k）明示的なソース/リペアFECペイロードIDを介してデコーダ（受信機）に伝達されるので、この計算は単に、エンコーダ（送信者）に必要であることに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "The source ADU flows can have real-time constraints. When there are multiple flows, with different real-time constraints, let us consider the most stringent constraints (see [RFC6363], Section 10.2, item 6, for recommendations when several flows are globally protected). In that case the maximum number of ADUs of an ADU block must not exceed a certain threshold since it directly impacts the decoding delay. The larger the ADU block size, the longer a decoder may have to wait until it has received a sufficient number of encoding symbols for decoding to succeed, and therefore the larger the decoding delay. When the target use-case is known, these real-time constraints result in an upper bound to the ADU block size, max_rt.",
      "ja": "ソースADUフローは、リアルタイム制約を持つことができます。複数のフローがある場合、異なるリアルタイム制約で、私たちは最も厳しい制約を（複数のフローがグローバルに保護されています推奨事項については、[RFC6363]、セクション10.2、項目6を参照）を検討してみましょう。その場合、ADUブロックのADUの最大数は、直接影響復号遅延ので、一定の閾値を超えてはなりません。大きいADUブロックサイズは、より長いデコーダは、それが成功する復号のための符号化シンボルの十分な数を受信するまで待機する必要がある可能性があり、したがって、より大きな復号遅延。ターゲット・ユースケースが知られている場合は、これらのリアルタイム制約は、ADUのブロックサイズに上限max_rtになります。"
    },
    {
      "indent": 3,
      "text": "For instance, if the use-case specifies a maximum decoding latency, l, and if each source ADU covers a duration d of a continuous media (we assume here the simple case of a constant bit rate ADU flow), then the ADU block size must not exceed:",
      "ja": "例えば、ユースケースは、最大デコーディング遅延、L、及び各ソースADUは、連続メディアの持続時間D（ここでは一定のビットレートADU流の単純なケースを想定）を覆う場合、ADUブロックサイズを指定した場合超えてはなりません。"
    },
    {
      "indent": 6,
      "text": "max_rt = floor(l / d)",
      "ja": "max_rt =フロア（L / D）"
    },
    {
      "indent": 3,
      "text": "After encoding, this block will produce a set of at most n = max_rt / CR encoding symbols. These n encoding symbols will have to be sent at a rate of n / l packets per second. For instance, with d = 10 ms, l = 1 s, max_rt = 100 ADUs.",
      "ja": "符号化の後、このブロックは、最大でN = max_rt / CRの符号化シンボルのセットを生成します。これらn個の符号化シンボルは、毎秒N / L個のパケットのレートで送信されなければなりません。例えば、D = 10ミリ秒、L = 1秒、max_rt = 100のADU有します。"
    },
    {
      "indent": 3,
      "text": "If we take into account all these constraints, we find:",
      "ja": "私たちは、アカウントのすべてのこれらの制約を考慮に入れるならば、我々は見つけます："
    },
    {
      "indent": 6,
      "text": "max_B = min(max_k, max_rt)",
      "ja": "MAX_B =分（max_k、max_rt）"
    },
    {
      "indent": 3,
      "text": "This max_B parameter is an upper bound to the number of ADUs that can constitute an ADU block.",
      "ja": "このMAX_Bパラメータは、ADUブロックを構成することができるのADUの数に上限です。"
    },
    {
      "indent": 0,
      "text": "4.3. Source Block Creation",
      "section_title": true,
      "ja": "4.3。ソースブロックの作成"
    },
    {
      "indent": 3,
      "text": "In its most general form, FECFRAME and the LDPC-Staircase FEC Scheme are meant to protect a set of independent flows. Since the flows have no relationship to one another, the ADU size of each flow can potentially vary significantly. Even in the special case of a single flow, the ADU sizes can largely vary (e.g., the various frames of a Group of Pictures (GOP) of an H.264 flow). This diversity must be addressed since the LDPC-Staircase FEC Scheme requires a constant encoding symbol size (E parameter) per source block. Since this specification requires that there be only one source symbol per ADU, E must be large enough to contain all the ADUs of an ADU block along with their prepended 3 bytes (see below).",
      "ja": "最も一般的な形態では、FECFRAMEとLDPC-階段FECスキームは、独立したフローのセットを保護するためのものです。フローが相互に関係がないので、各フローのADUのサイズは、潜在的に大幅に変化することができます。単一のフローの特殊な場合に、ADUサイズは、（H.264フローのグループオブピクチャ（GOP）の、例えば、種々のフレーム）を大きく変化させることができます。 LDPC-階段FECスキームは、ソースブロック当たりの一定の符号化シンボルサイズ（Eパラメータ）を必要とするので、この多様性に対処しなければなりません。この仕様は、ADUごとに1つだけのソースシンボルが存在することを必要とするので、Eは、それらのプリペンド3バイト（下記参照）と共にADUブロックのすべてのADUを含むのに十分な大きさでなければなりません。"
    },
    {
      "indent": 3,
      "text": "In situations where E is determined per source block (default, specified by the FFCI/FSSI with S = 0, Section 5.1.1.2), E is equal to the size of the largest ADU of this source block plus three (for the prepended 3 bytes, see below). In this case, upon receiving the first FEC repair packet for this source block, since this packet MUST contain a single repair symbol (Section 5.1.3), a receiver determines the E parameter used for this source block.",
      "ja": "Eは、（デフォルトS = 0、セクション5.1.1.2とFFCI / FSSIによって指定された）ソースブロックごとに決定される状況では、Eは3付加のための（最大このソースブロックのADU + 3の大きさに等しいです。バイト、下記を参照）。この場合、このパケットは、単一のリペアシンボル（セクション5.1.3）が含まれなければならないので、このソースブロックの最初のFECリペアパケットを受信すると、受信機は、このソース・ブロックに使用されるEパラメータを決定します。"
    },
    {
      "indent": 3,
      "text": "In situations where E is fixed (specified by the FFCI/FSSI with S = 1, Section 5.1.1.2), then E must be greater or equal to the size of the largest ADU of this source block plus three (for the prepended 3 bytes, see below). If this is not the case, an error is returned. How to handle this error is use-case specific (e.g., a larger E parameter may be communicated to the receivers in an updated FFCI message, using an appropriate mechanism) and is not considered by this specification.",
      "ja": "Eが固定されている状況では（S = 1とFFCI / FSSIによって指定された、セクション5.1.1.2）は、次いで、Eは付加3バイト分（最大このソースブロックのADU +3のサイズ以上でなければなりません、 下記参照）。そうでない場合は、エラーが返されます。どのようにこのエラーを処理すること（例えば、より大きなEパラメータが適切なメカニズムを使用して、更新されたFFCIメッセージに受信機に伝達することができる）ユースケース固有のものであり、本明細書によって考慮されません。"
    },
    {
      "indent": 3,
      "text": "The ADU block is always encoded as a single source block. There are a total of B <= max_B ADUs in this ADU block. For the ADU i, with 0 <= i <= B-1, 3 bytes are prepended (Figure 2):",
      "ja": "ADUブロックは常に単一のソースブロックとして符号化されます。このADUブロックにおけるB <= MAX_BのADUの合計があります。 ADU I、0 <= iが<= B-1、3つのバイトが付加されている（図2）。"
    },
    {
      "indent": 3,
      "text": "o The first byte, F[i] (Flow ID), contains the integer identifier associated to the source ADU flow to which this ADU belongs. It is assumed that a single byte is sufficient, or said differently, that no more than 256 flows will be protected by a single instance of FECFRAME.",
      "ja": "最初のバイトのO、F [i]が（フローID）、このADUが属するソースADUフローに関連付けられた整数の識別子を含みます。シングルバイトで十分であると仮定し、またはこれ以上256以下のフローがFECFRAMEの単一のインスタンスで保護されることを、別々に言われています。"
    },
    {
      "indent": 3,
      "text": "o The following two bytes, L[i] (Length), contain the length of this ADU, in network byte order (i.e., big endian). This length is for the ADU itself and does not include the F[i], L[i], or Pad[i] fields.",
      "ja": "次の2バイト、O、L [i]は（長さ）は、ネットワークバイト順（すなわち、ビッグエンディアン）で、このADUの長さを含みます。この長さは、ADU自体のためであり、F [i]は、L [I]、またはパッドを[I]フィールドは含まれません。"
    },
    {
      "indent": 3,
      "text": "Then, zero padding is added to ADU i (if needed) in field Pad[i], for alignment purposes up to a size of exactly E bytes. The data unit resulting from the ADU i and the F[i], L[i], and Pad[i] fields is called ADU Information (or ADUI). Each ADUI contributes to exactly one source symbol of the source block.",
      "ja": "次いで、ゼロパディングが正確Eバイトのサイズまで位置合わせのために、フィールド・パッド[I]でADU I（必要な場合）に添加します。データADU I及びFから得られた単位[I]、L [i]は、パッド[I]フィールドADU情報（又はADUI）と呼ばれます。各ADUIは、ソースブロックの正確に一つのソースシンボルに貢献しています。"
    },
    {
      "indent": 3,
      "text": "                     Encoding Symbol Length (E)\n< -------------------------------------------------------------- >\n+----+----+-----------------------+------------------------------+\n|F[0]|L[0]|        ADU[0]         |            Pad[0]            |\n+----+----+----------+------------+------------------------------+\n|F[1]|L[1]| ADU[1]   |                         Pad[1]            |\n+----+----+----------+-------------------------------------------+\n|F[2]|L[2]|                    ADU[2]                            |\n+----+----+------+-----------------------------------------------+\n|F[3]|L[3]|ADU[3]|                             Pad[3]            |\n+----+----+------+-----------------------------------------------+\n\\_______________________________  _______________________________/\n                                \\/\n                       simple FEC encoding",
      "raw": true
    },
    {
      "indent": 3,
      "text": "+----------------------------------------------------------------+\n|                            Repair 4                            |\n+----------------------------------------------------------------+\n.                                                                .\n.                                                                .\n+----------------------------------------------------------------+\n|                            Repair 7                            |\n+----------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 4,
      "text": "Figure 2: Source Block Creation, for Code Rate 1/2 (Equal Number of Source and Repair Symbols, 4 in This Example), and S = 0",
      "ja": "図2：ソースブロックの作成、= 0コードレート1/2（ソースおよびリペアシンボルの等しい数、この例では4）、およびSのための"
    },
    {
      "indent": 3,
      "text": "Note that neither the initial 3 bytes nor the optional padding are sent over the network. However, they are considered during FEC encoding. It means that a receiver who lost a certain FEC source packet (e.g., the UDP datagram containing this FEC source packet) will be able to recover the ADUI if FEC decoding succeeds. Thanks to the initial 3 bytes, this receiver will get rid of the padding (if any) and identify the corresponding ADU flow.",
      "ja": "最初の3つのバイトでもオプションのパディングでもないが、ネットワークを介して送信されることに注意してください。しかし、それらはFEC符号化時に考慮されています。これは、特定のFECソースパケットが失われた受信機は、（例えば、このFECソースパケットを含むUDPデータグラム）はFEC復号化が成功した場合ADUIを回復することができるであろうことを意味します。最初の3バイトのおかげで、この受信機は、詰め物を取り除く（もしあれば）と、対応するADUのフローを識別します。"
    },
    {
      "indent": 0,
      "text": "5. LDPC-Staircase FEC Scheme for Arbitrary ADU Flows",
      "section_title": true,
      "ja": "任意のADU 5. LDPC-階段FECスキームフロー"
    },
    {
      "indent": 0,
      "text": "5.1. Formats and Codes",
      "section_title": true,
      "ja": "5.1。フォーマットとコード"
    },
    {
      "indent": 0,
      "text": "5.1.1. FEC Framework Configuration Information",
      "section_title": true,
      "ja": "5.1.1。 FECフレームワークの設定情報"
    },
    {
      "indent": 3,
      "text": "The FEC Framework Configuration Information (or FFCI) includes information that MUST be communicated between the sender and receiver(s). More specifically, it enables the synchronization of the FECFRAME sender and receiver instances. It includes both mandatory elements and scheme-specific elements, as detailed below.",
      "ja": "FECフレームワークの設定情報（又はFFCI）送信者と受信者（複数可）との間で通信されなければならない情報を含んでいます。具体的には、FECFRAMEの送信者と受信者のインスタンスの同期を可能にします。これは、以下に詳述するように、必須の要素とスキーム固有の要素の両方を含みます。"
    },
    {
      "indent": 0,
      "text": "5.1.1.1. Mandatory Information",
      "section_title": true,
      "ja": "5.1.1.1。表示義務のある情報"
    },
    {
      "indent": 3,
      "text": "o FEC Encoding ID: the value assigned to this fully specified FEC scheme MUST be 7, as assigned by IANA (Section 8).",
      "ja": "FEC符号化ID（O）IANA（セクション8）によって割り当てられた、この完全に指定されたFECスキームに割り当てられた値は、7でなければなりません。"
    },
    {
      "indent": 3,
      "text": "When SDP is used to communicate the FFCI, this FEC Encoding ID is carried in the 'encoding-id' parameter.",
      "ja": "SDPはFFCIを通信するために使用される場合、このFEC符号化IDは、「符号化ID」パラメータで運ばれます。"
    },
    {
      "indent": 0,
      "text": "5.1.1.2. FEC Scheme-Specific Information",
      "section_title": true,
      "ja": "5.1.1.2。 FECスキーム固有の情報"
    },
    {
      "indent": 3,
      "text": "The FEC Scheme-Specific Information (FSSI) includes elements that are specific to the present FEC scheme. More precisely:",
      "ja": "FECスキーム固有の情報（FSSI）は、本FECスキームに固有の要素を含みます。より正確に："
    },
    {
      "indent": 3,
      "text": "o PRNG seed (seed): a non-negative 32-bit integer used as the seed of the Pseudo-Random Number Generator, as defined in [RFC5170].",
      "ja": "O PRNGシード（種）：疑似乱数生成器のシードとして使用される非負の32ビット整数、[RFC5170]で定義されます。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): a non-negative integer that indicates either the length of each encoding symbol in bytes (strict mode, i.e., if S = 1) or the maximum length of any encoding symbol (i.e., if S = 0).",
      "ja": "Oエンコーディングシンボル長（E）のいずれかのバイト内の各符号化シンボルの長さを示している非負整数（厳密なモード、すなわち、もしS = 1）、または任意の符号化シンボルの最大長さ（すなわち、S = 0の場合）。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: when set to 1, this flag indicates that the E parameter is the actual encoding symbol length value for each block of the session (unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP). When set to 0, this flag indicates that the E parameter is the maximum encoding symbol length value for each block of the session (unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP).",
      "ja": "O厳格な（S）フラグを1に設定すると、このフラグは、そうでなければ更新FFCIによって通知されない限り、この可能性はユースケースによって考慮された場合にEパラメータが（セッションの各ブロックの実際の符号化シンボル長の値であることを示しまたはCDP）。 0に設定すると、このフラグは、（この可能性は、ユースケースやCDPによって考慮された場合にそうでない場合、更新FFCIによって通知された場合を除く）Eパラメータは、セッションの各ブロックの最大の符号化シンボルの長さの値であることを示しています。"
    },
    {
      "indent": 3,
      "text": "o N1 minus 3 (n1m3): an integer between 0 (default) and 7, inclusive. The number of \"1s\" per column in the left side of the parity check matrix, N1, is then equal to N1m3 + 3, as specified in [RFC5170].",
      "ja": "N1 Oマイナス3（n1m3）：0（デフォルト）と7の間の整​​数、包括。 [RFC5170]で指定されるように、パリティ検査行列の左側の列当たり「1」の数、N1は、N1m3 + 3に等しいです。"
    },
    {
      "indent": 3,
      "text": "These elements are required both by the sender (LDPC-Staircase encoder) and the receiver(s) (LDPC-Staircase decoder).",
      "ja": "これらの要素は、送信者（LDPC-階段エンコーダ）と受信機（複数可）（LDPC-階段デコーダ）の両方によって必要とされます。"
    },
    {
      "indent": 3,
      "text": "When SDP is used to communicate the FFCI, this FEC scheme-specific information is carried in the 'fssi' parameter in textual representation as specified in [RFC6364]. For instance:",
      "ja": "SDPはFFCIを通信するために使用される場合、[RFC6364]で指定されるように、このFECスキーム固有の情報は、テキスト表現で「fssi」パラメータで運ばれます。例えば："
    },
    {
      "indent": 3,
      "text": "fssi=seed:1234,E:1400,S:0,n1m3:0",
      "ja": "fssi =種子：1234 E：1400 S：0、n1m3：0"
    },
    {
      "indent": 3,
      "text": "If another mechanism requires the FSSI to be carried as an opaque octet string (for instance, after a Base64 encoding), the encoding format consists of the following 7 octets:",
      "ja": "別の機構は、（例えば、Base64エンコードの後に​​）不透明なオクテットストリングとして実施されるFSSIを必要とする場合、符号化フォーマットは、以下の7つのオクテットで構成されています。"
    },
    {
      "indent": 3,
      "text": "o PRNG seed (seed): 32-bit field.",
      "ja": "O PRNGシード（種）：32ビットフィールド。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): 16-bit field.",
      "ja": "Oエンコーディングシンボル長（E）：16ビットフィールド。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: 1-bit field.",
      "ja": "O厳格な（S）フラグ：1ビットのフィールド。"
    },
    {
      "indent": 3,
      "text": "o Reserved: a 4-bit field that MUST be set to zero.",
      "ja": "O予約：ゼロに設定されなければならない4ビットのフィールド。"
    },
    {
      "indent": 3,
      "text": "o N1m3 parameter (n1m3): 3-bit field.",
      "ja": "O N1m3パラメータ（n1m3）：3ビットのフィールド。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                      PRNG seed (seed)                         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Encoding Symbol Length (E)  |S| resvd | n1m3|\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 3: FSSI Encoding Format",
      "ja": "図3：FSSIエンコード形式"
    },
    {
      "indent": 0,
      "text": "5.1.2. Explicit Source FEC Payload ID",
      "section_title": true,
      "ja": "5.1.2。明示的なソースFECペイロードID"
    },
    {
      "indent": 3,
      "text": "A FEC source packet MUST contain an Explicit Source FEC Payload ID that is appended to the end of the packet as illustrated in Figure 4.",
      "ja": "FECソースパケットは、図4に示すように、パケットの末尾に付加される明示的なソースFECペイロードIDを含まなければなりません。"
    },
    {
      "indent": 18,
      "text": "+--------------------------------+\n|           IP Header            |\n+--------------------------------+\n|        Transport Header        |\n+--------------------------------+\n|              ADU               |\n+--------------------------------+\n| Explicit Source FEC Payload ID |\n+--------------------------------+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 4: Structure of a FEC Source Packet with the Explicit Source FEC Payload ID",
      "ja": "図4：明示的なソースFECペイロードIDとFECソースパケットの構造"
    },
    {
      "indent": 3,
      "text": "More precisely, the Explicit Source FEC Payload ID is composed of the following fields (Figure 5):",
      "ja": "より正確には、明示的なソースFECペイロードIDは、以下のフィールド（図5）から構成されています。"
    },
    {
      "indent": 3,
      "text": "o Source Block Number (SBN) (16-bit field): this field identifies the source block to which this FEC source packet belongs.",
      "ja": "Oソースブロック番号（SBN）（16ビットのフィールド）：このフィールドは、このFECソースパケットが属するソースブロックを識別する。"
    },
    {
      "indent": 3,
      "text": "o Encoding Symbol ID (ESI) (16-bit field): this field identifies the source symbol contained in this FEC source packet. This value is such that 0 <= ESI <= k - 1 for source symbols.",
      "ja": "O符号化シンボルID（ESI）（16ビットのフィールド）：このフィールドは、このFECソースパケットに含まれるソースシンボルを識別する。ソースシンボルの1  - この値は、0 <= ESI <= kのことです。"
    },
    {
      "indent": 3,
      "text": "o Source Block Length (k) (16-bit field): this field provides the number of source symbols for this source block, i.e., the k parameter.",
      "ja": "Oソースブロック長（K）（16ビットのフィールド）：このフィールドは、このソースブロックのソースシンボル、すなわち数、kパラメータを提供します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Source Block Length (k)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 5: Source FEC Payload ID Encoding Format",
      "ja": "図5：ソースFECペイロードIDエンコード形式"
    },
    {
      "indent": 0,
      "text": "5.1.3. Repair FEC Payload ID",
      "section_title": true,
      "ja": "5.1.3。 FECペイロードIDを修復"
    },
    {
      "indent": 3,
      "text": "A FEC repair packet MUST contain a Repair FEC Payload ID that is\nprepended to the repair symbol(s) as illustrated in Figure 6.  There\nMUST be a single repair symbol per FEC repair packet.\n               +--------------------------------+\n               |           IP Header            |\n               +--------------------------------+\n               |        Transport Header        |\n               +--------------------------------+\n               |     Repair FEC Payload ID      |\n               +--------------------------------+\n               |         Repair Symbol          |\n               +--------------------------------+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 6: Structure of a FEC Repair Packet with\n             the Repair Payload ID",
      "raw": true
    },
    {
      "indent": 3,
      "text": "More precisely, the Repair FEC Payload ID is composed of the following fields (Figure 7):",
      "ja": "より正確には、リペアFECペイロードIDは、以下のフィールド（図7）から構成されています。"
    },
    {
      "indent": 3,
      "text": "o Source Block Number (SBN) (16-bit field): this field identifies the source block to which the FEC repair packet belongs.",
      "ja": "Oソースブロック番号（SBN）（16ビットのフィールド）：このフィールドは、FECリペアパケットが属するソースブロックを識別する。"
    },
    {
      "indent": 3,
      "text": "o Encoding Symbol ID (ESI) (16-bit field): this field identifies the repair symbol contained in this FEC repair packet. This value is such that k <= ESI <= n - 1 for repair symbols.",
      "ja": "O符号化シンボルID（ESI）（16ビットのフィールド）：このフィールドは、このFECリペアパケットに含まれるリペアシンボルを識別する。リペアシンボルの1  - この値は、K <= ESI <= nであることです。"
    },
    {
      "indent": 3,
      "text": "o Source Block Length (k) (16-bit field): this field provides the number of source symbols for this source block, i.e., the k parameter.",
      "ja": "Oソースブロック長（K）（16ビットのフィールド）：このフィールドは、このソースブロックのソースシンボル、すなわち数、kパラメータを提供します。"
    },
    {
      "indent": 3,
      "text": "o Number of Encoding Symbols (n) (16-bit field): this field provides the number of encoding symbols for this source block, i.e., the n parameter.",
      "ja": "符号化シンボル（N）のO番号（16ビットのフィールド）：このフィールドは、このソースブロックの符号化シンボル、すなわち数、nパラメータを提供します。"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    Source Block Length (k)    |  Number Encoding Symbols (n)  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 14,
      "text": "Figure 7: Repair FEC Payload ID Encoding Format",
      "ja": "図7：FECペイロードIDのエンコード形式を修復"
    },
    {
      "indent": 0,
      "text": "5.2. Procedures",
      "section_title": true,
      "ja": "5.2。手順"
    },
    {
      "indent": 3,
      "text": "The following procedures apply:",
      "ja": "次の手順が適用されます。"
    },
    {
      "indent": 3,
      "text": "o The source block creation MUST follow the procedures specified in Section 4.3.",
      "ja": "Oソースブロックの作成は、セクション4.3で指定された手順に従わなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The SBN value MUST start with value 0 for the first block of the ADU flow and MUST be incremented by 1 for each new source block. Wrapping to zero will happen for long sessions, after value 2^^16 - 1.",
      "ja": "O SBN値は、ADUの流れの最初のブロックの値0で始まる必要があり、それぞれの新しいソースブロックに対して1だけ増分されなければなりません。 1  - ゼロへのラッピングは値2 ^^ 16の後、長いセッションのために発生します。"
    },
    {
      "indent": 3,
      "text": "o The ESI of encoding symbols MUST start with value 0 for the first symbol and MUST be managed sequentially. The first k values (0 <= ESI <= k - 1) identify source symbols whereas the last n-k values (k <= ESI <= n - 1) identify repair symbols.",
      "ja": "符号化シンボルのESI oを最初のシンボルの値0で始まる必要があり、順次管理されなければなりません。最初のk値（0 <= ESI <= K  -  1）（ -  1、K <= ESI <= n）のリペアシンボルを識別する最後のn-k値は、一方のソースシンボルを識別する。"
    },
    {
      "indent": 3,
      "text": "o The FEC repair packet creation MUST follow the procedures specified in Section 5.1.3.",
      "ja": "O FECリペアパケットの作成は、セクション5.1.3で指定された手順に従わなければなりません。"
    },
    {
      "indent": 0,
      "text": "5.3. FEC Code Specification",
      "section_title": true,
      "ja": "5.3。 FECコードの仕様"
    },
    {
      "indent": 3,
      "text": "The present document inherits from [RFC5170] the specification of the core LDPC-Staircase codes for a packet erasure transmission channel (see Section 1).",
      "ja": "本文書は、[RFC5170]パケット消失伝送路用のコアLDPC-階段コードの仕様（セクション1を参照）から継承します。"
    },
    {
      "indent": 3,
      "text": "Because of the requirement to have exactly one encoding symbol per group, i.e., because G MUST be equal to 1 (Section 4.1), several parts of [RFC5170] are not of use. In particular, this is the case of Section 5.6, \"Identifying the G Symbols of an Encoding Symbol Group\".",
      "ja": "グループごとに1つの符号化シンボルを持っている必要があるため、G 1（セクション4.1）に等しくなければならないので、すなわち、[RFC5170]のいくつかの部分は、使用されません。特に、これは「符号化シンボルグループのG記号の識別」、セクション5.6の場合です。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "The FEC Framework document [RFC6363] provides a comprehensive analysis of security considerations applicable to FEC schemes. Therefore, the present section follows the security considerations section of [RFC6363] and only discusses topics that are specific to the use of LDPC-Staircase codes.",
      "ja": "FECフレームワークドキュメント[RFC6363]はFECスキームに適用されるセキュリティ上の配慮の総合的な分析を提供します。したがって、本項では、[RFC6363]のセキュリティ問題部に追従のみLDPC-階段コードの使用に固有のトピックについて説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. Attacks against the Data Flow",
      "section_title": true,
      "ja": "6.1。データフローに対する攻撃"
    },
    {
      "indent": 0,
      "text": "6.1.1. Access to Confidential Content",
      "section_title": true,
      "ja": "6.1.1。機密コンテンツへのアクセス"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363]. To summarize, if confidentiality is a concern, it is RECOMMENDED that one of the solutions mentioned in [RFC6363] be used, with special considerations",
      "ja": "この文書で指定されたLDPC-階段FECスキームは、[RFC6363]の勧告を変更しません。機密性が懸念をされている場合は、特別な配慮で、[RFC6363]で述べた解決策の一つが使用することをお勧めしますが、要約すると"
    },
    {
      "indent": 3,
      "text": "to the way this solution is applied (e.g., Is encryption applied before or after FEC protection? Is it within the end-system or in a middlebox?), to the operational constraints (e.g., performing FEC decoding in a protected environment may be complicated or even impossible) and to the threat model.",
      "ja": "この解決策が適用される方法に（例えば、暗号化は、FEC保護の前または後に適用されていますか。それは、エンド・システム内またはミドルでますか？）、保護された環境でFEC復号を行う運用制約（例えば、複雑になるにまたは不可能）と脅威モデルに。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Content Corruption",
      "section_title": true,
      "ja": "6.1.2。コンテンツ汚職"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363]. To summarize, it is RECOMMENDED that one of the solutions mentioned in [RFC6363] be used on both the FEC source and repair packets.",
      "ja": "この文書で指定されたLDPC-階段FECスキームは、[RFC6363]の勧告を変更しません。要約すると、[RFC6363]に記載された解決策の一つは、FECソースおよびリペアパケットの両方に使用することを推奨されています。"
    },
    {
      "indent": 0,
      "text": "6.2. Attacks against the FEC Parameters",
      "section_title": true,
      "ja": "6.2。 FECパラメータに対する攻撃"
    },
    {
      "indent": 3,
      "text": "The FEC scheme specified in this document defines parameters that can be the basis of several attacks. More specifically, the following parameters of the FFCI may be modified by an attacker (Section 5.1.1.2):",
      "ja": "この文書で指定されたFECスキームは、いくつかの攻撃の基礎となり得るパラメータを定義します。より具体的には、FFCIの次のパラメータは、攻撃者（セクション5.1.1.2）によって修飾することができます。"
    },
    {
      "indent": 3,
      "text": "o FEC Encoding ID: changing this parameter leads the receiver to consider a different FEC scheme, which enables an attacker to create a Denial of Service (DoS).",
      "ja": "FEC符号化ID○：このパラメータを変更すると、サービス拒否（DoS攻撃）を作成するには、攻撃者を可能に異なるFECスキームを検討するために受信機をリードしています。"
    },
    {
      "indent": 3,
      "text": "o Encoding symbol length (E): setting this E parameter to a value smaller than the valid one enables an attacker to create a DoS since the repair symbols and certain source symbols will be larger than E, which is an incoherency for the receiver. Setting this E parameter to a value larger than the valid one has similar impacts when S=1 since the received repair symbol size will be smaller than expected. Contrarily, it will not lead to any incoherency when S=0 since the actual symbol length value for the block is determined by the size of any received repair symbol, as long as this value is smaller than E. However, setting this E parameter to a larger value may have impacts on receivers that pre-allocate memory space in advance to store incoming symbols.",
      "ja": "シンボル長（E）をコードするO：リペアシンボルと特定のソースシンボルを受信するためのインコヒーレントであるE、より大きくなるので、有効なものは、DOSを作成する攻撃を可能にするよりも小さい値にこのEのパラメータを設定します。受信されたリペアシンボルのサイズが予想よりも小さくなるので、S = 1の場合に有効なものよりも大きな値にこのEパラメータを設定すると、同様の影響を有します。ブロックの実際のシンボル長の値がこのEパラメータを設定する限り、この値はしかし、E.未満であるように、任意の受信されたリペアシンボルの大きさによって決定されるので、これに対して、それは、任意の非干渉性S = 0をもたらさないであろう大きな値は、入力シンボルを格納するために、事前にメモリ空間を予め割り当てることを受信機に影響を与えることができます。"
    },
    {
      "indent": 3,
      "text": "o Strict (S) flag: flipping this S flag from 0 to 1 (i.e., E is now considered as a strict value) enables an attacker to mislead the receiver if the actual symbol size varies over different source blocks. Flipping this S flag from 1 to 0 has no major consequences unless the receiver requires to have a fixed E value (e.g., because the receiver pre-allocates memory space).",
      "ja": "O厳格な（S）フラグ：実際のシンボル・サイズが異なるソースブロックにわたって変化する場合、これは0から1にフラグをS反転（すなわち、Eは現在厳密値として考えられている）受信機を欺くために、攻撃者を可能にします。これを反転する（受信機がメモリスペースを事前に割り当てているため、例えば）受信機は、固定E値を有することが必要でない限り、1から0へのフラグが重大な影響を有していない、S。"
    },
    {
      "indent": 3,
      "text": "o N1 minus 3 (n1m3): changing this parameter leads the receiver to consider a different code, which enables an attacker to create a DoS.",
      "ja": "N1 Oマイナス3（n1m3）：このパラメータを変更すると、DoS攻撃を作成するには、攻撃者を可能に異なるコードを、検討する受信機をリードしています。"
    },
    {
      "indent": 3,
      "text": "Therefore, it is RECOMMENDED that security measures be taken to guarantee the FFCI integrity, as specified in [RFC6363]. How to achieve this depends on the way the FFCI is communicated from the sender to the receiver, which is not specified in this document.",
      "ja": "したがって、[RFC6363]で指定されているセキュリティ対策は、FFCIの整合性を保証するために取られることが推奨されます。これを達成する方法FFCIが送信者から、この文書で指定されていない受信機に伝達される方法に依存します。"
    },
    {
      "indent": 3,
      "text": "Similarly, attacks are possible against the Explicit Source FEC Payload ID and Repair FEC Payload ID: by modifying the Source Block Number (SBN), or the Encoding Symbol ID (ESI), or the Source Block Length (k), or the Number Encoding Symbols (n), an attacker can easily corrupt the block identified by the SBN. Other consequences, that are use-case and/or CDP dependent, may also happen. It is therefore RECOMMENDED that security measures be taken to guarantee the FEC source and repair packets as stated in [RFC6363].",
      "ja": "同様に、攻撃が明示ソースFECペイロードIDに対して可能であり、FECペイロードIDを修復：ソースブロック番号（SBN）、又は符号化シンボルID（ESI）、またはソースブロック長（K）、又は数エンコーディングを変更することによって記号（n）は、攻撃者が容易に破損ブロックがSBNにより同定することができます。ユースケースおよび/またはCDP依存している他の結果は、また起こるかもしれません。したがって、セキュリティ対策は、[RFC6363]で述べたように、FECソースおよびリペアパケットを保証するために取られることが推奨されます。"
    },
    {
      "indent": 0,
      "text": "6.3. When Several Source Flows Are to Be Protected Together",
      "section_title": true,
      "ja": "6.3。複数のソース・フローは、一緒に保護される場合には"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363].",
      "ja": "この文書で指定されたLDPC-階段FECスキームは、[RFC6363]の勧告を変更しません。"
    },
    {
      "indent": 0,
      "text": "6.4. Baseline Secure FEC Framework Operation",
      "section_title": true,
      "ja": "6.4。ベースラインセキュアFECフレームワークの操作"
    },
    {
      "indent": 3,
      "text": "The LDPC-Staircase FEC Scheme specified in this document does not change the recommendations of [RFC6363] concerning the use of the IPsec/ESP security protocol as a mandatory to implement (but not mandatory to use) security scheme. This is well suited to situations where the only insecure domain is the one over which the FEC Framework operates.",
      "ja": "この文書で指定されたLDPC-階段FECスキームは、セキュリティ・スキームを実装する（しかし必須ではない使用する）必須とのIPsec / ESPセキュリティプロトコルの使用に関する[RFC6363]の勧告を変更しません。これは、安全でないドメインがFECフレームワークが動作する1である状況に適しています。"
    },
    {
      "indent": 0,
      "text": "7. Operations and Management Considerations",
      "section_title": true,
      "ja": "7.運用と管理に関する注意事項"
    },
    {
      "indent": 3,
      "text": "The FEC Framework document [RFC6363] provides a comprehensive analysis of operations and management considerations applicable to FEC schemes. Therefore, the present section only discusses topics that are specific to the use of LDPC-Staircase codes as specified in this document.",
      "ja": "FECフレームワークドキュメント[RFC6363]はオペレーションとFEC方式に適用可能な管理の考慮の包括的な分析を提供します。したがって、本項では、この文書で指定されているLDPC-階段コードの使用に固有のトピックについて説明します。"
    },
    {
      "indent": 0,
      "text": "7.1. Operational Recommendations",
      "section_title": true,
      "ja": "7.1。運用勧告"
    },
    {
      "indent": 3,
      "text": "LDPC-Staircase codes have excellent erasure recovery capabilities with large source blocks, close to ideal MDS codes. For instance, independently of FECFRAME, let us consider a source block of size k=1024 symbols, CR=2/3 (i.e., 512 repair symbols are added), N1=7, G=1, a transmission scheme where all the symbols are sent in a random order, and a hybrid ITerative/Maximum Likelihood (IT/ML) decoder (see below). An ideal MDS code with code rate 2/3 can recover from erasures up to a 33.33% channel loss rate. With LDPC-Staircase codes, the average overhead amounts to 0.237% (i.e., receiving 2.43 symbols in addition to k, which corresponds to a 33.18% channel loss rate, enables a successful decoding with a probability 0.5), and an overhead of 1.46% (i.e., receiving 15 symbols in addition to k, which corresponds to a 32.36% channel loss rate) is sufficient to reduce the probability that decoding fails down to 8.2*10^^-5. This is why these codes are a good solution to protect a single high bitrate source flow as in [Matsuzono10] or to protect globally several mid-rate source flows within a single FECFRAME instance: in both cases, the source block size can be assumed to be equal to a few hundred (or more) source symbols.",
      "ja": "LDPC-階段コードは、理想的なMDSコードの近くに大きなソースブロック、優れた消去回復能力を持っています。例えば、独立FECFRAMEの、私たちはサイズk = 1024個のシンボルのソースブロックを考慮し、CR = 2/3（すなわち、512個のリペアシンボルが追加される）、N1 = 7、G = 1、送信方式ここですべてのシンボルせランダムな順序で送信され、及びハイブリッド反復/最大尤度（IT / ML）デコーダ（下記参照）されています。符号化率2/3を有する理想的なMDSコードは、33.33パーセントチャネル損失率まで消失から回復することができます。 LDPC-階段符号、0.237パーセントの平均オーバーヘッド量の（すなわち、33.18パーセントチャネル損失率に対応するkに加えて2.43シンボルを受信する、確率0.5を有する正常な復号を可能）、及び1.46パーセントのオーバーヘッド5  - （すなわち、32.36パーセントチャネル損失率に対応する、kに加えて、15個のシンボルを受信する）、復号が8.2×10 ^^まで失敗する確率を減少させるのに十分です。これらのコードは、単一FECFRAMEインスタンス内を流れる[Matsuzono10]またはグローバルいくつかの中間速度ソースを保護するように単一の高ビットレートのソース・フローを保護するための良い解決策である理由である。両方の場合において、ソースブロックサイズがあると仮定することができます数百（またはそれ以上）のソースシンボルに等しくなります。"
    },
    {
      "indent": 3,
      "text": "LDPC-Staircase codes are also a good solution whenever the processing load at a software encoder or decoder must be kept to a minimum. This is true when the decoder uses an IT decoding algorithm, an ML algorithm (we use a Gaussian Elimination as the ML algorithm) when carefully implemented, or a mixture of both techniques, which is the recommended solution [Cunche08][CunchePHD10][LDPC-codec-OpenFEC]. Let us consider the same conditions as above (k=1024 source symbols, CR=2/3, N1=7, G=1), with encoding symbols of size 1024 bytes. With an Intel Xeon 5120/1.86 GHz workstation running Linux/64 bits, the average decoding speed is between 1.78 Gbps (overhead of 2 symbols in addition to k, corresponding to a very bad channel with a 33.20% loss rate, close to the theoretical decoding limit, where ML decoding is required) and 3.91 Gbps (corresponding to a good channel with a 5% loss rate only, where IT decoding is sufficient). Under the same conditions, on a Samsung Galaxy SII smartphone (GT-I9100P model, featuring an ARM Cortex-A9/1.2 GHz processor and running Android 2.3.4), the decoding speed is between 397 Mbps (bad channel with a 33.20% loss rate, close to the theoretical decoding limit) and 813 Mbps (good channel with a 5% loss rate only).",
      "ja": "ソフトウェア・エンコーダまたはデコーダの処理負荷が最小に保たれなければならないたびにLDPC-階段コードも良い解決策です。デコーダは、推奨される解決策[Cunche08] [CunchePHD10] [LDPCあるIT復号アルゴリズム、MLアルゴリズム（我々はMLアルゴリズムとしてガウス消去を使用）を注意深く実装、またはその両方の技法の混合物を使用する場合、これが真であります-codec-OpenFEC]。米国サイズ1024バイトの符号化シンボルを持つ（K = 1024のソースシンボル、CR = 2/3と、N1 = 7、G = 1）、上記と同様の条件を考えます。加えて、2つのシンボルのIntel Xeon 5120 / 1.86 GHzのワークステーションは、Linux / 64ビットを実行して、平均復号速度が1.78 Gbpsの間である（オーバーヘッドは、理論的に近い33.20パーセントの損失率と非常に悪いチャネルに対応し、kに復号ML復号化が必要とされる限界）及び3.91 Gbpsの（それは復号わずか5％の損失率と良好なチャネルに対応するのに十分です）。同じ条件下で、三星ギャラクシーSIIスマートフォン（GT-I9100Pモデル、アームのCortex-A9 / 1.2 GHzプロセッサを搭載し、Androidの2.3.4を実行している）に、復号速度は、33.20パーセントの損失で397 Mbpsの（悪いチャネルとの間であります理論復号限界に近い速度）および813 Mbpsの（わずか5％の損失率と良好なチャネル）。"
    },
    {
      "indent": 3,
      "text": "As the source block size decreases, the erasure recovery capabilities of LDPC codes in general also decrease. In the case of LDPC-Staircase codes, in order to limit this phenomenon, it is recommended to use a value of the N1 parameter at least equal to 7 (e.g., experiments carried out in [Matsuzono10] use N1=7 if k=170 symbols, and N1=5 otherwise). For instance, independently of FECFRAME, with a source block of size k=256 symbols, CR=2/3 (i.e., 128 repair symbols are added), N1=7, and G=1, the average overhead amounts to 0.706% (i.e., receiving 1.8 symbols in addition to k enables a successful decoding with a probability 0.5), and an overhead of 5.86% (i.e., receiving 15 symbols in addition to k) is sufficient to reduce the decoding failure probability to 5.9*10^^-5.",
      "ja": "ソースブロックのサイズが減少するにつれて、一般にLDPC符号の消去回復能力も低下します。 LDPC-階段符号の場合には、この現象を制限するためには、N1 = 7であれば、K = 170を使用して[Matsuzono10]で行わ7（例えば、実験に少なくとも等しいN1パラメータの値を使用することが推奨されますシンボル、およびN1 = 5それ以外）。例えば、独立FECFRAMEの、サイズk = 256のシンボル、CR = 2/3（すなわち、128個のリペアシンボルが追加される）、N1 = 7、およびG = 1のソースブロックと、平均オーバーヘッドは0.706パーセントに達します（すなわち、（すなわち、kに加えて、15個のシンボルを受信する））確率0.5で正常な復号を可能Kに加えて、1.8のシンボルを受信し、そして5.86パーセントのオーバーヘッドは5.9 * 10に復号失敗の確率を減少させるのに十分である^^ -5。"
    },
    {
      "indent": 3,
      "text": "The processing load also decreases with the source block size. For instance, under these conditions (k=256 source symbols, CR=2/3, N1=7, and G=1), with encoding symbols of size 1024 bytes, on a Samsung Galaxy SII smartphone, the decoding speed is between 518 Mbps (bad channel) and 863 Mbps (good channel with a 5% loss rate only).",
      "ja": "処理負荷は、ソースブロックサイズと共に減少します。例えば、これらの条件下で（K = 256個のソースシンボル、CR = 2/3と、N1 = 7、およびG = 1）、サイズの符号化シンボル1024のバイトと、三星ギャラクシーSIIのスマートフォンで、復号速度が518の間でありますMbpsの（悪いチャネル）と863 Mbpsの（わずか5％の損失率と良好なチャネル）。"
    },
    {
      "indent": 3,
      "text": "With very small source blocks (e.g., a few tens of symbols), using for instance Reed-Solomon codes [SIMPLE_RS] or 2D parity check codes may be more appropriate.",
      "ja": "非常に小さなソースブロック（シンボルの例えば、数十）と、[SIMPLE_RS]または2Dパリティ検査符号、例えば、リードソロモン符号を使用することがより適切であり得ます。"
    },
    {
      "indent": 3,
      "text": "The way the FEC repair packets are transmitted is of high importance. A good strategy, that works well for any kind of channel loss model, consists in sending FEC repair packets in random order (rather than in sequence) while FEC source packets are sent first and in sequence. Sending all packets in a random order is another possibility, but it requires that all repair symbols for a source block be produced first, which adds some extra delay at a sender.",
      "ja": "FECリペアパケットが送信されている方法は非常に重要です。チャネル損失モデルの任意の種類に適しています良い戦略は、FECソースパケットは、第1及びシーケンスで送信している間（むしろ配列に比べて）ランダムな順序でFECリペアパケットを送信することからなります。ランダムな順序ですべてのパケットを送信すると、別の可能性であるが、それは、送信側でいくつかの余分な遅延を追加した、ソースブロックのすべてのリペアシンボルが最初に生成されている必要があります。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document registers one value in the \"FEC Framework (FECFRAME) FEC Encoding IDs\" registry [RFC6363] as follows:",
      "ja": "次のようにこの文書では、「FECフレームワーク（FECFRAME）FEC符号化IDが」レジストリ[RFC6363]で一つの値を登録します。"
    },
    {
      "indent": 3,
      "text": "o 7 refers to the Simple LDPC-Staircase FEC Scheme for Arbitrary Packet Flows, as defined in Section 5 of this document.",
      "ja": "O 7は、任意のパケットのための単純なLDPC-階段FECスキームを指し、このドキュメントのセクション5で定義されるように、フロー。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgments",
      "section_title": true,
      "ja": "9.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors want to thank K. Matsuzono, J. Detchart, and H. Asaeda for their contributions in evaluating the use of LDPC-Staircase codes in the context of FECFRAME [Matsuzono10].",
      "ja": "著者らは、[Matsuzono10] FECFRAMEの文脈におけるLDPC-階段コードの使用を評価する際に貢献するためK. Matsuzono、J. Detchart、及びH. Asaedaに感謝したいです。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10.参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5170] Roca, V., Neumann, C., and D. Furodet, \"Low Density Parity Check (LDPC) Staircase and Triangle Forward Error Correction (FEC) Schemes\", RFC 5170, June 2008.",
      "ja": "[RFC5170]ロカ、V.、ノイマン、C.、およびD. Furodet、 \"低密度パリティチェック（LDPC）階段とトライアングル前方誤り訂正（FEC）スキーム\"、RFC 5170、2008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6363] Watson, M., Begen, A., and V. Roca, \"Forward Error Correction (FEC) Framework\", RFC 6363, October 2011.",
      "ja": "[RFC6363]ワトソン、M.、Begen、A.、およびV.ロカ、 \"前方誤り訂正（FEC）フレームワーク\"、RFC 6363、2011年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6364] Begen, A., \"Session Description Protocol Elements for the Forward Error Correction (FEC) Framework\", RFC 6364, October 2011.",
      "ja": "[RFC6364] Begen、A.、 \"前方誤り訂正のためのセッション記述プロトコル要素（FEC）フレームワーク\"、RFC 6364、2011年10月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Cunche08] Cunche, M. and V. Roca, \"Optimizing the Error Recovery Capabilities of LDPC-Staircase Codes Featuring a Gaussian Elimination Decoding Scheme\", 10th IEEE International Workshop on Signal Processing for Space Communications (SPSC'08), October 2008.",
      "ja": "[Cunche08] Cunche、M.およびV.ロカ、宇宙通信のための信号処理第10回IEEE国際ワークショップ（SPSC'08）、2008年10月「ガウス消去復号法を搭載LDPC-階段符号のエラーリカバリ機能の最適化」。"
    },
    {
      "indent": 3,
      "text": "[CunchePHD10] Cunche, M., \"High performances AL-FEC codes for the erasure channel : variation around LDPC codes\", PhD dissertation (in French) (http:// tel.archives-ouvertes.fr/tel-00451336/en/), June 2010.",
      "ja": "【CunchePHD10] Cunche、M.、 \"高性能消去チャネルに対するAL-FECコード：LDPC符号の周りの変化\"（フランス語）、博士論文（HTTP：// tel.archives-ouvertes.fr/tel-00451336/en /）、2010年6月。"
    },
    {
      "indent": 3,
      "text": "[LDPC-codec] Cunche, M., Roca, V., Neumann, C., and J. Laboure, \"LDPC-Staircase/LDPC-Triangle Codec Reference Implementation\", INRIA Rhone-Alpes and STMicroelectronics, <http://planete-bcast.inrialpes.fr/>.",
      "ja": "[LDPC-コーデック] Cunche、M.、ロカ、V.、ノイマン、C.、およびJ.ラブレ、 \"LDPC-階段/ LDPC-トライアングルコーデックリファレンス実装\"、INRIAローヌとSTマイクロエレクトロニクス、<HTTP：// planete-bcast.inrialpes.fr/>。"
    },
    {
      "indent": 3,
      "text": "[LDPC-codec-OpenFEC] \"The OpenFEC project\", <http://openfec.org/>.",
      "ja": "[LDPC-コーデック-OpenFEC] \"OpenFECプロジェクト\"、<http://openfec.org/>。"
    },
    {
      "indent": 3,
      "text": "[Matsuzono10] Matsuzono, K., Detchart, J., Cunche, M., Roca, V., and H. Asaeda, \"Performance Analysis of a High-Performance Real-Time Application with Several AL-FEC Schemes\", 35th Annual IEEE Conference on Local Computer Networks (LCN 2010), October 2010.",
      "ja": "【Matsuzono10] Matsuzono、K.、Detchart、J.、Cunche、M.、ロカ、V.、およびH. Asaeda、 \"いくつかのAL-FECスキームと高性能の特性解析リアルタイムアプリケーション\"、第35回年次ローカルコンピュータネットワーク上のIEEE会議（LCN 2010）、2010年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3453] Luby, M., Vicisano, L., Gemmell, J., Rizzo, L., Handley, M., and J. Crowcroft, \"The Use of Forward Error Correction (FEC) in Reliable Multicast\", RFC 3453, December 2002.",
      "ja": "[RFC3453]ルビー、M.、Vicisano、L.、Gemmell、J.、リゾー、L.、ハンドレー、M.、およびJ.クロウクロフト、 \"信頼できるマルチキャストの前方誤り訂正（FEC）の使用\"、RFC 3453 、2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5052] Watson, M., Luby, M., and L. Vicisano, \"Forward Error Correction (FEC) Building Block\", RFC 5052, August 2007.",
      "ja": "[RFC5052]ワトソン、M.、ルビー、M.、およびL. Vicisano、 \"前方誤り訂正（FEC）ビルディングブロック\"、RFC 5052、2007年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5053] Luby, M., Shokrollahi, A., Watson, M., and T. Stockhammer, \"Raptor Forward Error Correction Scheme for Object Delivery\", RFC 5053, October 2007.",
      "ja": "[RFC5053]ルビー、M.、ショクロラヒ、A.、ワトソン、M.、およびT. Stockhammer、 \"オブジェクトの配信のためのラプター前方誤り訂正方式\"、RFC 5053、2007年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5510] Lacan, J., Roca, V., Peltotalo, J., and S. Peltotalo, \"Reed-Solomon Forward Error Correction (FEC) Schemes\", RFC 5510, April 2009.",
      "ja": "[RFC5510]ラカン、J.、ロカ、V.、Peltotalo、J.、およびS. Peltotalo、 \"リードソロモン前方誤り訂正（FEC）スキーム\"、RFC 5510、2009年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5740] Adamson, B., Bormann, C., Handley, M., and J. Macker, \"NACK-Oriented Reliable Multicast (NORM) Transport Protocol\", RFC 5740, November 2009.",
      "ja": "[RFC5740]アダムソン、B.、ボルマン、C.、ハンドレー、M.、およびJ. Macker、 \"NACK指向高信頼マルチキャスト（NORM）トランスポートプロトコル\"、RFC 5740、2009年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5775] Luby, M., Watson, M., and L. Vicisano, \"Asynchronous Layered Coding (ALC) Protocol Instantiation\", RFC 5775, April 2010.",
      "ja": "[RFC5775]ルビー、M.、ワトソン、M.、およびL. Vicisano、RFC 5775 \"非同期階層は（ALC）プロトコルインスタンス化コーディング\"、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[SIMPLE_RS] Roca, V., Cunche, M., Lacan, J., Bouabdallah, A., and K. Matsuzono, \"Simple Reed-Solomon Forward Error Correction (FEC) Scheme for FECFRAME\", Work in Progress, October 2012.",
      "ja": "【SIMPLE_RS]ロカ、V.、Cunche、M.、ラカン、J.、Bouabdallah、A.、およびK. Matsuzono、 \"FECFRAME簡易リードソロモン前方誤り訂正（FEC）スキーム\" は、進歩、2012年10月作業します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Vincent Roca INRIA 655, av. de l'Europe Inovallee; Montbonnot ST ISMIER cedex 38334 France",
      "ja": "INRIAヴィンセントロカ655、AV。ドゥヨーロッパInovallée。フランス38334 CEDEX MontbonnotセントIsmier"
    },
    {
      "indent": 3,
      "text": "EMail: vincent.roca@inria.fr URI: http://planete.inrialpes.fr/people/roca/",
      "ja": "電子メール：vincent.roca@inria.fr URI：http://planete.inrialpes.fr/people/roca/"
    },
    {
      "indent": 3,
      "text": "Mathieu Cunche INSA-Lyon/INRIA Laboratoire CITI 6 av. des Arts Villeurbanne cedex 69621 France",
      "ja": "マチューCunche INSA-リヨン/ INRIAラボISIC 6 AV。アーツヴィルールバンヌセデックス69621フランス"
    },
    {
      "indent": 3,
      "text": "EMail: mathieu.cunche@inria.fr URI: http://mathieu.cunche.free.fr/",
      "ja": "電子メール：mathieu.cunche@inria.fr URI：http://mathieu.cunche.free.fr/"
    },
    {
      "indent": 3,
      "text": "Jerome Lacan ISAE, Univ. of Toulouse 10 av. Edouard Belin; BP 54032 Toulouse cedex 4 31055 France",
      "ja": "ジェローム・ラカンISAE、大学。 10 BCのトゥールーズ。エドゥアール・ベリン; BP 54032トゥールーズセデックス4 31055フランス"
    },
    {
      "indent": 3,
      "text": "EMail: jerome.lacan@isae.fr URI: http://personnel.isae.fr/jerome-lacan/",
      "ja": "電子メール：jerome.lacan@isae.fr URI：http://personnel.isae.fr/jerome-lacan/"
    }
  ]
}