{
  "title": {
    "text": "RFC 6242 - Using the NETCONF Protocol over Secure Shell (SSH)",
    "ja": "RFC 6242 - セキュアシェルの上にNETCONFプロトコル（SSH）を使用して、"
  },
  "number": 6242,
  "created_at": "2019-11-01 02:15:17.523878+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      M. Wasserman\nRequest for Comments: 6242                        Painless Security, LLC\nObsoletes: 4742                                                June 2011\nCategory: Standards Track\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 11,
      "text": "Using the NETCONF Protocol over Secure Shell (SSH)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a method for invoking and running the Network Configuration Protocol (NETCONF) within a Secure Shell (SSH) session as an SSH subsystem. This document obsoletes RFC 4742.",
      "ja": "この文書では、SSHサブシステムとしてのSecure Shell（SSH）セッション内のネットワーク構成プロトコル（NETCONF）を呼び出して実行するための方法を説明します。この文書はRFC 4742を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6242.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6242で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  2\n2.  Requirements Terminology . . . . . . . . . . . . . . . . . . .  2\n3.  Starting NETCONF over SSH  . . . . . . . . . . . . . . . . . .  2\n  3.1.  Capabilities Exchange  . . . . . . . . . . . . . . . . . .  3\n4.  Using NETCONF over SSH . . . . . . . . . . . . . . . . . . . .  4\n  4.1.  Framing Protocol . . . . . . . . . . . . . . . . . . . . .  5\n  4.2.  Chunked Framing Mechanism  . . . . . . . . . . . . . . . .  5\n  4.3.  End-of-Message Framing Mechanism . . . . . . . . . . . . .  7\n5.  Exiting the NETCONF Subsystem  . . . . . . . . . . . . . . . .  8\n6.  Security Considerations  . . . . . . . . . . . . . . . . . . .  8\n7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . .  9\n8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 10\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 10\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 10\nAppendix A.  Changes from RFC 4742 . . . . . . . . . . . . . . . . 11",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol [RFC6241] is an XML-based protocol used to manage the configuration of networking equipment. NETCONF is defined to be session-layer and transport independent, allowing mappings to be defined for multiple session-layer or transport protocols. This document defines how NETCONF can be used within a Secure Shell (SSH) session, using the SSH connection protocol [RFC4254] over the SSH transport protocol [RFC4253]. This mapping will allow NETCONF to be executed from a secure shell session by a user or application.",
      "ja": "NETCONFプロトコル[RFC6241]はネットワーク機器の構成を管理するために使用されるXMLベースのプロトコルです。 NETCONFは、マッピングは、複数のセッション層又はトランスポートプロトコルのために定義されることを可能にする、セッション層とトランスポートに依存しないように定義されます。この文書は、NETCONFは、SSHトランスポートプロトコル[RFC4253]の上にSSH接続プロトコル[RFC4254]を使用して、セキュアシェル（SSH）セッション内で使用することができる方法を定義します。このマッピングは、NETCONFは、ユーザまたはアプリケーションによってセキュアシェルセッションから実行することが可能になります。"
    },
    {
      "indent": 3,
      "text": "Although this document gives specific examples of how NETCONF messages are sent over an SSH connection, use of this transport is not restricted to the messages shown in the examples below. This transport can be used for any NETCONF message.",
      "ja": "この文書はSSH接続を介して送信されるかNETCONFメッセージの具体的な例を与えるが、このトランスポートの使用については、以下の例に示すメッセージに限定されるものではありません。このトランスポートは、任意のNETCONFメッセージのために使用することができます。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Terminology",
      "section_title": true,
      "ja": "2.要件用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Starting NETCONF over SSH",
      "section_title": true,
      "ja": "3. SSH上でNETCONFを開始"
    },
    {
      "indent": 3,
      "text": "To run NETCONF over SSH, the SSH client will first establish an SSH transport connection using the SSH transport protocol, and the SSH client and SSH server will exchange keys for message integrity and encryption. The SSH client will then invoke the \"ssh-userauth\" service to authenticate the user, as described in the SSH authentication protocol [RFC4252]. Once the user has been successfully authenticated, the SSH client will invoke the \"ssh-connection\" service, also known as the SSH connection protocol.",
      "ja": "SSH上でNETCONFを実行するには、SSHクライアントは、最初のSSHトランスポートプロトコルを使用してSSHトランスポート接続を確立し、SSHクライアントとSSHサーバは、メッセージの整合性と暗号化のための鍵を交換します。 SSHクライアントは、SSH認証プロトコル[RFC4252]に記載されているように、ユーザを認証するために、「SSH-USERAUTH」サービスを呼び出します。ユーザーが正常に認証されると、SSHクライアントは、SSH接続プロトコルとして知られている「SSH接続」サービスを、起動します。"
    },
    {
      "indent": 3,
      "text": "The username provided by the SSH implementation will be made available to the NETCONF message layer as the NETCONF username without modification. If the username does not comply to the NETCONF requirements on usernames [RFC6241], i.e., the username is not representable in XML, the SSH session MUST be dropped. Any transformations applied to the authenticated identity of the SSH client made by the SSH server (e.g., via authentication services or mappings to system accounts) are outside the scope of this document.",
      "ja": "SSH実装によって提供されるユーザ名は変更せずにNETCONFユーザ名としてNETCONFメッセージ層に利用可能となります。ユーザ名は、ユーザ名[RFC6241]、すなわち上のNETCONFの要件に準拠していない場合、ユーザ名はXMLで表現されていない、SSHセッションを下げなければなりません。 （システムアカウントに認証サービスやマッピングを介して、例えば）SSHサーバ製SSHクライアントの認証されたアイデンティティに適用される変換は、この文書の範囲外です。"
    },
    {
      "indent": 3,
      "text": "After the ssh-connection service is established, the SSH client will open a channel of type \"session\", which will result in an SSH session.",
      "ja": "SSH接続サービスが確立された後、SSHクライアントがSSHセッションになりますタイプ「セッション」のチャネルを開きます。"
    },
    {
      "indent": 3,
      "text": "Once the SSH session has been established, the NETCONF client will invoke NETCONF as an SSH subsystem called \"netconf\". Subsystem support is a feature of SSH version 2 (SSHv2) and is not included in SSHv1. Running NETCONF as an SSH subsystem avoids the need for the script to recognize shell prompts or skip over extraneous information, such as a system message that is sent at shell start-up.",
      "ja": "SSHセッションが確立されると、NETCONFクライアントは「NETCONF」と呼ばれるSSHサブシステムとしてNETCONFを呼び出します。サブシステムのサポートは、SSHバージョン2（SSHv2）の特徴であり、SSHv1の中に含まれていません。 SSHサブシステムとしてNETCONFを実行すると、シェルプロンプトを認識したり、そのようなシェルの起動時に送信されるシステムメッセージとして無関係な情報を、スキップするスクリプトの必要性を回避します。"
    },
    {
      "indent": 3,
      "text": "In order to allow NETCONF traffic to be easily identified and filtered by firewalls and other network devices, NETCONF servers MUST default to providing access to the \"netconf\" SSH subsystem only when the SSH session is established using the IANA-assigned TCP port 830. Servers SHOULD be configurable to allow access to the netconf SSH subsystem over other ports.",
      "ja": "NETCONFのトラフィックを簡単にファイアウォールおよびその他のネットワークデバイスで識別し、ろ過することができるようにするために、NETCONFサーバは、SSHセッションがIANAによって割り当てられたTCPポート830のサーバーを使用して確立された場合にのみ、「NETCONF」SSHサブシステムへのアクセスを提供するデフォルトなければなりません。他のポートの上にNETCONF SSHサブシステムへのアクセスを許可するように設定可能であるべきです。"
    },
    {
      "indent": 3,
      "text": "A user (or application) could use the following command line to invoke NETCONF as an SSH subsystem on the IANA-assigned port:",
      "ja": "ユーザ（またはアプリケーション）は、IANAによって割り当てられたポート上のSSHサブシステムとしてNETCONFを呼び出すために、次のコマンドラインを使用することができます。"
    },
    {
      "indent": 3,
      "text": "[user@client]$ ssh -s server.example.org -p 830 netconf",
      "ja": "[クライアント@ユーザー] $ sshの-s server.example.org -p 830 NETCONF"
    },
    {
      "indent": 3,
      "text": "Note that the -s option causes the command (\"netconf\") to be invoked as an SSH subsystem.",
      "ja": "-sオプションは、SSHサブシステムとして呼び出されるコマンド（「NETCONF」）を引き起こすことに注意してください。"
    },
    {
      "indent": 0,
      "text": "3.1. Capabilities Exchange",
      "section_title": true,
      "ja": "3.1。機能交換"
    },
    {
      "indent": 3,
      "text": "As specified in [RFC6241], the NETCONF server indicates its capabilities by sending an XML document containing a <hello> element as soon as the NETCONF session is established. The NETCONF client can parse this message to determine which NETCONF capabilities are supported by the NETCONF server.",
      "ja": "[RFC6241]で指定されるように、NETCONFサーバとすぐNETCONFセッションが確立されると、<ハロー>要素を含むXML文書を送信することによってその機能を示します。 NETCONFクライアントは、NETCONFサーバによってサポートされているNETCONF能力を決定するために、このメッセージを解析することができます。"
    },
    {
      "indent": 3,
      "text": "As [RFC6241] states, the NETCONF client also sends an XML document containing a <hello> element to indicate the NETCONF client's capabilities to the NETCONF server. The document containing the <hello> element is the first XML document that the NETCONF client sends after the NETCONF session is established.",
      "ja": "[RFC6241]の状態としては、NETCONFクライアントは、NETCONFサーバへのNETCONFクライアントの能力を示すために、<こんにちは>要素を含むXML文書を送信します。含むドキュメント<こんにちは>要素は、NETCONFセッションが確立された後、NETCONFクライアントが送信する最初のXML文書です。"
    },
    {
      "indent": 3,
      "text": "The following example shows a capability exchange. Data sent by the NETCONF client are marked with \"C:\", and data sent by the NETCONF server are marked with \"S:\".",
      "ja": "次の例では、能力交換を示しています。 NETCONFクライアントによって送信されたデータは、「C：」でマークされている、とNETCONFサーバによって送信されたデータがでマークされている「S：」。"
    },
    {
      "indent": 3,
      "text": "S: <?xml version=\"1.0\" encoding=\"UTF-8\"?> S: <hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> S: <capabilities> S: <capability> S: urn:ietf:params:netconf:base:1.1 S: </capability> S: <capability> S: urn:ietf:params:ns:netconf:capability:startup:1.0 S: </capability> S: </capabilities> S: <session-id>4</session-id> S: </hello> S: ]]>]]>",
      "ja": "S：<？xmlのバージョン= \"1.0\" エンコード= \"UTF-8\"> S：<ハロー=のxmlns \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> S：<機能> S： <機能> S：URN：IETF：paramsは：NETCONF：塩基：1.1 S：</機能> S <機能> S：URN：IETF：paramsは：NS：NETCONF：機能：スタートアップ：1.0 S：</能力> S </機能> S：<セッションID> 4 </セッションID> S </こんにちは> S：]]>]]>"
    },
    {
      "indent": 3,
      "text": "C: <?xml version=\"1.0\" encoding=\"UTF-8\"?> C: <hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> C: <capabilities> C: <capability> C: urn:ietf:params:netconf:base:1.1 C: </capability> C: </capabilities> C: </hello> C: ]]>]]>",
      "ja": "C：<？xmlのバージョン= \"1.0\" エンコード= \"UTF-8\"> C <ハローのxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> C <機能> C： <機能> C：URN：IETF：paramsは：NETCONF：塩基：1.1 C </機能> C </機能> C </こんにちは> C：]]>]]>"
    },
    {
      "indent": 3,
      "text": "Although the example shows the NETCONF server sending a <hello> message followed by the NETCONF client's <hello> message, both sides will send the message as soon as the NETCONF subsystem is initialized, perhaps simultaneously.",
      "ja": "例では、NETCONFクライアントの<こんにちは>メッセージに続いて、<ハロー>メッセージを送信するNETCONFサーバを示しているがNETCONFサブシステムは、おそらく同時に、初期化されるように、両側には、すぐにメッセージを送信します。"
    },
    {
      "indent": 0,
      "text": "4. Using NETCONF over SSH",
      "section_title": true,
      "ja": "4. SSH上でNETCONFを使用して"
    },
    {
      "indent": 3,
      "text": "A NETCONF over SSH session consists of a NETCONF client and NETCONF server exchanging complete XML documents. Once the session has been established and capabilities have been exchanged, the NETCONF client will send complete XML documents containing <rpc> elements to the server, and the NETCONF server will respond with complete XML documents containing <rpc-reply> elements.",
      "ja": "SSHセッションを介しNETCONFは、完全なXML文書を交換するNETCONFクライアントとNETCONFサーバで構成されています。セッションが確立されていると能力が交換されたら、NETCONFクライアントは、サーバに<RPC>要素を含む完全なXML文書を送信すると、NETCONFサーバは、<RPC-返信>要素を含む完全なXML文書で応答します。"
    },
    {
      "indent": 0,
      "text": "4.1. Framing Protocol",
      "section_title": true,
      "ja": "4.1。フレーミングプロトコル"
    },
    {
      "indent": 3,
      "text": "The previous version of this document defined the character sequence \"]]>]]>\" as a message separator, under the assumption that it could not be found in well-formed XML documents. However, this assumption is not correct. It can legally appear in XML attributes, comments, and processing instructions. In order to solve this problem, and at the same time be compatible with existing implementations, this document defines the following framing protocol.",
      "ja": "このドキュメントの以前のバージョンでは、それが整形式XML文書を中に見つけることができなかったという仮定の下で、メッセージの区切りとして「]]>]]>」文字列を定義しました。しかし、この仮定は正しくありません。これは、合法的にXML属性、コメント、処理命令に表示されます。この問題を解決すると同時に、既存の実装と互換性を持つようにするために、この文書は、次のフレーミングプロトコルを定義します。"
    },
    {
      "indent": 3,
      "text": "The <hello> message MUST be followed by the character sequence ]]>]]>. Upon reception of the <hello> message, the receiving peer's SSH Transport layer conceptually passes the <hello> message to the Messages layer. If the :base:1.1 capability is advertised by both peers, the chunked framing mechanism (see Section 4.2) is used for the remainder of the NETCONF session. Otherwise, the old end-of-message-based mechanism (see Section 4.3) is used.",
      "ja": "<こんにちは>メッセージは、文字列が続かなければなりません]]>]]>。 <こんにちは>メッセージを受信すると、受信ピアのSSHトランスポート層は、概念的にメッセージ層に<ハロー>メッセージを渡します。ベース：1.1場合能力は両方のピアによってアドバタイズされ、チャンクのフレーミング機構（セクション4.2を参照）NETCONFセッションの残りのために使用されます。それ以外の場合は、古いエンド・オブ・メッセージベースのメカニズムは、（4.3節を参照）が使用されています。"
    },
    {
      "indent": 0,
      "text": "4.2. Chunked Framing Mechanism",
      "section_title": true,
      "ja": "4.2。チャンクフレーミングメカニズム"
    },
    {
      "indent": 3,
      "text": "This mechanism encodes all NETCONF messages with a chunked framing. Specifically, the message follows the ABNF [RFC5234] rule Chunked-Message:",
      "ja": "このメカニズムは、チャンクのフレーミングを持つすべてのNETCONFメッセージをエンコードします。具体的には、メッセージは、ABNF [RFC5234]のルールチャンク・メッセージを次の"
    },
    {
      "indent": 8,
      "text": "Chunked-Message = 1*chunk\n                  end-of-chunks",
      "raw": true
    },
    {
      "indent": 8,
      "text": "chunk = LF HASH chunk-size LF chunk-data chunk-size = 1*DIGIT1 0*DIGIT chunk-data = 1*OCTET",
      "ja": "チャンク= LF HASHチャンクサイズのLFチャンクデータチャンクサイズ= 1 * DIGIT1 0 * DIGITチャンクデータ= 1 * OCTET"
    },
    {
      "indent": 8,
      "text": "end-of-chunks = LF HASH HASH LF",
      "ja": "エンド・オブ・チャンク= LF HASH HASH LF"
    },
    {
      "indent": 8,
      "text": "DIGIT1 = %x31-39 DIGIT = %x30-39 HASH = %x23 LF = %x0A OCTET = %x00-FF",
      "ja": "DIGIT1 =％x31-39 DIGIT =％x30-39 HASH =％X23 LF =％X0A OCTET =％X00-FF"
    },
    {
      "indent": 3,
      "text": "The chunk-size field is a string of decimal digits indicating the number of octets in chunk-data. Leading zeros are prohibited, and the maximum allowed chunk-size value is 4294967295.",
      "ja": "チャンクサイズのフィールドは、チャンクデータのオクテットの数を示す10進数の文字列です。先頭のゼロは禁止されており、最大許容チャンクサイズの値は4294967295です。"
    },
    {
      "indent": 3,
      "text": "As an example, the message:",
      "ja": "一例として、メッセージ："
    },
    {
      "indent": 7,
      "text": "<rpc message-id=\"102\"\n     xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <close-session/>\n</rpc>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "could be encoded as (using '\\n' as a visible representation of the LineFeed character):",
      "ja": "（改行文字の可視表現として「\\ n」を使用して）として符号化することができます。"
    },
    {
      "indent": 3,
      "text": "C: \\n#4\\n C: <rpc C: \\n#18\\n C: message-id=\"102\"\\n C: \\n#79\\n C: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\\n C: <close-session/>\\n C: </rpc> C: \\n##\\n",
      "ja": "C：\\ N＃4 \\ N C <RPCのC：\\ N＃18 \\ N C：メッセージID = \"102\" \\ nはC：\\ N＃79 \\ N C：のxmlns = \"URN：IETF：paramsは： XML：NS：NETCONF：塩基：1.0\" > \\ N C <クローズセッション/> \\ N C </ RPC> C：\\ nは## \\ nは"
    },
    {
      "indent": 3,
      "text": "Conceptually, the SSH Transport layer encodes messages sent by the Messages layer, and decodes messages received on the SSH channel before passing them to the Messages layer.",
      "ja": "概念的には、SSHトランスポート層は、メッセージ層によって送信されたメッセージを符号化し、メッセージ層に渡す前にSSHチャネル上で受信したメッセージをデコードします。"
    },
    {
      "indent": 3,
      "text": "The examples for the chunked framing mechanism show all LineFeeds, even those that are not used as part of the framing mechanism. Note that the SSH transport does not interpret the XML content; thus, it does not care about any optional XML-specific LineFeeds.",
      "ja": "チャンクのフレーミング機構の例は、すべてのラインフィード、フレーミング機構の一部として使用されていないことも、それらを示します。 SSHトランスポートは、XMLの内容を解釈しないことに注意してください。したがって、それは任意のオプションのXML固有のラインフィードを気にしません。"
    },
    {
      "indent": 3,
      "text": "In the second and third chunks quoted above, each line is terminated by a LineFeed. For all the XML lines (except the last one), this example treats the LineFeed as part of the chunk-data and so contributing to the chunk-size.",
      "ja": "上記引用第二及び第三のチャンクで、各行は改行によって終了されます。 （最後のものを除く）すべてのXMLラインについて、この例では、チャンクデータの一部として改行を扱うので、チャンクサイズに寄与する。"
    },
    {
      "indent": 3,
      "text": "Note that there is no LineFeed character after the <rpc> end tag in this message. The LineFeed required by the start of the end-of-chunks block immediately follows the last '>' character in the message.",
      "ja": "このメッセージでは、<RPC>終了タグの後には改行文字が存在しないことに注意してください。エンド・オブ・チャンクの開始により、必要な改行はすぐにメッセージの最後の「>」文字を次のブロック。"
    },
    {
      "indent": 3,
      "text": "If the chunk-size and the chunk-size value respectively are invalid or if an error occurs during the decoding process, the peer MUST terminate the NETCONF session by closing the corresponding SSH channel. Implementations MUST ensure they are not vulnerable for a buffer overrun.",
      "ja": "チャンクサイズおよびチャンクサイズの値は、それぞれ無効であるか、またはエラーが復号プロセス中に発生した場合、ピアは、対応するSSHチャネルを閉じることによってNETCONFセッションを終了する必要がある場合。実装は、彼らは、バッファオーバーランのために脆弱ではないことを確認しなければなりません。"
    },
    {
      "indent": 0,
      "text": "4.3. End-of-Message Framing Mechanism",
      "section_title": true,
      "ja": "4.3。メッセージ終了フレーミングメカニズム"
    },
    {
      "indent": 3,
      "text": "This mechanism exists for backwards compatibility with implementations of previous versions of this document. It is only used when the remote peer does not advertise a base protocol version supporting chunked encoding, i.e., a NETCONF implementation only supporting :base:1.0.",
      "ja": "この機構は、この文書の前のバージョンの実装との後方互換性のために存在します。ベース：1.0をリモートピアがチャンクエンコーディングを支持するベース・プロトコル・バージョン、すなわち、唯一支持NETCONF実装をアドバタイズしないときにのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "When this mechanism is used, the special character sequence ]]>]]>, MUST be sent by both the NETCONF client and the NETCONF server after each message (XML document) in the NETCONF exchange. Conceptually, the SSH Transport layer passes any data found in between the ]]>]]> characters to the Messages layer.",
      "ja": "このメカニズムを使用する場合、特殊な文字シーケンス]]>]]>、NETCONF交換において、各メッセージ（XML文書）の後にNETCONFクライアントとNETCONFサーバの両方で送らなければなりません。概念的には、SSHトランスポート層は、メッセージレイヤへ]]>]]>文字の間で見つかったすべてのデータを渡します。"
    },
    {
      "indent": 3,
      "text": "A NETCONF over SSH session, using the backwards-compatible end-of-message framing to retrieve a set of configuration information, might look like this:",
      "ja": "コンフィギュレーション情報のセットを取得するために、後方互換性エンド・オブ・メッセージフレーミングを使用して、SSHセッションを介しNETCONFは、次のようになります。"
    },
    {
      "indent": 3,
      "text": "C: <?xml version=\"1.0\" encoding=\"UTF-8\"?> C: <rpc message-id=\"105\" C: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> C: <get-config> C: <source><running/></source> C: <config xmlns=\"http://example.com/schema/1.2/config\"> C: <users/> C: </config> C: </get-config> C: </rpc> C: ]]>]]>",
      "ja": "C：の<？xml version = \"1.0\" エンコード= \"UTF-8\"？> C <RPCメッセージ-ID = \"105\" C：のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0 \"> C：<GET-config>のC：<ソース> <ランニング/> </ソース> C：<設定のxmlns =\" http://example.com/schema/1.2/config \"> C：<ユーザー/> C：</ config>のC：</ GET-config>のC：</ RPC> C：]]>]]>"
    },
    {
      "indent": 3,
      "text": "S: <?xml version=\"1.0\" encoding=\"UTF-8\"?> S: <rpc-reply message-id=\"105\" S: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> S: <config xmlns=\"http://example.com/schema/1.2/config\"> S: <users> S: <user><name>root</name><type>superuser</type></user> S: <user><name>fred</name><type>admin</type></user> S: <user><name>barney</name><type>admin</type></user> S: </users> S: </config> S: </rpc-reply> S: ]]>]]>",
      "ja": "S：の<？xml version = \"1.0\" エンコード= \"UTF-8\"？> S <RPC応答メッセージ-ID = \"105\" S：のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：ベース：1.0 \"> S：<設定のxmlns =\" http://example.com/schema/1.2/config \"> S：<ユーザー> S：<ユーザー> <名前>ルート</名前> <タイプ>スーパー</タイプ> </ユーザー> S：<ユーザー> <名前>フレッド</名前> <タイプ>管理者</タイプ> </ユーザー> S：<ユーザー> <名前>バーニー</名前> <タイプ>管理者</タイプ> </ユーザー> S </ユーザー> S </設定> S </ RPC-返信> S：]]>]]>"
    },
    {
      "indent": 0,
      "text": "5. Exiting the NETCONF Subsystem",
      "section_title": true,
      "ja": "5. NETCONFサブシステムの終了"
    },
    {
      "indent": 3,
      "text": "Exiting NETCONF is accomplished using the <close-session> operation. A NETCONF server will process NETCONF messages from the NETCONF client in the order in which they are received. When the NETCONF server processes a <close-session> operation, the NETCONF server SHALL respond and close the SSH session channel. The NETCONF server MUST NOT process any NETCONF messages received after the <close-session> operation.",
      "ja": "終了NETCONFは、<クローズセッション>操作を使用して達成されます。 NETCONFサーバは、受信した順序でNETCONFクライアントからNETCONFメッセージを処理します。 NETCONFサーバは<クローズセッション>操作を処理するとき、NETCONFサーバが応答し、SSHセッションチャンネルを閉じるものとします。 NETCONFサーバは、<クローズセッション>動作の後に受信したすべてのNETCONFメッセージを処理してはいけません。"
    },
    {
      "indent": 3,
      "text": "To continue the example used in Section 4.2, an existing NETCONF subsystem session could be closed as follows:",
      "ja": "次のように4.2節で使用される例を続行するには、既存のNETCONFサブシステムセッションを閉じることができます。"
    },
    {
      "indent": 3,
      "text": "C: \\n#140\\n C: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n C: <rpc message-id=\"106\"\\n C: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\\n C: <close-session/>\\n C: </rpc> C: \\n##\\n",
      "ja": "C：\\ N＃140 \\ nはC：の<？xml version = \"1.0\" エンコード= \"UTF-8\"？> \\ N C <RPCメッセージ-ID = \"106\" \\ n C：のxmlns = \"URN：IETF ：paramsは：XML：NS：NETCONF：塩基：1.0\" > \\ N C <クローズセッション/> \\ N C </ RPC> C：\\ nは## \\ nは"
    },
    {
      "indent": 3,
      "text": "S: \\n#139\\n S: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n S: <rpc-reply id=\"106\"\\n S: xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\\n S: <ok/>\\n S: </rpc-reply> S: \\n##\\n",
      "ja": "S：\\ N＃139 \\ N S：の<？xml version = \"1.0\" エンコード= \"UTF-8\"？> \\ N S <RPC-応答ID = \"106\" \\ n個のS：のxmlns = \"URN：IETF ：のparams：XML：NS：NETCONF：ベース：1.0\" > \\ nはS：<OK /> \\ N S：</ RPC-返信> S：\\ nは## \\ nは"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "NETCONF is used to access configuration and state information and to modify configuration information, so the ability to access this protocol should be limited to users and systems that are authorized to view the NETCONF server's configuration and state or to modify the NETCONF server's configuration.",
      "ja": "NETCONFは、構成や状態情報にアクセスし、設定情報を変更するために使用されているので、このプロトコルにアクセスする機能は、NETCONFサーバの設定と状態を表示したり、NETCONFサーバの設定を変更することが許可されているユーザーとシステムに限定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The identity of the SSH server MUST be verified and authenticated by the SSH client according to local policy before password-based authentication data or any configuration or state data is sent to or received from the SSH server. The identity of the SSH client MUST also be verified and authenticated by the SSH server according to local policy to ensure that the incoming SSH client request is legitimate before any configuration or state data is sent to or received from the SSH client. Neither side should establish a NETCONF over SSH connection with an unknown, unexpected, or incorrect identity on the opposite side.",
      "ja": "SSHサーバの身元が確認され、パスワードベースの認証データまたは任意の構成や状態データに送信されたか、SSHサーバから受信される前に、ローカルポリシーに従って、SSHクライアントによって認証されなければなりません。 SSHクライアントのアイデンティティはまた、任意の構成または状態データが送信またはSSHクライアントから受信する前に着信SSHクライアント要求が正当であることを確認するために、ローカルポリシーに従って、SSHサーバによって検証及び認証されなければなりません。どちらの側が反対側に、未知の予期しない、または不正なアイデンティティとのSSH接続経由でNETCONFを確立すべきです。"
    },
    {
      "indent": 3,
      "text": "Configuration or state data may include sensitive information, such as usernames or security keys. So, NETCONF requires communications channels that provide strong encryption for data privacy. This document defines a NETCONF over SSH mapping that provides for support of strong encryption and authentication.",
      "ja": "設定や状態データは、ユーザ名やセキュリティキーなどの機密情報を含むことができます。だから、NETCONFはデータプライバシーのための強力な暗号化を提供し、通信チャネルを必要とします。この文書では、強力な暗号化と認証のサポートを提供しSSHマッピングの上にNETCONFを定義します。"
    },
    {
      "indent": 3,
      "text": "This document requires that SSH servers default to allowing access to the \"netconf\" SSH subsystem only when using a specific TCP port assigned by IANA for this purpose. This will allow NETCONF over SSH traffic to be easily identified and filtered by firewalls and other network nodes. However, it will also allow NETCONF over SSH traffic to be more easily identified by attackers.",
      "ja": "この文書では、この目的のためにIANAによって割り当てられた特定のTCPポートを使用している場合にのみ、「NETCONF」SSHサブシステムへのアクセスを許可することSSHサーバのデフォルトが必要です。これは、SSHトラフィック上NETCONFを容易にファイアウォールや他のネットワークノードによって同定し、そして濾過することを可能にします。しかし、それはまた、SSHトラフィックオーバーNETCONFをより簡単に攻撃者によって識別されるようになります。"
    },
    {
      "indent": 3,
      "text": "This document also recommends that SSH servers be configurable to allow access to the \"netconf\" SSH subsystem over other ports. Use of that configuration option without corresponding changes to firewall or network device configuration may unintentionally result in the ability for nodes outside of the firewall or other administrative boundaries to gain access to the \"netconf\" SSH subsystem.",
      "ja": "また、このドキュメントでは、SSHサーバが他のポートの上に「NETCONF」SSHサブシステムへのアクセスを許可するように設定することをお勧めします。ファイアウォールやネットワーク機器の設定に変更を対応することなく、その構成オプションを使用すると、意図せずに「NETCONF」SSHサブシステムへのアクセスを得るために、ファイアウォールや他の行政境界の外のノードのための能力をもたらすことができます。"
    },
    {
      "indent": 3,
      "text": "RFC 4742 assumes that the end-of-message (EOM) sequence, ]]>]]>, cannot appear in any well-formed XML document, which turned out to be mistaken. The EOM sequence can cause operational problems and open space for attacks if sent deliberately in RPC messages. It is however believed that the associated threat is not very high. This document still uses the EOM sequence for the initial <hello> message to avoid incompatibility with existing implementations. When both peers implement base:1.1 capability, a proper framing protocol (chunked framing mechanism; see Section 4.2) is used for the rest of the NETCONF session, to avoid injection attacks.",
      "ja": "RFC 4742は、エンド・オブ・メッセージ（EOM）配列は、]]>]]>、誤ったことが判明した任意の整形式XML文書に出現することができないことを想定しています。 RPCメッセージに故意に送信された場合EOMシーケンスは攻撃のために、操作上の問題やオープンスペースを引き起こす可能性があります。しかし関連した脅威が非常に高くないと考えられています。この文書では、まだ既存の実装との非互換性を避けるために、最初の<こんにちは>メッセージのEOM・シーケンスを使用しています。両方のピアは、ベースを実装する場合：1.1能力、適切なフレーミングプロトコルは、（フレーミング機構チャンク、セクション4.2を参照）インジェクション攻撃を回避するために、NETCONFセッションの残りのために使用されます。"
    },
    {
      "indent": 0,
      "text": "7. IANA Considerations",
      "section_title": true,
      "ja": "7. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "Based on the previous version of this document, RFC 4742, IANA assigned the TCP port 830 as the default port for NETCONF over SSH sessions.",
      "ja": "このドキュメントの以前のバージョンで、RFC 4742に基づいて、IANAは、SSHセッションに対して、NETCONFのデフォルトポートとしてTCPポート830を割り当てられました。"
    },
    {
      "indent": 3,
      "text": "IANA had also assigned \"netconf\" as an SSH Subsystem Name, as defined in [RFC4250], as follows:",
      "ja": "[RFC4250]で定義されるように、以下のようにIANAはまた、SSHサブシステム名として「NETCONF」が割り当てられていました。"
    },
    {
      "indent": 14,
      "text": "Subsystem Name                  Reference\n--------------                  ---------\nnetconf                         RFC 4742",
      "raw": true
    },
    {
      "indent": 3,
      "text": "IANA updated these allocations to refer to this document.",
      "ja": "IANAはこのドキュメントを参照するためにこれらの割り当てを更新しました。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "Ted Goddard was a co-author on earlier versions of this document.",
      "ja": "テッド・ゴダードは、このドキュメントの以前のバージョンの共著者でした。"
    },
    {
      "indent": 3,
      "text": "This document was written using the xml2rfc tool described in RFC 2629 [RFC2629].",
      "ja": "この文書は、RFC 2629 [RFC2629]で説明xml2rfcツールを使用して書かれていました。"
    },
    {
      "indent": 3,
      "text": "Extensive input was received from the other members of the NETCONF design team, including: Andy Bierman, Weijing Chen, Rob Enns, Wes Hardaker, David Harrington, Eliot Lear, Simon Leinen, Phil Shafer, Juergen Schoenwaelder, and Steve Waldbusser. The following people have also reviewed this document and provided valuable input: Olafur Gudmundsson, Sam Hartman, Scott Hollenbeck, Bill Sommerfeld, Balazs Lengyel, Bert Wijnen, Mehmet Ersue, Martin Bjorklund, Lada Lothka, Kent Watsen, and Tom Petch.",
      "ja": "アンディBierman、Weijingチェン、ロブエンス、ウェスHardaker、デヴィッド・ハリントン、エリオット・リア、サイモンLeinen、フィル・シェーファー、ユルゲンSchoenwaelder、およびスティーブWaldbusser：豊富な入力には、NETCONFデザインチームの他のメンバーから受け取りました。以下の人々はまた、この文書を検討し、貴重な入力を提供してきた：オラフルグドムンソン、サム・ハートマン、スコットホレンベック、ビルゾンマーフェルト、バラージュLengyel、バートWijnen、メフメットErsue、マーティンBjorklund、ラダLothka、ケントWatsen、そしてトム・ペッチを。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4250] Lehtinen, S. and C. Lonvick, \"The Secure Shell (SSH) Protocol Assigned Numbers\", RFC 4250, January 2006.",
      "ja": "[RFC4250]レーティネン、S.とC. Lonvick、 \"セキュアシェル（SSH）プロトコル割り当て番号\"、RFC 4250、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4252] Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH) Authentication Protocol\", RFC 4252, January 2006.",
      "ja": "[RFC4252] Ylonenと、T.とC. Lonvick、 \"セキュアシェル（SSH）認証プロトコル\"、RFC 4252、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4253] Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH) Transport Layer Protocol\", RFC 4253, January 2006.",
      "ja": "[RFC4253] Ylonenと、T.とC. Lonvick、 \"セキュアシェル（SSH）トランスポート層プロトコル\"、RFC 4253、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4254] Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH) Connection Protocol\", RFC 4254, January 2006.",
      "ja": "[RFC4254] Ylonenと、T.とC. Lonvick、 \"セキュアシェル（SSH）接続プロトコル\"、RFC 4254、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed., and A. Bierman, Ed., \"Network Configuration Protocol (NETCONF)\", RFC 6241, June 2011.",
      "ja": "[RFC6241]エンス、R.、編、Bjorklund、M.、編、Schoenwaelder、J.、編、及びA. Bierman、編、 \"ネットワーク構成プロトコル（NETCONF）\"、RFC 6241、2011年6月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2629] Rose, M., \"Writing I-Ds and RFCs using XML\", RFC 2629, June 1999.",
      "ja": "[RFC2629]ローズ、M.、 \"ライティングI-DSおよびXMLを使用しているRFC\"、RFC 2629、1999年6月。"
    },
    {
      "indent": 1,
      "text": "Appendix A. Changes from",
      "ja": "付録A.からの変更点"
    },
    {
      "indent": 3,
      "text": "This section lists major changes between this document and RFC 4742.",
      "ja": "このセクションでは、このドキュメントとRFC 4742との間に大きな変化を示しています。"
    },
    {
      "indent": 3,
      "text": "o Introduced the new chunked framing mechanism to solve known security issues with the EOM framing.",
      "ja": "O EOMフレーミングで既知のセキュリティ問題を解決するために、新しいチャンクのフレーミングメカニズムを導入しました。"
    },
    {
      "indent": 3,
      "text": "o Extended text in Security Considerations; added text on EOM issues.",
      "ja": "セキュリティの考慮中のO拡張テキスト。 EOM問題に関するテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added examples to show new chunked encoding properly; highlighted the location of new lines.",
      "ja": "O適切に新しいチャンクエンコーディングを表示する例を追加しました。新しい行の場所を強調しました。"
    },
    {
      "indent": 3,
      "text": "o Added text for NETCONF username handling following the requirements on usernames in [RFC6241].",
      "ja": "O [RFC6241]でユーザ名の要件以下のNETCONFのユーザ名を処理するためのテキストを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Changed use of the terms \"client/server\" and \"manager/agent\" to \"SSH client/server\" and \"NETCONF client/server\".",
      "ja": "O「SSHクライアント/サーバ」と「NETCONFクライアント/サーバー」への用語の使用は、「クライアント/サーバ」および「マネージャ/エージェント」に変更。"
    },
    {
      "indent": 3,
      "text": "o Consistently used the term \"operation\", instead of \"command\" or \"message\".",
      "ja": "O一貫代わりに「コマンド」または「メッセージ」で、「操作」という用語を使用します。"
    },
    {
      "indent": 3,
      "text": "o Integrated errata verified for RFC 4742 as of the date of publication of this document. See errata for RFC 4742 at http://www.rfc-editor.org.",
      "ja": "O統合正誤表は、このドキュメントの発行日の時点でRFC 4742のための検証します。 http://www.rfc-editor.orgでRFC 4742の正誤表を参照してください。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Margaret Wasserman Painless Security, LLC 356 Abbott Street North Andover, MA 01845 USA",
      "ja": "マーガレットワッサーマン無痛セキュリティ、LLC 356アボットストリートノースアンドーヴァー、MA 01845 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 781 405-7464 EMail: mrw@painless-security.com URI: http://www.painless-security.com",
      "ja": "電話：+1 781 405-7464 Eメール：mrw@painless-security.com URI：http://www.painless-security.com"
    }
  ]
}