{
  "title": {
    "text": "RFC 6920 - Naming Things with Hashes",
    "ja": "RFC 6920 - ハッシュで物事を命名"
  },
  "number": 6920,
  "created_at": "2019-11-01 14:38:37.538734+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        S. Farrell\nRequest for Comments: 6920                        Trinity College Dublin\nCategory: Standards Track                                    D. Kutscher\nISSN: 2070-1721                                                      NEC\n                                                            C. Dannewitz\n                                                 University of Paderborn\n                                                               B. Ohlman\n                                                              A. Keranen\n                                                                Ericsson\n                                                         P. Hallam-Baker\n                                                       Comodo Group Inc.\n                                                              April 2013",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Naming Things with Hashes",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document defines a set of ways to identify a thing (a digital object in this case) using the output from a hash function. It specifies a new URI scheme for this purpose, a way to map these to HTTP URLs, and binary and human-speakable formats for these names. The various formats are designed to support, but not require, a strong link to the referenced object, such that the referenced object may be authenticated to the same degree as the reference to it. The reason for this work is to standardise current uses of hash outputs in URLs and to support new information-centric applications and other uses of hash outputs in protocols.",
      "ja": "この文書は、ハッシュ関数の出力を使用してもの（この場合はデジタルオブジェクト）を同定するための方法のセットを定義します。それは、この目的のために新しいURIスキーム、HTTPのURLにこれらをマッピングするための方法、およびこれらの名前のバイナリと人間が会話可能フォーマットを指定します。様々なフォーマットをサポートするが、必要ではないように設計され、参照されるオブジェクトは、それへの参照と同程度に認証することができるように、参照されたオブジェクトへの強いリンク。この作品の理由は、URL内のハッシュ出力の現在の使用法を標準化するために、新たな情報中心のアプリケーションとプロトコルにおけるハッシュ出力の他の用途をサポートすることです。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6920.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6920で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2013 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  Hashes Are What Count  . . . . . . . . . . . . . . . . . . . .  4\n3.  Named Information (ni) URI Format  . . . . . . . . . . . . . .  6\n  3.1.  Content Type Query String Attribute  . . . . . . . . . . .  8\n4.  .well-known URI  . . . . . . . . . . . . . . . . . . . . . . .  9\n5.  URL Segment Format . . . . . . . . . . . . . . . . . . . . . . 10\n6.  Binary Format  . . . . . . . . . . . . . . . . . . . . . . . . 10\n7.  Human-Speakable (nih) URI Format . . . . . . . . . . . . . . . 11\n8.  Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . 13\n  8.1.  Hello World! . . . . . . . . . . . . . . . . . . . . . . . 13\n  8.2.  Public Key Examples  . . . . . . . . . . . . . . . . . . . 13\n  8.3.  nih Usage Example  . . . . . . . . . . . . . . . . . . . . 14\n9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 15\n  9.1.  Assignment of ni URI Scheme  . . . . . . . . . . . . . . . 15\n  9.2.  Assignment of nih URI Scheme . . . . . . . . . . . . . . . 15\n  9.3.  Assignment of .well-known 'ni' URI . . . . . . . . . . . . 16\n  9.4.  Creation of Named Information Hash Algorithm Registry  . . 16\n  9.5.  Creation of Named Information Parameter Registry . . . . . 18\n10. Security Considerations  . . . . . . . . . . . . . . . . . . . 18\n11. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 20\n12. References . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n  12.1. Normative References . . . . . . . . . . . . . . . . . . . 20\n  12.2. Informative References . . . . . . . . . . . . . . . . . . 21",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "Identifiers -- names or locators -- are used in various protocols to identify resources. In many scenarios, those identifiers contain values that are obtained from hash functions. Different deployments have chosen different ways to include the hash function outputs in their identifiers, resulting in interoperability problems.",
      "ja": "識別子 - 名前やロケータは - リソースを識別するために、様々なプロトコルで使用されています。多くのシナリオでは、これらの識別子は、ハッシュ関数から得られた値が含まれています。別の展開は、相互運用性の問題が生じ、その識別子にハッシュ関数の出力を含めるためのさまざまな方法を選択しました。"
    },
    {
      "indent": 3,
      "text": "This document defines the \"Named Information\" identifier, which provides a set of standard ways to use hash function outputs in names. We begin with a few example uses for various ways to include hash function output in a name, with the specifics defined later in this document. Figure 1 shows an example of the Named Information (ni) URI scheme that this document defines.",
      "ja": "この文書では、名前にはハッシュ関数の出力を使用する標準的な方法のセットを提供し、「名前付き情報」の識別子を定義します。いくつかの例では、このドキュメントの後半で定義された仕様で、名前にハッシュ関数の出力を含めるためのさまざまな方法に使用すると我々は始まります。図1は、この文書が定義する名前情報（NI）URIスキームの一例を示しています。"
    },
    {
      "indent": 9,
      "text": "ni:///sha-256;UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q",
      "ja": "NI：/// SHA-256; UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q"
    },
    {
      "indent": 25,
      "text": "Figure 1: Example ni URI",
      "ja": "ふぃぐれ １： えぁｍｐぇ に うり"
    },
    {
      "indent": 3,
      "text": "Hash function outputs can be used to ensure uniqueness in terms of mapping URIs [RFC3986] to a specific resource or to make URIs hard to guess for security reasons. Since there is no standard way to interpret those strings today, in general only the creator of the URI knows how to use the hash function output. Other protocols, such as application-layer protocols for accessing \"smart objects\" in constrained environments, also require more compact (e.g., binary) forms of such identifiers. In yet other situations, people may have to speak such values, e.g., in a voice call (see Section 8.3), in order to confirm the presence or absence of a resource.",
      "ja": "ハッシュ関数の出力は、特定のリソースにマッピングするのURI [RFC3986]の面で一意性を保証するために、またはセキュリティ上の理由を推測するのは難しいのURIを作るために使用することができます。一般的に、今日これらの文字列を解釈するための標準的な方法がないので、唯一のURIの作成者は、ハッシュ関数の出力を使用する方法を知っています。制約された環境では、「スマートオブジェクト」にアクセスするためのそのようなアプリケーション層プロトコルのような他のプロトコルは、また、そのような識別子（例えば、バイナリ）よりコンパクトな形態を必要とします。さらに他の状況では、人々は、このような値を話す例えば、音声通話中に（8.3節を参照）、リソースの有無を確認するためにする必要があります。"
    },
    {
      "indent": 3,
      "text": "As another example, protocols for accessing in-network storage servers need a way to identify stored resources uniquely and in a location-independent way so that replicas on different servers can be accessed by the same name. Also, such applications may require verification that a resource representation that has been obtained actually corresponds to the name that was used to request the resource, i.e., verifying the binding between the data and the name, which is here termed \"name-data integrity\".",
      "ja": "別の例として、ネットワーク内のストレージサーバにアクセスするためのプロトコルは、異なるサーバー上のレプリカは、同じ名前でアクセスできるように、一意と位置に依存しない方法で保存されたリソースを識別するための方法を必要とします。また、このようなアプリケーションは、ここでは、「名前とデータの整合性」と呼ばれる、実際に取得したリソース表現は、データと名の間に結合を確認し、リソースを要求するために使用された名前、すなわちに対応することを確認が必要な場合があります。"
    },
    {
      "indent": 3,
      "text": "Similarly, in the context of information-centric networking [NETINF-ARCHITECTURE] [CCN] and elsewhere, there is value in being able to compare a presented resource against the URI that was used to access that resource. If a cryptographically strong comparison function can be used, then this allows for many forms of in-network storage, without requiring as much trust in the infrastructure used to present the resource. The outputs of hash functions can be used in this manner, if they are presented in a standard way.",
      "ja": "同様に、他の場所で情報中心ネットワーキング[NETINFアーキテクチャ] [CCN]との関連で、値がそのリソースにアクセスするために使用されたURIに対して提示されたリソースを比較できることです。暗号強い比較関数を使用することができる場合、これはリソースを提供するために使用されるインフラほど信頼を必要とすることなく、ネットワーク内のストレージの多くの形態が可能になります。これらは標準的な方法で提示されている場合は、ハッシュ関数の出力は、この方法で使用することができます。"
    },
    {
      "indent": 3,
      "text": "Additional applications might include creating references from web pages delivered over HTTP/TLS; DNS resource records signed using DNSSEC or data values embedded in certificates, Certificate Revocation Lists (CRLs), or other signed data objects.",
      "ja": "追加のアプリケーションは、HTTP / TLSを介して配信Webページからの参照を作成含まれる場合があります。 DNSリソースレコードは、証明書に埋め込まれたDNSSEC又はデータ値を使用して証明書失効リスト（CRL）、又は他の署名されたデータオブジェクトに署名しました。"
    },
    {
      "indent": 3,
      "text": "The Named Identifier can be represented in a number of ways: using the ni URI scheme that we specifically define for the name (which is very similar to the \"magnet link\" that is informally defined in other protocols [Magnet]), or using other mechanisms also defined herein. However it is represented, the Named Identifier *names* a resource, and the mechanism used to dereference the name and to *locate* the named resource needs to be known by the entity that dereferences it.",
      "ja": "名前識別子は、多くの方法で表すことができる、または他を使用して、（非公式[マグネット]他のプロトコルで定義されている「磁石リンク」に非常に似ている）我々は、具体的名称に対して定義NI URIスキームを使用して機構はまた、本明細書で定義されます。しかし、名前付きリソースがそれを逆参照するエンティティによって知られている必要がある*見つける*、名前付き識別子*名*リソース、および名前間接参照とするために使用されるメカニズムを表しています。"
    },
    {
      "indent": 3,
      "text": "Media content-type, alternative locations for retrieval, and other additional information about a resource named using this scheme can be provided using a query string. \"The Named Information (ni) URI Scheme: Optional Features\" [DECPARAMS] describes specific values that can be used in such query strings for these various purposes and other extensions to this basic format specification.",
      "ja": "この方式を使用して、指定されたリソースに関するメディアコンテンツタイプ、検索のための代替の場所、および他の追加情報は、クエリ文字列を使用して提供することができます。 「情報（NI）名前付きURIスキーム：オプション機能は、」[DECPARAMS]これらの様々な目的のために、このようなクエリ文字列で使用することができ、特定の値と、この基本的なフォーマットの仕様に他の拡張機能について説明します。"
    },
    {
      "indent": 3,
      "text": "In addition, we define a \".well-known\" URL equivalent, a way to include a hash as a segment of an HTTP URL, a binary format for use in protocols that require more compact names, and a human-speakable text form that could be used, e.g., for reading out (parts of) the name over a voice connection.",
      "ja": "加えて、我々は、「.well知られている」URL同等、HTTPのURL、よりコンパクトな名前を必要とするプロトコルで使用するためのバイナリ形式のセグメントとしてハッシュを含める方法、およびヒト会話可能テキスト形式を定義します音声接続を介し名（の一部）を読み出すために、例えば、使用することができます。"
    },
    {
      "indent": 3,
      "text": "Not all uses of these names require use of the full hash output -- truncated hashes can be safely used in some environments. For this reason, we define a new IANA registry for hash functions to be used with this specification so as not to mix strong and weak (truncated) hash algorithms in other protocol registries.",
      "ja": "これらの名前のすべての使用は、完全なハッシュ出力を使用する必要はありません - 切り詰めハッシュが安全に、いくつかの環境で使用することができます。他のプロトコルレジストリに強弱（切り捨て）ハッシュアルゴリズムを混在しないようにこのような理由から、我々は、本明細書で使用するハッシュ関数のための新しいIANAレジストリを定義します。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Syntax definitions in this memo are specified according to ABNF [RFC5234].",
      "ja": "このメモの構文定義はABNF [RFC5234]に従って指定されています。"
    },
    {
      "indent": 0,
      "text": "2. Hashes Are What Count",
      "section_title": true,
      "ja": "2.ハッシュは何カウントです"
    },
    {
      "indent": 3,
      "text": "This section contains basic considerations related to how we use hash function outputs that are common to all formats.",
      "ja": "このセクションでは、我々はすべての形式に共通するハッシュ関数の出力を使用する方法に関連する基本的な考慮事項が含まれています。"
    },
    {
      "indent": 3,
      "text": "When comparing two names of the form defined here, an implementation MUST only consider the digest algorithm and the digest value, i.e., it MUST NOT consider other fields defined below (such as an authority field from a URI or any parameters). Implementations MUST consider two hashes identical, regardless of encoding, if the decoded hashes are based on the same algorithm and have the same length and the same binary value. In that case, the two names can be treated as referring to the same thing.",
      "ja": "ここで定義された形式の二つの名前を比較した場合、実装は、すなわち、それは（例えばURIまたは任意のパラメータから権限フィールドとして）下記に定義され、他のフィールドを検討してはいけません、ダイジェストアルゴリズム、およびダイジェスト値を考慮しなければなりません。復号されたハッシュは、同じアルゴリズムに基づいており、同一の長さと同一のバイナリ値を持っている場合の実装は、関係なく符号化の、同一の2つのハッシュを考慮しなければなりません。その場合には、2つの名前が同じものを参照するものとして扱うことができます。"
    },
    {
      "indent": 3,
      "text": "The sha-256 algorithm as specified in [SHA-256] is mandatory to implement; that is, implementations MUST be able to generate/send and to accept/process names based on a sha-256 hash. However, implementations MAY support additional hash algorithms and MAY use those for specific names, for example, in a constrained environment where sha-256 is non-optimal or where truncated names are needed to fit into corresponding protocols (when a higher collision probability can be tolerated).",
      "ja": "[SHA-256]で指定されるようにSHA-256アルゴリズムを実装するために必須です。つまり、実装は、生成/送信およびSHA-256ハッシュに基づい/プロセス名を受け入れることができなければなりません。しかし、実装は、追加のハッシュアルゴリズムをサポートし、SHA-256は、非最適またはここ切り捨て名が高い衝突確率ができる場合（対応するプロトコルに適合するために必要とされるで拘束環境において、例えば、特定の名前のものを使用するかもしれ許容）。"
    },
    {
      "indent": 3,
      "text": "Truncated hashes MAY be supported. When a hash value is truncated, the name MUST indicate this. Therefore, we use different hash algorithm strings in these cases, such as sha-256-32 for a 32-bit truncation of a sha-256 output. A 32-bit truncated hash is essentially useless for security in almost all cases but might be useful for naming. With current best practices [RFC3766], very few, if any, applications making use of names with less than 100-bit hashes will have useful security properties.",
      "ja": "切り捨てられたハッシュがサポートされるかもしれません。ハッシュ値が切り捨てられた場合、名前はこのことを示す必要があります。したがって、我々は、SHA-256から32 SHA-256の出力の32ビットの切り捨てのようなこれらの場合で異なるハッシュアルゴリズムの文字列を、使用します。 32ビットの切り捨てられたハッシュは、ほぼすべてのケースでは、セキュリティのために、本質的に役に立たないですが、命名のために役に立つかもしれません。もしあれば、現在のベストプラクティス[RFC3766]、非常に少数で、100未満ビットのハッシュと名前を利用するアプリケーションは、便利なセキュリティプロパティを持っています。"
    },
    {
      "indent": 3,
      "text": "When a hash value is truncated to N bits, the leftmost N bits (that is, the most significant N bits in network byte order) from the binary representation of the hash value MUST be used as the truncated value. An example of a 128-bit hash output truncated to 32 bits is shown in Figure 2.",
      "ja": "ハッシュ値がNビット、最上位ビットからnビットに切り捨てられる場合（つまり、ネットワークバイト順で最上位Nビット）のハッシュ値のバイナリ表現からは切り捨て値として使用されなければなりません。 32ビットに切り捨てられた128ビットのハッシュ出力の例が図2に示されています。"
    },
    {
      "indent": 14,
      "text": "         128-bit hash: 0x265357902fe1b7e2a04b897c6025d7a2\n32-bit truncated hash: 0x26535790",
      "raw": true
    },
    {
      "indent": 20,
      "text": "Figure 2: Example of Truncated Hash",
      "ja": "図2：切り捨てハッシュの例"
    },
    {
      "indent": 3,
      "text": "When the input to the hash algorithm is a public key value, as may be used by various security protocols, the hash SHOULD be calculated over the public key in an X.509 SubjectPublicKeyInfo structure (Section 4.1 of [RFC5280]). This input has been chosen primarily for compatibility with the DANE TSLA protocol [RFC6698] but also includes any relevant public key parameters in the hash input, which is sometimes necessary for security reasons. This does not force use of X.509 or full compliance with [RFC5280] since formatting any public key as a SubjectPublicKeyInfo is relatively straightforward and well supported by libraries.",
      "ja": "ハッシュアルゴリズムへの入力は、公開鍵の値である場合、様々なセキュリティプロトコルによって使用されてもよいように、ハッシュはX.509 SubjectPublicKeyInfoで構造（[RFC5280]のセクション4.1）で公開鍵にわたって計算されるべきです。この入力は、主にDANE TSLAプロトコル[RFC6698]との互換性のために選ばれただけでなく、セキュリティ上の理由のために時々必要となるハッシュ入力、における任意の関連する公開鍵パラメータが含まれています。これはSubjectPublicKeyInfoでは比較的簡単、よく図書館でサポートされているよう任意の公開鍵をフォーマットするため、X.509または[RFC5280]に完全に準拠の使用を強制しません。"
    },
    {
      "indent": 3,
      "text": "Any of the formats defined below can be used to represent the resulting name for a public key.",
      "ja": "以下に定義される形式のいずれかは、公開鍵のために、得られた名前を表すために使用することができます。"
    },
    {
      "indent": 3,
      "text": "Other than in the aforementioned special case where public keys are used, we do not specify the hash function input here. Other specifications are expected to define this.",
      "ja": "公開鍵が使用されている前述の特殊な場合以外は、ここでは、ハッシュ関数の入力を指定しないでください。その他の仕様は、これを定義することが期待されています。"
    },
    {
      "indent": 0,
      "text": "3. Named Information (ni) URI Format",
      "section_title": true,
      "ja": "3. NAMED情報（n）のURIフォーマット"
    },
    {
      "indent": 3,
      "text": "A Named Information (ni) URI consists of the following nine components:",
      "ja": "名前付き情報（NI）URIは以下の9つのコンポーネントで構成されます。"
    },
    {
      "indent": 3,
      "text": "Scheme Name: The scheme name is 'ni'.",
      "ja": "スキーム名：スキーム名は、「NI」です。"
    },
    {
      "indent": 3,
      "text": "Colon and Slashes: The literal \"://\"",
      "ja": "コロンとスラッシュ：リテラル「：//」"
    },
    {
      "indent": 3,
      "text": "Authority: The optional authority component may assist applications in accessing the object named by an ni URI. There is no default value for the authority field. (See Section 3.2.2 of [RFC3986] for details.) While ni names with and without an authority differ syntactically from ni names with different authorities, all three refer to the same object if and only if the digest algorithm, length, and value are the same.",
      "ja": "機関：オプションの権限コンポーネントは、NI URIに指定されたオブジェクトにアクセスするには、アプリケーションを助けることができます。権限フィールドのデフォルト値はありません。 （詳細については[RFC3986]のセクション3.2.2を参照。）権限を持つとすることなくNI名が異なる当局とNI名と構文的に異なるが、すべての3つの場合にのみダイジェストアルゴリズム、長さ、および値が同じオブジェクトを参照同じだ。"
    },
    {
      "indent": 3,
      "text": "One slash: The literal \"/\"",
      "ja": "一つのスラッシュ：リテラル「/」"
    },
    {
      "indent": 3,
      "text": "Digest Algorithm: The name of the digest algorithm, as specified in the IANA registry defined in Section 9.4 below.",
      "ja": "ダイジェストアルゴリズム：以下のセクション9.4で定義されているIANAレジストリで指定されたダイジェストアルゴリズムの名前、。"
    },
    {
      "indent": 3,
      "text": "Separator: The literal \";\"",
      "ja": "セパレータ：リテラル「;」"
    },
    {
      "indent": 3,
      "text": "Digest Value: The digest value MUST be encoded using the base64url [RFC4648] encoding, with no \"=\" padding characters.",
      "ja": "ダイジェスト値：ダイジェスト値がない「=」パディング文字で、base64url [RFC4648]符号化を用いて符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Query Parameter separator '?': The query parameter separator acts as a separator between the digest value and the query parameters (if specified). For compatibility with Internationalized Resource Identifiers (IRIs), non-ASCII characters in the query part MUST be encoded as UTF-8, and the resulting octets MUST be percent-encoded (see [RFC3986], Section 2.1).",
      "ja": "クエリパラメータセパレータ「？」：ダイジェスト値と（指定されている場合）クエリパラメータとの間のセパレータとしてクエリパラメータセパレータ作用します。国際化リソース識別子（のIRI）との互換性のため、クエリ部分で非ASCII文字は、UTF-8でエンコードする必要があり、得られたオクテット（[RFC3986]、セクション2.1を参照）パーセント符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Query Parameters: A \"tag=value\" list of optional query parameters as are used with HTTP URLs [RFC2616] with a separator character '&' between each. For example, \"foo=bar&baz=bat\".",
      "ja": "クエリパラメータ：各間の区切り文字「＆」とHTTPのURL [RFC2616]で使用されるような任意のクエリパラメータの「タグ=値」リスト。例えば、 \"FOO =バー＆バズ=バット\"。"
    },
    {
      "indent": 3,
      "text": "It is OPTIONAL for implementations to check the integrity of the URI/ resource mapping when sending, receiving, or processing ni URIs.",
      "ja": "実装は、送信、受信、またはNI URIを処理するURI /リソースマッピングの整合性をチェックすることは任意です。"
    },
    {
      "indent": 3,
      "text": "Escaping of characters follows the rules in RFC 3986. This means that percent-encoding is used to distinguish between reserved and unreserved functions of the same character in the same URI component.",
      "ja": "文字のエスケープは、RFC 3986のルールに従う。これは、パーセントエンコードが同じURIコンポーネントで同じ文字の予約と予約されていない機能を区別するために使用されることを意味します。"
    },
    {
      "indent": 3,
      "text": "As an example, an ampersand ('&') is used in the query part to separate attribute-value pairs; therefore, an ampersand in a value has to be escaped as '%26'. Note that the set of reserved characters differs for each component. As an example, a slash ('/') does not have any reserved function in a query part and therefore does not have to be escaped. However, it can still appear escaped as '%2f' or '%2F', and implementations have to be able to understand such escaped forms. Also note that any characters outside those allowed in the respective URI component have to be escaped.",
      "ja": "例えば、アンパサンド（「＆」）の別個の属性値ペアへのクエリ部分に使用されます。従って、値のアンパサンドは「％26」としてエスケープされなければなりません。予約文字のセットが各コンポーネントに異なることに留意されたいです。一例として、スラッシュ（「/」）クエリ部分内の任意の予約機能を持たないので、エスケープする必要がありません。しかし、それはまだ「％2fを」または「％の2F」としてエスケープ表示することができ、および実装は、そのようなエスケープ形式を理解できるようにする必要があります。また、それぞれのURIコンポーネントで許可されたもの外の文字をエスケープする必要があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The Named Information URI adapts the URI definition from the URI Generic Syntax [RFC3986]. We start with the base URI production:",
      "ja": "名前付き情報URIは、URIジェネリック構文[RFC3986]からURIの定義を適応させます。当社は、ベースURIの生産を開始します。"
    },
    {
      "indent": 9,
      "text": "URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n    ; from RFC 3986",
      "raw": true
    },
    {
      "indent": 27,
      "text": "Figure 3: URI Syntax",
      "ja": "図3：URI構文"
    },
    {
      "indent": 3,
      "text": "Then, we adapt that for the Named Information URI:",
      "ja": "その後、我々は、名前付き情報URIのためにそれを適応させます。"
    },
    {
      "indent": 9,
      "text": "NI-URI         = ni-scheme \":\" ni-hier-part [ \"?\" query ]\n    ; adapted from \"URI\" in RFC 3986\n    ; query is from RFC 3986, Section 3.4\nni-scheme      = \"ni\"\nni-hier-part   = \"//\" [ authority ] \"/\" alg-val\n    ; authority is from RFC 3986, Section 3.2\nalg-val        = alg \";\" val\n    ; adapted from \"hier-part\" in RFC 3986\nalg            = 1*unreserved\nval            = 1*unreserved\n    ; unreserved is from RFC 3986, Section 2.3",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 4: ni Name Syntax",
      "ja": "図4：NI名の構文"
    },
    {
      "indent": 3,
      "text": "The \"val\" field MUST contain the output of base64url encoding (with no \"=\" padding characters), the result of applying the hash function (\"alg\") to its defined input, which defaults to the object bytes that are expected to be returned when the URI is dereferenced.",
      "ja": "「ヴァル」フィールドがあることが予想されるオブジェクトのバイト（NO「=」パディング文字を含む）base64urlエンコーディングの出力、その定義された入力にハッシュ関数（「ALG」）を適用した結果、デフォルト値を含まなければなりませんURIが逆参照されたときに返されました。"
    },
    {
      "indent": 3,
      "text": "Relative ni URIs can occur. In such cases, the algorithm in Section 5 of [RFC3986] applies. As an example, in Figure 5, the absolute URI for \"this third document\" is \"ni://example.com/sha-256-128;...\".",
      "ja": "相対NI URIが発生する可能性があります。このような場合には、[RFC3986]のセクション5にアルゴリズムが適用されます。一例として、図5に、「この第三の文書」の絶対URIは、「NI：//example.com/sha-256-128; ...」です。"
    },
    {
      "indent": 5,
      "text": "<html> <head> <title>ni: relative URI test</title> <base href=\"ni://example.com\"> </head>",
      "ja": "<HTML> <HEAD> <タイトル> NI：相対URI試験</タイトル> <基地HREF = \"NI：//example.com\"> </ HEAD>"
    },
    {
      "indent": 5,
      "text": " <body> <p>Please check <a href=\"sha-256;f4OxZX...\">this document</a>. and <a href=\"sha-256;UyaQV...\">this other document</a>. and <a href=\"sha-256-128;...\">this third document</a>. </p> </body> </html>",
      "ja": "<身体> <P> <a href=\"sha-256;f4OxZX...\">この文書</a>を確認してください。そして、<a href=\"sha-256;UyaQV...\">この他の文書</a>を。そして、<aは、この第三の文書</a>をhref=\"sha-256-128;...\">。 </ P> </ body> </ html>この"
    },
    {
      "indent": 16,
      "text": "Figure 5: Example HTML with Relative ni URI",
      "ja": "図5：相対NI URIを持つ例HTML"
    },
    {
      "indent": 3,
      "text": "The authority field in an ni URI is not quite the same as that from an HTTP URL, even though the same values (e.g., DNS names) may be usefully used in both. For an ni URI, the authority does not control nearly as much of the structure of the \"right-hand side\" of the URI. With ni URIs we also define standard query string attributes and, of course, have a strictly defined way to include the hash value.",
      "ja": "NI URIに権限フィールドは、同じ値（例えば、DNS名）が有効の両方で使用することができるにもかかわらず、HTTPのURLからのものと全く同じではありません。 NI URIのために、当局は、URIの「右側」の構造のほぼ同じくらいを制御しません。 NIのURIで、私たちはまた、標準のクエリ文字列の属性を定義して、もちろん、ハッシュ値を含むように厳密に定義方法を持っています。"
    },
    {
      "indent": 3,
      "text": "Internationalisation of strings within ni names is handled exactly as for http URIs -- see [RFC2616], Section 3.2.3.",
      "ja": "NI名内の文字列の国際化は、HTTP URIのと全く同様に扱われている - を参照して、[RFC2616]、セクション3.2.3。"
    },
    {
      "indent": 0,
      "text": "3.1. Content Type Query String Attribute",
      "section_title": true,
      "ja": "3.1。コンテンツタイプのクエリ文字列の属性"
    },
    {
      "indent": 3,
      "text": "The semantics of a digest being used to establish a secure reference from an authenticated source to an external source may be a function of associated metadata such as the Content Type. The Content Type \"ct\" parameter specifies the MIME Content Type of the associated data as defined in [RFC6838]. See Section 9.5 for the associated IANA registry for ni parameter names as shown in Figure 6. Implementations of this specification MUST support parsing the \"ct=\" query string attribute name.",
      "ja": "外部ソースへの認証ソースからの安全な基準を確立するために使用されるダイジェストの意味論は、コンテンツタイプとして関連付けられたメタデータの関数であってもよいです。 [RFC6838]で定義されるようにコンテンツタイプ「CT」パラメータは、関連するデータのMIMEコンテンツタイプを指定します。 「CT =」クエリ文字列は、属性名を解析するサポートしなければならないこの仕様の実装図6に示すように、NIパラメータ名に関連付けられたIANAレジストリについては、セクション9.5を参照してください。"
    },
    {
      "indent": 19,
      "text": "ni:///sha-256-32;f4OxZQ?ct=text/plain",
      "ja": "NI：/// SHA-256から32; f4OxZQ CT = text / plainの？"
    },
    {
      "indent": 16,
      "text": "Figure 6: Example ni URI with Content Type",
      "ja": "図6：コンテンツタイプと例NI URI"
    },
    {
      "indent": 3,
      "text": "Protocols making use of ni URIs will need to specify how to verify name-data integrity for the MIME Content Types that they need to process and will need to take into account possible Content-Transfer-Encodings and other aspects of MIME encoding.",
      "ja": "NIのURIを利用するプロトコルは、彼らが処理する必要があると考慮可能なコンテンツ転送 - エンコーディングとMIMEエンコーディングの他の側面を取る必要がありますMIMEコンテンツタイプの名前とデータの整合性を検証する方法を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Implementations of this specification SHOULD support name-data integrity validation for at least the application/octet-stream Content Type, with no explicit Content-Transfer-Encoding (which is equivalent to binary). Additional Content Types and Content-Transfer-Encodings can of course also be supported, but are OPTIONAL. Note that the hash is calculated after the Content-Transfer-Encoding is removed so it is applied to the raw data.",
      "ja": "この仕様の実装は、（バイナリと同等です）明示的なコンテンツ転送エンコードで、少なくともアプリケーション/オクテットストリームコンテンツタイプの名前とデータの整合性の検証をサポートする必要があります。追加コンテンツタイプとコンテンツ転送 - エンコーディングはもちろんサポートされていますが、オプションであることができます。コンテンツ転送エンコーディングが取り除かれた後、それは生データに適用されるようにハッシュが計算されることに注意してください。"
    },
    {
      "indent": 3,
      "text": "If a) the user agent is sensitive to the Content Type and b) the ni name used has a \"ct=\" query string attribute and c) the object is retrieved (from a server) using a protocol that specifies a Content Type, then, if the two Content Types match, all is well. If, in this situation, the Content Types do not match, then the client SHOULD handle that situation as a potential security error. Content Type matching rules are defined in [RFC2045], Section 5.1.",
      "ja": "ユーザエージェントは、コンテンツタイプに敏感であり、その後、b）の使用NI名は「CT =」クエリ文字列の属性を持っていると、c）オブジェクトは、コンテンツタイプを指定したプロトコルを使用して）サーバから（検索された）場合、2つのコンテンツタイプが一致した場合、すべてが順調です。このような状況では、コンテンツタイプが一致していない、場合、クライアントは、潜在的なセキュリティエラーとしてそのような状況を処理する必要があります。コンテンツタイプのマッチングルールは、[RFC2045]、セクション5.1で定義されています。"
    },
    {
      "indent": 0,
      "text": "4. .well-known URI",
      "section_title": true,
      "ja": "4. .well知られているURI"
    },
    {
      "indent": 3,
      "text": "We define a mapping between URIs following the ni URI scheme and HTTP [RFC2616] or HTTPS [RFC2818] URLs that makes use of the .well-known URI [RFC5785] by defining an \"ni\" suffix (see Section 9).",
      "ja": "我々は、NI URIスキーム及び「NI」という接尾辞（9章を参照）を定義することによって.well知らURI [RFC5785]を利用するHTTP [RFC2616]またはHTTPS [RFC2818]のURLを以下のURIとの間のマッピングを定義します。"
    },
    {
      "indent": 3,
      "text": "The HTTP(S) mapping MAY be used in any context where clients with support for ni URIs are not available.",
      "ja": "HTTP（S）のマッピングは、NIのURIをサポートするクライアントは使用できません任意のコンテキストで使用されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "Since the .well-known name-space is not intended for general information retrieval, if an application dereferences a .well-known/ni URL via HTTP(S), then it will often receive a 3xx HTTP redirection response. A server responding to a request for a .well-known/ni URL will often therefore return a 3xx response, and a client sending such a request MUST be able to handle that, as should any fully compliant HTTP [RFC2616] client.",
      "ja": ".well知られている名前空間は、一般的な情報検索のために意図されていないので、アプリケーションは、HTTP（S）を介して.well知ら/ NI URLを間接参照している場合、それはしばしば3XXのHTTPリダイレクト応答を受信します。任意の完全準拠HTTP [RFC2616]クライアントが必要として、多くの場合、したがって、3xx応答を返します.well知ら/ niのURLのための要求に応答するサーバー、およびそのような要求を送信するクライアントは、それを扱うことができなければなりません。"
    },
    {
      "indent": 3,
      "text": "For an ni name of the form \"ni://n-authority/alg;val?query-string\" the corresponding HTTP(S) URL produced by this mapping is \"http://h-authority/.well-known/ni/alg/val?query-string\", where \"h-authority\" is derived as follows: If the ni name has a specified authority (i.e., the n-authority is non-empty), then the h-authority MUST have the same value. If the ni name has no authority specified (i.e., the n-authority string is empty), a h-authority value MAY be derived from the application context. For example, if the mapping is being done in the context of a web page, then the origin [RFC6454] for that web site can be used. Of course, in general there are no guarantees that the object named by the ni URI will be available via the corresponding HTTP(S) URL. But in the case that any data is returned, the retriever can determine whether or not it is content that matches the ni URI.",
      "ja": "\"？NI：// N-権限/ ALG; valのクエリ文字列\" 形式のNI名の場合：//h-authority/.well-known/対応するHTTPこのマッピングによって生成さ（S）URLは、http」ですH-権威 『は、以下のように導出されたNi / ALG /ヴァルクエリ文字列」、』：？NI名が指定された権限を持っている場合（すなわち、n型の権限が空でない）、その後、H-権限は持っている必要があります同じ値。 NI名（すなわち、N-権限文字列が空である）指定されていない権限を持っていない場合、H-権限値は、アプリケーション・コンテキストに由来してもよいです。マッピングは、Webページのコンテキストで行われている場合たとえば、そのウェブサイトの原点[RFC6454]は使用することができます。もちろん、一般的に保証は、NI URIに指定されたオブジェクトが、対応するHTTP（S）URL経由で利用できるようになることはありません。しかし、どのようなデータが返される場合には、レトリバーは、NI URIに一致する内容であるかどうかを判断することができます。"
    },
    {
      "indent": 3,
      "text": "If an application is presented with an HTTP(S) URL with \"/.well-known/ni/\" as the start of its pathname component, then the reverse mapping to an ni URI either including or excluding the authority might produce an ni URI that is meaningful. However, there is no guarantee that this will be the case.",
      "ja": "アプリケーションは、そのパス名の構成要素の開始として「/.well-known/ni/」とHTTP（S）URLで提示されている場合、いずれかの権限を含めたり除外し、NI URIへの逆マッピングは、NI URIが生じる可能性がありますそれは意味があります。しかし、このケースになるという保証はありません。"
    },
    {
      "indent": 3,
      "text": "When mapping from an ni URI to a .well-known URL, an implementation will have to decide between choosing an \"http\" or \"https\" URL. If the object referenced does in fact match the hash in the URL, then there is arguably no need for additional data integrity, if the ni URI or .well-known URL was received \"securely.\" However, TLS also provides confidentiality, so there can still be reasons to use the \"https\" URL scheme even in this case. Additionally, web server policy such as [RFC6797] may dictate that data only be available over \"https\". In general, however, whether to use \"http\" or \"https\" is something that needs to be decided by the application.",
      "ja": ".well知られているURLにNI URIからマッピングする場合、実装は、「http」または「https」URLを選択するかを決定する必要があります。参照されるオブジェクトが実際にURLにハッシュが一致しない場合は、NI URIまたは.well知られているURLを受信した場合、追加のデータの整合性の必要は、間違いなく存在しない「しっかり。」しかし、TLSはまた、機密性を提供するので、やはりこの場合であっても「https」のURLスキームを使用する理由が考えられます。さらに、このような[RFC6797]などのWebサーバーポリシーはデータのみを「https」の上で利用可能であることを指示することができます。しかしながら、一般的には、「HTTP」または「HTTPS」を使用するかどうかは、アプリケーションによって決定される必要があるものです。"
    },
    {
      "indent": 0,
      "text": "5. URL Segment Format",
      "section_title": true,
      "ja": "5. URLセグメントフォーマット"
    },
    {
      "indent": 3,
      "text": "Some applications may benefit from using hashes in existing HTTP URLs or other URLs. To do this, one simply uses the \"alg-val\" production from the ni name scheme ABNF, which may be included, for example, in the pathname, query string, or even fragment components of HTTP URLs [RFC2616]. In such cases, there is nothing present in the URL that ensures that a client can depend on compliance with this specification, so clients MUST NOT assume that any URL with a pathname component that matches the \"alg-val\" production was in fact produced as a result of this specification. That URL might or might not be related to this specification, only the context will tell.",
      "ja": "一部のアプリケーションでは、既存のHTTP URLまたは他のURLにハッシュを使用してから利益を得ることができます。これを行うためには、単に、例えば、パス名、クエリ文字列、またはHTTPのURLさえ断片コンポーネント[RFC2616]に、含まれていてもよいNI名スキームABNFから「ALG-VAL」の生産を使用しています。クライアントが仮定してはいけませんので、このような場合には、クライアントがこの仕様に準拠に依存できることを保証しますURLに存在するものは、存在しないという事実にように製造した「ALG-valの」生産と一致したパス名の構成要素と任意のURLこの仕様の結果。そのURLは、またはこの仕様に関連していない可能性があり、唯一のコンテキストが教えてくれますすることがあります。"
    },
    {
      "indent": 0,
      "text": "6. Binary Format",
      "section_title": true,
      "ja": "6.バイナリフォーマット"
    },
    {
      "indent": 3,
      "text": "If a more space-efficient version of the name is needed, the following binary format can be used. The binary format name consists of two fields: a header and the hash value. The header field defines how the identifier has been created, and the hash value contains a (possibly truncated) result of a one-way hash over whatever is being identified by the hash value. The binary format of a name is shown in Figure 7.",
      "ja": "名前のより多くのスペース効率に優れたバージョンが必要な場合は、以下のバイナリフォーマットを使用することができます。ヘッダハッシュ値：バイナリ形式の名前は、2つのフィールドで構成されています。ヘッダフィールドには識別子が作成された方法を定義し、ハッシュ値は、ハッシュ値によって識別されているどのようなオーバー一方向ハッシュの（おそらくは切り捨てられた）結果を含んでいます。名前のバイナリフォーマットは、図7に示されています。"
    },
    {
      "indent": 5,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Res| Suite ID  |              Hash Value                       /\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n/                             ...                               /\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n/      ...      |\n+-+-+-+-+-+-+-+-+",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 7: Binary Name Format",
      "ja": "図7：バイナリ名の形式"
    },
    {
      "indent": 3,
      "text": "The Res field is a reserved 2-bit field for future use and MUST be set to zero for this specification and ignored on receipt.",
      "ja": "RESフィールドは将来の使用のために予約された2ビットのフィールドであり、この仕様のためにゼロに設定され、領収書の上で無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The hash algorithm and truncation length are specified by the Suite ID. For maintaining efficient encoding for the binary format, only a few hash algorithms and truncation lengths are supported. See Section 9.4 for details.",
      "ja": "ハッシュアルゴリズムと打ち切り長はスイートIDによって指定されています。バイナリ形式のための効率的な符号化を維持するために、わずか数ハッシュアルゴリズムと切り捨て長支持されています。詳細については、9.4節を参照してください。"
    },
    {
      "indent": 3,
      "text": "A hash value that is truncated to 120 bits will result in the overall name being a 128-bit value, which may be useful for protocols that can easily use 128-bit identifiers.",
      "ja": "120ビットに切り捨てられたハッシュ値を容易に128ビットの識別子を使用できるプロトコルのために有用である可能性がある128ビット値である全体的な名前になります。"
    },
    {
      "indent": 0,
      "text": "7. Human-Speakable (nih) URI Format",
      "section_title": true,
      "ja": "7.人間会話可能（NIH）URIフォーマット"
    },
    {
      "indent": 3,
      "text": "Sometimes a resource may need to be referred to via a name in a format that is easy for humans to read out and less likely to be ambiguous when heard. This is intended to be usable, for example, over the phone in order to confirm the (current or future) presence or absence of a resource. This \"confirmation\" use-case described further in Section 8.3 is the main current use-case for Named Information for Humans (nih) URIs. (\"nih\" also means \"Not Invented Here\", which is clearly false, and therefore worth including [RFC5513]. :-)",
      "ja": "時々、リソースが聞いたとき、人間が読み出され、曖昧になりにくいしやすい形式で名前を経由して参照する必要があるかもしれません。これは、リソースの（現在または将来）の存在または不在を確認するために電話で、例えば、使用可能であることが意図されます。 8.3節でさらに記載されているこの「確認」ユースケースは、人間（NIH）URIの名前については、主な現在のユースケースです。 （「NIH」も:-)。明らかに虚偽、および[RFC5513]を含むので、価値がある、「ここで発明されていない」という意味します"
    },
    {
      "indent": 3,
      "text": "The ni URI format is not well-suited for this, as, for example, base64url uses both uppercase and lowercase, which can easily cause confusion. For this particular purpose (\"speaking\" the value of a hash output), the more verbose but less ambiguous (when spoken) nih URI scheme is defined.",
      "ja": "例えば、base64urlは簡単に混乱を引き起こす可能性が、大文字と小文字の両方を使用して、NI URIフォーマットは、このために非常に適していません。この特定の目的のために（ハッシュ出力の値を「話す」）、より詳細なあまりあいまいな（発話時）NIH URIスキームが定義されています。"
    },
    {
      "indent": 3,
      "text": "The justification for nih being a URI scheme is that it can help a user agent for the speaker to better display the value or help a machine to better speak or recognise the value when spoken. We do not include the query string since there is no way to ensure that its value might be spoken unambiguously and similarly for the authority, where, e.g., some internationalised forms of domain name might not be easy to speak and comprehend easily. This leaves the hash value as the only part of the ni URI that we feel can be usefully included. But since speakers or listeners (or speech recognition) may err, we also include a checkdigit to catch common errors and allow for the inclusion of \"-\" separators to make nih URIs easier to read out.",
      "ja": "NIHは、URIスキームであることを正当化する理由は、それがより良い値を表示したり、話したときに、より良い値を話すか認識するためにマシンを助けるために、スピーカーのためのユーザエージェントを助けることができるということです。その値は、例えば、ドメイン名の一部国際化の形が話すと簡単に理解することは容易ではないかもしれない権威のために明確にし、同様に語られるかもしれないことを保証する方法がないので、私たちは、クエリ文字列が含まれていません。これは、我々が有効に含めることができると感じNI URIの一部のみとハッシュ値を残します。読み出すことが容易にNIH URIを作るためにセパレータ - 「」しかし、スピーカーまたはリスナー（または音声認識）誤る可能性があるため、我々はまた、一般的なエラーをキャッチし、を含めることができるようにするチェックデジットが含まれます。"
    },
    {
      "indent": 3,
      "text": "Fields in nih URIs are separated by a semicolon (;) character. The first field is a hash algorithm string, as in the ni URI format. The hash value is represented using lowercase ASCII hex characters; for example, an octet with the decimal value 58 (0x3A) is encoded as '3a'. This is the same as base16 encoding as defined in RFC 4648 [RFC4648] except using lowercase letters. Separators (\"-\" characters) MAY be interspersed in the hash value in any way to make those easier to read, typically grouping four or six characters with a separator between.",
      "ja": "NIHのURIのフィールドは、セミコロン（;）で区切られた文字を。最初のフィールドは、NI URIフォーマットのように、ハッシュアルゴリズムの文字列です。ハッシュ値は小文字のASCII進文字を使用して表されます。例えば、十進値58（0x3A）を有するオクテットは「3A」として符号化されます。小文字を使用したことを除いてRFC 4648 [RFC4648]で定義されるように、これはbase16エンコーディングと同じです。セパレータ（「 - 」の文字）は、典型的には、間にセパレータを有する4つのまたは6つの文字をグループ化する、読みそれら容易にするために任意の方法でハッシュ値に散在していてもよいです。"
    },
    {
      "indent": 3,
      "text": "The hash value MAY be followed by a semicolon ';' then a checkdigit. The checkdigit MUST be calculated using Luhn's mod N algorithm (with N=16) as defined in [ISOIEC7812] (see also [Luhn]). The input to the calculation is the ASCII hex-encoded hash value (i.e., \"sepval\" in the ABNF production below) but with all \"-\" separator characters first stripped out. This maps the ASCII hex so that '0'=0, ...'9'=9, 'a'=10, ...'f'=15. None of the other fields, nor any \"-\" separators, are input when calculating the checkdigit.",
      "ja": "ハッシュ値は、セミコロンが続くことがあり「;」その後、チェックデジット。チェックデジットは、[ISOIEC7812]で定義されるように（N = 16で）のLuhnのMOD Nアルゴリズムを使用して計算しなければならない（また【のLuhn]参照）。計算への入力は（以下ABNF製造における、すなわち、「sepval」）のASCII 16進コードのハッシュ値であるが、すべてと「 - 」第一ストリッピング区切り文字。これは、ASCIIヘクスにマップするように '0' = 0、... '9' = 9、 '' = 10、... 'F' = 15。 「 - 」は、他の分野、またいずれかのどれもチェックデジットを計算する際にセパレータは、入力されません。"
    },
    {
      "indent": 10,
      "text": "humanname  = \"nih:\" alg-sepval [ \";\" checkdigit ]\nalg-sepval = alg \";\" sepval\nsepval     = 1*(ahlc / \"-\")\nahlc       =  DIGIT / \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\"\n      ; DIGIT is defined in RFC 5234 and is 0-9\ncheckdigit = ahlc",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 8: Human-Speakable Syntax",
      "ja": "図8：ヒト、会話可能シンタックス"
    },
    {
      "indent": 3,
      "text": "For algorithms that have a Suite ID reserved (see Figure 11), the alg field MAY contain the ID value as an ASCII-encoded decimal number instead of the hash name string (for example, \"3\" instead of \"sha-256-120\"). Implementations MUST be able to match the decimal ID values for the algorithms and hash lengths that they support, even if they do not support the binary format.",
      "ja": "予約スイートIDを（図11参照）を有するアルゴリズムの、ALGフィールドはASCIIエンコード進数としてID値を含むかもしれ代わりにハッシュ名の文字列の（例えば、「3」の代わりに「SHA-256から120まで「）。実装は、それらがバイナリ形式をサポートしていない場合でも、それらがサポートするアルゴリズムとハッシュの長さのために小数ID値と一致することができなければなりません。"
    },
    {
      "indent": 3,
      "text": "There is no such thing as a relative nih URI.",
      "ja": "相対URI NIHのようなものはありません。"
    },
    {
      "indent": 0,
      "text": "8. Examples",
      "section_title": true,
      "ja": "8.例"
    },
    {
      "indent": 0,
      "text": "8.1. Hello World!",
      "section_title": true,
      "ja": "8.1。 \"こんにちは世界\""
    },
    {
      "indent": 3,
      "text": "The following ni URI is generated from the text \"Hello World!\" (12 characters without the quotes), using the sha-256 algorithm shown with and without an authority field:",
      "ja": "以下NI URIはテキストから生成される「Hello Worldの！」 （引用符12文字）とし、権限フィールドなしで示さSHA-256アルゴリズムを使用して："
    },
    {
      "indent": 3,
      "text": "ni:///sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk",
      "ja": "２：／／／シャー２５６；ｆ４おｘＺＸ＿ｘ＿フォ５ＬｃＧＢＳＫＨＷＸｆｗｔＳｘーＪ１ンコＳｔ３差ＢＪｔｋＧｋ"
    },
    {
      "indent": 3,
      "text": "ni://example.com/sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk",
      "ja": "NI：//example.com/sha-256; f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk"
    },
    {
      "indent": 3,
      "text": "The following HTTP URL represents a mapping from the previous ni name based on the algorithm outlined above.",
      "ja": "次のHTTP URLは、上記で概説したアルゴリズムに基づいて前のNI名からマッピングを表します。"
    },
    {
      "indent": 3,
      "text": "http://example.com/.well-known/ni/sha-256/ f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk",
      "ja": "http://example.com/.well-known/ni/sha-256/ f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk"
    },
    {
      "indent": 0,
      "text": "8.2. Public Key Examples",
      "section_title": true,
      "ja": "8.2。公開キーの例"
    },
    {
      "indent": 3,
      "text": "Given the DER-encoded SubjectPublicKeyInfo in Figure 9, we derive the names shown in Figure 10 for this value.",
      "ja": "図9のDERでエンコードされたSubjectPublicKeyInfoで考えると、我々は、この値については、図10に示す名前を導き出します。"
    },
    {
      "indent": 10,
      "text": "0000000 30 82 01 22 30 0d 06 09 2a 86 48 86 f7 0d 01 01\n0000020 01 05 00 03 82 01 0f 00 30 82 01 0a 02 82 01 01\n0000040 00 a2 5f 83 da 9b d9 f1 7a 3a 36 67 ba fd 5a 94\n0000060 0e cf 16 d5 5a 55 3a 5e d4 03 b1 65 8e 6d cf a3\n0000100 b7 db a4 e7 cc 0f 52 c6 7d 35 1d c4 68 c2 bd 7b\n0000120 9d db e4 0a d7 10 cd f9 53 20 ee 0d d7 56 6e 5b\n0000140 7a ae 2c 5f 83 0a 19 3c 72 58 96 d6 86 e8 0e e6\n0000160 94 eb 5c f2 90 3e f3 a8 8a 88 56 b6 cd 36 38 76\n0000200 22 97 b1 6b 3c 9c 07 f3 4f 97 08 a1 bc 29 38 9b\n0000220 81 06 2b 74 60 38 7a 93 2f 39 be 12 34 09 6e 0b\n0000240 57 10 b7 a3 7b f2 c6 ee d6 c1 e5 ec ae c5 9c 83\n0000260 14 f4 6b 58 e2 de f2 ff c9 77 07 e3 f3 4c 97 cf\n0000300 1a 28 9e 38 a1 b3 93 41 75 a1 a4 76 3f 4d 78 d7\n0000320 44 d6 1a e3 ce e2 5d c5 78 4c b5 31 22 2e c7 4b\n0000340 8c 6f 56 78 5c a1 c4 c0 1d ca e5 b9 44 d7 e9 90\n0000360 9c bc ee b0 a2 b1 dc da 6d a0 0f f6 ad 1e 2c 12\n0000400 a2 a7 66 60 3e 36 d4 91 41 c2 f2 e7 69 39 2c 9d\n0000420 d2 df b5 a3 44 95 48 7c 87 64 89 dd bf 05 01 ee\n0000440 dd 02 03 01 00 01",
      "raw": true
    },
    {
      "indent": 10,
      "text": "0000000 53 26 90 57 e1 2f e2 b7 4b a0 7c 89 25 60 a2 d7 0000020 53 87 7e b6 2f f4 4d 5a 19 00 25 30 ed 97 ff e4",
      "ja": "0000000 53 26 90 57 E1 2F E2 B7 4B A0 7C 89 25 60 A2 D7 0000020 53 87 7E B6 2F F4 4D 5A 19 00 25 30 ED 97のFF E4"
    },
    {
      "indent": 13,
      "text": "Figure 9: A SubjectPublicKeyInfo Used in Examples and Its sha-256 Hash",
      "ja": "図9：例で使用SubjectPublicKeyInfoでとそのSHA-256ハッシュ"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n| URI:                                                              |\n| ni:///sha-256;UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q         |\n+-------------------------------------------------------------------+\n| .well-known URL (split over 2 lines):                             |\n| http://example.com/.well-known/ni/sha256/                         |\n| UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q                       |\n+-------------------------------------------------------------------+\n| URL Segment:                                                      |\n| sha-256;UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q               |\n+-------------------------------------------------------------------+\n| Binary name (ASCII hex encoded) with 120-bit truncated hash value |\n| which is Suite ID 0x03:                                           |\n| 0353 2690 57e1 2fe2 b74b a07c 8925 60a2                           |\n+-------------------------------------------------------------------+\n| Human-speakable form of a name for this key (truncated to 120 bits|\n| in length) with checkdigit:                                       |\n| nih:sha-256-120;5326-9057-e12f-e2b7-4ba0-7c89-2560-a2;f           |\n+-------------------------------------------------------------------+\n| Human-speakable form of a name for this key (truncated to 32 bits |\n| in length) with checkdigit and no \"-\" separators:                 |\n| nih:sha-256-32;53269057;b                                         |\n+-------------------------------------------------------------------+\n| Human-speakable form using decimal presentation of the            |\n| algorithm ID (sha-256-120) with checkdigit:                       |\n| nih:3;532690-57e12f-e2b74b-a07c89-2560a2;f                        |\n+-------------------------------------------------------------------+",
      "raw": true
    },
    {
      "indent": 25,
      "text": "Figure 10: Example Names",
      "ja": "図10：例名前"
    },
    {
      "indent": 0,
      "text": "8.3. nih Usage Example",
      "section_title": true,
      "ja": "8.3。 NIH使用例"
    },
    {
      "indent": 3,
      "text": "Alice has set up a server node with an RSA key pair. She uses an ni URI as the name for the public key that corresponds to the private key on that box. Alice's node might identify itself using that ni URI in some protocol.",
      "ja": "アリスは、RSA鍵ペアを使用して、サーバーノードを設定しています。彼女はその箱の秘密鍵に対応する公開鍵の名前としてniのURIを使用しています。アリスのノードは、それはいくつかのプロトコルでURIを使用して、NI自身を識別することがあります。"
    },
    {
      "indent": 3,
      "text": "Bob would like to believe that it's really Alice's node when his node interacts with the network and asks his friend Alice to tell him what public key she uses. Alice hits the \"tell someone the name of the public key\" button on her admin user interface and that displays the nih URI and says \"tell this to your buddy\". She phones Bob and reads the nih URI to him.",
      "ja": "ボブは彼のノードがネットワークと相互作用し、彼の友人アリスは、彼女が使用して、公開鍵何を彼に伝えるために要求したとき、それは本当にアリスのノードだと信じたいです。アリスは、管理ユーザー・インターフェースの「公開鍵の名前誰かに伝える」ボタンを打つ、それはNIH URIを表示し、「あなたの相棒にこれを教えてくれ」と言います。彼女の携帯電話ボブと彼にNIH URIを読み込みます。"
    },
    {
      "indent": 3,
      "text": "Bob types that in to his \"manage known nodes\" admin application (or lets that application listen to part of the call), which can regenerate the ni URI and store that or some equivalent. Then when Bob's node interacts with Alice's node, it can more safely accept a signature or encrypt data to Alice's node.",
      "ja": "彼の「既知のノードを管理する」管理アプリケーションにNI URIを再生成し、その一部または同等のものを保存することができ、（またはアプリケーションは、コールの一部を聴くことができます）ボブタイプ。ボブのノードがアリスのノードと対話するときに、それはより安全に署名を受け入れるか、アリスのノードにデータを暗号化することができます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Assignment of ni URI Scheme",
      "section_title": true,
      "ja": "９。１。 あっしｇんめんｔ おｆ に うり Ｓちぇめ"
    },
    {
      "indent": 3,
      "text": "The procedures for registration of a URI scheme are specified in RFC 4395 [RFC4395]. The following assignment has been made.",
      "ja": "URIスキームの登録のための手順は、RFC 4395 [RFC4395]で指定されています。以下の割り当てが行われています。"
    },
    {
      "indent": 3,
      "text": "URI scheme name: ni",
      "ja": "うり ｓちぇめ なめ： に"
    },
    {
      "indent": 3,
      "text": "Status: Permanent",
      "ja": "ステータス：常設"
    },
    {
      "indent": 3,
      "text": "URI scheme syntax: See Section 3.",
      "ja": "URIスキームの構文：セクション3を参照してください。"
    },
    {
      "indent": 3,
      "text": "URI scheme semantics: See Section 3.",
      "ja": "URIスキームの意味論：第3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: See Section 3.",
      "ja": "エンコードの考慮事項：第3節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Applications/protocols that use this URI scheme name:",
      "ja": "このURIのスキーム名を使用するアプリケーション/プロトコル："
    },
    {
      "indent": 6,
      "text": "General applicability.",
      "ja": "一般的な適用。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: Defined here.",
      "ja": "相互運用性に関する注意事項：ここで定義されました。"
    },
    {
      "indent": 3,
      "text": "Security considerations: See Section 10.",
      "ja": "セキュリティの考慮事項：第10節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Contact: Stephen Farrell, stephen.farrell@cs.tcd.ie",
      "ja": "連絡先：スティーブン・ファレル、stephen.farrell@cs.tcd.ie"
    },
    {
      "indent": 3,
      "text": "Author/Change controller: IETF",
      "ja": "著者/変更コントローラ：IETF"
    },
    {
      "indent": 3,
      "text": "References: As specified in this document",
      "ja": "参考資料：この文書で指定されているように"
    },
    {
      "indent": 0,
      "text": "9.2. Assignment of nih URI Scheme",
      "section_title": true,
      "ja": "9.2。割り当て屋のURIスキーム"
    },
    {
      "indent": 3,
      "text": "The procedures for registration of a URI scheme are specified in RFC 4395 [RFC4395]. The following assignment has been made.",
      "ja": "URIスキームの登録のための手順は、RFC 4395 [RFC4395]で指定されています。以下の割り当てが行われています。"
    },
    {
      "indent": 3,
      "text": "URI scheme name: nih",
      "ja": "URIのスキーム名：NIH"
    },
    {
      "indent": 3,
      "text": "Status: Permanent",
      "ja": "ステータス：常設"
    },
    {
      "indent": 3,
      "text": "URI scheme syntax: See Section 7.",
      "ja": "URIスキームの構文：セクション7を参照してください。"
    },
    {
      "indent": 3,
      "text": "URI scheme semantics: See Section 7.",
      "ja": "URIスキームの意味論：第7節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: See Section 7.",
      "ja": "エンコードの考慮事項：セクション7を参照してください。"
    },
    {
      "indent": 3,
      "text": "Applications/protocols that use this URI scheme name:",
      "ja": "このURIのスキーム名を使用するアプリケーション/プロトコル："
    },
    {
      "indent": 6,
      "text": "General applicability.",
      "ja": "一般的な適用。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: Defined here.",
      "ja": "相互運用性に関する注意事項：ここで定義されました。"
    },
    {
      "indent": 3,
      "text": "Security considerations: See Section 10.",
      "ja": "セキュリティの考慮事項：第10節を参照してください。"
    },
    {
      "indent": 3,
      "text": "Contact: Stephen Farrell, stephen.farrell@cs.tcd.ie",
      "ja": "連絡先：スティーブン・ファレル、stephen.farrell@cs.tcd.ie"
    },
    {
      "indent": 3,
      "text": "Author/Change controller: IETF",
      "ja": "著者/変更コントローラ：IETF"
    },
    {
      "indent": 3,
      "text": "References: As specified in this document",
      "ja": "参考資料：この文書で指定されているように"
    },
    {
      "indent": 0,
      "text": "9.3. Assignment of .well-known 'ni' URI",
      "section_title": true,
      "ja": "9.3。 .wellの割り当て、NI-URIを知られてしまいます"
    },
    {
      "indent": 3,
      "text": "The procedures for registration of a Well-Known URI entry are specified in RFC 5785 [RFC5785]. The following assignment has been made.",
      "ja": "よく知られているURIエントリの登録手続きはRFC 5785 [RFC5785]で指定されています。以下の割り当てが行われています。"
    },
    {
      "indent": 3,
      "text": "URI suffix: ni",
      "ja": "うり すっふぃｘ： に"
    },
    {
      "indent": 3,
      "text": "Change controller: IETF",
      "ja": "変更コントローラ：IETF"
    },
    {
      "indent": 3,
      "text": "Specification document(s): This document",
      "ja": "仕様書（S）：この文書"
    },
    {
      "indent": 3,
      "text": "Related information: None",
      "ja": "関連情報：なし"
    },
    {
      "indent": 0,
      "text": "9.4. Creation of Named Information Hash Algorithm Registry",
      "section_title": true,
      "ja": "9.4。名前付き情報ハッシュアルゴリズムのレジストリの作成"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry for hash algorithms as used in the name formats specified here; it is called the \"Named Information Hash Algorithm Registry\". Future assignments are to be made through Expert Review [RFC5226]. This registry has five fields: the suite ID, the hash algorithm name string, the truncation length, the underlying algorithm reference, and a status field that indicates if the algorithm is current or deprecated and should no longer be used. The status field can have the value \"current\" or \"deprecated\". Other values are reserved for possible future definition.",
      "ja": "IANAは、ここで指定した名前のフォーマットで使用されるようなハッシュアルゴリズムのための新しいレジストリを作成しました。それは、「名前付き情報ハッシュアルゴリズムレジストリ」と呼ばれています。今後の割り当ては、専門家レビュー[RFC5226]を介して行われるべきです。スイートID、ハッシュアルゴリズム名の文字列、打ち切り長、基本的なアルゴリズムの参照、およびアルゴリズムは、現在または廃止され、もはや使用すべきではないかどうかを示すステータス・フィールド：このレジストリは、5つのフィールドがあります。ステータスフィールドには、「現在の」または「非推奨」値を持つことができます。他の値は将来の定義のために予約されています。"
    },
    {
      "indent": 3,
      "text": "If the status is \"current\", then that does not necessarily mean that the algorithm is \"good\" for any particular purpose, since the cryptographic strength requirements will be set by other applications or protocols.",
      "ja": "ステータスが「現在」であるならば、それは必ずしも、暗号強度要件は、他のアプリケーションやプロトコルによって設定されるので、アルゴリズムは、任意の特定の目的のために「良い」であることを意味するものではありません。"
    },
    {
      "indent": 3,
      "text": "A request to mark an entry as \"deprecated\" can be done by sending a mail to the Designated Expert. Before approving the request, the community MUST be consulted via a \"call for comments\" of at least two weeks by sending a mail to the IETF discussion list.",
      "ja": "「非推奨」としてエントリをマークする要求は、指定エキスパートにメールを送信することにより行うことができます。リクエストを承認する前に、コミュニティは、IETF議論リストにメールを送信することにより、少なくとも2週間の「コメントの呼びかけ」を介して相談しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Initial values are specified below. The Designated Expert SHOULD generally approve additions that reference hash algorithms that are widely used in other IETF protocols. In addition, the Designated Expert SHOULD NOT accept additions where the underlying hash function (with no truncation) is considered weak for collisions. Part of the reasoning behind this last point is that inclusion of code for weak hash functions, e.g., the MD5 algorithm, can trigger costly false positives if code is audited for inclusion of obsolete ciphers. See [RFC6149], [RFC6150], and [RFC6151] for examples of some hash functions that are considered obsolete in this sense.",
      "ja": "初期値は以下に指定されています。指定された専門家は、一般的に広く他のIETFプロトコルで使用されるハッシュアルゴリズムを参照の追加を承認すべきです。また、指定Expertは、衝突のために弱いと考えられている（無切り捨て付き）基礎となるハッシュ関数の追加を受け入れるべきではありません。この最後の点の背後にある理由の一部は、弱いハッシュ関数のコードの包含であるコードを廃止暗号の包含のために監査されている場合、例えば、MD5アルゴリズムは、高価な偽陽性をトリガすることができます。この意味で時代遅れと考えられているいくつかのハッシュ関数の例については、[RFC6149]、[RFC6150]、および[RFC6151]を参照してください。"
    },
    {
      "indent": 3,
      "text": "The suite ID field (\"ID\") can be empty or can have values between 0 and 63, inclusive. Because there are only 64 possible values, this field is OPTIONAL (leaving it empty if omitted). Where the binary format is not expected to be used for a given hash algorithm, this field SHOULD be omitted. If an entry is registered without a suite ID, the Designated Expert MAY allow for later allocation of a suite ID, if that appears warranted. The Designated Expert MAY consult the community via a \"call for comments\" by sending a mail to the IETF discussion list before allocating a suite ID.",
      "ja": "スイートIDフィールド（「ID」）が空であるか、または0から63までの範囲の間の値を有することができます。のみ64可能な値があるので（省略された場合、空のそれを残して）、このフィールドはオプションです。バイナリフォーマットが与えられたハッシュアルゴリズムに使用されることが期待されていない場合、このフィールドは省略されるべきです。エントリはスイートIDなしで登録されている場合はそれが正当表示された場合は、指定Expertは、スイートのIDの後の割り当てを可能にしてもよいです。指定エキスパートは専用IDを割り当てる前に、IETF議論リストにメールを送信することにより、「コメントの呼び出し」を介してコミュニティを協議することができます。"
    },
    {
      "indent": 7,
      "text": "ID  Hash Name String     Value Length     Reference   Status\n0   Reserved\n1   sha-256              256 bits         [SHA-256]   current\n2   sha-256-128          128 bits         [SHA-256]   current\n3   sha-256-120          120 bits         [SHA-256]   current\n4   sha-256-96           96 bits          [SHA-256]   current\n5   sha-256-64           64 bits          [SHA-256]   current\n6   sha-256-32           32 bits          [SHA-256]   current\n32  Reserved",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 11: Suite Identifiers",
      "ja": "図11：スイート識別子"
    },
    {
      "indent": 3,
      "text": "The Suite ID value 32 is reserved for compatibility with IPv6 addresses from the Special Purpose Address Registry [RFC4773], such as Overlay Routable Cryptographic Hash Identifiers (ORCHIDs) [RFC4843].",
      "ja": "スイートID値32は、オーバーレイルーティング可能な暗号ハッシュ識別子（ラン）[RFC4843]などの特別目的アドレスレジストリからIPv6アドレス[RFC4773]との互換性のために予約されています。"
    },
    {
      "indent": 3,
      "text": "The referenced hash algorithm matching the Suite ID, truncated to the length indicated, according to the description given in Section 2, is used for generating the hash. The Designated Expert is responsible for ensuring that the document referenced for the hash algorithm meets the \"specification required\" rule.",
      "ja": "示された長さに切り捨てられスイートIDと一致する参照ハッシュアルゴリズムは、第2節で与えられた説明によれば、ハッシュを生成するために使用されます。指定Expertは、ハッシュアルゴリズムのために参照されるドキュメントは、「仕様必要な」ルールを満たしていることを確認する責任があります。"
    },
    {
      "indent": 0,
      "text": "9.5. Creation of Named Information Parameter Registry",
      "section_title": true,
      "ja": "9.5。名前付き情報パラメータレジストリの作成"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry entitled \"Named Information URI Parameter Definitions\".",
      "ja": "IANAは、「名前付き情報URIパラメータの定義」と題する新しいレジストリを作成しました。"
    },
    {
      "indent": 3,
      "text": "The policy for future assignments to the registry is Expert Review, and as for the ni Hash Algorithm Registry above, the Designated Expert is responsible for ensuring that the document referenced for the parameter definition meets the \"specification required\" rule.",
      "ja": "レジストリへの将来の割り当てのための政策は、専門家のレビューで、上記NIハッシュアルゴリズムレジストリのためとして、指定専門家は、パラメータ定義のために参照されるドキュメントがルール「要求仕様」を満たしていることを確認する責任があります。"
    },
    {
      "indent": 3,
      "text": "The fields in this registry are the parameter name, a description, and a reference. The parameter name MUST be such that it is suitable for use as a query string parameter name in an ni URI. (See Section 3.)",
      "ja": "このレジストリ内のフィールドには、パラメータ名、説明、および参照されています。パラメータ名は、NI URIでクエリ文字列パラメータ名として使用するのに適しているようなものでなければなりません。 （セクション3を参照してください）"
    },
    {
      "indent": 3,
      "text": "The initial contents of the registry are:",
      "ja": "レジストリの初期の内容は以下のとおりです。"
    },
    {
      "indent": 3,
      "text": "Parameter    Meaning                                       Reference\n-----------  --------------------------------------------  ---------\nct           Content Type                                  [RFC6920]",
      "raw": true
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "ja": "10.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "No secret information is required to generate or verify a name of the form described here. Therefore, a name like this can only provide evidence for the integrity of the referenced object, and the proof of integrity provided is only as good as the proof of integrity for the name from which we started. In other words, the hash value can provide a name-data integrity binding between the name and the bytes returned when the name is dereferenced using some protocol.",
      "ja": "秘密情報は、ここで説明したフォームの名前を生成するか検証するために必要とされません。したがって、このような名前だけで参照されたオブジェクトの整合性のための証拠を提供することができ、および提供の完全性の証明は、我々が開始した名前のための完全性の証明と同じくらい良いです。換言すれば、ハッシュ値は名前とバイト名はいくつかのプロトコルを使用して間接参照されたときに返さ間の結合名前とデータの整合性を提供することができます。"
    },
    {
      "indent": 3,
      "text": "Disclosure of a name value does not necessarily entail disclosure of the referenced object but may enable an attacker to determine the contents of the referenced object by reference to a search engine or other data repository or, for a highly formatted object with little variation, by simply guessing the value and checking if the digest value matches. So, the fact that these names contain hashes does not protect the confidentiality of the object that was input to the hash.",
      "ja": "name値の開示は、必ずしも参照されるオブジェクトの開示を必要とせず、単純にすることにより、ばらつきの少ない高度にフォーマットオブジェクトに対して、検索エンジン又は他のデータリポジトリを参照することにより参照されるオブジェクトの内容を決定するか、攻撃者を可能にすることができます値を推測し、ダイジェスト値が一致するかどうかをチェックします。だから、これらの名前は、ハッシュが含まれているという事実は、ハッシュに入力されたオブジェクトの機密性を保護しません。"
    },
    {
      "indent": 3,
      "text": "The integrity of the referenced content would be compromised if a weak hash function were used. SHA-256 is currently our preferred hash algorithm; this is why we've added only SHA-256-based suites to the initial IANA registry.",
      "ja": "弱いハッシュ関数が使用された場合に参照されたコンテンツの完全性が損なわれることになります。 SHA-256は、現在、我々の優先ハッシュアルゴリズムです。これは我々が最初のIANAレジストリにのみSHA-256ベースのスイートを追加した理由です。"
    },
    {
      "indent": 3,
      "text": "If a truncated hash value is used, certain security properties will be affected. In general, a hash algorithm is designed to produce sufficient bits to prevent a 'birthday attack' collision occurring. Ensuring that the difficulty of discovering two pieces of content that result in the same digest with a work factor O(2^x) by brute force requires a digest length of 2x. Many security applications only require protection against a second pre-image attack, which only requires a digest length of x to achieve the same work factor. Basically, the shorter the hash value used, the less security benefit you can possibly get.",
      "ja": "切り捨てられたハッシュ値を使用する場合、特定のセキュリティプロパティが影響を受けることになります。一般的には、ハッシュアルゴリズムが発生した誕生日の攻撃 \"の衝突を防止するのに十分なビットを生成するように設計されています。同様につながる内容の二つの部品を発見することの難しさは、ブルートフォースによってワークファクタO（2 ^ x）を用いて消化することを保証することは2Xのダイジェストの長さを必要とします。多くのセキュリティアプリケーションは、同じ仕事率を達成するために、xのダイジェスト長を必要と第2プリイメージ攻撃に対する保護を必要とします。基本的には、使用短いハッシュ値は、以下のセキュリティ上の利点あなたはおそらく得ることができます。"
    },
    {
      "indent": 3,
      "text": "An important thing to keep in mind is not to make the mistake of thinking two names are the same when they aren't. For example, a name with a 32-bit truncated sha-256 hash is not the same as a name with the full 256 bits of hash output, even if the hash value for one is a prefix of that for the other.",
      "ja": "心に留めておくべき重要なことは、そうでないときに、2つの名前が同じである思考のミスを犯すことではありません。例えば、32ビットの切り捨てSHA-256ハッシュを持つ名前は、一つのハッシュ値は、他のそれの接頭語であっても、ハッシュ出力の完全な256ビットの名前と同じではありません。"
    },
    {
      "indent": 3,
      "text": "The reason for this is that if an application treats these as the same name, then that might open up a number of attacks. For example, if I publish an object with the full hash, then I probably (in general) don't want some other application to treat a name with just the first 32 bits of that as referring to the same thing, since the 32-bit name will have lots of colliding objects. If ni or nih URIs become widely used, there will be many cases where names will occur more than once in application protocols, and it'll be unpredictable which instance of the name would be used for name-data integrity checking, thus leading to threats. For this reason, we require that the algorithm, length, and value all match before we consider two names to be the same.",
      "ja": "この理由は、アプリケーションが同じ名前としてこれらを扱う場合、それは攻撃の数を開くかもしれないということです。私は完全なハッシュを持つオブジェクトを公開した場合、その後、（一般的に）おそらく私がいるので、同じものを指すようにそのちょうど最初の32ビットで名前を治療するために、いくつかの他のアプリケーションを望んでいない32ビット名が衝突オブジェクトの多くを持っています。 NIまたはNIHのURIが広く使われるようになっている場合、名前はアプリケーションプロトコルで複数回発生します多くの例があるでしょう、そしてこのような脅威につながる、名前のインスタンスは、名前とデータの整合性をチェックするために使用されるであろう予測できないだろう。このような理由から、私たちは二つの名前を考える前に、アルゴリズム、長さ、および値のすべての試合が同じになるようにする必要があります。"
    },
    {
      "indent": 3,
      "text": "The fact that an ni URI includes a domain name in the authority field by itself implies nothing about the relationship between the owner of the domain name and any content referenced by that URI. While a name-data integrity service can be provided using ni URIs, that does not in any sense validate the authority part of the name. For example, there is nothing to stop anyone from creating an ni URI containing a hash of someone else's content. Application developers MUST NOT assume any relationship between the registrant of the domain name that is part of an ni URI and some matching content just because the ni URI matches that content.",
      "ja": "NI URI自体が権威フィールドにドメイン名が含まれているという事実は、ドメイン名の所有者と、そのURIによって参照されるコンテンツとの関係については何も意味しません。名前とデータの整合性サービスは、NIのURIを使用して提供することができますが、それはどんな意味で名前の権限の一部を検証しません。たとえば、他人のコンテンツのハッシュを含むNiのURIを作成するから、誰を停止するには何もありません。アプリケーション開発者は、NI URIは、その内容と一致するという理由だけで、NI URIといくつかのマッチングコンテンツの一部であるドメイン名の登録者との間の関係を仮定してはいけません。"
    },
    {
      "indent": 3,
      "text": "If name-data integrity is successfully validated, and the hash is strong and long enough, then the \"web origin\" [RFC6454] for the bytes of the named object is really going to be the place from which you get the ni name and not the place from which you get the bytes of the object. This appears to offer a potential benefit if using ni names for scripts included from a HTML page accessed via server-authenticated https, for example. If name-data integrity is not validated (and it is optional) or fails, then the web origin is, as usual, the place from which the object bytes were received. Applications making use of ni names SHOULD take this into account in their trust models.",
      "ja": "名前とデータの整合性が正常に検証され、ハッシュが強く、十分な長さであれば、指定されたオブジェクトのバイトのための「ウェブ起源」[RFC6454]は本当にあなたがNI名を取得していない、そこから場所になるだろうあなたは、オブジェクトのバイトを取得するから場所。これは、スクリプトは、サーバー認証、HTTPSを介してアクセスするHTMLページからインクルードするために、たとえば、NI名を使用した場合の潜在的な利点を提供するように見えます。名前とデータの整合性が検証されていない（とそれがオプションである）、または失敗した場合、ウェブの原点はいつものように、場所はそこからオブジェクトのバイトが受信された、あります。 NIの名前を利用したアプリケーションは、彼らの信頼モデルで、このことを考慮すべきです。"
    },
    {
      "indent": 3,
      "text": "Some implementations might mishandle ni URIs that include non-base64 characters, whitespace, or other non-conforming strings, and that could lead to erroneously considering names to be the same when they are not. An ni URI that is malformed in such ways MUST NOT be treated as matching any other ni URI. Implementers need to check the behaviour of libraries for such parsing problems.",
      "ja": "いくつかの実装は非base64で文字、空白、または他の非準拠の文字列が含まれるNI URIを誤用かもしれないが、それはそうでないときと同じように誤って考慮名前につながる可能性があります。他のNI URIに一致するものとして扱われてはいけません、このような方法で不正な形式れるNI URI。実装者は、このような解析の問題のためのライブラリの動作を確認する必要があります。"
    },
    {
      "indent": 0,
      "text": "11. Acknowledgments",
      "section_title": true,
      "ja": "11.謝辞"
    },
    {
      "indent": 3,
      "text": "This work has been supported by the EU FP7 project SAIL. The authors would like to thank SAIL participants to our naming discussions, especially Jean-Francois Peltier, for their input.",
      "ja": "この作品は、EU FP7プロジェクトSAILによって支えられてきました。作者は彼らの入力のために、私たちの命名の議論、特にジャン・フランソワ・ペルティエにSAILの参加者に感謝したいと思います。"
    },
    {
      "indent": 3,
      "text": "The authors would also like to thank Carsten Bormann, Martin Duerst, Tobias Heer, Bjoern Hoehrmann, Tero Kivinen, Barry Leiba, Larry Masinter, David McGrew, Alexey Melnikov, Bob Moskowitz, Jonathan Rees, Eric Rescorla, Zach Shelby, and Martin Thomas for their comments and input to the document. Thanks, in particular, to James Manger for correcting the examples.",
      "ja": "著者らはまたのためにカルステンボルマン、マーティンDuerst、トビアスHeerさん、ビョルンHoehrmann、TERO Kivinen、バリー・レイバ、ラリーMasinter、デビッドマグリュー、アレクセイ・メルニコフ、ボブ・モスコウィッツ、ジョナサン・リース、エリックレスコラ、ザックシェルビー、マーティントーマスに感謝したいと思います彼らのコメントや文書への入力。おかげで、特に、ジェームス・マンジェに例を補正します。"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12.参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[ISOIEC7812] ISO, \"Identification cards -- Identification of issuers -- Part 1: Numbering system\", ISO/IEC 7812-1:2006, October 2006, <http://www.iso.org/iso/iso_catalogue/ catalogue_tc/catalogue_detail.htm?csnumber=39698>.",
      "ja": "[ISOIEC7812] ISO、 \"識別カード - 発行体の同定 - パート1：ナンバリングシステム\"、ISO / IEC 7812から1：2006、2006年10月、<http://www.iso.org/iso/iso_catalogue/ catalogue_tc /catalogue_detail.htm?csnumber=39698>。"
    },
    {
      "indent": 3,
      "text": "[RFC2045] Freed, N. and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies\", RFC 2045, November 1996.",
      "ja": "[RFC2045]解放され、N.とN. Borenstein、 \"マルチパーパスインターネットメールエクステンション（MIME）第一部：インターネットメッセージ本体のフォーマット\"、RFC 2045、1996年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.",
      "ja": "[RFC2616]フィールディング、R.、ゲティス、J.、モーグル、J.、Frystyk、H.、Masinter、L.、リーチ、P.、およびT.バーナーズ - リー、 \"ハイパーテキスト転送プロトコル -  HTTP / 1.1\" 、RFC 2616、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC2818] Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000.",
      "ja": "[RFC2818]レスコラ、E.、 \"TLSオーバーHTTP\"、RFC 2818、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4395] Hansen, T., Hardie, T., and L. Masinter, \"Guidelines and Registration Procedures for New URI Schemes\", BCP 35, RFC 4395, February 2006.",
      "ja": "[RFC4395]ハンセン、T.、ハーディ、T.、およびL. Masinter、 \"新しいURIスキームのためのガイドラインと登録手順\"、BCP 35、RFC 4395、2006年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, October 2006.",
      "ja": "[RFC4648] Josefsson氏、S.、 \"Base16、Base32、およびBase64でデータエンコーディング\"、RFC 4648、2006年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", STD 68, RFC 5234, January 2008.",
      "ja": "[RFC5234]クロッカー、D.、およびP. Overell、 \"構文仕様のための増大しているBNF：ABNF\"、STD 68、RFC 5234、2008年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5280] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R., and W. Polk, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 5280, May 2008.",
      "ja": "[RFC5280]クーパー、D.、Santesson、S.、ファレル、S.、Boeyen、S.、Housley氏、R.、およびW.ポーク、「インターネットX.509公開鍵暗号基盤証明書と証明書失効リスト（CRL）のプロフィール」、RFC 5280、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5785] Nottingham, M. and E. Hammer-Lahav, \"Defining Well-Known Uniform Resource Identifiers (URIs)\", RFC 5785, April 2010.",
      "ja": "[RFC5785]ノッティンガム、M.とE.ハンマー -  Lahav、 \"既知のUniform Resource Identifier（URI）を定義\"、RFC 5785、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6838] Freed, N., Klensin, J., and T. Hansen, \"Media Type Specifications and Registration Procedures\", BCP 13, RFC 6838, January 2013.",
      "ja": "[RFC6838]解放され、N.、Klensin、J.、およびT.ハンセン、 \"メディアタイプの仕様と登録手順\"、BCP 13、RFC 6838、2013年1月。"
    },
    {
      "indent": 3,
      "text": "[SHA-256] NIST, \"Secure Hash Standard\", FIPS 180-3, October 2008, <http://csrc.nist.gov/publications/fips/fips180-3/ fips180-3_final.pdf>.",
      "ja": "[SHA-256] NIST、 \"ハッシュ標準セキュア\"、<http://csrc.nist.gov/publications/fips/fips180-3/ fips180-3_final.pdf>、2008年10月、180-3をFIPS。"
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[CCN] Jacobson, V., Smetters, D., Thornton, J., Plass, M., Briggs, N., and R. Braynard, \"Networking Named Content\", Proceedings of the 5th international conference on Emerging networking experiments and technologies (CoNEXT '09), December 2009.",
      "ja": "[CCN]ジェーコブソン、V.、Smetters、D.、ソーントン、J.、Plass、M.、ブリッグス、N.、およびR. Braynard、 \"コンテンツ名前付きネットワーク\"、新興ネットワーキング実験に第5回国際会議の議事録と技術（CoNEXT '09）、2009年12月。"
    },
    {
      "indent": 3,
      "text": "[DECPARAMS] Hallam-Baker, P., Stradling, R., Farrell, S., Kutscher, D., and B. Ohlman, \"The Named Information (ni) URI Scheme: Optional Features\", Work in Progress, June 2012.",
      "ja": "[DECPARAMS]ハラム - ベイカー、P.、Stradling、R.、ファレル、S.、Kutscher、D.、およびB. Ohlman、 \"名前付き情報（NI）URIスキーム：オプション機能\"、進歩、2012年6月での作業。"
    },
    {
      "indent": 3,
      "text": "[Luhn] Wikipedia, \"Luhn mod N algorithm\", September 2011, <http://en.wikipedia.org/w/ index.php?title=Luhn_mod_N_algorithm&oldid=449928878>.",
      "ja": "[のLuhn]ウィキペディア、 \"のLuhnのmod Nアルゴリズム\"、2011年9月、<http://en.wikipedia.org/w/この449928878でのindex.php？タイトル= Luhn_mod_N_algorithm>。"
    },
    {
      "indent": 3,
      "text": "[Magnet] Wikipedia, \"Magnet URI scheme\", March 2013, <http://en.wikipedia.org/w/ index.php?title=Magnet_URI_scheme&oldid=546892719>.",
      "ja": "[マグネット]ウィキペディア、 \"マグネットURIスキーム\"、2013年3月、<http://en.wikipedia.org/w/のindex.php？タイトル= Magnet_URI_scheme＆oldid = 546892719>。"
    },
    {
      "indent": 3,
      "text": "[NETINF-ARCHITECTURE] Dannewitz, C., Kutscher, D., Ohlman, B., Farrell, S., Ahlgren, B., and M. Karl, \"Network of Information (NetInf) - An information-centric networking architecture\", Computer Communications, Volume 36, Issue 7, pages 721-735, ISSN 0140-3664, 1 April 2013, <http://www.sciencedirect.com/science/article/pii/ S0140366413000364>.",
      "ja": "[NETINFアーキテクチャ] Dannewitz、C.、Kutscher、D.、Ohlman、B.、ファレル、S.、Ahlgren、B.、およびM.カール、 \"情報のネットワーク（NetInf） - 情報中心ネットワークアーキテクチャ\" 、コンピュータ通信、36巻、7号、頁721から735、ISSN 0140から3664まで、2013年4月1日、<http://www.sciencedirect.com/science/article/pii/ S0140366413000364>。"
    },
    {
      "indent": 3,
      "text": "[RFC3766] Orman, H. and P. Hoffman, \"Determining Strengths For Public Keys Used For Exchanging Symmetric Keys\", BCP 86, RFC 3766, April 2004.",
      "ja": "[RFC3766]オーマン、H.、およびP.ホフマン、 \"対称鍵を交換するために使用公開鍵の強さを測定\"、BCP 86、RFC 3766、2004年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC4773] Huston, G., \"Administration of the IANA Special Purpose IPv6 Address Block\", RFC 4773, December 2006.",
      "ja": "[RFC4773]ヒューストン、G.は、 \"IANA特別目的の投与は、ブロックのIPv6アドレス\"、RFC 4773、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4843] Nikander, P., Laganier, J., and F. Dupont, \"An IPv6 Prefix for Overlay Routable Cryptographic Hash Identifiers (ORCHID)\", RFC 4843, April 2007.",
      "ja": "[RFC4843] Nikander、P.、Laganier、J.、およびF.デュポン、RFC 4843、2007年4月 \"オーバーレイルーティング可能な暗号ハッシュ識別子（ORCHID）のIPv6プレフィックス\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5226] Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA Considerations Section in RFCs\", BCP 26, RFC 5226, May 2008.",
      "ja": "[RFC5226] Narten氏、T.とH. Alvestrand、 \"RFCsにIANA問題部に書くためのガイドライン\"、BCP 26、RFC 5226、2008年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5513] Farrel, A., \"IANA Considerations for Three Letter Acronyms\", RFC 5513, April 1 2009.",
      "ja": "[RFC5513]ファレル、A.、 \"三文字略語のためのIANAの考慮事項\"、RFC 5513、2009年4月1日。"
    },
    {
      "indent": 3,
      "text": "[RFC6149] Turner, S. and L. Chen, \"MD2 to Historic Status\", RFC 6149, March 2011.",
      "ja": "[RFC6149]ターナー、S.とL.チェン、 \"歴史的な状態にMD2\"、RFC 6149、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6150] Turner, S. and L. Chen, \"MD4 to Historic Status\", RFC 6150, March 2011.",
      "ja": "[RFC6150]ターナー、S.とL.チェン、 \"歴史的な状態にMD4\"、RFC 6150、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6151] Turner, S. and L. Chen, \"Updated Security Considerations for the MD5 Message-Digest and the HMAC-MD5 Algorithms\", RFC 6151, March 2011.",
      "ja": "[RFC6151]ターナー、S.とL.チェン、 \"MD5メッセージダイジェストとHMAC-MD5アルゴリズムのための更新されたセキュリティ上の考慮事項\"、RFC 6151、2011年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC6454] Barth, A., \"The Web Origin Concept\", RFC 6454, December 2011.",
      "ja": "[RFC6454]バース、A.、 \"ウェブ起源コンセプト\"、RFC 6454、2011年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6698] Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication of Named Entities (DANE) Transport Layer Security (TLS) Protocol: TLSA\", RFC 6698, August 2012.",
      "ja": "[RFC6698]ホフマン、P.およびJ. Schlyter、 \"名前付きエンティティ（DANE）トランスポート層セキュリティ（TLS）プロトコルのDNSベースの認証：TLSA\"、RFC 6698、2012年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC6797] Hodges, J., Jackson, C., and A. Barth, \"HTTP Strict Transport Security (HSTS)\", RFC 6797, November 2012.",
      "ja": "[RFC6797]ホッジス、J.、ジャクソン、C.、およびA.バース、 \"HTTP厳格なトランスポート・セキュリティ（HSTS）\"、RFC 6797、2012年11月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Stephen Farrell Trinity College Dublin Dublin, 2 Ireland Phone: +353-1-896-2354 EMail: stephen.farrell@cs.tcd.ie",
      "ja": "スティーブン・ファレルトリニティカレッジダブリン、アイルランド電話：+ 353-1-896-2354 Eメール：stephen.farrell@cs.tcd.ie"
    },
    {
      "indent": 3,
      "text": "Dirk Kutscher NEC Kurfuersten-Anlage 36 Heidelberg Germany EMail: kutscher@neclab.eu",
      "ja": "ディルクKutscher NECKurfürsten-Anlageの36ハイデルベルクドイツEメール：kutscher@neclab.eu"
    },
    {
      "indent": 3,
      "text": "Christian Dannewitz University of Paderborn Paderborn Germany EMail: cdannewitz@googlemail.com",
      "ja": "パーダーボルンパーダーボルン、ドイツのクリスチャンDannewitz大学Eメール：cdannewitz@googlemail.com"
    },
    {
      "indent": 3,
      "text": "Borje Ohlman Ericsson Stockholm S-16480 Sweden EMail: Borje.Ohlman@ericsson.com",
      "ja": "Borje OhlmanエリクソンストックホルムS-16480スウェーデンメール：Borje.Ohlman@ericsson.com"
    },
    {
      "indent": 3,
      "text": "Ari Keranen Ericsson Jorvas 02420 Finland EMail: ari.keranen@ericsson.com",
      "ja": "エリクソンKeranen 02420 Jorvasフィンランドメール：ari.keranen@ericsson.com"
    },
    {
      "indent": 3,
      "text": "Phillip Hallam-Baker Comodo Group Inc. EMail: philliph@comodo.com",
      "ja": "フィリップハラム - ベイカーコモドグループ株式会社メール：philliph@comodo.com"
    }
  ]
}