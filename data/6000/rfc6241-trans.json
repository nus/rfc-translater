{
  "title": {
    "text": "RFC 6241 - Network Configuration Protocol (NETCONF)",
    "ja": "RFC 6241 - ネットワーク構成プロトコル（NETCONF）"
  },
  "number": 6241,
  "created_at": "2019-11-01 01:03:02.671369+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      R. Enns, Ed.\nRequest for Comments: 6241                              Juniper Networks\nObsoletes: 4741                                        M. Bjorklund, Ed.\nCategory: Standards Track                                 Tail-f Systems\nISSN: 2070-1721                                    J. Schoenwaelder, Ed.\n                                                       Jacobs University\n                                                         A. Bierman, Ed.\n                                                                 Brocade\n                                                               June 2011",
      "raw": true
    },
    {
      "indent": 16,
      "text": "Network Configuration Protocol (NETCONF)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741.",
      "ja": "この文書で定義されたネットワーク構成プロトコル（NETCONF）は、インストール、操作、およびネットワーク機器の設定を削除するためのメカニズムを提供します。これは、拡張マークアップ言語（XML）は、コンフィギュレーションデータのデータエンコーディングならびにプロトコルメッセージをベース使用します。 NETCONFプロトコル操作はリモート・プロシージャ・コール（RPC）として実現されます。この文書はRFC 4741を廃止します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準化過程文書です。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。インターネット標準の詳細については、RFC 5741のセクション2で利用可能です。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6241.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6241で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "ja": "この材料の一部がIETFトラストにこのような材料の変更を許可する権利を与えられていない可能性がありますにこの文書は、2008年、IETFドキュメントまたは11月10日以前に発行または公開さIETF貢献から著作権を支配する者（複数可）材料を含んでいてもよいですIETF標準化プロセスの外。そのような材料の著作権を管理者（単数または複数）から適切なライセンスを取得することなく、この文書は、IETF標準化過程の外側修正されないかもしれません、そして、それの派生物は、IETF標準化過程の外側に作成されない場合があり、それをフォーマットする以外出版RFCとして、英語以外の言語に翻訳します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   6\n  1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   7\n  1.2.  Protocol Overview . . . . . . . . . . . . . . . . . . . .   8\n  1.3.  Capabilities  . . . . . . . . . . . . . . . . . . . . . .  10\n  1.4.  Separation of Configuration and State Data  . . . . . . .  10\n2.  Transport Protocol Requirements . . . . . . . . . . . . . . .  11\n  2.1.  Connection-Oriented Operation . . . . . . . . . . . . . .  11\n  2.2.  Authentication, Integrity, and Confidentiality  . . . . .  12\n  2.3.  Mandatory Transport Protocol  . . . . . . . . . . . . . .  12\n3.  XML Considerations  . . . . . . . . . . . . . . . . . . . . .  13\n  3.1.  Namespace . . . . . . . . . . . . . . . . . . . . . . . .  13\n  3.2.  Document Type Declarations  . . . . . . . . . . . . . . .  13\n4.  RPC Model . . . . . . . . . . . . . . . . . . . . . . . . . .  13\n  4.1.  <rpc> Element . . . . . . . . . . . . . . . . . . . . . .  13\n  4.2.  <rpc-reply> Element . . . . . . . . . . . . . . . . . . .  15\n  4.3.  <rpc-error> Element . . . . . . . . . . . . . . . . . . .  16\n  4.4.  <ok> Element  . . . . . . . . . . . . . . . . . . . . . .  19\n  4.5.  Pipelining  . . . . . . . . . . . . . . . . . . . . . . .  19\n5.  Configuration Model . . . . . . . . . . . . . . . . . . . . .  19\n  5.1.  Configuration Datastores  . . . . . . . . . . . . . . . .  19\n  5.2.  Data Modeling . . . . . . . . . . . . . . . . . . . . . .  20\n6.  Subtree Filtering . . . . . . . . . . . . . . . . . . . . . .  20\n  6.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .  20\n  6.2.  Subtree Filter Components . . . . . . . . . . . . . . . .  21\n    6.2.1.  Namespace Selection . . . . . . . . . . . . . . . . .  21\n    6.2.2.  Attribute Match Expressions . . . . . . . . . . . . .  22\n    6.2.3.  Containment Nodes . . . . . . . . . . . . . . . . . .  23\n    6.2.4.  Selection Nodes . . . . . . . . . . . . . . . . . . .  23\n    6.2.5.  Content Match Nodes . . . . . . . . . . . . . . . . .  24\n  6.3.  Subtree Filter Processing . . . . . . . . . . . . . . . .  25\n  6.4.  Subtree Filtering Examples  . . . . . . . . . . . . . . .  26\n    6.4.1.  No Filter . . . . . . . . . . . . . . . . . . . . . .  26\n    6.4.2.  Empty Filter  . . . . . . . . . . . . . . . . . . . .  26\n    6.4.3.  Select the Entire <users> Subtree . . . . . . . . . .  27\n    6.4.4.  Select All <name> Elements within the <users>\n            Subtree . . . . . . . . . . . . . . . . . . . . . . .  29\n    6.4.5.  One Specific <user> Entry . . . . . . . . . . . . . .  30\n    6.4.6.  Specific Elements from a Specific <user> Entry  . . .  31\n    6.4.7.  Multiple Subtrees . . . . . . . . . . . . . . . . . .  32\n    6.4.8.  Elements with Attribute Naming  . . . . . . . . . . .  33\n7.  Protocol Operations . . . . . . . . . . . . . . . . . . . . .  35\n  7.1.  <get-config>  . . . . . . . . . . . . . . . . . . . . . .  35\n  7.2.  <edit-config> . . . . . . . . . . . . . . . . . . . . . .  37\n  7.3.  <copy-config> . . . . . . . . . . . . . . . . . . . . . .  43\n  7.4.  <delete-config> . . . . . . . . . . . . . . . . . . . . .  44\n  7.5.  <lock>  . . . . . . . . . . . . . . . . . . . . . . . . .  44",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  7.6.  <unlock>  . . . . . . . . . . . . . . . . . . . . . . . .  47\n  7.7.  <get> . . . . . . . . . . . . . . . . . . . . . . . . . .  48\n  7.8.  <close-session> . . . . . . . . . . . . . . . . . . . . .  49\n  7.9.  <kill-session>  . . . . . . . . . . . . . . . . . . . . .  50\n8.  Capabilities  . . . . . . . . . . . . . . . . . . . . . . . .  51\n  8.1.  Capabilities Exchange . . . . . . . . . . . . . . . . . .  51\n  8.2.  Writable-Running Capability . . . . . . . . . . . . . . .  53\n    8.2.1.  Description . . . . . . . . . . . . . . . . . . . . .  53\n    8.2.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  53\n    8.2.3.  Capability Identifier . . . . . . . . . . . . . . . .  53\n    8.2.4.  New Operations  . . . . . . . . . . . . . . . . . . .  53\n    8.2.5.  Modifications to Existing Operations  . . . . . . . .  53\n  8.3.  Candidate Configuration Capability  . . . . . . . . . . .  53\n    8.3.1.  Description . . . . . . . . . . . . . . . . . . . . .  53\n    8.3.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  54\n    8.3.3.  Capability Identifier . . . . . . . . . . . . . . . .  54\n    8.3.4.  New Operations  . . . . . . . . . . . . . . . . . . .  54\n    8.3.5.  Modifications to Existing Operations  . . . . . . . .  56\n  8.4.  Confirmed Commit Capability . . . . . . . . . . . . . . .  57\n    8.4.1.  Description . . . . . . . . . . . . . . . . . . . . .  57\n    8.4.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  58\n    8.4.3.  Capability Identifier . . . . . . . . . . . . . . . .  58\n    8.4.4.  New Operations  . . . . . . . . . . . . . . . . . . .  59\n    8.4.5.  Modifications to Existing Operations  . . . . . . . .  60\n  8.5.  Rollback-on-Error Capability  . . . . . . . . . . . . . .  61\n    8.5.1.  Description . . . . . . . . . . . . . . . . . . . . .  61\n    8.5.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  62\n    8.5.3.  Capability Identifier . . . . . . . . . . . . . . . .  62\n    8.5.4.  New Operations  . . . . . . . . . . . . . . . . . . .  62\n    8.5.5.  Modifications to Existing Operations  . . . . . . . .  62\n  8.6.  Validate Capability . . . . . . . . . . . . . . . . . . .  63\n    8.6.1.  Description . . . . . . . . . . . . . . . . . . . . .  63\n    8.6.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  63\n    8.6.3.  Capability Identifier . . . . . . . . . . . . . . . .  63\n    8.6.4.  New Operations  . . . . . . . . . . . . . . . . . . .  63\n    8.6.5.  Modifications to Existing Operations  . . . . . . . .  64\n  8.7.  Distinct Startup Capability . . . . . . . . . . . . . . .  64\n    8.7.1.  Description . . . . . . . . . . . . . . . . . . . . .  64\n    8.7.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  65\n    8.7.3.  Capability Identifier . . . . . . . . . . . . . . . .  65\n    8.7.4.  New Operations  . . . . . . . . . . . . . . . . . . .  65\n    8.7.5.  Modifications to Existing Operations  . . . . . . . .  65\n  8.8.  URL Capability  . . . . . . . . . . . . . . . . . . . . .  66\n    8.8.1.  Description . . . . . . . . . . . . . . . . . . . . .  66\n    8.8.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  66\n    8.8.3.  Capability Identifier . . . . . . . . . . . . . . . .  66\n    8.8.4.  New Operations  . . . . . . . . . . . . . . . . . . .  66\n    8.8.5.  Modifications to Existing Operations  . . . . . . . .  66",
      "raw": true
    },
    {
      "indent": 3,
      "text": "  8.9.  XPath Capability  . . . . . . . . . . . . . . . . . . . .  67\n    8.9.1.  Description . . . . . . . . . . . . . . . . . . . . .  67\n    8.9.2.  Dependencies  . . . . . . . . . . . . . . . . . . . .  68\n    8.9.3.  Capability Identifier . . . . . . . . . . . . . . . .  68\n    8.9.4.  New Operations  . . . . . . . . . . . . . . . . . . .  68\n    8.9.5.  Modifications to Existing Operations  . . . . . . . .  68\n9.  Security Considerations . . . . . . . . . . . . . . . . . . .  69\n10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  71\n  10.1. NETCONF XML Namespace . . . . . . . . . . . . . . . . . .  71\n  10.2. NETCONF XML Schema  . . . . . . . . . . . . . . . . . . .  71\n  10.3. NETCONF YANG Module . . . . . . . . . . . . . . . . . . .  72\n  10.4. NETCONF Capability URNs . . . . . . . . . . . . . . . . .  72\n11. Contributors  . . . . . . . . . . . . . . . . . . . . . . . .  73\n12. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  73\n13. References  . . . . . . . . . . . . . . . . . . . . . . . . .  74\n  13.1. Normative References  . . . . . . . . . . . . . . . . . .  74\n  13.2. Informative References  . . . . . . . . . . . . . . . . .  75\nAppendix A.  NETCONF Error List . . . . . . . . . . . . . . . . .  76\nAppendix B.  XML Schema for NETCONF Messages Layer  . . . . . . .  80\nAppendix C.  YANG Module for NETCONF Protocol Operations  . . . .  85\nAppendix D.  Capability Template  . . . . . . . . . . . . . . . . 105\n  D.1.  capability-name (template)  . . . . . . . . . . . . . . . 105\n    D.1.1.  Overview  . . . . . . . . . . . . . . . . . . . . . . 105\n    D.1.2.  Dependencies  . . . . . . . . . . . . . . . . . . . . 105\n    D.1.3.  Capability Identifier . . . . . . . . . . . . . . . . 105\n    D.1.4.  New Operations  . . . . . . . . . . . . . . . . . . . 105\n    D.1.5.  Modifications to Existing Operations  . . . . . . . . 105\n    D.1.6.  Interactions with Other Capabilities  . . . . . . . . 105\nAppendix E.  Configuring Multiple Devices with NETCONF  . . . . . 106\n  E.1.  Operations on Individual Devices  . . . . . . . . . . . . 106\n    E.1.1.  Acquiring the Configuration Lock  . . . . . . . . . . 106\n    E.1.2.  Checkpointing the Running Configuration . . . . . . . 107\n    E.1.3.  Loading and Validating the Incoming Configuration . . 108\n    E.1.4.  Changing the Running Configuration  . . . . . . . . . 108\n    E.1.5.  Testing the New Configuration . . . . . . . . . . . . 109\n    E.1.6.  Making the Change Permanent . . . . . . . . . . . . . 109\n    E.1.7.  Releasing the Configuration Lock  . . . . . . . . . . 110\n  E.2.  Operations on Multiple Devices  . . . . . . . . . . . . . 111\nAppendix F.  Changes from RFC 4741  . . . . . . . . . . . . . . . 112",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol defines a simple mechanism through which a network device can be managed, configuration data information can be retrieved, and new configuration data can be uploaded and manipulated. The protocol allows the device to expose a full, formal application programming interface (API). Applications can use this straightforward API to send and receive full and partial configuration data sets.",
      "ja": "NETCONFプロトコルは、ネットワークデバイスを管理することができるような単純な機構、構成データ情報を取得することができ、新しい構成データをアップロードして操作することができると規定しています。プロトコルは、デバイスがフル、正式なアプリケーション・プログラミング・インターフェース（API）を公開することを可能にします。アプリケーションは、フルと部分の構成データ・セットを送受信するために、この単純なAPIを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol uses a remote procedure call (RPC) paradigm. A client encodes an RPC in XML [W3C.REC-xml-20001006] and sends it to a server using a secure, connection-oriented session. The server responds with a reply encoded in XML. The contents of both the request and the response are fully described in XML DTDs or XML schemas, or both, allowing both parties to recognize the syntax constraints imposed on the exchange.",
      "ja": "NETCONFプロトコルは、リモートプロシージャコール（RPC）パラダイムを使用します。クライアントはXML [W3C.REC-XML-20001006]でRPCを符号化し、安全な、接続指向のセッションを使用してサーバに送信します。サーバは、XMLでエンコードされた応答で応答します。要求と応答の両方の内容は、完全に両当事者が交換に課せられた構文制約を認識できるように、XMLののDTDまたはXMLスキーマ、または両方に記載されています。"
    },
    {
      "indent": 3,
      "text": "A key aspect of NETCONF is that it allows the functionality of the management protocol to closely mirror the native functionality of the device. This reduces implementation costs and allows timely access to new features. In addition, applications can access both the syntactic and semantic content of the device's native user interface.",
      "ja": "NETCONFの重要な側面は、それが密接にデバイスのネイティブ機能を反映するために、管理プロトコルの機能性を可能にすることです。これは、実装コストを削減し、新しい機能へのタイムリーなアクセスを可能にします。また、アプリケーションは、デバイスのネイティブ・ユーザー・インターフェースの構文と意味内容の両方にアクセスすることができます。"
    },
    {
      "indent": 3,
      "text": "NETCONF allows a client to discover the set of protocol extensions supported by a server. These \"capabilities\" permit the client to adjust its behavior to take advantage of the features exposed by the device. The capability definitions can be easily extended in a noncentralized manner. Standard and non-standard capabilities can be defined with semantic and syntactic rigor. Capabilities are discussed in Section 8.",
      "ja": "NETCONFは、クライアントがサーバによってサポートされているプロトコルの拡張のセットを発見することができます。これらの「機能」は、デバイスによって公開される機能を利用するために、その動作を調整するために、クライアントを許可します。機能の定義を容易に非集中方法で拡張することができます。標準および非標準機能は、セマンティックと構文厳格に定義することができます。機能はセクション8で説明されています。"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol is a building block in a system of automated configuration. XML is the lingua franca of interchange, providing a flexible but fully specified encoding mechanism for hierarchical content. NETCONF can be used in concert with XML-based transformation technologies, such as XSLT [W3C.REC-xslt-19991116], to provide a system for automated generation of full and partial configurations. The system can query one or more databases for data about networking topologies, links, policies, customers, and services. This data can be transformed using one or more XSLT scripts from a task-oriented, vendor-independent data schema into a form that is specific to the vendor, product, operating system, and software release. The resulting data can be passed to the device using the NETCONF protocol.",
      "ja": "NETCONFプロトコルは、自動化された構成のシステムのビルディングブロックです。 XMLは、階層的なコンテンツのための可撓性が、完全に指定されたエンコーディング機構を提供する、交換の共通語です。 NETCONFは、完全および部分構成の自動生成のためのシステムを提供するために、そのようなXSLT [W3C.REC-XSLT-19991116]などのXMLベースの変換技術と協調して使用することができます。システムは、ネットワークトポロジ、リンク、ポリシー、顧客、およびサービスに関するデータのために1つ以上のデータベースを照会することができます。このデータは、タスク指向の、ベンダーに依存しないデータのベンダーに固有の形式に変換スキーマ、製品、オペレーティングシステム、およびソフトウェアリリースから1つ以上のXSLTスクリプトを使用して形質転換することができます。得られたデータは、NETCONFプロトコルを使用してデバイスに渡すことができます。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "o candidate configuration datastore: A configuration datastore that can be manipulated without impacting the device's current configuration and that can be committed to the running configuration datastore. Not all devices support a candidate configuration datastore.",
      "ja": "O候補のコンフィギュレーション・データストア：デバイスの現在の設定に影響を与えずに操作することができ、それが実行中のコンフィギュレーションデータストアにコミットすることができ、構成データストア。いないすべてのデバイスは、候補コンフィギュレーションデータストアをサポートしています。"
    },
    {
      "indent": 3,
      "text": "o capability: A functionality that supplements the base NETCONF specification.",
      "ja": "O機能：ベースNETCONFの仕様を補完する機能を提供します。"
    },
    {
      "indent": 3,
      "text": "o client: Invokes protocol operations on a server. In addition, a client can subscribe to receive notifications from a server.",
      "ja": "Oクライアント：サーバー上のプロトコルオペレーションを呼び出します。また、クライアントは、サーバからの通知を受け取るために購読することができます。"
    },
    {
      "indent": 3,
      "text": "o configuration data: The set of writable data that is required to transform a system from its initial default state into its current state.",
      "ja": "O構成データ：現在の状態にその初期デフォルト状態からシステムを変換するために必要とする書き込み可能なデータのセット。"
    },
    {
      "indent": 3,
      "text": "o datastore: A conceptual place to store and access information. A datastore might be implemented, for example, using files, a database, flash memory locations, or combinations thereof.",
      "ja": "Oデータストア：情報を保存し、アクセスするための概念的な場所。データストアは、ファイル、データベース、フラッシュメモリ位置、またはそれらの組み合わせを用いて、例えば、実装されるかもしれません。"
    },
    {
      "indent": 3,
      "text": "o configuration datastore: The datastore holding the complete set of configuration data that is required to get a device from its initial default state into a desired operational state.",
      "ja": "O構成データストア：データストアが所望の動作状態にその初期デフォルト状態からデバイスを取得するために必要とされる構成データの完全なセットを保持しています。"
    },
    {
      "indent": 3,
      "text": "o message: A protocol element sent over a session. Messages are well-formed XML documents.",
      "ja": "Oメッセージ：セッションを介して送信されるプロトコル要素。メッセージは整形式XML文書です。"
    },
    {
      "indent": 3,
      "text": "o notification: A server-initiated message indicating that a certain event has been recognized by the server.",
      "ja": "O通知：特定のイベントがサーバによって認識されたことを示すサーバ起動メッセージ。"
    },
    {
      "indent": 3,
      "text": "o protocol operation: A specific remote procedure call, as used within the NETCONF protocol.",
      "ja": "Oプロトコルの動作：特定のリモート・プロシージャ・コール、NETCONFプロトコル内で使用されます。"
    },
    {
      "indent": 3,
      "text": "o remote procedure call (RPC): Realized by exchanging <rpc> and <rpc-reply> messages.",
      "ja": "Oリモートプロシージャコール（RPC）：<RPC>と<RPC返信>メッセージ交換することによって実現しました。"
    },
    {
      "indent": 3,
      "text": "o running configuration datastore: A configuration datastore holding the complete configuration currently active on the device. The running configuration datastore always exists.",
      "ja": "Oコンフィギュレーション・データストアを実行している：コンフィギュレーション・データストアは、デバイス上で現在アクティブな完全な構成を保持しています。実行コンフィギュレーションデータストアは常に存在します。"
    },
    {
      "indent": 3,
      "text": "o server: Executes protocol operations invoked by a client. In addition, a server can send notifications to a client.",
      "ja": "Oサーバは、クライアントによって呼び出されるプロトコル動作を実行します。また、サーバがクライアントに通知を送信することができます。"
    },
    {
      "indent": 3,
      "text": "o session: Client and server exchange messages using a secure, connection-oriented session.",
      "ja": "Oセッション：安全な接続指向のセッションを使用して、クライアントとサーバーのメッセージを交換します。"
    },
    {
      "indent": 3,
      "text": "o startup configuration datastore: The configuration datastore holding the configuration loaded by the device when it boots. Only present on devices that separate the startup configuration datastore from the running configuration datastore.",
      "ja": "Oスタートアップコンフィギュレーションデータストア：それは起動時にデバイスによってロードされたコンフィギュレーションを保持するコンフィギュレーションデータストア。唯一の実行コンフィギュレーションデータストアからスタートアップコンフィギュレーションデータストアを別々のデバイスに存在します。"
    },
    {
      "indent": 3,
      "text": "o state data: The additional data on a system that is not configuration data such as read-only status information and collected statistics.",
      "ja": "O状態データ：そのような読み出し専用ステータス情報などのデータを構成し、統計情報を収集していないシステム上で追加データ。"
    },
    {
      "indent": 3,
      "text": "o user: The authenticated identity of the client. The authenticated identity of a client is commonly referred to as the NETCONF username.",
      "ja": "Oユーザ：クライアントの認証されたアイデンティティ。クライアントの認証されたアイデンティティは、一般的にNETCONFのユーザ名と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "1.2. Protocol Overview",
      "section_title": true,
      "ja": "1.2. プロトコルの概要"
    },
    {
      "indent": 3,
      "text": "NETCONF uses a simple RPC-based mechanism to facilitate communication between a client and a server. The client can be a script or application typically running as part of a network manager. The server is typically a network device. The terms \"device\" and \"server\" are used interchangeably in this document, as are \"client\" and \"application\".",
      "ja": "NETCONFは、クライアントとサーバ間の通信を容易にするための簡単なRPCベースのメカニズムを使用しています。クライアントは、スクリプトまたはアプリケーションは、通常、ネットワーク管理者の一部として実行することができます。サーバーは通常、ネットワークデバイスです。 「クライアント」と「応用」されているような用語「デバイス」と「サーバー」は、この文書では交換可能に使用されています。"
    },
    {
      "indent": 3,
      "text": "A NETCONF session is the logical connection between a network administrator or network configuration application and a network device. A device MUST support at least one NETCONF session and SHOULD support multiple sessions. Global configuration attributes can be changed during any authorized session, and the effects are visible in all sessions. Session-specific attributes affect only the session in which they are changed.",
      "ja": "NETCONFセッションは、ネットワーク管理者またはネットワーク・コンフィギュレーション・アプリケーションとネットワークデバイス間の論理接続です。デバイスは、少なくとも1つのNETCONFセッションをサポートしなければならないし、複数のセッションをサポートする必要があります。グローバル構成属性は、任意の許可セッション中に変更することができ、効果はすべてのセッションで表示されます。セッション固有の属性は、それらを変更しただけのセッションに影響を与えます。"
    },
    {
      "indent": 3,
      "text": "NETCONF can be conceptually partitioned into four layers as shown in Figure 1.",
      "ja": "図1に示すように、NETCONFは、概念的に4層に分割することができます。"
    },
    {
      "indent": 3,
      "text": "         Layer                 Example\n    +-------------+      +-----------------+      +----------------+\n(4) |   Content   |      |  Configuration  |      |  Notification  |\n    |             |      |      data       |      |      data      |\n    +-------------+      +-----------------+      +----------------+\n           |                       |                      |\n    +-------------+      +-----------------+              |\n(3) | Operations  |      |  <edit-config>  |              |\n    |             |      |                 |              |\n    +-------------+      +-----------------+              |\n           |                       |                      |\n    +-------------+      +-----------------+      +----------------+\n(2) |  Messages   |      |     <rpc>,      |      | <notification> |\n    |             |      |   <rpc-reply>   |      |                |\n    +-------------+      +-----------------+      +----------------+\n           |                       |                      |\n    +-------------+      +-----------------------------------------+\n(1) |   Secure    |      |  SSH, TLS, BEEP/TLS, SOAP/HTTP/TLS, ... |\n    |  Transport  |      |                                         |\n    +-------------+      +-----------------------------------------+",
      "raw": true
    },
    {
      "indent": 21,
      "text": "Figure 1: NETCONF Protocol Layers",
      "ja": "図1：NETCONFプロトコル層"
    },
    {
      "indent": 3,
      "text": "(1) The Secure Transport layer provides a communication path between the client and server. NETCONF can be layered over any transport protocol that provides a set of basic requirements. Section 2 discusses these requirements.",
      "ja": "（1）セキュア・トランスポート層では、クライアントとサーバの間の通信経路を提供します。 NETCONFは、基本的な要件のセットを提供する任意のトランスポートプロトコル上に積層することができます。第2節では、これらの要件について説明します。"
    },
    {
      "indent": 3,
      "text": "(2) The Messages layer provides a simple, transport-independent framing mechanism for encoding RPCs and notifications. Section 4 documents the RPC messages, and [RFC5717] documents notifications.",
      "ja": "（2）メッセージの層は、RPCのと通知を符号化するための簡単な、トランスポートに依存しないフレーミング機構を提供します。第4節では、RPCメッセージ、および[RFC5717]の文書通知を文書化します。"
    },
    {
      "indent": 3,
      "text": "(3) The Operations layer defines a set of base protocol operations invoked as RPC methods with XML-encoded parameters. Section 7 details the list of base protocol operations.",
      "ja": "（3）操作層は、XMLでエンコードされたパラメータを使用してRPCメソッドとして呼び出された基本プロトコルのオペレーションのセットを定義します。セクション7は、ベースプロトコル操作のリストを詳述します。"
    },
    {
      "indent": 3,
      "text": "(4) The Content layer is outside the scope of this document. It is expected that separate efforts to standardize NETCONF data models will be undertaken.",
      "ja": "（4）コンテンツの層は、この文書の範囲外です。 NETCONFデータモデルを標準化するために、別の努力が行われることが期待されます。"
    },
    {
      "indent": 3,
      "text": "The YANG data modeling language [RFC6020] has been developed for specifying NETCONF data models and protocol operations, covering the Operations and the Content layers of Figure 1.",
      "ja": "YANGデータモデリング言語[RFC6020]は、NETCONFデータモデルおよびプロトコル動作を指定する操作と、図1のコンテンツの層を被覆するために開発されました。"
    },
    {
      "indent": 0,
      "text": "1.3. Capabilities",
      "section_title": true,
      "ja": "1.3. 機能"
    },
    {
      "indent": 3,
      "text": "A NETCONF capability is a set of functionality that supplements the base NETCONF specification. The capability is identified by a uniform resource identifier (URI) [RFC3986].",
      "ja": "NETCONFの機能はベースNETCONFの仕様を補完する機能のセットです。能力は、ユニフォームリソース識別子（URI）[RFC3986]によって識別されます。"
    },
    {
      "indent": 3,
      "text": "Capabilities augment the base operations of the device, describing both additional operations and the content allowed inside operations. The client can discover the server's capabilities and use any additional operations, parameters, and content defined by those capabilities.",
      "ja": "機能は、追加の動作と操作内部許容コンテンツの両方を記述し、デバイスのベース動作を補強します。クライアントは、サーバの機能を発見し、それらの能力によって定義された任意の追加の操作、パラメータ、およびコンテンツを使用することができます。"
    },
    {
      "indent": 3,
      "text": "The capability definition might name one or more dependent capabilities. To support a capability, the server MUST support any capabilities upon which it depends.",
      "ja": "機能の定義は、一つ以上の依存する機能に名前を付けることがあります。機能をサポートするために、サーバーは、それが依存するすべての機能をサポートしなければなりません。"
    },
    {
      "indent": 3,
      "text": "Section 8 defines the capabilities exchange that allows the client to discover the server's capabilities. Section 8 also lists the set of capabilities defined in this document.",
      "ja": "第8章では、クライアントがサーバの機能を発見することを可能にする機能交換を定義します。セクション8も、この文書で定義された機能のセットを示しています。"
    },
    {
      "indent": 3,
      "text": "Additional capabilities can be defined at any time in external documents, allowing the set of capabilities to expand over time. Standards bodies can define standardized capabilities, and implementations can define proprietary ones. A capability URI MUST sufficiently distinguish the naming authority to avoid naming collisions.",
      "ja": "追加機能は、機能のセットは、時間の経過とともに拡大することができ、外部の文書でいつでも定義することができます。標準化団体は、標準化された機能を定義することができ、および実装は、独自のものを定義することができます。機能は、URIは十分に名前の衝突を避けるために、命名権を区別しなければなりません。"
    },
    {
      "indent": 0,
      "text": "1.4. Separation of Configuration and State Data",
      "section_title": true,
      "ja": "1.4. 構成と状態データの分離"
    },
    {
      "indent": 3,
      "text": "The information that can be retrieved from a running system is separated into two classes, configuration data and state data. Configuration data is the set of writable data that is required to transform a system from its initial default state into its current state. State data is the additional data on a system that is not configuration data such as read-only status information and collected statistics. When a device is performing configuration operations, a number of problems would arise if state data were included:",
      "ja": "実行中のシステムから取得できる情報は、2つのクラス、構成データと状態データとに分離されます。コンフィギュレーション・データは、現在の状態にその初期デフォルト状態からシステムを変換するために必要とする書き込み可能なデータのセットです。状態データは、読み取り専用のステータス情報などのデータを設定および統計情報を収集されていないシステム上の追加データです。デバイスは、構成操作を実行しているときの状態データは含まれていた場合、多くの問題が生じるであろう。"
    },
    {
      "indent": 3,
      "text": "o Comparisons of configuration data sets would be dominated by irrelevant entries such as different statistics.",
      "ja": "コンフィギュレーション・データ・セットのOの比較は、異なる統計のような無関係なエントリによって支配されるであろう。"
    },
    {
      "indent": 3,
      "text": "o Incoming data could contain nonsensical requests, such as attempts to write read-only data.",
      "ja": "O受信データは、読み取り専用のデータを書き込もうとして無意味な要求を、含めることができます。"
    },
    {
      "indent": 3,
      "text": "o The data sets would be large.",
      "ja": "Oデータセットは大だろう。"
    },
    {
      "indent": 3,
      "text": "o Archived data could contain values for read-only data items, complicating the processing required to restore archived data.",
      "ja": "Oアーカイブデータはアーカイブされたデータを復元するために必要な処理を複雑に、読み取り専用のデータ項目の値を含めることができます。"
    },
    {
      "indent": 3,
      "text": "To account for these issues, the NETCONF protocol recognizes the difference between configuration data and state data and provides operations for each. The <get-config> operation retrieves configuration data only, while the <get> operation retrieves configuration and state data.",
      "ja": "これらの問題を考慮して、NETCONFプロトコルは、構成データと状態データとの差を認識し、それぞれのための操作を提供します。 <GET>操作が構成および状態データを取得しながら<GET-config>の動作は、専用の設定データを取得します。"
    },
    {
      "indent": 3,
      "text": "Note that the NETCONF protocol is focused on the information required to get the device into its desired running state. The inclusion of other important, persistent data is implementation specific. For example, user files and databases are not treated as configuration data by the NETCONF protocol.",
      "ja": "NETCONFプロトコルがその所望の実行状態にデバイスを取得するために必要な情報に焦点を当てていることに注意してください。その他の重要な、永続的なデータを含めることは、実装固有のものです。たとえば、ユーザーファイルとデータベースは、NETCONFプロトコルによって構成データとして扱われません。"
    },
    {
      "indent": 3,
      "text": "For example, if a local database of user authentication data is stored on the device, it is an implementation-dependent matter whether it is included in configuration data.",
      "ja": "ユーザ認証データのローカルデータベースがデバイス上に格納されている場合、例えば、それは、構成データに含まれているか否かを実装依存問題です。"
    },
    {
      "indent": 0,
      "text": "2. Transport Protocol Requirements",
      "section_title": true,
      "ja": "2.トランスポートプロトコルの要件"
    },
    {
      "indent": 3,
      "text": "NETCONF uses an RPC-based communication paradigm. A client sends a series of one or more RPC request messages, which cause the server to respond with a corresponding series of RPC reply messages.",
      "ja": "NETCONFは、RPCベースの通信パラダイムを使用します。クライアントは、サーバーがRPC応答メッセージの対応する一連で応答させるような1つ以上のRPC要求メッセージ、一連のを送信します。"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol can be layered on any transport protocol that provides the required set of functionality. It is not bound to any particular transport protocol, but allows a mapping to define how it can be implemented over any specific protocol.",
      "ja": "NETCONFプロトコルは、機能の必要なセットを提供する任意のトランスポートプロトコル上に積層することができます。これは、任意の特定のトランスポートプロトコルにバインドされていませんが、マッピングは、それがいかなる特定のプロトコル上で実装する方法を定義することができます。"
    },
    {
      "indent": 3,
      "text": "The transport protocol MUST provide a mechanism to indicate the session type (client or server) to the NETCONF protocol layer.",
      "ja": "トランスポートプロトコルは、NETCONFプロトコル層にセッション・タイプ（クライアントまたはサーバ）を示すためのメカニズムを提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "This section details the characteristics that NETCONF requires from the underlying transport protocol.",
      "ja": "このセクションでは、NETCONFは、基礎となるトランスポートプロトコルから必要と特徴を詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "2.1. Connection-Oriented Operation",
      "section_title": true,
      "ja": "2.1. コネクション指向の操作"
    },
    {
      "indent": 3,
      "text": "NETCONF is connection-oriented, requiring a persistent connection between peers. This connection MUST provide reliable, sequenced data delivery. NETCONF connections are long-lived, persisting between protocol operations.",
      "ja": "NETCONFは、ピア間の永続的な接続を必要とする、コネクション型です。この接続は、信頼性、配列決定されたデータ配信を提供しなければなりません。 NETCONF接続は、プロトコル動作の間持続する、長寿命です。"
    },
    {
      "indent": 3,
      "text": "In addition, resources requested from the server for a particular connection MUST be automatically released when the connection closes, making failure recovery simpler and more robust. For example, when a lock is acquired by a client, the lock persists until either it is explicitly released or the server determines that the connection has been terminated. If a connection is terminated while the client holds a lock, the server can perform any appropriate recovery. The <lock> operation is further discussed in Section 7.5.",
      "ja": "接続は、障害回復がよりシンプルかつ堅牢な作り、閉じたときに加えて、特定の接続のためのサーバから要求されたリソースが自動的に解放されなければなりません。ロックがクライアントによって取得された場合、それが明示的に解放されるか、サーバが接続を終了したと判断するまで、例えば、ロックが持続します。クライアントがロックを保持している間、接続が終了した場合、サーバーは、任意の適切なリカバリを実行することができます。 <ロック>動作はさらに、セクション7.5で議論されています。"
    },
    {
      "indent": 0,
      "text": "2.2. Authentication, Integrity, and Confidentiality",
      "section_title": true,
      "ja": "2.2. 認証、整合性、および機密性"
    },
    {
      "indent": 3,
      "text": "NETCONF connections MUST provide authentication, data integrity, confidentiality, and replay protection. NETCONF depends on the transport protocol for this capability. A NETCONF peer assumes that appropriate levels of security and confidentiality are provided independently of this document. For example, connections could be encrypted using Transport Layer Security (TLS) [RFC5246] or Secure Shell (SSH) [RFC4251], depending on the underlying protocol.",
      "ja": "NETCONF接続は認証、データの整合性、機密性、および再生保護を提供しなければなりません。 NETCONFはこの機能のためのトランスポートプロトコルに依存します。 NETCONFピアは、セキュリティおよび機密性の適切なレベルは、独立して、この文書の設けられていることを前提としています。例えば、接続は、基礎となるプロトコルに応じて、トランスポート層セキュリティ（TLS）[RFC5246]またはセキュアシェル（SSH）[RFC4251]を使用して暗号化することができます。"
    },
    {
      "indent": 3,
      "text": "NETCONF connections MUST be authenticated. The transport protocol is responsible for authentication of the server to the client and authentication of the client to the server. A NETCONF peer assumes that the connection's authentication information has been validated by the underlying transport protocol using sufficiently trustworthy mechanisms and that the peer's identity has been sufficiently proven.",
      "ja": "NETCONF接続が認証される必要があります。トランスポートプロトコルは、サーバーへのクライアントおよびクライアントの認証にサーバーの認証を担当しています。 NETCONFピアは、接続の認証情報が十分に信頼できるメカニズムを使用して、基礎となるトランスポートプロトコルによって、およびピアのアイデンティティが十分に証明されていることが確認されていることを前提としています。"
    },
    {
      "indent": 3,
      "text": "One goal of NETCONF is to provide a programmatic interface to the device that closely follows the functionality of the device's native interface. Therefore, it is expected that the underlying protocol uses existing authentication mechanisms available on the device. For example, a NETCONF server on a device that supports RADIUS [RFC2865] might allow the use of RADIUS to authenticate NETCONF sessions.",
      "ja": "NETCONFの目標の1つは密接にデバイスのネイティブインタフェースの機能を、以下のデバイスへのプログラム・インタフェースを提供することです。したがって、基本的なプロトコルは、デバイス上で利用可能な既存の認証メカニズムを使用することが期待されます。たとえば、RADIUS [RFC2865]をサポートしているデバイス上のNETCONFサーバは、RADIUSを使用すると、NETCONFセッションを認証できるようにするかもしれません。"
    },
    {
      "indent": 3,
      "text": "The authentication process MUST result in an authenticated client identity whose permissions are known to the server. The authenticated identity of a client is commonly referred to as the NETCONF username. The username is a string of characters that match the \"Char\" production from Section 2.2 of [W3C.REC-xml-20001006]. The algorithm used to derive the username is transport protocol specific and in addition specific to the authentication mechanism used by the transport protocol. The transport protocol MUST provide a username to be used by the other NETCONF layers.",
      "ja": "認証プロセスは、その権限サーバーに知られている認証されたクライアントのアイデンティティをもたらさなければなりません。クライアントの認証されたアイデンティティは、一般的にNETCONFのユーザ名と呼ばれています。ユーザー名は、[W3C.REC-XML-20001006]の2.2節から「シャア」の生産に一致する文字列です。ユーザ名を導出するために使用されるアルゴリズムは、特定のトランスポートプロトコルによって使用される認証メカニズムに固有の他に、トランスポートプロトコルです。トランスポート・プロトコルは、他NETCONF層によって使用されるユーザ名を提供しなければなりません。"
    },
    {
      "indent": 3,
      "text": "The access permissions of a given client, identified by its NETCONF username, are part of the configuration of the NETCONF server. These permissions MUST be enforced during the remainder of the NETCONF session. The details of how access control is configured is outside the scope of this document.",
      "ja": "そのNETCONFのユーザー名で識別される特定のクライアントのアクセス許可は、NETCONFサーバの構成の一部です。これらの権限は、NETCONFセッションの残りの部分の間に実施されなければなりません。アクセス制御の設定方法の詳細は、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "2.3. Mandatory Transport Protocol",
      "section_title": true,
      "ja": "2.3. 必須トランスポートプロトコル"
    },
    {
      "indent": 3,
      "text": "A NETCONF implementation MUST support the SSH transport protocol mapping [RFC6242].",
      "ja": "NETCONF実装は、SSHトランスポートプロトコルマッピング[RFC6242]をサポートしなければなりません。"
    },
    {
      "indent": 0,
      "text": "3. XML Considerations",
      "section_title": true,
      "ja": "3. XMLの考慮事項"
    },
    {
      "indent": 3,
      "text": "XML serves as the encoding format for NETCONF, allowing complex hierarchical data to be expressed in a text format that can be read, saved, and manipulated with both traditional text tools and tools specific to XML.",
      "ja": "XMLは、複雑な階層データは、読み取り保存、およびXMLに固有の伝統的なテキストツールとツールの両方で操作することができるテキスト形式で表現されることを可能にする、NETCONFのための符号化フォーマットとして機能します。"
    },
    {
      "indent": 3,
      "text": "All NETCONF messages MUST be well-formed XML, encoded in UTF-8 [RFC3629]. If a peer receives an <rpc> message that is not well-formed XML or not encoded in UTF-8, it SHOULD reply with a \"malformed-message\" error. If a reply cannot be sent for any reason, the server MUST terminate the session.",
      "ja": "全てNETCONFメッセージはUTF-8 [RFC3629]で符号化、XMLを十分に形成されなければなりません。ピアがXMLまたはUTF-8でエンコードされていない十分に形成されていない<RPC>メッセージを受信した場合、それは「不正メッセージ」エラーで応答すべきです。返事が何らかの理由で送信できない場合は、サーバーはセッションを終えなければなりません。"
    },
    {
      "indent": 3,
      "text": "A NETCONF message MAY begin with an XML declaration (see Section 2.8 of [W3C.REC-xml-20001006]).",
      "ja": "NETCONFメッセージはXML宣言（[W3C.REC-XML-20001006]のセクション2.8を参照）で開始することができます。"
    },
    {
      "indent": 3,
      "text": "This section discusses a small number of XML-related considerations pertaining to NETCONF.",
      "ja": "このセクションでは、NETCONFに関連するXML関連の考慮事項の少数について説明します。"
    },
    {
      "indent": 0,
      "text": "3.1. Namespace",
      "section_title": true,
      "ja": "3.1. 名前空間"
    },
    {
      "indent": 3,
      "text": "All NETCONF protocol elements are defined in the following namespace:",
      "ja": "すべてのNETCONFプロトコル要素は、次の名前空間で定義されています。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:xml:ns:netconf:base:1.0",
      "ja": "URN：IETF：のparams：XML：NS：NETCONF：ベース：1.0"
    },
    {
      "indent": 3,
      "text": "NETCONF capability names MUST be URIs [RFC3986]. NETCONF capabilities are discussed in Section 8.",
      "ja": "NETCONFの機能名は、URIの[RFC3986]でなければなりません。 NETCONF機能はセクション8で説明されています。"
    },
    {
      "indent": 0,
      "text": "3.2. Document Type Declarations",
      "section_title": true,
      "ja": "3.2. 文書型宣言"
    },
    {
      "indent": 3,
      "text": "Document type declarations (see Section 2.8 of [W3C.REC-xml-20001006]) MUST NOT appear in NETCONF content.",
      "ja": "文書型宣言は、（[W3C.REC-XML-20001006]のセクション2.8を参照）NETCONFの内容に現れてはいけません。"
    },
    {
      "indent": 0,
      "text": "4. RPC Model",
      "section_title": true,
      "ja": "4. RPCモデル"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol uses an RPC-based communication model. NETCONF peers use <rpc> and <rpc-reply> elements to provide transport-protocol-independent framing of NETCONF requests and responses.",
      "ja": "NETCONFプロトコルは、RPCベースの通信モデルを使用します。 NETCONFピアは<RPC>と<RPC-返信>要素は、NETCONFの要求と応答のトランスポートプロトコルに依存しないフレーミングを提供するために使用します。"
    },
    {
      "indent": 3,
      "text": "The syntax and XML encoding of the Messages-layer RPCs are formally defined in the XML schema in Appendix B.",
      "ja": "メッセージ層RPCの構文とXMLエンコーディングを正式付録BにXMLスキーマで定義されています"
    },
    {
      "indent": 0,
      "text": "4.1. <rpc> Element",
      "section_title": true,
      "ja": "4.1.  <RPC>エレメント"
    },
    {
      "indent": 3,
      "text": "The <rpc> element is used to enclose a NETCONF request sent from the client to the server.",
      "ja": "<RPC>要素は、クライアントからサーバに送られたNETCONF要求を囲むために使用されます。"
    },
    {
      "indent": 3,
      "text": "The <rpc> element has a mandatory attribute \"message-id\", which is a string chosen by the sender of the RPC that will commonly encode a monotonically increasing integer. The receiver of the RPC does not decode or interpret this string but simply saves it to be used as a \"message-id\" attribute in any resulting <rpc-reply> message. The sender MUST ensure that the \"message-id\" value is normalized according to the XML attribute value normalization rules defined in [W3C.REC-xml-20001006] if the sender wants the string to be returned unmodified. For example:",
      "ja": "<RPC>要素は、一般的に単調に増加する整数をコードするRPCの送信者によって選択された文字列である必須属性「メッセージID」を有します。 RPCの受信機は、デコード又は解釈、この文字列を単に任意得られた<rpc-応答>メッセージ内の「メッセージID」属性として使用するためにそれを保存しません。送信者は、送信者が非修飾返される文字列を希望する場合、「メッセージID」の値が[W3C.REC-XML-20001006]で定義されたXML属性値の正規化ルールに従って正規化されていることを確認しなければなりません。例えば："
    },
    {
      "indent": 7,
      "text": "<rpc message-id=\"101\"\n     xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <some-method>\n    <!-- method parameters here... -->\n  </some-method>\n</rpc>",
      "raw": true
    },
    {
      "indent": 3,
      "text": "If additional attributes are present in an <rpc> element, a NETCONF peer MUST return them unmodified in the <rpc-reply> element. This includes any \"xmlns\" attributes.",
      "ja": "追加の属性は、<RPC>要素内に存在する場合、NETCONFピアは<RPC返信>要素に、それらが非修飾返さなければなりません。これは、任意の「のxmlns」属性が含まれています。"
    },
    {
      "indent": 3,
      "text": "The name and parameters of an RPC are encoded as the contents of the <rpc> element. The name of the RPC is an element directly inside the <rpc> element, and any parameters are encoded inside this element.",
      "ja": "名前とRPCのパラメータは、<RPC>要素の内容として符号化されます。 RPCの名前を直接<RPC>要素内の要素であり、そして任意のパラメータは、この要素の内部に符号化されます。"
    },
    {
      "indent": 3,
      "text": "The following example invokes a method called <my-own-method>, which has two parameters, <my-first-parameter>, with a value of \"14\", and <another-parameter>, with a value of \"fred\":",
      "ja": "次の例は、「フレッド」の値が、「14」、および<他のパラメータ>の値と、2つのパラメータ<私の第パラメータ>を有する<MY-自法>と呼ばれるメソッドを、呼び出します："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <my-own-method xmlns=\"http://example.net/me/my-own/1.0\"> <my-first-parameter>14</my-first-parameter> <another-parameter>fred</another-parameter> </my-own-method> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <MY-自身法のxmlns = \"http://example.net/me/my-自身/ 1.0\" > <私の-最初のパラメータ> 14 </私の-最初のパラメータ> <他のパラメータ>フレッド</他のパラメータ> </私-自身-方法> </ RPC>"
    },
    {
      "indent": 3,
      "text": "The following example invokes a <rock-the-house> method with a <zip-code> parameter of \"27606-0100\":",
      "ja": "次の例では、<ロック・ハウス>「27606から0100」の<郵便番号>パラメータを持つメソッドを呼び出します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <rock-the-house xmlns=\"http://example.net/rock/1.0\"> <zip-code>27606-0100</zip-code> </rock-the-house> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック・ハウスのxmlns = \"http://example.net/rock/1.0\" > <郵便番号> 27606-0100 </郵便番号> </ロック・ハウス> </ RPC>"
    },
    {
      "indent": 3,
      "text": "The following example invokes the NETCONF <get> method with no parameters:",
      "ja": "次の例では、パラメータなしでNETCONF <GET>メソッドを呼び出します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET /> </ RPC>"
    },
    {
      "indent": 0,
      "text": "4.2. <rpc-reply> Element",
      "section_title": true,
      "ja": "4.2.  <RPC-返信>要素"
    },
    {
      "indent": 3,
      "text": "The <rpc-reply> message is sent in response to an <rpc> message.",
      "ja": "<rpc-応答>メッセージは、<RPC>メッセージに応答して送信されます。"
    },
    {
      "indent": 3,
      "text": "The <rpc-reply> element has a mandatory attribute \"message-id\", which is equal to the \"message-id\" attribute of the <rpc> for which this is a response.",
      "ja": "<RPC返信>要素は、これが応答された<RPC>の「メッセージID」属性に等しい必須属性「メッセージID」を有します。"
    },
    {
      "indent": 3,
      "text": "A NETCONF server MUST also return any additional attributes included in the <rpc> element unmodified in the <rpc-reply> element.",
      "ja": "NETCONFサーバは、<RPC返信>要素で修飾されていない<RPC>要素に含まれる任意の追加属性を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "The response data is encoded as one or more child elements to the <rpc-reply> element.",
      "ja": "応答データは、<RPC返信>要素に1つ以上の子要素として符号化されます。"
    },
    {
      "indent": 3,
      "text": "For example:",
      "ja": "例えば："
    },
    {
      "indent": 3,
      "text": "The following <rpc> element invokes the NETCONF <get> method and includes an additional attribute called \"user-id\". Note that the \"user-id\" attribute is not in the NETCONF namespace. The returned <rpc-reply> element returns the \"user-id\" attribute, as well as the requested content.",
      "ja": "次の<RPC>要素は、NETCONF <GET>メソッドを呼び出し、「ユーザーID」と呼ばれる追加の属性を含んでいます。 「ユーザID」属性はNETCONFの名前空間ではないことに注意してください。返さ<RPC返信>要素は、「ユーザID」属性だけでなく、要求されたコンテンツを返します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" xmlns:ex=\"http://example.net/content/1.0\" ex:user-id=\"fred\"> <get/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のxmlns：EX = \"http://example.net/content/1.0\" 例：ユーザID = \"フレッド\"> <GET /> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" xmlns:ex=\"http://example.net/content/1.0\" ex:user-id=\"fred\"> <data> <!-- contents here... --> </data> </rpc-reply>",
      "ja": "<RPC返信メッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のxmlns：EX = \"http://example.net/content/1.0\" EX：ユーザ-id = \"フレッド\"> <データ> <！ - ここに内容...  - > </データ> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "4.3. <rpc-error> Element",
      "section_title": true,
      "ja": "4.3.  <RPC-エラー>要素"
    },
    {
      "indent": 3,
      "text": "The <rpc-error> element is sent in <rpc-reply> messages if an error occurs during the processing of an <rpc> request.",
      "ja": "エラーが<RPC>要求の処理中に発生した場合、<RPCエラー>要素は、<RPC返信>メッセージで送信されます。"
    },
    {
      "indent": 3,
      "text": "If a server encounters multiple errors during the processing of an <rpc> request, the <rpc-reply> MAY contain multiple <rpc-error> elements. However, a server is not required to detect or report more than one <rpc-error> element, if a request contains multiple errors. A server is not required to check for particular error conditions in a specific sequence. A server MUST return an <rpc-error> element if any error conditions occur during processing.",
      "ja": "サーバーは<RPC>要求<RPC返信>の処理中に複数のエラーが発生した場合に複数の<RPCエラー>要素を含んでいてもよいです。要求が複数のエラーが含まれている場合は、サーバは、複数の<RPC-エラー>要素を検出または報告する必要はありません。サーバーは、特定の配列中の特定のエラー状態をチェックする必要はありません。エラー状態が処理中に発生した場合、サーバは、<RPCエラー>要素を返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server MUST NOT return application-level- or data-model-specific error information in an <rpc-error> element for which the client does not have sufficient access rights.",
      "ja": "サーバは、クライアントが十分なアクセス権を持たないため、<RPCエラー>要素には、アプリケーション、レベルやデータ・モデル固有のエラー情報を返してはなりません。"
    },
    {
      "indent": 3,
      "text": "The <rpc-error> element includes the following information:",
      "ja": "<RPCエラー>要素は、以下の情報が含まれます。"
    },
    {
      "indent": 3,
      "text": "error-type: Defines the conceptual layer that the error occurred. Enumeration. One of:",
      "ja": "エラータイプ：エラーが発生したことを概念的な層を定義します。列挙。の一つ："
    },
    {
      "indent": 6,
      "text": "* transport (layer: Secure Transport)",
      "ja": "*輸送（層：セキュア交通）"
    },
    {
      "indent": 6,
      "text": "* rpc (layer: Messages)",
      "ja": "* RPC（層：メッセージ）"
    },
    {
      "indent": 6,
      "text": "* protocol (layer: Operations)",
      "ja": "*プロトコル（レイヤ：オペレーション）"
    },
    {
      "indent": 6,
      "text": "* application (layer: Content)",
      "ja": "*アプリケーション（レイヤ：コンテンツ）"
    },
    {
      "indent": 3,
      "text": "error-tag: Contains a string identifying the error condition. See Appendix A for allowed values.",
      "ja": "エラータグは：エラー状態を識別する文字列が含まれています。使用できる値については、付録Aを参照してください。"
    },
    {
      "indent": 3,
      "text": "error-severity: Contains a string identifying the error severity, as determined by the device. One of:",
      "ja": "エラーの重大度：デバイスによって決定されるように、エラーの重大度を識別する文字列を含んでいます。の一つ："
    },
    {
      "indent": 6,
      "text": "* error",
      "ja": "*エラー"
    },
    {
      "indent": 6,
      "text": "* warning",
      "ja": "*警告"
    },
    {
      "indent": 6,
      "text": "Note that there are no <error-tag> values defined in this document that utilize the \"warning\" enumeration. This is reserved for future use.",
      "ja": "何の<error-タグ>「警告」列挙を使用し、この文書で定義された値が存在しないことに注意してください。これは、将来の使用のために予約されています。"
    },
    {
      "indent": 3,
      "text": "error-app-tag: Contains a string identifying the data-model-specific or implementation-specific error condition, if one exists. This element will not be present if no appropriate application error-tag can be associated with a particular error condition. If a data-model-specific and an implementation-specific error-app-tag both exist, then the data-model-specific value MUST be used by the server.",
      "ja": "エラーアプリタグは：が存在する場合、データ・モデル固有または実装固有のエラー状態を識別する文字列を含んでいます。いかなる適切なアプリケーションエラータグは、特定のエラー状態に関連することができない場合には、この要素が存在しないであろう。データモデル固有および実装固有のエラーアプリタグの両方が存在する場合、データモデル固有の値は、サーバによって使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "error-path: Contains the absolute XPath [W3C.REC-xpath-19991116] expression identifying the element path to the node that is associated with the error being reported in a particular <rpc-error> element. This element will not be present if no appropriate payload element or datastore node can be associated with a particular error condition.",
      "ja": "エラーパスが絶対XPathのエラーが特定の<RPCエラー>要素で報告されて関連付けられているノードに要素パスを識別する[W3C.REC-のXPath-19991116]式を含みます。いかなる適切なペイロード要素またはデータストアのノードは、特定のエラー状態に関連することができない場合には、この要素が存在しないであろう。"
    },
    {
      "indent": 6,
      "text": "The XPath expression is interpreted in the following context:",
      "ja": "XPath式は、以下の文脈で解釈されます。"
    },
    {
      "indent": 6,
      "text": "* The set of namespace declarations are those in scope on the <rpc-error> element.",
      "ja": "*名前空間宣言のセットは、<RPCエラー>要素の範囲内のものです。"
    },
    {
      "indent": 6,
      "text": "* The set of variable bindings is empty.",
      "ja": "*変数バインディングのセットは空です。"
    },
    {
      "indent": 6,
      "text": "* The function library is the core function library.",
      "ja": "*関数ライブラリは、コア関数ライブラリです。"
    },
    {
      "indent": 6,
      "text": "The context node depends on the node associated with the error being reported:",
      "ja": "コンテキストノードは、エラーが報告されているに関連付けられているノードによって異なります。"
    },
    {
      "indent": 6,
      "text": "* If a payload element can be associated with the error, the context node is the rpc request's document node (i.e., the <rpc> element).",
      "ja": "ペイロード要素がエラーに関連付けることができる場合*、コンテキストノードは、RPCリクエストのドキュメントノード（すなわち、<RPC>要素）です。"
    },
    {
      "indent": 6,
      "text": "* Otherwise, the context node is the root of all data models, i.e., the node that has the top-level nodes from all data models as children.",
      "ja": "*そうでない場合は、コンテキスト・ノードは、すべてのデータ・モデルのルート、即ち、子供のようなすべてのデータモデルから最上位ノードを有するノードです。"
    },
    {
      "indent": 3,
      "text": "error-message: Contains a string suitable for human display that describes the error condition. This element will not be present if no appropriate message is provided for a particular error condition. This element SHOULD include an \"xml:lang\" attribute as defined in [W3C.REC-xml-20001006] and discussed in [RFC3470].",
      "ja": "エラーメッセージ：エラー状態を記述する人間の表示に適した文字列が含まれています。いかなる適切なメッセージが特定のエラー状態のために提供されていない場合、この要素が存在しないであろう。 [W3C.REC-XML-20001006]で定義され、[RFC3470]で議論するように属性：この要素は、 \"langのXML\" を含むべきです。"
    },
    {
      "indent": 3,
      "text": "error-info: Contains protocol- or data-model-specific error content. This element will not be present if no such error content is provided for a particular error condition. The list in Appendix A defines any mandatory error-info content for each error. After any protocol-mandated content, a data model definition MAY mandate that certain application-layer error information be included in the error-info container. An implementation MAY include additional elements to provide extended and/or implementation-specific debugging information.",
      "ja": "エラー情報：プロトコルに、データ・モデル固有のエラー内容が含まれています。そのようなエラー内容は、特定のエラー状態のために提供されていない場合、この要素が存在しないであろう。付録Aのリストには、各エラーのいずれかの必須のエラー情報の内容を定義します。任意のプロトコルによって義務付けられたコンテンツの後、データモデルの定義は、特定のアプリケーション層のエラー情報は、エラー情報のコンテナに含まれることを義務付ける場合があります。実装は、拡張および/または実装固有のデバッグ情報を提供するために、追加の要素を含んでもよいです。"
    },
    {
      "indent": 3,
      "text": "Appendix A enumerates the standard NETCONF errors.",
      "ja": "付録Aには、標準のNETCONFのエラーを列挙します。"
    },
    {
      "indent": 3,
      "text": "Example: An error is returned if an <rpc> element is received without a \"message-id\" attribute. Note that only in this case is it acceptable for the NETCONF peer to omit the \"message-id\" attribute in the <rpc-reply> element.",
      "ja": "例：<RPC>要素は、「メッセージid」属性なしで受信された場合、エラーが返されます。この場合にのみ、それは許容されるNETCONFピアが<RPC返信>要素に「メッセージID」属性を省略するためのものであることに留意されたいです。"
    },
    {
      "indent": 5,
      "text": "<rpc xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> </get-config> </rpc>",
      "ja": "<RPCのxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <GET-config>の<ソース> <ランニング/> </ソース> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <rpc-error> <error-type>rpc</error-type> <error-tag>missing-attribute</error-tag> <error-severity>error</error-severity> <error-info> <bad-attribute>message-id</bad-attribute> <bad-element>rpc</bad-element> </error-info> </rpc-error> </rpc-reply>",
      "ja": "<RPC返信のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <RPCエラー> <エラータイプ> RPC </エラータイプ> <エラータグ>欠落属性< /エラータグ> <エラーの重大度>誤り</エラーの重大度> <エラー情報> <悪い属性>メッセージID </悪い属性> <悪い要素> RPC </不良素子> </エラー・インフォメーション> </ RPC-エラー> </ RPC-返信>"
    },
    {
      "indent": 3,
      "text": "The following <rpc-reply> illustrates the case of returning multiple <rpc-error> elements.",
      "ja": "次の<RPC返信>複数の<RPCエラー>要素を返す場合を示しています。"
    },
    {
      "indent": 3,
      "text": "Note that the data models used in the examples in this section use the <name> element to distinguish between multiple instances of the <interface> element.",
      "ja": "このセクションの例で使用されるデータモデルは、<インターフェイス>要素の複数のインスタンスを区別するために、<name>要素を使用することに留意されたいです。"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" xmlns:xc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <rpc-error> <error-type>application</error-type> <error-tag>invalid-value</error-tag> <error-severity>error</error-severity> <error-path xmlns:t=\"http://example.com/schema/1.2/config\"> /t:top/t:interface[t:name=\"Ethernet0/0\"]/t:mtu </error-path> <error-message xml:lang=\"en\"> MTU value 25000 is not within range 256..9192 </error-message> </rpc-error> <rpc-error> <error-type>application</error-type>",
      "ja": "<RPC返信メッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のxmlns：XC = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0 「> <RPCエラー> <エラータイプ>アプリケーション</エラータイプ> <エラータグ>無効値</エラータグ> <エラーの重大度>誤り</エラーの重大度> <エラーパスのxmlns T = \"http://example.com/schema/1.2/config\"> / T：トップ/ T：インタフェース[T：名= \"Ethernet0に/ 0\"] / T：MTU </エラーパス> <エラー-messageのxml：langは= \"ENが\"> MTU値25000がレンジ256..9192内にない</エラーメッセージ> </ RPCエラー> <RPCエラー> <エラータイプ>アプリケーション</エラータイプ>"
    },
    {
      "indent": 5,
      "text": " <error-tag>invalid-value</error-tag> <error-severity>error</error-severity> <error-path xmlns:t=\"http://example.com/schema/1.2/config\"> /t:top/t:interface[t:name=\"Ethernet1/0\"]/t:address/t:name </error-path> <error-message xml:lang=\"en\"> Invalid IP address for interface Ethernet1/0 </error-message> </rpc-error> </rpc-reply>",
      "ja": "<エラータグ>無効値</エラータグ> <エラーの重大度>誤り</エラーの重大度> <エラーパスのxmlns：T =「http://example.com/schema/1.2/config」> / T：トップ/ T：インタフェース[T：名= \"イーサネット1/0\"] / T：アドレス/ T：名</エラーパス> <エラーメッセージのXML：langは= \"EN\">インターフェイスの無効なIPアドレスethernet1 / 0 </エラーメッセージ> </ RPCエラー> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "4.4. <ok> Element",
      "section_title": true,
      "ja": "4.4.  <OK>要素"
    },
    {
      "indent": 3,
      "text": "The <ok> element is sent in <rpc-reply> messages if no errors or warnings occurred during the processing of an <rpc> request, and no data was returned from the operation. For example:",
      "ja": "<OK>要素は、エラーまたは警告が<RPC>要求の処理中に発生していない、とはデータが操作から返されなかったメッセージの場合は<RPC返信>に送信されます。例えば："
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "4.5. Pipelining",
      "section_title": true,
      "ja": "4.5. パイプライン"
    },
    {
      "indent": 3,
      "text": "NETCONF <rpc> requests MUST be processed serially by the managed device. Additional <rpc> requests MAY be sent before previous ones have been completed. The managed device MUST send responses only in the order the requests were received.",
      "ja": "NETCONF <RPC>リクエストは、管理対象デバイスでシリアルに処理しなければなりません。以前のものが完了する前に追加の<RPC>リクエストを送るかもしれません。管理対象デバイスは、唯一の要求が受信された順に応答を送らなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Configuration Model",
      "section_title": true,
      "ja": "5.構成モデル"
    },
    {
      "indent": 3,
      "text": "NETCONF provides an initial set of operations and a number of capabilities that can be used to extend the base. NETCONF peers exchange device capabilities when the session is initiated as described in Section 8.1.",
      "ja": "NETCONFは、操作の初期セットとベースを拡張するために使用することができる機能の数を提供します。 8.1節で説明したようにセッションが開始されたときNETCONFピアは、デバイスの機能を交換します。"
    },
    {
      "indent": 0,
      "text": "5.1. Configuration Datastores",
      "section_title": true,
      "ja": "5.1. コンフィギュレーション・データストア"
    },
    {
      "indent": 3,
      "text": "NETCONF defines the existence of one or more configuration datastores and allows configuration operations on them. A configuration datastore is defined as the complete set of configuration data that is required to get a device from its initial default state into a desired operational state. The configuration datastore does not include state data or executive commands.",
      "ja": "NETCONFは、1つ以上の構成データストアの存在を定義し、それらに構成操作を可能にします。コンフィギュレーション・データストアは、所望の動作状態にその初期デフォルト状態からデバイスを取得するために必要とされるコンフィギュレーション・データの完全なセットとして定義されます。コンフィギュレーション・データストアは、状態データや幹部のコマンドが含まれていません。"
    },
    {
      "indent": 3,
      "text": "The running configuration datastore holds the complete configuration currently active on the network device. Only one configuration datastore of this type exists on the device, and it is always present. NETCONF protocol operations refer to this datastore using the <running> element.",
      "ja": "実行コンフィギュレーションデータストアは、ネットワークデバイス上で現在アクティブな完全な構成を保持します。このタイプの唯一のコンフィギュレーション・データストアは、デバイス上に存在し、それは常に存在しています。 NETCONFプロトコルの動作は、<実行>要素を使用して、このデータストアを参照します。"
    },
    {
      "indent": 3,
      "text": "Only the <running> configuration datastore is present in the base model. Additional configuration datastores MAY be defined by capabilities. Such configuration datastores are available only on devices that advertise the capabilities.",
      "ja": "のみ<ランニング>コンフィギュレーション・データストアは、ベースモデルに存在しています。追加の構成データストアは、能力によって定義することができます。このような構成のデータストアにのみ機能を通知デバイス上で利用可能です。"
    },
    {
      "indent": 3,
      "text": "The capabilities in Sections 8.3 and 8.7 define the <candidate> and <startup> configuration datastores, respectively.",
      "ja": "セクション8.3と8.7での機能は、それぞれ、<候補>と<スタートアップ>コンフィギュレーションデータストアを定義します。"
    },
    {
      "indent": 0,
      "text": "5.2. Data Modeling",
      "section_title": true,
      "ja": "5.2. データモデリング"
    },
    {
      "indent": 3,
      "text": "Data modeling and content issues are outside the scope of the NETCONF protocol. An assumption is made that the device's data model is well-known to the application and that both parties are aware of issues such as the layout, containment, keying, lookup, replacement, and management of the data, as well as any other constraints imposed by the data model.",
      "ja": "データモデリングおよびコンテンツの問題はNETCONFプロトコルの範囲外です。仮定は、デバイスのデータ・モデルは、アプリケーションによく知られていると判断し、両当事者は、このようなデータのレイアウト、封じ込め、キーイング、検索、置き換え、および管理だけでなく、課されるその他の制約などの問題を認識しているということですデータモデルによる。"
    },
    {
      "indent": 3,
      "text": "NETCONF carries configuration data inside the <config> element that is specific to the device's data model. The protocol treats the contents of that element as opaque data. The device uses capabilities to announce the set of data models that the device implements. The capability definition details the operation and constraints imposed by data model.",
      "ja": "NETCONFは、デバイスのデータ・モデルに固有の<config>要素内の構成データを運びます。プロトコルは、不透明なデータとしてその要素の内容を処理します。デバイスは、デバイスが実装するデータモデルのセットを発表する能力を使用しています。機能の定義は、操作とデータモデルによる制約を詳しく説明しています。"
    },
    {
      "indent": 3,
      "text": "Devices and managers can support multiple data models, including both standard and proprietary data models.",
      "ja": "デバイスと管理者は、標準および独自のデータモデルの両方を含む複数のデータ・モデルを、サポートすることができます。"
    },
    {
      "indent": 0,
      "text": "6. Subtree Filtering",
      "section_title": true,
      "ja": "6.サブツリーのフィルタリング"
    },
    {
      "indent": 0,
      "text": "6.1. Overview",
      "section_title": true,
      "ja": "6.1. 概要"
    },
    {
      "indent": 3,
      "text": "XML subtree filtering is a mechanism that allows an application to select particular XML subtrees to include in the <rpc-reply> for a <get> or <get-config> operation. A small set of filters for inclusion, simple content exact-match, and selection is provided, which allows some useful, but also very limited, selection mechanisms. The server does not need to utilize any data-model-specific semantics during processing, allowing for simple and centralized implementation strategies.",
      "ja": "XMLサブツリーフィルタリングは、アプリケーションが<GET>または<GET-config>の動作のために<RPC返信>に含める特定のXMLサブツリーを選択することを可能にする機構です。含めるためのフィルタの小さなセットは、単純なコンテンツ完全一致、および選択は、いくつかの有用なだけでなく、非常に限られた、選択メカニズムを可能にする、提供されます。サーバーは、シンプル、集中実装戦略を可能に、処理中に任意のデータ・モデル固有のセマンティクスを利用する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Conceptually, a subtree filter is comprised of zero or more element subtrees, which represent the filter selection criteria. At each containment level within a subtree, the set of sibling nodes is logically processed by the server to determine if its subtree and path of elements to the root are included in the filter output.",
      "ja": "概念的には、サブツリーのフィルタは、フィルタ選択基準を表すゼロ個以上の要素のサブツリー、から構成されています。サブツリー内の各封じ込めレベルで、兄弟ノードのセットは、論理的にそのサブツリーと根への要素のパスはフィルタ出力に含まれているかどうかを決定するために、サーバーによって処理されます。"
    },
    {
      "indent": 3,
      "text": "Each node specified in a subtree filter represents an inclusive filter. Only associated nodes in underlying data model(s) within the specified datastore on the server are selected by the filter. A node is selected if it matches the selection criteria and hierarchy of elements given in the filter data, except that the filter absolute path name is adjusted to start from the layer below <filter>.",
      "ja": "サブツリーフィルタで指定された各ノードは、包含フィルタを表します。サーバー上の指定されたデータストア内の基礎となるデータ・モデル（複数可）にのみ関連するノードは、フィルタによって選択されます。それは選択基準及びフィルタの絶対パス名が<フィルター>下の層から開始するように調整されることを除いて、フィルタデータに与えられた要素の階層と一致する場合、ノードが選択されます。"
    },
    {
      "indent": 3,
      "text": "Response messages contain only the subtrees selected by the filter. Any selection criteria that were present in the request, within a particular selected subtree, are also included in the response. Note that some elements expressed in the filter as leaf nodes will be expanded (i.e., subtrees included) in the filter output. Specific data instances are not duplicated in the response in the event that the request contains multiple filter subtree expressions that select the same data.",
      "ja": "応答メッセージは、フィルタによって選択された唯一のサブツリーが含まれています。要求に存在していた任意の選択基準は、特定の選択されたサブツリー内で、また、応答に含まれています。リーフノードとしてフィルタで発現いくつかの要素が展開されることに注意フィルタの出力に（すなわち、部分木を含みます）。特定のデータ・インスタンスは、要求が同じデータを選択する複数のフィルタサブツリーの表現が含まれている場合には対応して複製されません。"
    },
    {
      "indent": 0,
      "text": "6.2. Subtree Filter Components",
      "section_title": true,
      "ja": "6.2. サブツリーフィルタ部品"
    },
    {
      "indent": 3,
      "text": "A subtree filter is comprised of XML elements and their XML attributes. There are five types of components that can be present in a subtree filter:",
      "ja": "サブツリーフィルタは、XML要素とそのXML属性で構成されています。サブツリーフィルタに存在することができるコンポーネントの5種類があります。"
    },
    {
      "indent": 3,
      "text": "o Namespace Selection",
      "ja": "名前空間の選択O"
    },
    {
      "indent": 3,
      "text": "o Attribute Match Expressions",
      "ja": "O属性マッチ式"
    },
    {
      "indent": 3,
      "text": "o Containment Nodes",
      "ja": "コンテノードO"
    },
    {
      "indent": 3,
      "text": "o Selection Nodes",
      "ja": "Oの選択ノード"
    },
    {
      "indent": 3,
      "text": "o Content Match Nodes",
      "ja": "Oコンテンツマッチノード"
    },
    {
      "indent": 0,
      "text": "6.2.1. Namespace Selection",
      "section_title": true,
      "ja": "6.2.1. 名前空間の選択"
    },
    {
      "indent": 3,
      "text": "A namespace is considered to match (for filter purposes) if the XML namespace associated with a particular node within the <filter> element is the same as in the underlying data model. Note that namespace selection cannot be used by itself. At least one element MUST be specified in the filter if any elements are to be included in the filter output.",
      "ja": "名前空間は、<フィルター>内の特定のノードに関連付けられたXML名前空間要素が、基礎となるデータ・モデルと同じである場合（フィルタのために）一致すると考えられます。名前空間の選択は、それ自体で使用することはできないことに注意してください。任意の要素がフィルタの出力に含まれるべきである場合、少なくとも一つの要素は、フィルタで指定されなければなりません。"
    },
    {
      "indent": 3,
      "text": "An XML namespace wildcard mechanism is defined for subtree filtering. If an element within the <filter> element is not qualified by a namespace (e.g., xmlns=\"\"), then the server MUST evaluate all the XML namespaces it supports, when processing that subtree filter node. This wildcard mechanism is not applicable to XML attributes.",
      "ja": "XML名前空間ワイルドカード機構は、サブツリーのフィルタリングのために定義されています。 <フィルター>要素内の要素は、名前空間によって修飾されていない場合（例えば、のxmlnsは=「」）、サーバはそのサブツリーフィルタノードを処理するとき、それは、サポートしているすべてのXML名前空間を評価しなければなりません。このワイルドカードメカニズムは、XML属性には適用されません。"
    },
    {
      "indent": 3,
      "text": "Note that prefix values for qualified namespaces are not relevant when comparing filter elements to elements in the underlying data model.",
      "ja": "基礎となるデータモデル内の要素にフィルタエレメントを比較するときに資格の名前空間の接頭辞値は関連していないことに注意してください。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"/> </filter>",
      "ja": "<フィルタタイプ= \"サブツリー\"> <トップのxmlns = \"http://example.com/schema/1.2/config\" /> </フィルタ>"
    },
    {
      "indent": 3,
      "text": "In this example, the <top> element is a selection node, and only this node in the \"http://example.com/schema/1.2/config\" namespace and any child nodes (from the underlying data model) will be included in the filter output.",
      "ja": "この例では、<TOP>要素が含まれることになる選択ノード、及び「http://example.com/schema/1.2/config」名前空間および（基礎となるデータモデルからの）任意の子ノードにおいてのみ、このノードでありますフィルタ出力インチ"
    },
    {
      "indent": 0,
      "text": "6.2.2. Attribute Match Expressions",
      "section_title": true,
      "ja": "6.2.2. マッチ式の属性"
    },
    {
      "indent": 3,
      "text": "An attribute that appears in a subtree filter is part of an \"attribute match expression\". Any number of (unqualified or qualified) XML attributes MAY be present in any type of filter node. In addition to the selection criteria normally applicable to that node, the selected data MUST have matching values for every attribute specified in the node. If an element is not defined to include a specified attribute, then it is not selected in the filter output.",
      "ja": "サブツリーフィルタに表示される属性は、「属性の一致式」の一部です。 （非修飾または修飾）XML属性の任意の数のフィルタ・ノードの任意のタイプの中に存在してもよいです。そのノードに正常に適用できる選択基準に加えて、選択されたデータは、ノードに指定されたすべての属性の値に一致しておく必要があります。要素が指定された属性を含むように定義されていない場合、それはフィルタ出力で選択されていません。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<filter type=\"subtree\"> <t:top xmlns:t=\"http://example.com/schema/1.2/config\"> <t:interfaces> <t:interface t:ifName=\"eth0\"/> </t:interfaces> </t:top> </filter>",
      "ja": "<フィルタタイプ= \"サブツリー\"> <T：トップのxmlns：T = \"http://example.com/schema/1.2/config\"> <T：インターフェイス> <T：インタフェースT：のifNameは= \"eth0の\" /> </ T：インターフェイス> </ T：トップ> </フィルタ>"
    },
    {
      "indent": 3,
      "text": "In this example, the <top> and <interfaces> elements are containment nodes, the <interface> element is a selection node, and \"ifName\" is an attribute match expression. Only \"interface\" nodes in the \"http://example.com/schema/1.2/config\" namespace that have an \"ifName\" attribute with the value \"eth0\" and occur within \"interfaces\" nodes within \"top\" nodes will be included in the filter output.",
      "ja": "この例では、<TOP>と<インタフェースは>要素が収容ノードであり、要素は、選択ノード<インターフェース>であり、「のifNameは、」属性一致表現です。 「のifName」属性値「はeth0」を有する「http://example.com/schema/1.2/config」名前空間でのみ「インタフェース」ノードおよび「トップ」ノード内のノードがされる「インターフェース」内で起こりますフィルタの出力に含まれています。"
    },
    {
      "indent": 0,
      "text": "6.2.3. Containment Nodes",
      "section_title": true,
      "ja": "6.2.3. 封じ込めノード"
    },
    {
      "indent": 3,
      "text": "Nodes that contain child elements within a subtree filter are called \"containment nodes\". Each child element can be any type of node, including another containment node. For each containment node specified in a subtree filter, all data model instances that exactly match the specified namespaces, element hierarchy, and any attribute match expressions are included in the filter output.",
      "ja": "サブツリーフィルタ内の子要素が含まれているノードは、「封じ込めノード」と呼ばれています。それぞれの子要素は、他の封じ込めノードを含む、ノードのいずれかのタイプにすることができます。サブツリーフィルタで指定された各収容ノードに対して、正確に指定された名前空間、要素の階層、および任意の属性が一致する表現に一致するすべてのデータ・モデル・インスタンスがフィルタの出力に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users/> </top> </filter>",
      "ja": "<フィルタタイプ= \"サブツリー\"> <トップのxmlns = \"http://example.com/schema/1.2/config\"> <ユーザ/> </ TOP> </フィルタ>"
    },
    {
      "indent": 3,
      "text": "In this example, the <top> element is a containment node.",
      "ja": "この例では、<TOP>要素は、収容ノードです。"
    },
    {
      "indent": 0,
      "text": "6.2.4. Selection Nodes",
      "section_title": true,
      "ja": "6.2.4. 選択ノード"
    },
    {
      "indent": 3,
      "text": "An empty leaf node within a filter is called a \"selection node\", and it represents an \"explicit selection\" filter on the underlying data model. Presence of any selection nodes within a set of sibling nodes will cause the filter to select the specified subtree(s) and suppress automatic selection of the entire set of sibling nodes in the underlying data model. For filtering purposes, an empty leaf node can be declared either with an empty tag (e.g., <foo/>) or with explicit start and end tags (e.g., <foo> </foo>). Any whitespace characters are ignored in this form.",
      "ja": "フィルタ内の空のリーフノードは、「選択ノード」と呼ばれ、それは、基礎となるデータ・モデルの「明示的な選択」フィルタを表します。兄弟ノードのセット内の任意の選択ノードの存在は、フィルタが指定されたサブツリー（複数可）を選択し、基礎となるデータ・モデル内のノードの兄弟の全体セットの自動選択を抑制します。フィルタリングのために、空のリーフノードは、（例えば、<FOO />）、または明示的な開始タグと終了タグとの（例えば、<FOO> </ FOO>）空のタグで宣言することができます。任意の空白文字は、このフォームでは無視されます。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users/> </top> </filter>",
      "ja": "<フィルタタイプ= \"サブツリー\"> <トップのxmlns = \"http://example.com/schema/1.2/config\"> <ユーザ/> </ TOP> </フィルタ>"
    },
    {
      "indent": 3,
      "text": "In this example, the <top> element is a containment node, and the <users> element is a selection node. Only \"users\" nodes in the \"http://example.com/schema/1.2/config\" namespace that occur within a <top> element that is the root of the configuration datastore will be included in the filter output.",
      "ja": "この例では、<TOP>要素は、収容ノードであり、<ユーザー>要素は、選択ノードです。コンフィギュレーションデータストアのルートである、<TOP>要素内で発生する「http://example.com/schema/1.2/config」名前空間内の唯一の「ユーザー」ノードは、フィルタ出力に含まれます。"
    },
    {
      "indent": 0,
      "text": "6.2.5. Content Match Nodes",
      "section_title": true,
      "ja": "6.2.5. コンテンツマッチノード"
    },
    {
      "indent": 3,
      "text": "A leaf node that contains simple content is called a \"content match node\". It is used to select some or all of its sibling nodes for filter output, and it represents an exact-match filter on the leaf node element content. The following constraints apply to content match nodes:",
      "ja": "シンプルなコンテンツが含まれているリーフノードは、「コンテンツマッチノード」と呼ばれています。フィルタ出力のためにその兄弟ノードの一部またはすべてを選択するために使用され、それが葉ノード要素の内容に完全一致フィルタを表しています。次の制約はコンテンツマッチノードに適用されます。"
    },
    {
      "indent": 3,
      "text": "o A content match node MUST NOT contain nested elements.",
      "ja": "Oコンテンツマッチノードは、ネストされた要素を含めることはできません。"
    },
    {
      "indent": 3,
      "text": "o Multiple content match nodes (i.e., sibling nodes) are logically combined in an \"AND\" expression.",
      "ja": "O複数のコンテンツマッチノード（即ち、兄弟ノード）が論理的に「AND」式に結合されます。"
    },
    {
      "indent": 3,
      "text": "o Filtering of mixed content is not supported.",
      "ja": "O混合コンテンツのフィルタリングがサポートされていません。"
    },
    {
      "indent": 3,
      "text": "o Filtering of list content is not supported.",
      "ja": "Oリストのコンテンツのフィルタリングはサポートされていません。"
    },
    {
      "indent": 3,
      "text": "o Filtering of whitespace-only content is not supported.",
      "ja": "O空白のみのコンテンツのフィルタリングはサポートされていません。"
    },
    {
      "indent": 3,
      "text": "o A content match node MUST contain non-whitespace characters. An empty element (e.g., <foo></foo>) will be interpreted as a selection node (e.g., <foo/>).",
      "ja": "Oコンテンツマッチノードは非空白文字を含める必要があります。空要素（例えば、<FOO> </ FOO>）は、選択ノード（例えば、<FOO />）として解釈されます。"
    },
    {
      "indent": 3,
      "text": "o Leading and trailing whitespace characters are ignored, but any whitespace characters within a block of text characters are not ignored or modified.",
      "ja": "空白文字を先頭と末尾のoを無視されますが、テキスト文字のブロック内の任意の空白文字は無視されたり変更されません。"
    },
    {
      "indent": 3,
      "text": "If all specified sibling content match nodes in a subtree filter expression are \"true\", then the filter output nodes are selected in the following manner:",
      "ja": "サブツリーフィルタ式で指定されたすべての兄弟コンテンツマッチノードが「真」である場合、フィルタ出力ノードは、次のように選択されます。"
    },
    {
      "indent": 3,
      "text": "o Each content match node in the sibling set is included in the filter output.",
      "ja": "O兄弟セットにおける各コンテンツマッチノードは、フィルタ出力に含まれています。"
    },
    {
      "indent": 3,
      "text": "o If any containment nodes are present in the sibling set, then they are processed further and included if any nested filter criteria are also met.",
      "ja": "O任意封じ込めノードが兄弟セットに存在する場合、それらは、さらに処理され、ネストされたフィルタ基準も満たされた場合に含まれます。"
    },
    {
      "indent": 3,
      "text": "o If any selection nodes are present in the sibling set, then all of them are included in the filter output.",
      "ja": "任意選択ノードが兄弟セットに存在する場合、O、次いで、それらのすべては、フィルタ出力に含まれています。"
    },
    {
      "indent": 3,
      "text": "o If any sibling nodes of the selection node are instance identifier components for a conceptual data structure (e.g., list key leaf), then they MAY also be included in the filter output.",
      "ja": "選択ノードのいずれかの兄弟ノードは概念的なデータ構造（例えば、リストキーリーフ）のインスタンス識別子成分である場合、O、それらはまた、フィルタ出力に含まれるかもしれ。"
    },
    {
      "indent": 3,
      "text": "o Otherwise (i.e., there are no selection or containment nodes in the filter sibling set), all the nodes defined at this level in the underlying data model (and their subtrees, if any) are returned in the filter output.",
      "ja": "Oそうでない場合には（もしあれば、そのサブツリー）基礎となるデータ・モデルでは、このレベルで定義されたすべてのノード（すなわち、フィルタ兄弟セットには選択または封じ込めノードが存在しない）、フィルタ出力に返されます。"
    },
    {
      "indent": 3,
      "text": "If any of the sibling content match node tests are \"false\", then no further filter processing is performed on that sibling set, and none of the sibling subtrees are selected by the filter, including the content match node(s).",
      "ja": "兄弟コンテンツマッチノードテストのいずれかが「偽」である場合、さらなるフィルタ処理が、その兄弟セットに対して実行されず、兄弟サブツリーのいずれも、コンテンツマッチノード（単数または複数）を含む、フィルタによって選択されていません。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> </user> </users> </top> </filter>",
      "ja": "<フィルタタイプ= \"サブツリー\"> <トップのxmlns = \"http://example.com/schema/1.2/config\"> <ユーザー> <ユーザー> <名前>フレッド</名前> </ユーザー> </ユーザー> </トップ> </フィルタ>"
    },
    {
      "indent": 3,
      "text": "In this example, the <users> and <user> nodes are both containment nodes, and <name> is a content match node. Since no sibling nodes of <name> are specified (and therefore no containment or selection nodes), all of the sibling nodes of <name> are returned in the filter output. Only \"user\" nodes in the \"http://example.com/schema/1.2/config\" namespace that match the element hierarchy and for which the <name> element is equal to \"fred\" will be included in the filter output.",
      "ja": "この例では、<ユーザ>および<ユーザー>ノードは、両方の封じ込めノードであり、<名前>は、コンテンツマッチノードです。 <名前>のない兄弟ノードが指定されていない（したがってない封じ込めまたは選択ノード）されているので、<名前>の兄弟ノードの全ては、フィルタ出力に返されます。要素の階層と一致「http://example.com/schema/1.2/config」名前空間および<name>要素が「フレッド」はフィルタの出力に含まれると等しくなるための唯一の「ユーザー」ノード。"
    },
    {
      "indent": 0,
      "text": "6.3. Subtree Filter Processing",
      "section_title": true,
      "ja": "6.3. サブツリーフィルタ処理"
    },
    {
      "indent": 3,
      "text": "The filter output (the set of selected nodes) is initially empty.",
      "ja": "フィルタ出力（選択されたノードのセット）は、最初は空です。"
    },
    {
      "indent": 3,
      "text": "Each subtree filter can contain one or more data model fragments, which represent portions of the data model that will be selected (with all child nodes) in the filter output.",
      "ja": "各サブツリーフィルタは、フィルタの出力に（すべての子ノードで）選択されたデータモデルの部分を表す1つのまたは複数のデータモデルフラグメントを含むことができます。"
    },
    {
      "indent": 3,
      "text": "Each subtree data fragment is compared by the server to the internal data models supported by the server. If the entire subtree data-fragment filter (starting from the root to the innermost element specified in the filter) exactly matches a corresponding portion of the supported data model, then that node and all its children are included in the result data.",
      "ja": "各サブツリーのデータフラグメントは、サーバによってサポートされる内部データモデルにサーバによって比較されます。 （フィルタで指定された最も内側の要素へ、ルートから開始）サブツリー全体のデータフラグメントフィルタが正確にサポートされるデータモデルの対応する部分と一致する場合、そのノードとそのすべての子が結果データに含まれています。"
    },
    {
      "indent": 3,
      "text": "The server processes all nodes with the same parent node (sibling set) together, starting from the root to the leaf nodes. The root elements in the filter are considered in the same sibling set (assuming they are in the same namespace), even though they do not have a common parent.",
      "ja": "サーバは、ルートからリーフノードに開始、共に同じ親ノード（兄弟セット）を持つすべてのノードを処理します。フィルタのルート要素は、それらが共通の親を持っていないにもかかわらず、（それらが同じ名前空間にあると仮定すると）同じ兄弟セットで考慮されています。"
    },
    {
      "indent": 3,
      "text": "For each sibling set, the server determines which nodes are included (or potentially included) in the filter output, and which sibling subtrees are excluded (pruned) from the filter output. The server first determines which types of nodes are present in the sibling set and processes the nodes according to the rules for their type. If any nodes in the sibling set are selected, then the process is recursively applied to the sibling sets of each selected node. The algorithm continues until all sibling sets in all subtrees specified in the filter have been processed.",
      "ja": "各兄弟セットのために、サーバは、フィルタ出力に含まれる（又は潜在的に含む）されたノードを判定し、その兄弟サブツリーをフィルタ出力から（剪定）除外されます。サーバは、最初のノードのタイプが兄弟セット中に存在し、それらのタイプの規則に従ってノードを処理するかを決定します。兄弟セット内の任意のノードが選択されている場合、プロセスは再帰的に選択された各ノードの兄弟セットに適用されます。フィルタで指定されたすべてのサブツリー内のすべての兄弟のセットが処理されるまでアルゴリズムが続きます。"
    },
    {
      "indent": 0,
      "text": "6.4. Subtree Filtering Examples",
      "section_title": true,
      "ja": "6.4. サブツリーフィルタリングの例"
    },
    {
      "indent": 0,
      "text": "6.4.1. No Filter",
      "section_title": true,
      "ja": "6.4.1. フィルター設定なし"
    },
    {
      "indent": 3,
      "text": "Leaving out the filter on the <get> operation returns the entire data model.",
      "ja": "<GET>操作にフィルタを省略すると、全データモデルを返します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET /> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <!-- ... entire set of data returned ... --> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <データ> < - データの...セット全体が返さ...  - ！ - > </データ> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "6.4.2. Empty Filter",
      "section_title": true,
      "ja": "6.4.2. 空フィルタ"
    },
    {
      "indent": 3,
      "text": "An empty filter will select nothing because no content match or selection nodes are present. This is not an error. The <filter> element's \"type\" attribute used in these examples is discussed further in Section 7.1.",
      "ja": "何のコンテンツ一致または選択ノードが存在しないので、空のフィルタは何も選択しません。これはエラーではありません。これらの例で使用し、<フィルタ>要素の「type」属性は、7.1節で詳しく説明されています。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> </filter> </get> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET> <フィルタタイプ= \"サブツリー\"> </フィルタ> </ GET> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> </data> </rpc-reply>",
      "ja": "<RPC返信メッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> </データ> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "6.4.3. Select the Entire <users> Subtree",
      "section_title": true,
      "ja": "6.4.3. 全体<ユーザー>サブツリーを選択"
    },
    {
      "indent": 3,
      "text": "The filter in this example contains one selection node (<users>), so just that subtree is selected by the filter. This example represents the fully populated <users> data model in most of the filter examples that follow. In a real data model, the <company-info> would not likely be returned with the list of users for a particular host or network.",
      "ja": "この例では、フィルタは、これだけそのサブツリーをフィルタによって選択された一つの選択ノード（<ユーザー>）を含んでいます。この例では、以下のフィルタの例のほとんどにおいて完全人口<ユーザー>データモデルを表します。実際のデータモデルでは、<会社情報>おそらく特定のホストまたはネットワークのユーザーのリストを返すことはないでしょう。"
    },
    {
      "indent": 3,
      "text": "NOTE: The filtering and configuration examples used in this document appear in the namespace \"http://example.com/schema/1.2/config\". The root element of this namespace is <top>. The <top> element and its descendents represent an example configuration data model only.",
      "ja": "注：この文書で使用されているフィルタリングとコンフィギュレーションの例では、名前空間「http://example.com/schema/1.2/config」に表示されます。この名前空間のルート要素は<トップ>です。 <TOP>要素とその子孫は一例の構成データ・モデルを表します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users/> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー/> </トップ> </フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>root</name> <type>superuser</type> <full-name>Charlie Root</full-name> <company-info> <dept>1</dept> <id>1</id> </company-info> </user>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>ルート</名前> <タイプ>スーパー</タイプ> <フルネーム>チャーリー・ルート</フルネーム> <会社情報> <DEPT> 1 </ DEPT> <ID> 1 </ ID> </会社情報> </ユーザー>"
    },
    {
      "indent": 5,
      "text": " <user> <name>fred</name> <type>admin</type> <full-name>Fred Flintstone</full-name> <company-info> <dept>2</dept> <id>2</id> </company-info> </user> <user> <name>barney</name> <type>admin</type> <full-name>Barney Rubble</full-name> <company-info> <dept>2</dept> <id>3</id> </company-info> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<ユーザー> <名前>フレッド</名前> <タイプ>管理者</入力> <フルネーム>フレッド・フリントストーン</フルネーム> <会社情報> <DEPT> 2 </ DEPT> <ID> 2 < / ID> </会社情報> </ユーザー> <ユーザー> <名前>バーニー</名前> <タイプ>管理者</入力> <フルネーム>バーニー瓦礫</フルネーム> <会社情報> <DEPT> 2 </ DEPT> <ID> 3 </ ID> </会社情報> </ユーザー> </ユーザー> </トップ> </データ> </ RPC-返信>"
    },
    {
      "indent": 3,
      "text": "The following filter request would have produced the same result, but only because the container <users> defines one child element (<user>).",
      "ja": "次のフィルタ要求が同じ結果を生じたであろうが、唯一のコンテナ<ユーザー>ための子要素（<ユーザー>）を定義します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user/> </users> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー> <ユーザー/> </ユーザー> </トップ> </フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 0,
      "text": "6.4.4. Select All <name> Elements within the <users> Subtree",
      "section_title": true,
      "ja": "6.4.4. すべての<名前> <ユーザー>内の要素サブツリーを選択"
    },
    {
      "indent": 3,
      "text": "This filter contains two containment nodes (<users>, <user>) and one selection node (<name>). All instances of the <name> element in the same sibling set are selected in the filter output. The client might need to know that <name> is used as an instance identifier in this particular data structure, but the server does not need to know that meta-data in order to process the request.",
      "ja": "このフィルタは、2つの収容ノード（<ユーザー>、<ユーザ>）と1つの選択ノードを含む（<名前>）。同じ兄弟セットで、<name>要素のすべてのインスタンスは、フィルタの出力に選択されています。クライアントは、<名前>は、この特定のデータ構造のインスタンス識別子として使用されていることを知っておく必要があるかもしれませんが、サーバーは要求を処理するために、そのメタデータを知る必要はありません。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name/> </user> </users> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー> <ユーザー> <名/> </ユーザー> </ユーザー> </トップ> </フィルタ> < /取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>root</name> </user> <user> <name>fred</name> </user> <user> <name>barney</name> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>ルート</名前> </ユーザー> <ユーザー> <名前>フレッド</名前> </ユーザー> <ユーザー> <名前>バーニー</名前> </ユーザー> </ユーザー> </ TOP> </データ> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "6.4.5. One Specific <user> Entry",
      "section_title": true,
      "ja": "6.4.5. ある特定の<ユーザー>エントリ"
    },
    {
      "indent": 3,
      "text": "This filter contains two containment nodes (<users>, <user>) and one content match node (<name>). All instances of the sibling set containing <name> for which the value of <name> equals \"fred\" are selected in the filter output.",
      "ja": "このフィルタは、2つの収容ノード（<ユーザー>、<ユーザ>）と、1つのコンテンツ・マッチ・ノードが含まれている（<名前>）。兄弟のすべてのインスタンスは、<名前>の値が「フレッド」はフィルタ出力で選択されている等しいため、<名前>を含むセット。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> </user> </users> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー> <ユーザー> <名前>フレッド</名前> </ユーザー> </ユーザー> </トップ> < /フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> <type>admin</type> <full-name>Fred Flintstone</full-name> <company-info> <dept>2</dept> <id>2</id> </company-info> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>フレッド</名前> <タイプ>管理者</入力> <フルネーム>フレッド・フリントストーン</フルネーム> <会社情報> <DEPT> 2 </ DEPT> <ID> 2 </ ID> </会社情報> </ユーザー> </ユーザー> </トップ> </データ> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "6.4.6. Specific Elements from a Specific <user> Entry",
      "section_title": true,
      "ja": "6.4.6. 特定の<ユーザー>エントリから特定の要素"
    },
    {
      "indent": 3,
      "text": "This filter contains two containment nodes (<users>, <user>), one content match node (<name>), and two selection nodes (<type>, <full-name>). All instances of the <type> and <full-name> elements in the same sibling set containing <name> for which the value of <name> equals \"fred\" are selected in the filter output. The <company-info> element is not included because the sibling set contains selection nodes.",
      "ja": "このフィルタは、二つの収容ノード（<ユーザー>、<ユーザ>）、一つのコンテンツ・マッチ・ノード（<名前>）、及び2つの選択ノード（<タイプ>、<フル名前>）が含まれています。 <タイプ>とのすべてのインスタンスは、<フル名前> <名前>の値が「フレッド」に等しいため、<名前>を含む同じ兄弟セット内の要素は、フィルタ出力に選択されます。兄弟セットが選択ノードが含まれているため、<会社-info>要素が含まれていません。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> <type/> <full-name/> </user> </users> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー> <ユーザー> <名前>フレッド</名前> <タイプ/> <フルネーム/> </ユーザー> </ユーザー> </トップ> </フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> <type>admin</type> <full-name>Fred Flintstone</full-name> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>フレッド</名前> <タイプ>管理者</入力> <フルネーム>フレッド・フリントストーン</フルネーム> </ユーザー> </ユーザー> </トップ> </データ> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "6.4.7. Multiple Subtrees",
      "section_title": true,
      "ja": "6.4.7. 複数のサブツリー"
    },
    {
      "indent": 3,
      "text": "This filter contains three subtrees (name=root, fred, barney).",
      "ja": "このフィルタは、3つのサブツリー（名前=ルート、フレッド、バーニー）が含まれています。"
    },
    {
      "indent": 3,
      "text": "The \"root\" subtree filter contains two containment nodes (<users>, <user>), one content match node (<name>), and one selection node (<company-info>). The subtree selection criteria are met, and just the company-info subtree for \"root\" is selected in the filter output.",
      "ja": "「ルート」サブツリーフィルタは、2つの封じ込めノードが含まれています（<ユーザー>、<ユーザー>）、1つのコンテンツマッチノード（<名前>）、および1つの選択ノード（<会社情報>）。サブツリーの選択基準が満たされている、と「根」のためだけの会社情報サブツリーは、フィルタ出力に選択されています。"
    },
    {
      "indent": 3,
      "text": "The \"fred\" subtree filter contains three containment nodes (<users>, <user>, <company-info>), one content match node (<name>), and one selection node (<id>). The subtree selection criteria are met, and just the <id> element within the company-info subtree for \"fred\" is selected in the filter output.",
      "ja": "「フレッド」サブツリーフィルタは3つの封じ込めノード（<ユーザー>、<ユーザー>、<会社情報>）、1つのコンテンツマッチノードが含まれています（<名前>）、および1つの選択ノード（<ID>）。サブツリーの選択基準が満たされ、そして「フレッド」のための会社情報サブツリー内だけで、<id>の要素は、フィルタ出力に選択されています。"
    },
    {
      "indent": 3,
      "text": "The \"barney\" subtree filter contains three containment nodes (<users>, <user>, <company-info>), two content match nodes (<name>, <type>), and one selection node (<dept>). The subtree selection criteria are not met because user \"barney\" is not a \"superuser\", and the entire subtree for \"barney\" (including its parent <user> entry) is excluded from the filter output.",
      "ja": "\"バーニー\" サブツリーフィルタは3つの封じ込めノード（<ユーザー>、<ユーザー>、<会社情報>）、2つのコンテンツマッチノード（<名前>、<タイプ>）、および1つの選択ノードが含まれています（<DEPT>）。ユーザ「バーニー」はフィルタ出力から除外され、「スーパーユーザ」、及び（親<ユーザー>エントリを含む）「バーニー」のサブツリー全体ではないため、サブツリー選択基準が満たされていません。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>root</name> <company-info/> </user> <user> <name>fred</name> <company-info> <id/> </company-info> </user> <user> <name>barney</name> <type>superuser</type> <company-info> <dept/> </company-info> </user>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー> <ユーザー> <名前>ルート</名前> <会社情報/> </ユーザー> <ユーザー> <名前>フレッド</名前> <会社情報> <ID /> </会社情報> </ユーザー> <ユーザー> <名前>バーニー</名前> <タイプ>スーパー</タイプ> <会社情報> <DEPT /> </会社情報> </ユーザー>"
    },
    {
      "indent": 5,
      "text": " </users> </top> </filter> </get-config> </rpc>",
      "ja": "</ユーザー> </トップ> </フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>root</name> <company-info> <dept>1</dept> <id>1</id> </company-info> </user> <user> <name>fred</name> <company-info> <id>2</id> </company-info> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>ルート</名前> <会社情報> <DEPT> 1 </ DEPT> <ID> 1 </ ID> </会社情報> </ユーザー> <ユーザー> <名前>フレッド</名前> <会社情報> <ID> 2 </ ID> </会社情報> </ユーザー> </ユーザー> </トップ> </データ> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "6.4.8. Elements with Attribute Naming",
      "section_title": true,
      "ja": "6.4.8. 属性のネーミングを持つ要素"
    },
    {
      "indent": 3,
      "text": "In this example, the filter contains one containment node (<interfaces>), one attribute match expression (\"ifName\"), and one selection node (<interface>). All instances of the <interface> subtree that have an \"ifName\" attribute equal to \"eth0\" are selected in the filter output. The filter data elements and attributes are qualified because the \"ifName\" attribute will not be considered part of the \"schema/1.2\" namespace if it is unqualified.",
      "ja": "この例では、フィルタは、一の収容ノード（<インターフェース>）、1つの属性一致表現（「のifName」）と、1つの選択ノード（<インターフェース>）を含んでいます。 「のifNameは」「eth0の」に等しい属性を持つ<インターフェース>サブツリーのすべてのインスタンスは、フィルタの出力に選択されています。それが修飾されていない場合、「のifName」属性「は、スキーマ/ 1.2」名前空間の一部とみなされることはありませんので、フィルタデータ要素と属性は、資格のあります。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> <t:top xmlns:t=\"http://example.com/schema/1.2/stats\"> <t:interfaces> <t:interface t:ifName=\"eth0\"/> </t:interfaces> </t:top> </filter> </get> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET> <フィルタタイプ= \"サブツリー\"> <T：トップのxmlns：T = \"HTTP ：//example.com/schema/1.2/stats \"> <T：インターフェイス> <T：インタフェースT：のifName =\" eth0\" の/> </ T：インターフェイス> </ T：トップ> </フィルタ> </取得> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <t:top xmlns:t=\"http://example.com/schema/1.2/stats\"> <t:interfaces> <t:interface t:ifName=\"eth0\"> <t:ifInOctets>45621</t:ifInOctets> <t:ifOutOctets>774344</t:ifOutOctets> </t:interface> </t:interfaces> </t:top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <T：トップのxmlns：T = \"http://example.com /schema/1.2/stats \"> <T：インターフェイス> <T：インタフェースT：のifName =\" eth0\" の> <T：のifInOctets> 45621 </ T：のifInOctets> <T：ifOutOctets> 774344 </ T：ifOutOctets> < / T：インタフェース> </ T：インターフェイス> </ T：トップ> </データ> </ RPC返信>"
    },
    {
      "indent": 3,
      "text": "If \"ifName\" were a child node instead of an attribute, then the following request would produce similar results.",
      "ja": "「のifNameは」ではなく、属性の子ノードだった場合は、次のリクエストは、同様の結果を生じるであろう。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/stats\"> <interfaces> <interface> <ifName>eth0</ifName> </interface> </interfaces> </top> </filter> </get> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET> <フィルタタイプ= \"サブツリー\"> <トップのxmlnsは= \"HTTP：//例.COM /スキーマ/ 1.2 /統計 \"> <インターフェース> <インターフェース> <のifName> eth0の</のifName> </インターフェイス> </インターフェイス> </ TOP> </フィルタ> </取得> </ RPC>"
    },
    {
      "indent": 0,
      "text": "7. Protocol Operations",
      "section_title": true,
      "ja": "7.プロトコル操作"
    },
    {
      "indent": 3,
      "text": "The NETCONF protocol provides a small set of low-level operations to manage device configurations and retrieve device state information. The base protocol provides operations to retrieve, configure, copy, and delete configuration datastores. Additional operations are provided, based on the capabilities advertised by the device.",
      "ja": "NETCONFプロトコルは、デバイス構成を管理し、デバイスの状態情報を取得するために、低レベルの操作の小さなセットを提供します。基本プロトコルは、取得、設定、コピー、およびコンフィギュレーション・データストアを削除する操作を提供します。追加の操作は、デバイスによってアドバタイズ機能に基づいて、提供されています。"
    },
    {
      "indent": 3,
      "text": "The base protocol includes the following protocol operations:",
      "ja": "ベースプロトコルは、以下のプロトコルの動作を含みます。"
    },
    {
      "indent": 3,
      "text": "o get",
      "ja": "Oを取得"
    },
    {
      "indent": 3,
      "text": "o get-config",
      "ja": "O得る-config設定を"
    },
    {
      "indent": 3,
      "text": "o edit-config",
      "ja": "O編集-config設定"
    },
    {
      "indent": 3,
      "text": "o copy-config",
      "ja": "Oコピー-config設定"
    },
    {
      "indent": 3,
      "text": "o delete-config",
      "ja": "O削除-config設定を"
    },
    {
      "indent": 3,
      "text": "o lock",
      "ja": "Oロック"
    },
    {
      "indent": 3,
      "text": "o unlock",
      "ja": "Oロック解除"
    },
    {
      "indent": 3,
      "text": "o close-session",
      "ja": "Oクローズセッション"
    },
    {
      "indent": 3,
      "text": "o kill-session",
      "ja": "O殺すセッションを"
    },
    {
      "indent": 3,
      "text": "A protocol operation can fail for various reasons, including \"operation not supported\". An initiator SHOULD NOT assume that any operation will always succeed. The return values in any RPC reply SHOULD be checked for error responses.",
      "ja": "プロトコルの動作は、「サポートされていない操作」をはじめ、さまざまな理由で失敗する可能性があります。イニシエータは、任意の操作が常に成功することを仮定するべきではありません。任意のRPC応答での戻り値はエラー応答のためにチェックする必要があります。"
    },
    {
      "indent": 3,
      "text": "The syntax and XML encoding of the protocol operations are formally defined in the YANG module in Appendix C. The following sections describe the semantics of each protocol operation.",
      "ja": "プロトコル操作の構文とXMLエンコーディングは、正式に以下のセクションでは、各プロトコルの動作の意味を説明し、付録CにYANGモジュールで定義されています。"
    },
    {
      "indent": 0,
      "text": "7.1. <get-config>",
      "section_title": true,
      "ja": "7.1.  <GET-config>の"
    },
    {
      "indent": 3,
      "text": "Description: Retrieve all or part of a specified configuration datastore.",
      "ja": "説明：指定されたコンフィギュレーション・データストアの全部または一部を取得します。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "source: Name of the configuration datastore being queried, such as <running/>.",
      "ja": "ソース：コンフィギュレーションデータストアの名前は、</実行>のように、照会されます。"
    },
    {
      "indent": 6,
      "text": "filter: This parameter identifies the portions of the device configuration datastore to retrieve. If this parameter is not present, the entire configuration is returned.",
      "ja": "フィルタ：このパラメータは、取得するデバイス構成データストアの部分を識別する。このパラメータが存在しない場合は、全体の構成が返されます。"
    },
    {
      "indent": 9,
      "text": "The <filter> element MAY optionally contain a \"type\" attribute. This attribute indicates the type of filtering syntax used within the <filter> element. The default filtering mechanism in NETCONF is referred to as subtree filtering and is described in Section 6. The value \"subtree\" explicitly identifies this type of filtering.",
      "ja": "<フィルタ>要素は、必要に応じて、「タイプ」属性を含むかもしれません。この属性は、<フィルタ>要素内で使用フィルター構文の種類を示します。 NETCONFのデフォルトのフィルタリング機構としてサブツリーフィルタリングと呼ばれ、値「サブツリー」は、明示的にフィルタリングのこのタイプを識別するセクション6に記載されています。"
    },
    {
      "indent": 9,
      "text": "If the NETCONF peer supports the :xpath capability (Section 8.9), the value \"xpath\" MAY be used to indicate that the \"select\" attribute on the <filter> element contains an XPath expression.",
      "ja": "NETCONFのピアがサポートしている場合：XPathの機能（8.9節）を、値「XPathは」<フィルター>の属性を「選択」ことを示すために使用される要素は、XPath式が含まれています。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device can satisfy the request, the server sends an <rpc-reply> element containing a <data> element with the results of the query.",
      "ja": "肯定応答：デバイスが要求を満たすことができる場合は、サーバはクエリの結果と、<data>要素を含む<RPC-返信>要素を送信します。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example: To retrieve the entire <users> subtree:",
      "ja": "例：全体の<ユーザー>サブツリーを取得するには："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <users/> </top> </filter> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <実行/> </ソース> <フィルタタイプ=」サブツリー \"> <トップのxmlns =\" http://example.com/schema/1.2/config \"> <ユーザー/> </トップ> </フィルタ> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>root</name> <type>superuser</type> <full-name>Charlie Root</full-name>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>ルート</名前> <タイプ>スーパー</タイプ> <フルネーム>チャーリー・ルート</フルネーム>"
    },
    {
      "indent": 5,
      "text": " <company-info> <dept>1</dept> <id>1</id> </company-info> </user> <!-- additional <user> elements appear here... --> </users> </top> </data> </rpc-reply>",
      "ja": "<会社情報> <DEPT> 1 </ DEPT> <ID> 1 </ ID> </会社情報> </ユーザー> <！ - 追加の<ユーザー>の要素がここに表示され...  - > </ユーザー> </トップ> </データ> </ RPC-返信>"
    },
    {
      "indent": 6,
      "text": "Section 6 contains additional examples of subtree filtering.",
      "ja": "第6節では、サブツリーのフィルタリングの追加の例が含まれています。"
    },
    {
      "indent": 0,
      "text": "7.2. <edit-config>",
      "section_title": true,
      "ja": "7.2.  <編集-config>の"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 6,
      "text": "The <edit-config> operation loads all or part of a specified configuration to the specified target configuration datastore. This operation allows the new configuration to be expressed in several ways, such as using a local file, a remote file, or inline. If the target configuration datastore does not exist, it will be created.",
      "ja": "<編集-config>の操作は、指定されたターゲットの設定データストアに指定された構成の全部または一部をロードします。この操作は、新しい設定は、ローカルファイル、リモートファイル、またはインラインを使用するなど、いくつかの方法で表現することを可能にします。ターゲット構成データストアが存在しない場合は、それが作成されます。"
    },
    {
      "indent": 6,
      "text": "If a NETCONF peer supports the :url capability (Section 8.8), the <url> element can appear instead of the <config> parameter.",
      "ja": "NETCONFのピアがサポートしている場合：URL能力（8.8節）を、<URL>要素は、<設定>パラメータの代わりに表示されます。"
    },
    {
      "indent": 6,
      "text": "The device analyzes the source and target configurations and performs the requested changes. The target configuration is not necessarily replaced, as with the <copy-config> message. Instead, the target configuration is changed in accordance with the source's data and requested operations.",
      "ja": "デバイスは、ソースおよびターゲットの構成を分析し、要求された変更を行います。ターゲット構成は、必ずしも<コピー設定>メッセージのように、置換されていません。代わりに、ターゲットの設定は元のデータと要求された操作に応じて変更されます。"
    },
    {
      "indent": 6,
      "text": "If the <edit-config> operation contains multiple sub-operations that apply to the same conceptual node in the underlying data model, then the result of the operation is undefined (i.e., outside the scope of the NETCONF protocol).",
      "ja": "<編集設定>動作は、基礎となるデータ・モデルに同じ概念ノードに適用される複数のサブオペレーションが含まれている場合、演算の結果（すなわち、NETCONFプロトコルの範囲外）は未定義です。"
    },
    {
      "indent": 3,
      "text": "Attributes:",
      "ja": "属性："
    },
    {
      "indent": 6,
      "text": "operation: Elements in the <config> subtree MAY contain an \"operation\" attribute, which belongs to the NETCONF namespace defined in Section 3.1. The attribute identifies the point in the configuration to perform the operation and MAY appear on multiple elements throughout the <config> subtree.",
      "ja": "操作：<config>のサブツリー内の要素は、3.1節で定義されたNETCONFの名前空間に属している「操作」属性を含んでいてもよいです。属性は、操作を実行する構成でポイントを識別し、<設定>サブツリー全体にわたって複数の要素に表示されることがあります。"
    },
    {
      "indent": 9,
      "text": "If the \"operation\" attribute is not specified, the configuration is merged into the configuration datastore.",
      "ja": "「操作」属性が指定されていない場合は、コンフィギュレーションは、コンフィギュレーションデータストアにマージされます。"
    },
    {
      "indent": 9,
      "text": "The \"operation\" attribute has one of the following values:",
      "ja": "「オペレーション」属性は、次のいずれかの値があります。"
    },
    {
      "indent": 9,
      "text": "merge: The configuration data identified by the element containing this attribute is merged with the configuration at the corresponding level in the configuration datastore identified by the <target> parameter. This is the default behavior.",
      "ja": "マージ：この属性を含む要素によって識別される構成データは、<対象>パラメータによって識別される構成データストア内の対応するレベルで設定とマージされます。これがデフォルトの動作です。"
    },
    {
      "indent": 9,
      "text": "replace: The configuration data identified by the element containing this attribute replaces any related configuration in the configuration datastore identified by the <target> parameter. If no such configuration data exists in the configuration datastore, it is created. Unlike a <copy-config> operation, which replaces the entire target configuration, only the configuration actually present in the <config> parameter is affected.",
      "ja": "置き換え：この属性を含む要素で識別されるコンフィギュレーション・データを<ターゲット>パラメータによって識別されるコンフィギュレーション・データストア内の任意の関連する構成を置き換えます。そのような構成データは、構成データストアに存在しない場合は、それが作成されます。ターゲット全体構成を置き換える<コピー設定>動作とは異なり、<設定>パラメータに実際に存在する構成のみが影響を受けます。"
    },
    {
      "indent": 9,
      "text": "create: The configuration data identified by the element containing this attribute is added to the configuration if and only if the configuration data does not already exist in the configuration datastore. If the configuration data exists, an <rpc-error> element is returned with an <error-tag> value of \"data-exists\".",
      "ja": "作成：構成データが既に設定データストアに存在しない場合だけ、この属性を含む要素で識別されるコンフィギュレーション・データをコンフィギュレーションに追加されます。コンフィギュレーションデータが存在する場合は、<RPCエラー>要素「は、データが、存在する」の<エラータグ>値が返されます。"
    },
    {
      "indent": 9,
      "text": "delete: The configuration data identified by the element containing this attribute is deleted from the configuration if and only if the configuration data currently exists in the configuration datastore. If the configuration data does not exist, an <rpc-error> element is returned with an <error-tag> value of \"data-missing\".",
      "ja": "削除：この属性を含む要素で識別されるコンフィギュレーションデータは、コンフィギュレーションから削除された場合や、構成データは、現在の構成データストアに存在する場合にのみ。構成データが存在しない場合は、<RPC-エラー>要素は、「データ・行方不明」の<エラータグ>の値で返されます。"
    },
    {
      "indent": 9,
      "text": "remove: The configuration data identified by the element containing this attribute is deleted from the configuration if the configuration data currently exists in the configuration datastore. If the configuration data does not exist, the \"remove\" operation is silently ignored by the server.",
      "ja": "削除：コンフィギュレーション・データは、現在の構成データストアに存在する場合、この属性を含む要素で識別されるコンフィギュレーションデータは、コンフィギュレーションから削除されます。構成データが存在しない場合は、「削除」操作は黙って、サーバによって無視されます。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "target: Name of the configuration datastore being edited, such as <running/> or <candidate/>.",
      "ja": "ターゲット：コンフィギュレーションデータストアの名前は、<実行/>または<候補/>のように、編集されています。"
    },
    {
      "indent": 6,
      "text": "default-operation: Selects the default operation (as described in the \"operation\" attribute) for this <edit-config> request. The default value for the <default-operation> parameter is \"merge\".",
      "ja": "デフォルトの操作：この<編集-config>の要求のために（「操作」属性で説明したように）デフォルトの操作を選択します。 <デフォルトの操作>のデフォルト値は、パラメータが「マージ」です。"
    },
    {
      "indent": 9,
      "text": "The <default-operation> parameter is optional, but if provided, it has one of the following values:",
      "ja": "<デフォルトの操作>パラメータは任意ですが、提供されている場合、それは次のいずれかの値があります。"
    },
    {
      "indent": 9,
      "text": "merge: The configuration data in the <config> parameter is merged with the configuration at the corresponding level in the target datastore. This is the default behavior.",
      "ja": "マージ：<設定>パラメータ内の構成データは、ターゲットデータストア内の対応するレベルで設定とマージされます。これがデフォルトの動作です。"
    },
    {
      "indent": 9,
      "text": "replace: The configuration data in the <config> parameter completely replaces the configuration in the target datastore. This is useful for loading previously saved configuration data.",
      "ja": "置き換える：<設定>パラメータで設定データを完全にターゲットデータストアに設定を置き換えます。これは、ロード以前に保存したコンフィギュレーション・データに便利です。"
    },
    {
      "indent": 9,
      "text": "none: The target datastore is unaffected by the configuration in the <config> parameter, unless and until the incoming configuration data uses the \"operation\" attribute to request a different operation. If the configuration in the <config> parameter contains data for which there is not a corresponding level in the target datastore, an <rpc-error> is returned with an <error-tag> value of data-missing. Using \"none\" allows operations like \"delete\" to avoid unintentionally creating the parent hierarchy of the element to be deleted.",
      "ja": "いずれ：受信設定データが異なる動作を要求するために「操作」属性を使用しなければまで、ターゲット・データストアは、<設定>パラメータで構成によって影響されません。 <設定>パラメータで設定はターゲット・データストアに対応するレベルがされていないデータが含まれている場合、<RPCエラーは>データ欠落の<エラータグ>値が返されます。 「none」を使用していないと、誤って削除される要素の親階層を作成しないように「削除」のような操作を可能にします。"
    },
    {
      "indent": 6,
      "text": "test-option: The <test-option> element MAY be specified only if the device advertises the :validate:1.1 capability (Section 8.6).",
      "ja": "テスト・オプション：検証：<テスト・オプション>要素は、デバイスがアドバタイズする場合にのみ指定することができます1.1機能（8.6節）。"
    },
    {
      "indent": 9,
      "text": "The <test-option> element has one of the following values:",
      "ja": "<テスト・オプション>要素は、以下のいずれかの値があります。"
    },
    {
      "indent": 9,
      "text": "test-then-set: Perform a validation test before attempting to set. If validation errors occur, do not perform the <edit-config> operation. This is the default test-option.",
      "ja": "テスト、その後セット：設定しようとする前に、検証テストを実行します。検証エラーが発生した場合は、<編集-config>の操作を実行しないでください。これはデフォルトのテストオプションです。"
    },
    {
      "indent": 9,
      "text": "set: Perform a set without a validation test first.",
      "ja": "セット：最初の検証テストせずにセットを実行します。"
    },
    {
      "indent": 9,
      "text": "test-only: Perform only the validation test, without attempting to set.",
      "ja": "テスト専用：設定しようとせず、唯一の検証テストを実行します。"
    },
    {
      "indent": 6,
      "text": "error-option: The <error-option> element has one of the following values:",
      "ja": "エラー-オプション：<エラー-オプション>要素は、以下のいずれかの値があります。"
    },
    {
      "indent": 9,
      "text": "stop-on-error: Abort the <edit-config> operation on first error. This is the default error-option.",
      "ja": "ストップ・オン・エラー：最初のエラーの<編集-config>の操作を中止します。これがデフォルトのエラー・オプションです。"
    },
    {
      "indent": 9,
      "text": "continue-on-error: Continue to process configuration data on error; error is recorded, and negative response is generated if any errors occur.",
      "ja": "引き続きオンエラー：エラー時にコンフィギュレーション・データを処理し続けます。エラーが記録され、エラーが発生した場合、負の応答が生成されます。"
    },
    {
      "indent": 9,
      "text": "rollback-on-error: If an error condition occurs such that an error severity <rpc-error> element is generated, the server will stop processing the <edit-config> operation and restore the specified configuration to its complete state at the start of this <edit-config> operation. This option requires the server to support the :rollback-on-error capability described in Section 8.5.",
      "ja": "ロールバック・オン・エラー：エラー状態は、発生した場合は、そのエラーの重大度<RPC-エラー>要素が生成され、<編集-config>の操作の処理を停止し、開始時にその完全な状態に指定された設定を復元するサーバーこの<編集-config>の操作。セクション8.5で説明したロールバック・オン・エラー機能：このオプションでは、サポートするためのサーバが必要です。"
    },
    {
      "indent": 6,
      "text": "config: A hierarchy of configuration data as defined by one of the device's data models. The contents MUST be placed in an appropriate namespace, to allow the device to detect the appropriate data model, and the contents MUST follow the constraints of that data model, as defined by its capability definition. Capabilities are discussed in Section 8.",
      "ja": "設定：デバイスのデータ・モデルの一つで定義されたコンフィギュレーションデータの階層。コンテンツは、装置が適切なデータ・モデルを検出できるようにするために、適切な名前空間に配置する必要があり、その能力の定義によって定義される内容は、そのデータモデルの制約に従わなければなりません。機能はセクション8で説明されています。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent containing an <ok> element.",
      "ja": "肯定応答：デバイスは、<RPC-応答を>要求を満たすことができた場合は、<OK>要素を含む送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> response is sent if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>応答が送信されます。"
    },
    {
      "indent": 3,
      "text": "Example: The <edit-config> examples in this section utilize a simple data model, in which multiple instances of the <interface> element can be present, and an instance is distinguished by the <name> element within each <interface> element.",
      "ja": "例：<編集設定>このセクションの例では、<インターフェース>要素の複数のインスタンスが存在することができる単純なデータ・モデルを利用し、そしてインスタンスが各<インターフェイス>要素内の<name>要素によって区別されます。"
    },
    {
      "indent": 6,
      "text": "Set the MTU to 1500 on an interface named \"Ethernet0/0\" in the running configuration:",
      "ja": "実行コンフィギュレーションの「のEthernet0 / 0」という名前のインターフェイス上で1500にMTUを設定します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <config> <top xmlns=\"http://example.com/schema/1.2/config\"> <interface> <name>Ethernet0/0</name> <mtu>1500</mtu> </interface> </top> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <編集設定> <ターゲット> <実行/> </標的> <設定> <トップxmlns = \"http://example.com/schema/1.2/config\"> <インターフェース> <名前>をEthernet0 / 0 </名前> <MTU> 1500 </ MTU> </インターフェイス> </ TOP> </コンフィグ> </編集-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 3,
      "text": "Add an interface named \"Ethernet0/0\" to the running configuration, replacing any previous interface with that name:",
      "ja": "その名前で以前のインターフェースを置き換え、実行コンフィギュレーションに「のEthernet0 / 0」という名前のインターフェイスを追加します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <config xmlns:xc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <interface xc:operation=\"replace\"> <name>Ethernet0/0</name> <mtu>1500</mtu> <address> <name>192.0.2.4</name> <prefix-length>24</prefix-length> </address> </interface> </top> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <編集設定> <ターゲット> <実行/> </ターゲット> <設定のxmlns：XC = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <トップのxmlns = \"http://example.com/schema/1.2/config\"> <インターフェイスXC：オペレーション= \"交換\"> <名前>をEthernet0 / 0 </名前> <MTU> 1500 </ MTU> <アドレス>、<名> 192.0.2.4 </名前> <プレフィックス長> 24 </プレフィックス長> </アドレス> </インターフェース> </トップ> </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 3,
      "text": "Delete the configuration for an interface named \"Ethernet0/0\" from the running configuration:",
      "ja": "実行コンフィギュレーションから「のEthernet0 / 0」という名前のインターフェイスのコンフィギュレーションを削除します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <default-operation>none</default-operation> <config xmlns:xc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <interface xc:operation=\"delete\"> <name>Ethernet0/0</name>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <編集設定> <ターゲット> <実行/> </ target>に<デフォルトの動作>なし</デフォルトの動作> <設定のxmlns：XC = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <トップのxmlns = \"http://example.com/schema/1.2/config\" > <境界xc：操作は= \"削除\"> <名前>のEthernet0 / 0 </名前>"
    },
    {
      "indent": 5,
      "text": " </interface> </top> </config> </edit-config> </rpc>",
      "ja": "</インターフェイス> </トップ> </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 3,
      "text": "Delete interface 192.0.2.4 from an OSPF area (other interfaces configured in the same area are unaffected):",
      "ja": "OSPF領域（同じ領域で構成された他のインターフェイスが影響を受けない）からインターフェイス192.0.2.4を削除します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <default-operation>none</default-operation> <config xmlns:xc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <top xmlns=\"http://example.com/schema/1.2/config\"> <protocols> <ospf> <area> <name>0.0.0.0</name> <interfaces> <interface xc:operation=\"delete\"> <name>192.0.2.4</name> </interface> </interfaces> </area> </ospf> </protocols> </top> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <編集設定> <ターゲット> <実行/> </ target>に<デフォルトの動作>なし</デフォルトの動作> <設定のxmlns：XC = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <トップのxmlns = \"http://example.com/schema/1.2/config\" > <プロトコル> <OSPF> <地域> <名前> 0.0.0.0 </名前> <インターフェース> <インターフェイスXC：オペレーション= \"削除\"> <名前> 192.0.2.4 </名前> </インターフェイス> </インターフェース> </エリア> </ OSPF> </プロトコル> </トップ> </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "7.3. <copy-config>",
      "section_title": true,
      "ja": "7.3.  <コピー設定>"
    },
    {
      "indent": 3,
      "text": "Description: Create or replace an entire configuration datastore with the contents of another complete configuration datastore. If the target datastore exists, it is overwritten. Otherwise, a new one is created, if allowed.",
      "ja": "説明：別の完全な構成データストアの内容全体構成データストアを作成するか、または交換してください。ターゲットデータストアが存在する場合は、上書きされます。許可されていればそうでない場合は、新しいものが作成されます。"
    },
    {
      "indent": 6,
      "text": "If a NETCONF peer supports the :url capability (Section 8.8), the <url> element can appear as the <source> or <target> parameter.",
      "ja": "NETCONFのピアがサポートしている場合：URL能力（8.8節）を、<URL>要素は、<ソース>または<対象>パラメータとして表示されます。"
    },
    {
      "indent": 6,
      "text": "Even if it advertises the :writable-running capability, a device MAY choose not to support the <running/> configuration datastore as the <target> parameter of a <copy-config> operation. A device MAY choose not to support remote-to-remote copy operations, where both the <source> and <target> parameters use the <url> element. If the <source> and <target> parameters identify the same URL or configuration datastore, an error MUST be returned with an error-tag containing \"invalid-value\".",
      "ja": "それはアドバタイズ場合でも：書き込み可能な走行性能を、デバイスは、<コピー-config>の操作の<対象>パラメータとして<ランニング/>コンフィギュレーションデータストアをサポートしないこともできます。デバイスは、<ソース>と<対象>両方のパラメータは、<URL>要素を使用してリモートからのリモートコピー操作をサポートしないこともできます。 <光源>と<target>にパラメータが同じURLまたは構成データストアを識別した場合、エラーはエラータグが「無効値」を含むで返さなければなりません。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "target: Name of the configuration datastore to use as the destination of the <copy-config> operation.",
      "ja": "ターゲット：コンフィギュレーション・データストアの名前は、<コピー-config>の操作の宛先として使用します。"
    },
    {
      "indent": 6,
      "text": "source: Name of the configuration datastore to use as the source of the <copy-config> operation, or the <config> element containing the complete configuration to copy.",
      "ja": "ソース：コンフィギュレーションデータストアの名称が、<コピー設定>操作のソース、またはコピーするための完全な構成を含む<config>要素として使用します。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that includes an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれている送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included within the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>内に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <copy-config> <target> <running/> </target> <source> <url>https://user:password@example.com/cfg/new.txt</url> </source> </copy-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コピー設定> <ターゲット> <実行/> </ターゲット> <ソース> <URL > https：//でユーザー：password@example.com/cfg/new.txt </ URL> </ソース> </コピー-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "7.4. <delete-config>",
      "section_title": true,
      "ja": "7.4.  <削除-config>の"
    },
    {
      "indent": 3,
      "text": "Description: Delete a configuration datastore. The <running> configuration datastore cannot be deleted.",
      "ja": "説明：構成データストアを削除します。 <ランニング>コンフィギュレーション・データストアを削除することはできません。"
    },
    {
      "indent": 6,
      "text": "If a NETCONF peer supports the :url capability (Section 8.8), the <url> element can appear as the <target> parameter.",
      "ja": "NETCONFのピアがサポートしている場合：URL能力（8.8節）を、<URL>要素は、<対象>パラメータとして表示されます。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "target: Name of the configuration datastore to delete.",
      "ja": "対象：削除するコンフィギュレーション・データストアの名前。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that includes an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれている送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included within the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>内に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <delete-config> <target> <startup/> </target> </delete-config> </rpc>",
      "ja": "<RPCメッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <削除-config>の<対象> <起動/> </ target>に</削除、コンフィグ> </ RPC>"
    },
    {
      "indent": 5,
      "text": " <rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "7.5. <lock>",
      "section_title": true,
      "ja": "7.5.  <ロック>"
    },
    {
      "indent": 3,
      "text": "Description: The <lock> operation allows the client to lock the entire configuration datastore system of a device. Such locks are intended to be short-lived and allow a client to make a change without fear of interaction with other NETCONF clients, non-NETCONF clients (e.g., SNMP and command line interface (CLI) scripts), and human users.",
      "ja": "説明：<ロック>操作は、クライアントがデバイスの全体構成データストアシステムをロックすることを可能にします。このようなロックは短命であることと、クライアントが他のNETCONFクライアント、非NETCONFクライアント（例えば、SNMP、およびコマンドラインインターフェイス（CLI）スクリプト）、そして人間のユーザとの相互作用を恐れることなく変更を行うことができるようにすることを意図しています。"
    },
    {
      "indent": 6,
      "text": "An attempt to lock the configuration datastore MUST fail if an existing session or other entity holds a lock on any portion of the lock target.",
      "ja": "既存のセッションまたは他のエンティティは、ロック対象の任意の部分のロックを保持している場合、構成データストアをロックしようとする試みは失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "When the lock is acquired, the server MUST prevent any changes to the locked resource other than those requested by this session. SNMP and CLI requests to modify the resource MUST fail with an appropriate error.",
      "ja": "ロックが取得されると、サーバは、このセッションによって要求されたもの以外のロックされたリソースへの変更を防止しなければなりません。リソースを変更するには、SNMPとCLIの要求は、適切なエラーで失敗しなければなりません。"
    },
    {
      "indent": 6,
      "text": "The duration of the lock is defined as beginning when the lock is acquired and lasting until either the lock is released or the NETCONF session closes. The session closure can be explicitly performed by the client, or implicitly performed by the server based on criteria such as failure of the underlying transport, simple inactivity timeout, or detection of abusive behavior on the part of the client. These criteria are dependent on the implementation and the underlying transport.",
      "ja": "ロックのいずれかが解放されるか、NETCONFセッションが終了するまでロックを取得し、持続されたときにロックの継続時間は、初めのように定義されます。セッションの閉鎖は、明示的にクライアントによって実行される、または暗黙的に、クライアント側での基礎となる交通機関の不具合、単純な非アクティブタイムアウト、または虐待的な行動の検出などの基準に基づいて、サーバによって実行することができます。これらの基準は、実装と基本的な輸送に依存しています。"
    },
    {
      "indent": 6,
      "text": "The <lock> operation takes a mandatory parameter, <target>. The <target> parameter names the configuration datastore that will be locked. When a lock is active, using the <edit-config> operation on the locked configuration datastore and using the locked configuration as a target of the <copy-config> operation will be disallowed by any other NETCONF session. Additionally, the system will ensure that these locked configuration resources will not be modified by other non-NETCONF management operations such as SNMP and CLI. The <kill-session> operation can be used to force the release of a lock owned by another NETCONF session. It is beyond the scope of this document to define how to break locks held by other entities.",
      "ja": "<ロック>操作は、<対象>、必須パラメータを取ります。 <対象>パラメータ名ロックされるコンフィギュレーション・データストア。ロックがロックされたコンフィギュレーションデータストアの<編集設定>操作を使用し、<コピー設定>のターゲットとしてロック構成を使用して、アクティブになっているときの動作は、他のNETCONFセッションによって許可されるであろう。また、システムは、これらのロックされた構成リソースは、SNMPやCLIなどの他の非NETCONF管理操作によって改変されないことを保証します。 <殺すセッション>操作は、別のNETCONFセッションが所有するロックの解除を強制するために使用することができます。これは、他のエンティティが保持しているロックを解除する方法を定義するには、この文書の範囲外です。"
    },
    {
      "indent": 6,
      "text": "A lock MUST NOT be granted if any of the following conditions is true:",
      "ja": "次の条件のいずれかに該当する場合ロックが許可されてはなりません。"
    },
    {
      "indent": 6,
      "text": "* A lock is already held by any NETCONF session or another entity.",
      "ja": "*ロックがすでに任意のNETCONFセッションまたは別のエンティティによって保持されています。"
    },
    {
      "indent": 6,
      "text": "* The target configuration is <candidate>, it has already been modified, and these changes have not been committed or rolled back.",
      "ja": "*ターゲットの設定は、<候補>で、それはすでに修正されており、これらの変更は、コミットまたはロールバックされていません。"
    },
    {
      "indent": 6,
      "text": "* The target configuration is <running>, and another NETCONF session has an ongoing confirmed commit (Section 8.4).",
      "ja": "*ターゲットの設定は、<ランニング>され、別のNETCONFセッションは継続的なコミット確認（8.4節）を持っています。"
    },
    {
      "indent": 6,
      "text": "The server MUST respond with either an <ok> element or an <rpc-error>.",
      "ja": "サーバーは、<OK>要素や<RPC-エラー>のいずれかで応じなければなりません。"
    },
    {
      "indent": 6,
      "text": "A lock will be released by the system if the session holding the lock is terminated for any reason.",
      "ja": "ロックを保持しているセッションが何らかの理由で終了した場合、ロックは、システムによって解放されます。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "target: Name of the configuration datastore to lock.",
      "ja": "ターゲット：ロックするコンフィギュレーション・データストアの名前。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that contains an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれて送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 6,
      "text": "If the lock is already held, the <error-tag> element will be \"lock-denied\" and the <error-info> element will include the <session-id> of the lock owner. If the lock is held by a non-NETCONF entity, a <session-id> of 0 (zero) is included. Note that any other entity performing a lock on even a partial piece of a target will prevent a NETCONF lock (which is global) from being obtained on that target.",
      "ja": "ロックがすでに保持されている場合は、<エラータグ>要素には、「ロック・拒否」され、<エラー-info>要素には、ロック所有者の<セッション-id>を含めます。ロックが0（ゼロ）の非NETCONFエンティティの<session-id>で保持されている場合が含まれます。ターゲットの偶数部分ピースのロックを行う他の任意のエンティティがそのターゲットに得られるから（グローバルである）NETCONFロックを防止することに留意されたいです。"
    },
    {
      "indent": 3,
      "text": "Example: The following example shows a successful acquisition of a lock.",
      "ja": "例：以下の例では、ロックの取得に成功を示しています。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <lock> <target> <running/> </target> </lock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック> <ターゲット> <実行/> </ target>に</ロック> </ RPC >"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> <!-- lock succeeded --> </rpc-reply>",
      "ja": "<RPC-返信メッセージID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <OK /> <！ - ロックが成功した - > </ RPC-返信>"
    },
    {
      "indent": 3,
      "text": "Example: The following example shows a failed attempt to acquire a lock when the lock is already in use.",
      "ja": "例：以下の例では、ロックが既に使用されているときにロックの取得に失敗したを示しています。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <lock> <target> <running/> </target> </lock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック> <ターゲット> <実行/> </ target>に</ロック> </ RPC >"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <rpc-error> <!-- lock failed --> <error-type>protocol</error-type> <error-tag>lock-denied</error-tag> <error-severity>error</error-severity> <error-message> Lock failed, lock is already held </error-message> <error-info> <session-id>454</session-id> <!-- lock is held by NETCONF session 454 --> </error-info> </rpc-error> </rpc-reply>",
      "ja": "<RPC返信メッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <RPCエラー> <！ - ロックに失敗しました - > <エラータイプ>プロトコル</エラータイプ> <エラータグ>ロック拒否</エラータグ> <エラーの重大度>誤り</エラーの重大度> <エラーメッセージ>ロックに失敗し、ロックが既に保持されている</エラーメッセージ> <エラー情報> <セッションID> 454 </セッションID> <！ - ロックはNETCONFセッションによって保持されている454  - > </エラー・インフォメーション> </ RPC-エラー> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "7.6. <unlock>",
      "section_title": true,
      "ja": "7.6.  <ロック解除>"
    },
    {
      "indent": 3,
      "text": "Description: The <unlock> operation is used to release a configuration lock, previously obtained with the <lock> operation.",
      "ja": "説明：<ロック解除>操作は、以前<ロック>操作で得られた、設定ロックを解除するために使用されます。"
    },
    {
      "indent": 6,
      "text": "An <unlock> operation will not succeed if either of the following conditions is true:",
      "ja": "次の条件のいずれかに該当する場合、<ロック解除>操作は成功しません。"
    },
    {
      "indent": 6,
      "text": "* The specified lock is not currently active.",
      "ja": "*指定されたロックは、現在アクティブではありません。"
    },
    {
      "indent": 6,
      "text": "* The session issuing the <unlock> operation is not the same session that obtained the lock.",
      "ja": "* <ロック解除>操作を発行するセッションは、ロックを取得し、同じセッションではありません。"
    },
    {
      "indent": 6,
      "text": "The server MUST respond with either an <ok> element or an <rpc-error>.",
      "ja": "サーバーは、<OK>要素や<RPC-エラー>のいずれかで応じなければなりません。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "target: Name of the configuration datastore to unlock.",
      "ja": "ターゲット：ロックを解除するには、構成データストアの名前。"
    },
    {
      "indent": 9,
      "text": "A NETCONF client is not permitted to unlock a configuration datastore that it did not lock.",
      "ja": "NETCONFクライアントは、それがロックしていなかったコンフィギュレーションデータストアのロックを解除することが許可されていません。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that contains an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれて送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <unlock> <target> <running/> </target> </unlock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック解除> <ターゲット> <実行/> </ target>に</アンロック> </ RPC >"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "7.7. <get>",
      "section_title": true,
      "ja": "7.7.  <GET>"
    },
    {
      "indent": 3,
      "text": "Description: Retrieve running configuration and device state information.",
      "ja": "説明：実行コンフィギュレーションおよびデバイスの状態情報を取得します。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "filter: This parameter specifies the portion of the system configuration and state data to retrieve. If this parameter is not present, all the device configuration and state information is returned.",
      "ja": "フィルタ：このパラメータは、取得するために、システム構成や状態データの一部を指定します。このパラメータが存在しない場合、すべてのデバイスの設定と状態の情報が返されます。"
    },
    {
      "indent": 9,
      "text": "The <filter> element MAY optionally contain a \"type\" attribute. This attribute indicates the type of filtering syntax used within the <filter> element. The default filtering mechanism in NETCONF is referred to as subtree filtering and is described in Section 6. The value \"subtree\" explicitly identifies this type of filtering.",
      "ja": "<フィルタ>要素は、必要に応じて、「タイプ」属性を含むかもしれません。この属性は、<フィルタ>要素内で使用フィルター構文の種類を示します。 NETCONFのデフォルトのフィルタリング機構としてサブツリーフィルタリングと呼ばれ、値「サブツリー」は、明示的にフィルタリングのこのタイプを識別するセクション6に記載されています。"
    },
    {
      "indent": 9,
      "text": "If the NETCONF peer supports the :xpath capability (Section 8.9), the value \"xpath\" MAY be used to indicate that the \"select\" attribute of the <filter> element contains an XPath expression.",
      "ja": "NETCONFのピアがサポートしている場合：XPathの機能（8.9節）を、値「XPathは」<フィルター>の属性を「選択する」ことを示すために使用される要素は、XPath式が含まれています。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent. The <data> section contains the appropriate subset.",
      "ja": "肯定応答：デバイスは、<RPC-応答を>要求を満たすことができた場合に送信されます。 <データ>セクションでは、適切なサブセットを含みます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get> <filter type=\"subtree\"> <top xmlns=\"http://example.com/schema/1.2/stats\"> <interfaces> <interface> <ifName>eth0</ifName> </interface> </interfaces> </top> </filter> </get> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET> <フィルタタイプ= \"サブツリー\"> <トップのxmlnsは= \"HTTP：//例.COM /スキーマ/ 1.2 /統計 \"> <インターフェース> <インターフェース> <のifName> eth0の</のifName> </インターフェイス> </インターフェイス> </ TOP> </フィルタ> </取得> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/stats\"> <interfaces> <interface> <ifName>eth0</ifName> <ifInOctets>45621</ifInOctets> <ifOutOctets>774344</ifOutOctets> </interface> </interfaces> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 /統計 \"> <インターフェース> <インターフェース> <のifName> eth0の</のifName> <のifInOctets> 45621 </のifInOctets> <ifOutOctets> 774344 </ ifOutOctets> </インターフェイス> </インターフェイス> </ TOP> </データ> </ RPC-返信>"
    },
    {
      "indent": 0,
      "text": "7.8. <close-session>",
      "section_title": true,
      "ja": "7.8.  <クローズセッション>"
    },
    {
      "indent": 3,
      "text": "Description: Request graceful termination of a NETCONF session.",
      "ja": "説明：NETCONFセッションの優雅な終了を要求します。"
    },
    {
      "indent": 6,
      "text": "When a NETCONF server receives a <close-session> request, it will gracefully close the session. The server will release any locks and resources associated with the session and gracefully close any associated connections. Any NETCONF requests received after a <close-session> request will be ignored.",
      "ja": "NETCONFサーバは<クローズセッション>要求を受信すると、それは優雅にセッションが終了します。サーバーは、セッションに関連付けられたすべてのロックやリソースを解放し、優雅に関連するすべての接続を閉じます。 <クローズセッション>の後に受信したすべてのNETCONF要求は要求は無視されます。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that includes an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれている送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <close-session/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <クローズセッション/> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "7.9. <kill-session>",
      "section_title": true,
      "ja": "7.9.  <キルセッション>"
    },
    {
      "indent": 3,
      "text": "Description: Force the termination of a NETCONF session.",
      "ja": "説明：NETCONFセッションの終了を強制します。"
    },
    {
      "indent": 6,
      "text": "When a NETCONF entity receives a <kill-session> request for an open session, it will abort any operations currently in process, release any locks and resources associated with the session, and close any associated connections.",
      "ja": "NETCONFエンティティが開いているセッションのために<殺すセッション>要求を受信すると、それは、現在のプロセスですべての操作を中止したセッションに関連付けられたすべてのロックやリソースを解放し、関連するすべての接続を閉じます。"
    },
    {
      "indent": 6,
      "text": "If a NETCONF server receives a <kill-session> request while processing a confirmed commit (Section 8.4), it MUST restore the configuration to its state before the confirmed commit was issued.",
      "ja": "コミット確認（8.4節）を処理しながら、NETCONFサーバは<殺すセッション>要求を受信した場合に発行されたコミットを確認する前に、それはその状態に設定を復元する必要があります。"
    },
    {
      "indent": 6,
      "text": "Otherwise, the <kill-session> operation does not roll back configuration or other device state modifications made by the entity holding the lock.",
      "ja": "そうでなければ、<殺すセッション>動作設定またはロックを保持しているエンティティによって作ら他の装置の状態の変更をロールバックしません。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "session-id: Session identifier of the NETCONF session to be terminated. If this value is equal to the current session ID, an \"invalid-value\" error is returned.",
      "ja": "セッションID：NETCONFセッションのセッション識別子は終了します。この値は、現在のセッションIDと等しい場合、「不正な値」エラーが返されます。"
    },
    {
      "indent": 3,
      "text": "Positive Response: If the device was able to satisfy the request, an <rpc-reply> is sent that includes an <ok> element.",
      "ja": "肯定応答：デバイスは要求を満たすことができた場合は、<RPC-応答が> <OK>要素が含まれている送信されます。"
    },
    {
      "indent": 3,
      "text": "Negative Response: An <rpc-error> element is included in the <rpc-reply> if the request cannot be completed for any reason.",
      "ja": "負の応答：要求が何らかの理由で完了できない場合は、<RPCエラー>要素は、<RPC-返信>に含まれています。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <kill-session> <session-id>4</session-id> </kill-session> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <殺すセッション> <セッションID> 4 </セッションID> </ kill-セッション> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8. Capabilities",
      "section_title": true,
      "ja": "8.機能"
    },
    {
      "indent": 3,
      "text": "This section defines a set of capabilities that a client or a server MAY implement. Each peer advertises its capabilities by sending them during an initial capabilities exchange. Each peer needs to understand only those capabilities that it might use and MUST ignore any capability received from the other peer that it does not require or does not understand.",
      "ja": "このセクションでは、クライアントまたはサーバが実装してもよい（MAY）機能のセットを定義します。各ピアは、最初の機能交換の際にそれらを送信することにより、その機能をアドバタイズします。各ピアは、それが使用する可能性がありますのみこれらの機能を理解することが必要であり、それは必要としないか、理解していない他のピアから受信したすべての機能を無視しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Additional capabilities can be defined using the template in Appendix D. Future capability definitions can be published as standards by standards bodies or published as proprietary extensions.",
      "ja": "追加機能は、標準化団体によって標準規格として公開または独自の拡張機能として公開することができ付録D.今後の機能の定義にテンプレートを使用して定義することができます。"
    },
    {
      "indent": 3,
      "text": "A NETCONF capability is identified with a URI. The base capabilities are defined using URNs following the method described in RFC 3553 [RFC3553]. Capabilities defined in this document have the following format:",
      "ja": "NETCONFの機能は、URIで識別されます。ベース機能は、RFC 3553 [RFC3553]に記載の方法以下のURNを使用して定義されています。この文書で定義された機能は、次の形式を持っています。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:{name}:1.x",
      "ja": "URN：IETF：paramsは：NETCONF：能力：{名前}：1.1"
    },
    {
      "indent": 3,
      "text": "where {name} is the name of the capability. Capabilities are often referenced in discussions and email using the shorthand :{name}, or :{name}:{version} if the capability exists in multiple versions. For example, the foo capability would have the formal name \"urn:ietf:params:netconf:capability:foo:1.0\" and be called \":foo\". The shorthand form MUST NOT be used inside the protocol.",
      "ja": "ここで、{名前}は機能の名前です。 {名前}、または：{名前}能力は複数のバージョンに存在する場合{バージョン}能力はしばしば略記を用いて議論し、電子メールで参照されています。呼ばれる \"：foo\" というたとえば、fooという機能が正式名称 \"：IETF：のparams：NETCONF：機能：：FOO 1.0壷\" を持っているでしょう。速記形式は、プロトコル内部で使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "8.1. Capabilities Exchange",
      "section_title": true,
      "ja": "8.1. 機能交換"
    },
    {
      "indent": 3,
      "text": "Capabilities are advertised in messages sent by each peer during session establishment. When the NETCONF session is opened, each peer (both client and server) MUST send a <hello> element containing a list of that peer's capabilities. Each peer MUST send at least the base NETCONF capability, \"urn:ietf:params:netconf:base:1.1\". A peer MAY include capabilities for previous NETCONF versions, to indicate that it supports multiple protocol versions.",
      "ja": "機能は、セッション確立時に各ピアによって送信されたメッセージでアドバタイズされています。 NETCONFセッションが開かれると、各ピア（クライアントとサーバーの両方）は、そのピアの機能のリストを含む<こんにちは>要素を送らなければなりません。各ピアは、少なくともベースNETCONF機能を送らなければなりません、 \"URN：IETF：のparams：NETCONF：ベース：1.1\"。ピアは、複数のプロトコルバージョンをサポートしていることを示すために、以前のNETCONFのバージョンの機能を含むかもしれません。"
    },
    {
      "indent": 3,
      "text": "Both NETCONF peers MUST verify that the other peer has advertised a common protocol version. When comparing protocol version capability URIs, only the base part is used, in the event any parameters are encoded at the end of the URI string. If no protocol version capability in common is found, the NETCONF peer MUST NOT continue the session. If more than one protocol version URI in common is present, then the highest numbered (most recent) protocol version MUST be used by both peers.",
      "ja": "両方NETCONFピアは他のピアが共通のプロトコルバージョンをアドバタイズしていることを確かめなければなりません。プロトコルバージョン能力URIを比較した場合、唯一のベース部分が使用され、イベントの任意のパラメータがURI文字列の末尾に符号化されます。共通にはプロトコルバージョンの機能が見つからない場合は、NETCONFピアは、セッションを継続してはなりません。共通に複数のプロトコル・バージョンURIが存在する場合、最も大きな番号（直近の）プロトコルのバージョンは、両方のピアで使用されなければなりません。"
    },
    {
      "indent": 3,
      "text": "A server sending the <hello> element MUST include a <session-id> element containing the session ID for this NETCONF session. A client sending the <hello> element MUST NOT include a <session-id> element.",
      "ja": "<こんにちは>要素を送信するサーバは、このNETCONFセッションのセッションIDを含む<​​セッションID>要素を含まなければなりません。送信クライアントは、<こんにちは>要素は、<セッションID>要素を含んではいけません。"
    },
    {
      "indent": 3,
      "text": "A server receiving a <hello> message with a <session-id> element MUST terminate the NETCONF session. Similarly, a client that does not receive a <session-id> element in the server's <hello> message MUST terminate the NETCONF session (without first sending a <close-session>).",
      "ja": "<セッションID>と<ハロー>メッセージを受信したサーバは、素子は、NETCONFセッションを終了しなければなりません。同様に、<セッションID>要素を受信しないクライアントサーバの<こんにちは> NETCONFセッションを終了しなければならないメッセージ（最初の<クローズセッション>を送信せずに）。"
    },
    {
      "indent": 3,
      "text": "In the following example, a server advertises the base NETCONF capability, one NETCONF capability defined in the base NETCONF document, and one implementation-specific capability.",
      "ja": "次の例では、サーバは、ベースNETCONF能力、ベースNETCONF文書で定義されNETCONF能力、および一実装固有の能力をアドバタイズ。"
    },
    {
      "indent": 3,
      "text": "<hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <capabilities> <capability> urn:ietf:params:netconf:base:1.1 </capability> <capability> urn:ietf:params:netconf:capability:startup:1.0 </capability> <capability> http://example.net/router/2.3/myfeature </capability> </capabilities> <session-id>4</session-id> </hello>",
      "ja": "<ハローのxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <機能> <機能> URN：IETF：paramsは：NETCONF：塩基：1.1 </機能> <機能> URN：IETF： params：NETCONF：機能：スタートアップ：1.0 </機能> <機能> http://example.net/router/2.3/myfeature </機能> </機能> <セッションID> 4 </セッションID> < /こんにちは>"
    },
    {
      "indent": 3,
      "text": "Each peer sends its <hello> element simultaneously as soon as the connection is open. A peer MUST NOT wait to receive the capability set from the other side before sending its own set.",
      "ja": "各ピアは、すぐに接続が開かれているとして同時にその<こんにちは>要素を送信します。ピアは、独自のセットを送信する前に、他の側からの設定機能を受け取るために待ってはなりません。"
    },
    {
      "indent": 0,
      "text": "8.2. Writable-Running Capability",
      "section_title": true,
      "ja": "8.2. 書き込み可能・ランニング能力"
    },
    {
      "indent": 0,
      "text": "8.2.1. Description",
      "section_title": true,
      "ja": "8.2.1. 説明"
    },
    {
      "indent": 3,
      "text": "The :writable-running capability indicates that the device supports direct writes to the <running> configuration datastore. In other words, the device supports <edit-config> and <copy-config> operations where the <running> configuration is the target.",
      "ja": "：書き込み可能な走行性能は、デバイスが<ランニング>コンフィギュレーションデータストアへの直接書き込みをサポートしていることを示しています。つまり、デバイスがサポート<編集-config設定>と<ランニング> <コピー-config>の操作で設定が対象です。"
    },
    {
      "indent": 0,
      "text": "8.2.2. Dependencies",
      "section_title": true,
      "ja": "8.2.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.2.3. Capability Identifier",
      "section_title": true,
      "ja": "8.2.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :writable-running capability is identified by the following capability string:",
      "ja": "：書き込み可能なラン機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:writable-running:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：書き込み可能なランニング：1.0"
    },
    {
      "indent": 0,
      "text": "8.2.4. New Operations",
      "section_title": true,
      "ja": "8.2.4. 新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.2.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.2.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.2.5.1. <edit-config>",
      "section_title": true,
      "ja": "8.2.5.1。 <編集-config>の"
    },
    {
      "indent": 3,
      "text": "The :writable-running capability modifies the <edit-config> operation to accept the <running> element as a <target>.",
      "ja": "：書き込み可能な走行性能は、<対象>として<ランニング>要素を受け入れるために、<編集-config>の操作を変更します。"
    },
    {
      "indent": 0,
      "text": "8.2.5.2. <copy-config>",
      "section_title": true,
      "ja": "8.2.5.2。 <コピー設定>"
    },
    {
      "indent": 3,
      "text": "The :writable-running capability modifies the <copy-config> operation to accept the <running> element as a <target>.",
      "ja": "：書き込み可能な走行性能は、<対象>として<ランニング>要素を受け入れるために、<コピー-config>の操作を変更します。"
    },
    {
      "indent": 0,
      "text": "8.3. Candidate Configuration Capability",
      "section_title": true,
      "ja": "8.3. 候補の設定機能"
    },
    {
      "indent": 0,
      "text": "8.3.1. Description",
      "section_title": true,
      "ja": "8.3.1. 説明"
    },
    {
      "indent": 3,
      "text": "The candidate configuration capability, :candidate, indicates that the device supports a candidate configuration datastore, which is used to hold configuration data that can be manipulated without impacting the device's current configuration. The candidate configuration is a full configuration data set that serves as a work place for creating and manipulating configuration data. Additions, deletions, and changes can be made to this data to construct the desired configuration data. A <commit> operation MAY be performed at any time that causes the device's running configuration to be set to the value of the candidate configuration.",
      "ja": "候補設定機能、：候補者、デバイスはデバイスの現在の構成に影響を与えずに操作することができ、構成データを保持するために使用された候補の構成データストアを、サポートしていることを示しています。候補コンフィギュレーションはコンフィギュレーションデータを作成し、操作するための作業場所として機能する完全なコンフィギュレーション・データ・セットです。追加、削除、および変更は、所望の構成データを構築するために、このデータにすることができます。 <コミット>操作は、デバイスの実行コンフィギュレーションは、候補設定の値に設定されるようにする任意の時点で実施することができます。"
    },
    {
      "indent": 3,
      "text": "The <commit> operation effectively sets the running configuration to the current contents of the candidate configuration. While it could be modeled as a simple copy, it is done as a distinct operation for a number of reasons. In keeping high-level concepts as first-class operations, we allow developers to see more clearly both what the client is requesting and what the server must perform. This keeps the intentions more obvious, the special cases less complex, and the interactions between operations more straightforward. For example, the :confirmed-commit:1.1 capability (Section 8.4) would make no sense as a \"copy confirmed\" operation.",
      "ja": "<コミット>操作を効果的に、候補構成の現在の内容に実行コンフィギュレーションを設定します。それは単純なコピーとしてモデル化することができますが、それは多くの理由のために個別の操作として行われます。ファーストクラスの操作のような高レベルの概念を維持するには、我々は、開発者がより明確に、両方のサーバが実行しなければならないものをクライアントが要求しているとものを見ることができます。これは、より多くの明白な意図、あまり複雑で特殊なケース、そしてより簡単な操作の間の相互作用を保持します。たとえば、：確認コミット：1.1機能（8.4節）を操作「のコピーが確認さ」として意味をなさないだろう。"
    },
    {
      "indent": 3,
      "text": "The candidate configuration can be shared among multiple sessions. Unless a client has specific information that the candidate configuration is not shared, it MUST assume that other sessions are able to modify the candidate configuration at the same time. It is therefore prudent for a client to lock the candidate configuration before modifying it.",
      "ja": "候補構成は、複数のセッション間で共有することができます。クライアントは、候補設定が共有されていないことを具体的な情報を持っていない限り、それは他のセッションが同時に候補設定を変更することが可能であることを仮定しなければなりません。クライアントがそれを変更する前に、候補の設定をロックすることがゆえ賢明です。"
    },
    {
      "indent": 3,
      "text": "The client can discard any uncommitted changes to the candidate configuration by executing the <discard-changes> operation. This operation reverts the contents of the candidate configuration to the contents of the running configuration.",
      "ja": "クライアントは、<廃棄変更>操作を実行することにより、候補構成にコミットされていない変更を廃棄することができます。この操作は実行コンフィギュレーションの内容を候補コンフィギュレーションの内容を元に戻します。"
    },
    {
      "indent": 0,
      "text": "8.3.2. Dependencies",
      "section_title": true,
      "ja": "8.3.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.3.3. Capability Identifier",
      "section_title": true,
      "ja": "8.3.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :candidate capability is identified by the following capability string:",
      "ja": "：候補機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:candidate:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：候補：1.0"
    },
    {
      "indent": 0,
      "text": "8.3.4. New Operations",
      "section_title": true,
      "ja": "8.3.4. 新事業"
    },
    {
      "indent": 0,
      "text": "8.3.4.1. <commit>",
      "section_title": true,
      "ja": "8.3.4.1。 <コミット>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 9,
      "text": "When the candidate configuration's content is complete, the\nconfiguration data can be committed, publishing the data set to\nthe rest of the device and requesting the device to conform to\nthe behavior described in the new configuration.",
      "raw": true
    },
    {
      "indent": 9,
      "text": "To commit the candidate configuration as the device's new current configuration, use the <commit> operation.",
      "ja": "デバイスの新しい現在の構成として、候補コンフィギュレーションをコミットするには、<コミット>操作を使用します。"
    },
    {
      "indent": 9,
      "text": "The <commit> operation instructs the device to implement the configuration data contained in the candidate configuration. If the device is unable to commit all of the changes in the candidate configuration datastore, then the running configuration MUST remain unchanged. If the device does succeed in committing, the running configuration MUST be updated with the contents of the candidate configuration.",
      "ja": "動作は、候補コンフィギュレーションに含まれるコンフィギュレーションデータを実装するためにデバイスに指示する<コミット>。デバイスは、候補コンフィギュレーションデータストアの変更のすべてをコミットすることができない場合は、実行コンフィギュレーションは変更されませんしなければなりません。デバイスがコミットに成功した場合、実行中のコンフィギュレーションは、候補コンフィギュレーションの内容で更新する必要があります。"
    },
    {
      "indent": 9,
      "text": "If the running or candidate configuration is currently locked by a different session, the <commit> operation MUST fail with an <error-tag> value of \"in-use\".",
      "ja": "ランニングまたは候補コンフィギュレーションは、現在別のセッションによってロックされている場合、<コミット>動作<エラータグ>と「使用中」の値を失敗しなければなりません。"
    },
    {
      "indent": 9,
      "text": "If the system does not have the :candidate capability, the <commit> operation is not available.",
      "ja": "システムが持っていない場合は、次の候補の能力を、操作が利用できない<コミット>。"
    },
    {
      "indent": 3,
      "text": "Positive Response:",
      "ja": "肯定的な反応："
    },
    {
      "indent": 9,
      "text": "If the device was able to satisfy the request, an <rpc-reply>\nis sent that contains an <ok> element.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Negative Response:",
      "ja": "否定応答："
    },
    {
      "indent": 9,
      "text": "An <rpc-error> element is included in the <rpc-reply> if the\nrequest cannot be completed for any reason.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> </ RPC> </コミット>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8.3.4.2. <discard-changes>",
      "section_title": true,
      "ja": "8.3.4.2。 <廃棄の変更>"
    },
    {
      "indent": 3,
      "text": "If the client decides that the candidate configuration is not to be committed, the <discard-changes> operation can be used to revert the candidate configuration to the current running configuration.",
      "ja": "クライアントは、候補設定がコミットされないことを決定した場合、<廃棄-変更は>操作は、現在の実行コンフィギュレーションに候補設定を元に戻すために使用することができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <discard-changes/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <廃棄変更/> </ RPC>"
    },
    {
      "indent": 3,
      "text": "This operation discards any uncommitted changes by resetting the candidate configuration with the content of the running configuration.",
      "ja": "この操作は実行コンフィギュレーションの内容を候補設定をリセットすることにより、コミットされていない変更を破棄します。"
    },
    {
      "indent": 0,
      "text": "8.3.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.3.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.3.5.1. <get-config>, <edit-config>, <copy-config>, and <validate>",
      "section_title": true,
      "ja": "8.3.5.1。 <GET-config>の、<編集-config>の、<コピー設定>、および<検証>"
    },
    {
      "indent": 3,
      "text": "The candidate configuration can be used as a source or target of any <get-config>, <edit-config>, <copy-config>, or <validate> operation as a <source> or <target> parameter. The <candidate> element is used to indicate the candidate configuration:",
      "ja": "候補設定は、<ソース>または<対象>パラメータとして任意の<GET-config>の、<編集-config>の、<コピー設定>、または<検証>操作のソースまたはターゲットとして使用することができます。 <候補>要素は、候補の構成を示すために使用されます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <candidate/> </source> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <GET-config>の<ソース> <候補/> </ソース> </取得、設定> </ RPC>"
    },
    {
      "indent": 0,
      "text": "8.3.5.2. <lock> and <unlock>",
      "section_title": true,
      "ja": "8.3.5.2。 <ロック>と<ロック解除>"
    },
    {
      "indent": 3,
      "text": "The candidate configuration can be locked using the <lock> operation with the <candidate> element as the <target> parameter:",
      "ja": "候補設定は、<target>にパラメータとして<ロック> <候補>と操作要素を使用してロックすることができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <lock> <target> <candidate/> </target> </lock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック> <ターゲット> <候補/> </ target>に</ロック> </ RPC >"
    },
    {
      "indent": 3,
      "text": "Similarly, the candidate configuration is unlocked using the <candidate> element as the <target> parameter:",
      "ja": "同様に、候補となる構成は、<target>にパラメータとして<候補>要素を使用してロック解除されます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <unlock> <target> <candidate/> </target> </unlock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック解除> <ターゲット> <候補/> </ target>に</アンロック> </ RPC >"
    },
    {
      "indent": 3,
      "text": "When a client fails with outstanding changes to the candidate configuration, recovery can be difficult. To facilitate easy recovery, any outstanding changes are discarded when the lock is released, whether explicitly with the <unlock> operation or implicitly from session failure.",
      "ja": "クライアントは、候補者の設定に未処理の変更に失敗した場合、回復が困難な場合があります。ロックが解除されたときに容易に回収を容易にするために、未処理の変更は、破棄され、明示的に<ロック解除>動作にまたは暗黙的にセッションの失敗からかどうか。"
    },
    {
      "indent": 0,
      "text": "8.4. Confirmed Commit Capability",
      "section_title": true,
      "ja": "8.4. 確認したコミット機能"
    },
    {
      "indent": 0,
      "text": "8.4.1. Description",
      "section_title": true,
      "ja": "8.4.1. 説明"
    },
    {
      "indent": 3,
      "text": "The :confirmed-commit:1.1 capability indicates that the server will support the <cancel-commit> operation and the <confirmed>, <confirm-timeout>, <persist>, and <persist-id> parameters for the <commit> operation. See Section 8.3 for further details on the <commit> operation.",
      "ja": "：確認コミット：1.1機能は、サーバーが<確認>、<確認タイムアウト>、<持続>、および<持続-ID> <コミット>のためのパラメータ操作<キャンセル・コミット>の動作をサポートしていることを示します。 <コミット>操作の詳細については、セクション8.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "A confirmed <commit> operation MUST be reverted if a confirming commit is not issued within the timeout period (by default 600 seconds = 10 minutes). The confirming commit is a <commit> operation without the <confirmed> parameter. The timeout period can be adjusted with the <confirm-timeout> parameter. If a follow-up confirmed <commit> operation is issued before the timer expires, the timer is reset to the new value (600 seconds by default). Both the confirming commit and a follow-up confirmed <commit> operation MAY introduce additional changes to the configuration.",
      "ja": "操作は元に戻さなければならない<コミット>確認した場合はタイムアウト期間内に発行されていないコミットを確認する（デフォルトでは600秒= 10分）。 <確認>パラメータを指定せずに<コミット>操作がコミットされて確認しました。タイムアウト期間は、<確認タイムアウト>パラメータを調整することができます。フォローアップは、<コミット>タイマーが切れる前に操作が発行された確認された場合、タイマーは（デフォルトでは600秒）の新しい値にリセットされます。コミット確認し、フォローアップの両方の操作が設定に追加の変更を導入することができる<コミット>確認しました。"
    },
    {
      "indent": 3,
      "text": "If the <persist> element is not given in the confirmed commit operation, any follow-up commit and the confirming commit MUST be issued on the same session that issued the confirmed commit. If the <persist> element is given in the confirmed <commit> operation, a follow-up commit and the confirming commit can be given on any session, and they MUST include a <persist-id> element with a value equal to the given value of the <persist> element.",
      "ja": "<持続>場合要素は、任意のフォローアップがコミットコミット動作確認には与えられていないとコミットを確認することを確認コミット発行した同じセッションで発行されなければなりません。 <持続>要素を確認<コミット>操作、フォローアップコミットに与えられ、コミット確認する任意のセッションに与えることができ、それらが所定のに等しい値を有する<持続-ID>要素を含む必要がある場合<持続>要素の値。"
    },
    {
      "indent": 3,
      "text": "If the server also advertises the :startup capability, a <copy-config> from running to startup is also necessary to save the changes to startup.",
      "ja": "サーバはまた、アドバタイズ場合：スタートアップ機能を、<コピー-config>の起動時に実行すると起動し、変更を保存することも必要ですから。"
    },
    {
      "indent": 3,
      "text": "If the session issuing the confirmed commit is terminated for any reason before the confirm timeout expires, the server MUST restore the configuration to its state before the confirmed commit was issued, unless the confirmed commit also included a <persist> element.",
      "ja": "確認を発行するセッションが確認タイムアウトが満了する前に何らかの理由で終了したコミット場合は確認されない限り、発行されたコミットを確認する前に、サーバーがその状態に設定を復元する必要がありますコミットも要素を<持続>含まれています。"
    },
    {
      "indent": 3,
      "text": "If the device reboots for any reason before the confirm timeout expires, the server MUST restore the configuration to its state before the confirmed commit was issued.",
      "ja": "確認のタイムアウトの期限が切れる前にデバイスが何らかの理由で再起動すると発行されたコミットを確認する前に、サーバーはその状態に設定を復元する必要があります。"
    },
    {
      "indent": 3,
      "text": "If a confirming commit is not issued, the device will revert its configuration to the state prior to the issuance of the confirmed commit. To cancel a confirmed commit and revert changes without waiting for the confirm timeout to expire, the client can explicitly restore the configuration to its state before the confirmed commit was issued, by using the <cancel-commit> operation.",
      "ja": "確認のコミットが発行されていない場合、デバイスは事前確認コミットの発行状態にその設定を元に戻すします。 <キャンセルコミット>操作を使用することにより、発行されたコミットを確認する前に期限切れに確認のタイムアウトを待たずに確認コミットし、元に戻す変更をキャンセルするには、クライアントが明示的にその状態に設定を復元することができます。"
    },
    {
      "indent": 3,
      "text": "For shared configurations, this feature can cause other configuration changes (for example, via other NETCONF sessions) to be inadvertently altered or removed, unless the configuration locking feature is used (in other words, the lock is obtained before the <edit-config> operation is started). Therefore, it is strongly suggested that in order to use this feature with shared configuration datastores, configuration locking SHOULD also be used.",
      "ja": "共有構成では、この機能は（他のNETCONFセッションを介してなど）他の構成変更を引き起こすことができる機能をロックする構成が使用されない限り、不注意、変更または除去する（すなわち、ロックが前に得られる<編集設定>操作）が開始されます。したがって、強く共有構成データストアを使用してこの機能を使用するために、コンフィギュレーション・ロックも使用すべきであると示唆されています。"
    },
    {
      "indent": 3,
      "text": "Version 1.0 of this capability was defined in [RFC4741]. Version 1.1 is defined in this document, and extends version 1.0 by adding a new operation, <cancel-commit>, and two new optional parameters, <persist> and <persist-id>. For backwards compatibility with old clients, servers conforming to this specification MAY advertise version 1.0 in addition to version 1.1.",
      "ja": "この機能のバージョン1.0は、[RFC4741]で定義されました。バージョン1.1は、この文書で定義され、そして新たな操作、<コミットキャンセル>を追加することにより、バージョン1.0を拡張し、2つの新しいオプションのパラメータは、<持続>と<持続-ID>されます。古いクライアントとの後方互換性のために、この仕様に準拠したサーバーでは、バージョン1.1に加えて、バージョン1.0を広告するかもしれません。"
    },
    {
      "indent": 0,
      "text": "8.4.2. Dependencies",
      "section_title": true,
      "ja": "8.4.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "The :confirmed-commit:1.1 capability is only relevant if the :candidate capability is also supported.",
      "ja": "：コミット確認：候補機能もサポートされている次の場合1.1機能にのみ関連しています。"
    },
    {
      "indent": 0,
      "text": "8.4.3. Capability Identifier",
      "section_title": true,
      "ja": "8.4.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :confirmed-commit:1.1 capability is identified by the following capability string:",
      "ja": "：コミット確認：1.1機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:confirmed-commit:1.1",
      "ja": "URN：IETF：のparams：NETCONF：機能：確認コミット：1.1"
    },
    {
      "indent": 0,
      "text": "8.4.4. New Operations",
      "section_title": true,
      "ja": "8.4.4. 新事業"
    },
    {
      "indent": 0,
      "text": "8.4.4.1. <cancel-commit>",
      "section_title": true,
      "ja": "8.4.4.1。 <キャンセルコミット>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 9,
      "text": "Cancels an ongoing confirmed commit.  If the <persist-id>\nparameter is not given, the <cancel-commit> operation MUST be\nissued on the same session that issued the confirmed commit.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "persist-id:",
      "ja": "持続-IDを："
    },
    {
      "indent": 12,
      "text": "Cancels a persistent confirmed commit.  The value MUST be\nequal to the value given in the <persist> parameter to the\n<commit> operation.  If the value does not match, the\noperation fails with an \"invalid-value\" error.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Positive Response:",
      "ja": "肯定的な反応："
    },
    {
      "indent": 9,
      "text": "If the device was able to satisfy the request, an <rpc-reply>\nis sent that contains an <ok> element.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Negative Response:",
      "ja": "否定応答："
    },
    {
      "indent": 9,
      "text": "An <rpc-error> element is included in the <rpc-reply> if the\nrequest cannot be completed for any reason.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit> <confirmed/> </commit> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コミット> </コミット> </ RPC> </確認>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"102\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <cancel-commit/> </rpc>",
      "ja": "<RPCメッセージID = \"102\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <キャンセルコミット/> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"102\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"102\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8.4.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.4.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.4.5.1. <commit>",
      "section_title": true,
      "ja": "8.4.5.1。 <コミット>"
    },
    {
      "indent": 3,
      "text": "The :confirmed-commit:1.1 capability allows 4 additional parameters to the <commit> operation.",
      "ja": "：コミット確認：1.1機能は、<コミット>操作に4追加パラメータを可能にします。"
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "confirmed:",
      "ja": "確認しました："
    },
    {
      "indent": 12,
      "text": "Perform a confirmed <commit> operation.",
      "ja": "確認<コミット>の操作を実行します。"
    },
    {
      "indent": 6,
      "text": "confirm-timeout:",
      "ja": "確認のタイムアウトを："
    },
    {
      "indent": 12,
      "text": "Timeout period for confirmed commit, in seconds.  If\nunspecified, the confirm timeout defaults to 600 seconds.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "persist:",
      "ja": "持続："
    },
    {
      "indent": 12,
      "text": "Make the confirmed commit survive a session termination, and\nset a token on the ongoing confirmed commit.",
      "raw": true
    },
    {
      "indent": 6,
      "text": "persist-id:",
      "ja": "持続-IDを："
    },
    {
      "indent": 12,
      "text": "Used to issue a follow-up confirmed commit or a confirming\ncommit from any session, with the token from the previous\n<commit> operation.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit> <confirmed/> <confirm-timeout>120</confirm-timeout> </commit> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コミット> <確認/> <確認タイムアウト> 120 </確認タイムアウト> </ > </ RPC>コミット"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<!-- start a persistent confirmed-commit --> <rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit> <confirmed/> <persist>IQ,d4668</persist> </commit> </rpc>",
      "ja": "<！ - 開始永続確認コミット - > <RPCメッセージID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <コミット> <確認/> < > IQ、d4668 </持続> </コミット> </ RPC>持続"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 5,
      "text": "<!-- confirm the persistent confirmed-commit, possibly from another session --> <rpc message-id=\"102\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit> <persist-id>IQ,d4668</persist-id> </commit> </rpc>",
      "ja": "<！ - おそらく別のセッションから、確認したコミットの永続性を確認 - > <RPCメッセージID = \"102\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <コミット> <持続-ID> IQ、d4668 </持続-ID> </コミット> </ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"102\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"102\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8.5. Rollback-on-Error Capability",
      "section_title": true,
      "ja": "8.5. ロールバック・オン・エラー機能"
    },
    {
      "indent": 0,
      "text": "8.5.1. Description",
      "section_title": true,
      "ja": "8.5.1. 説明"
    },
    {
      "indent": 3,
      "text": "This capability indicates that the server will support the \"rollback-on-error\" value in the <error-option> parameter to the <edit-config> operation.",
      "ja": "この機能は、サーバーが<編集-config>の動作に<エラー・オプション>パラメータに「ロールバック・オン・エラー」の値をサポートすることを示しています。"
    },
    {
      "indent": 3,
      "text": "For shared configurations, this feature can cause other configuration changes (for example, via other NETCONF sessions) to be inadvertently altered or removed, unless the configuration locking feature is used (in other words, the lock is obtained before the <edit-config> operation is started). Therefore, it is strongly suggested that in order to use this feature with shared configuration datastores, configuration locking also be used.",
      "ja": "共有構成では、この機能は（他のNETCONFセッションを介してなど）他の構成変更を引き起こすことができる機能をロックする構成が使用されない限り、不注意、変更または除去する（すなわち、ロックが前に得られる<編集設定>操作）が開始されます。したがって、強く共有構成データストアを使用してこの機能を使用するために、コンフィギュレーション・ロックも使用することが提案されています。"
    },
    {
      "indent": 0,
      "text": "8.5.2. Dependencies",
      "section_title": true,
      "ja": "8.5.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.5.3. Capability Identifier",
      "section_title": true,
      "ja": "8.5.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :rollback-on-error capability is identified by the following capability string:",
      "ja": "：ロールバック・オン・エラー機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:rollback-on-error:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：ロールバック・オン・エラー：1.0"
    },
    {
      "indent": 0,
      "text": "8.5.4. New Operations",
      "section_title": true,
      "ja": "8.5.4. 新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.5.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.5.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.5.5.1. <edit-config>",
      "section_title": true,
      "ja": "8.5.5.1。 <編集-config>の"
    },
    {
      "indent": 3,
      "text": "The :rollback-on-error capability allows the \"rollback-on-error\" value to the <error-option> parameter on the <edit-config> operation.",
      "ja": "：ロールバック・オン・エラー機能は、<編集-config>の操作で<エラー・オプション>パラメータに「ロールバック・オン・エラー」の値を可能にします。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <error-option>rollback-on-error</error-option> <config> <top xmlns=\"http://example.com/schema/1.2/config\"> <interface> <name>Ethernet0/0</name> <mtu>100000</mtu> </interface> </top> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <編集設定> <ターゲット> <実行/> </ target>に<誤りオプション>ロールバック・オン・エラー</エラーオプション>の<config> <トップのxmlns = \"http://example.com/schema/1.2/config\"> <インターフェース> <名前>のEthernet0 / 0 </名前> <MTU> 100000 </ MTU> </インターフェイス> </トップ> </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8.6. Validate Capability",
      "section_title": true,
      "ja": "8.6. 機能を検証します"
    },
    {
      "indent": 0,
      "text": "8.6.1. Description",
      "section_title": true,
      "ja": "8.6.1. 説明"
    },
    {
      "indent": 3,
      "text": "Validation consists of checking a complete configuration for syntactical and semantic errors before applying the configuration to the device.",
      "ja": "検証は、デバイスに設定を適用する前に、構文とセマンティック・エラーの完全な構成をチェックで構成されています。"
    },
    {
      "indent": 3,
      "text": "If this capability is advertised, the device supports the <validate> protocol operation and checks at least for syntax errors. In addition, this capability supports the <test-option> parameter to the <edit-config> operation and, when it is provided, checks at least for syntax errors.",
      "ja": "この機能がアドバタイズされる場合、デバイスは、少なくとも構文エラー<検証>プロトコルの動作とチェックをサポートしています。それは、少なくとも構文エラーチェックを設けた場合に加えて、この機能は、<編集-config>の操作に<テスト・オプション>パラメータをサポートしています。"
    },
    {
      "indent": 3,
      "text": "Version 1.0 of this capability was defined in [RFC4741]. Version 1.1 is defined in this document, and extends version 1.0 by adding a new value, \"test-only\", to the <test-option> parameter of the <edit-config> operation. For backwards compatibility with old clients, servers conforming to this specification MAY advertise version 1.0 in addition to version 1.1.",
      "ja": "この機能のバージョン1.0は、[RFC4741]で定義されました。バージョン1.1は、この文書で定義され、新しい値、「テスト専用」、<テスト・オプション>から<編集-config>のパラメータ操作を追加することで、バージョン1.0を拡張しています。古いクライアントとの後方互換性のために、この仕様に準拠したサーバーでは、バージョン1.1に加えて、バージョン1.0を広告するかもしれません。"
    },
    {
      "indent": 0,
      "text": "8.6.2. Dependencies",
      "section_title": true,
      "ja": "8.6.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.6.3. Capability Identifier",
      "section_title": true,
      "ja": "8.6.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :validate:1.1 capability is identified by the following capability string:",
      "ja": "：検証：1.1機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:validate:1.1",
      "ja": "URN：IETF：のparams：NETCONF：機能：検証：1.1"
    },
    {
      "indent": 0,
      "text": "8.6.4. New Operations",
      "section_title": true,
      "ja": "8.6.4. 新事業"
    },
    {
      "indent": 0,
      "text": "8.6.4.1. <validate>",
      "section_title": true,
      "ja": "8.6.4.1。 <検証>"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 9,
      "text": "This protocol operation validates the contents of the specified\nconfiguration.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Parameters:",
      "ja": "パラメーター："
    },
    {
      "indent": 6,
      "text": "source:",
      "ja": "ソース："
    },
    {
      "indent": 12,
      "text": "Name of the configuration datastore to validate, such as\n<candidate>, or the <config> element containing the complete\nconfiguration to validate.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Positive Response:",
      "ja": "肯定的な反応："
    },
    {
      "indent": 9,
      "text": "If the device was able to satisfy the request, an <rpc-reply>\nis sent that contains an <ok> element.",
      "raw": true
    },
    {
      "indent": 3,
      "text": "Negative Response:",
      "ja": "否定応答："
    },
    {
      "indent": 9,
      "text": "An <rpc-error> element is included in the <rpc-reply> if the\nrequest cannot be completed for any reason.",
      "raw": true
    },
    {
      "indent": 9,
      "text": "A <validate> operation can fail for a number of reasons, such as syntax errors, missing parameters, references to undefined configuration data, or any other violations of rules established by the underlying data model.",
      "ja": "<検証>操作は、構文エラー、欠落しているパラメータ、未定義の構成データへの参照、または基礎となるデータ・モデルによって確立されたルールの他の任意の違反などの理由から、多くのために失敗することができます。"
    },
    {
      "indent": 3,
      "text": "Example:",
      "ja": "例："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <validate> <source> <candidate/> </source> </validate> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <検証> <ソース> <候補/> </ソース> </検証> </ RPC >"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <ok/> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <OK /> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "8.6.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.6.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.6.5.1. <edit-config>",
      "section_title": true,
      "ja": "8.6.5.1。 <編集-config>の"
    },
    {
      "indent": 3,
      "text": "The :validate:1.1 capability modifies the <edit-config> operation to accept the <test-option> parameter.",
      "ja": "：検証：1.1機能は、<テスト・オプション>パラメータを受け入れるために、<編集-config>の操作を変更します。"
    },
    {
      "indent": 0,
      "text": "8.7. Distinct Startup Capability",
      "section_title": true,
      "ja": "8.7. 明確なスタートアップ機能"
    },
    {
      "indent": 0,
      "text": "8.7.1. Description",
      "section_title": true,
      "ja": "8.7.1. 説明"
    },
    {
      "indent": 3,
      "text": "The device supports separate running and startup configuration datastores. The startup configuration is loaded by the device when it boots. Operations that affect the running configuration will not be automatically copied to the startup configuration. An explicit <copy-config> operation from the <running> to the <startup> is used to update the startup configuration to the current contents of the running configuration. NETCONF protocol operations refer to the startup datastore using the <startup> element.",
      "ja": "デバイスは、別の実行およびスタートアップコンフィギュレーションデータストアをサポートしています。それは起動時にスタートアップコンフィギュレーションは、デバイスによってロードされます。実行コンフィギュレーションに影響を与える操作が自動的にスタートアップコンフィギュレーションにコピーされません。 <起動時>から<実行>からの明示的な<コピー設定>動作が実行コンフィギュレーションの現在の内容にスタートアップコンフィギュレーションを更新するために使用されます。 NETCONFプロトコルの動作は、<起動>要素を使用して、起動データストアを参照します。"
    },
    {
      "indent": 0,
      "text": "8.7.2. Dependencies",
      "section_title": true,
      "ja": "8.7.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.7.3. Capability Identifier",
      "section_title": true,
      "ja": "8.7.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :startup capability is identified by the following capability string:",
      "ja": "：スタートアップ機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:startup:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：スタートアップ：1.0"
    },
    {
      "indent": 0,
      "text": "8.7.4. New Operations",
      "section_title": true,
      "ja": "8.7.4. 新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.7.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.7.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.7.5.1. General",
      "section_title": true,
      "ja": "8.7.5.1。一般的な"
    },
    {
      "indent": 3,
      "text": "The :startup capability adds the <startup/> configuration datastore to arguments of several NETCONF operations. The server MUST support the following additional values:",
      "ja": "：スタートアップ機能は、複数のNETCONFオペレーションの引数に<スタートアップ/>コンフィギュレーションデータストアを追加します。サーバーは、以下の追加の値をサポートしなければなりません："
    },
    {
      "indent": 3,
      "text": "+--------------------+--------------------------+-------------------+\n| Operation          | Parameters               | Notes             |\n+--------------------+--------------------------+-------------------+\n| <get-config>       | <source>                 |                   |\n|                    |                          |                   |\n| <copy-config>      | <source> <target>        |                   |\n|                    |                          |                   |\n| <lock>             | <target>                 |                   |\n|                    |                          |                   |\n| <unlock>           | <target>                 |                   |\n|                    |                          |                   |\n| <validate>         | <source>                 | If :validate:1.1  |\n|                    |                          | is advertised     |\n|                    |                          |                   |\n| <delete-config>    | <target>                 | Resets the device |\n|                    |                          | to its factory    |\n|                    |                          | defaults          |\n+--------------------+--------------------------+-------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "To save the startup configuration, use the <copy-config> operation to copy the <running> configuration datastore to the <startup> configuration datastore.",
      "ja": "スタートアップコンフィギュレーションを保存するには、<スタートアップ>コンフィギュレーション・データストアに<ランニング>コンフィギュレーションデータストアをコピーするには、<コピー-config>の操作を使用します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <copy-config> <target> <startup/> </target> <source> <running/> </source> </copy-config> </rpc>",
      "ja": "<RPCメッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コピー設定> <ターゲット> <起動/> </ターゲット> <ソース> <実行/> </ソース> </コピー-config>の</ RPC>"
    },
    {
      "indent": 0,
      "text": "8.8. URL Capability",
      "section_title": true,
      "ja": "8.8.  URL機能"
    },
    {
      "indent": 0,
      "text": "8.8.1. Description",
      "section_title": true,
      "ja": "8.8.1. 説明"
    },
    {
      "indent": 3,
      "text": "The NETCONF peer has the ability to accept the <url> element in <source> and <target> parameters. The capability is further identified by URL arguments indicating the URL schemes supported.",
      "ja": "NETCONFピアは、<ソース>に<URL>要素と<target>にパラメータを受け入れる能力を有しています。機能はさらに、サポートURLスキームを示すURLの引数によって識別されます。"
    },
    {
      "indent": 0,
      "text": "8.8.2. Dependencies",
      "section_title": true,
      "ja": "8.8.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.8.3. Capability Identifier",
      "section_title": true,
      "ja": "8.8.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :url capability is identified by the following capability string:",
      "ja": "：URL機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:url:1.0?scheme={name,...}",
      "ja": "URN：IETF：のparams：NETCONF：機能：URL：？1.0スキーム= {名、...}"
    },
    {
      "indent": 3,
      "text": "The :url capability URI MUST contain a \"scheme\" argument assigned a comma-separated list of scheme names indicating which schemes the NETCONF peer supports. For example:",
      "ja": "：URL機能は、URIは、NETCONFピアがサポートしているスキームを示すスキーム名のカンマ区切りリストを割り当てられている「スキーム」引数を含まなければなりません。例えば："
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:url:1.0?scheme=http,ftp,file",
      "ja": "URN：IETF：のparams：NETCONF：機能：URL：？1.0スキーム= HTTP、FTP、ファイル"
    },
    {
      "indent": 0,
      "text": "8.8.4. New Operations",
      "section_title": true,
      "ja": "8.8.4. 新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.8.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.8.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.8.5.1. <edit-config>",
      "section_title": true,
      "ja": "8.8.5.1。 <編集-config>の"
    },
    {
      "indent": 3,
      "text": "The :url capability modifies the <edit-config> operation to accept the <url> element as an alternative to the <config> parameter.",
      "ja": "：URL機能は、<設定>パラメータの代わりとして、<URL>要素を受け入れるために、<編集-config>の操作を変更します。"
    },
    {
      "indent": 3,
      "text": "The file that the url refers to contains the configuration data hierarchy to be modified, encoded in XML under the element <config> in the \"urn:ietf:params:xml:ns:netconf:base:1.0\" namespace.",
      "ja": "「IETF：paramsは：XML：NS：NETCONF：塩基：1.0 URN」名前空間URLが参照するファイルは、要素の<config>で下XMLでエンコード修正する構成データ階層を含んでいます。"
    },
    {
      "indent": 0,
      "text": "8.8.5.2. <copy-config>",
      "section_title": true,
      "ja": "8.8.5.2。 <コピー設定>"
    },
    {
      "indent": 3,
      "text": "The :url capability modifies the <copy-config> operation to accept the <url> element as the value of the <source> and the <target> parameters.",
      "ja": "：URL機能は、<ソース>の値として<URL>要素と<target>にパラメータを受け入れるために、<コピー設定>動作を変更します。"
    },
    {
      "indent": 3,
      "text": "The file that the url refers to contains the complete datastore, encoded in XML under the element <config> in the \"urn:ietf:params:xml:ns:netconf:base:1.0\" namespace.",
      "ja": "「：IETF：のparams：XML：NS：NETCONF：ベース：1.0壷」名前空間URLが参照するファイルは、内の要素の<config>の下にXMLでエンコードされた完全なデータストアを、含まれています。"
    },
    {
      "indent": 0,
      "text": "8.8.5.3. <delete-config>",
      "section_title": true,
      "ja": "8.8.5.3。 <削除-config>の"
    },
    {
      "indent": 3,
      "text": "The :url capability modifies the <delete-config> operation to accept the <url> element as the value of the <target> parameters.",
      "ja": "：URL機能は、<対象>パラメータの値として、<URL>要素を受け入れるために、<削除-config>の操作を変更します。"
    },
    {
      "indent": 0,
      "text": "8.8.5.4. <validate>",
      "section_title": true,
      "ja": "8.8.5.4。 <検証>"
    },
    {
      "indent": 3,
      "text": "The :url capability modifies the <validate> operation to accept the <url> element as the value of the <source> parameter.",
      "ja": "：URL機能は、<source>のパラメータの値として<URL>要素を受け入れるように<検証>動作を変更します。"
    },
    {
      "indent": 0,
      "text": "8.9. XPath Capability",
      "section_title": true,
      "ja": "8.9.  XPathの能力"
    },
    {
      "indent": 0,
      "text": "8.9.1. Description",
      "section_title": true,
      "ja": "8.9.1. 説明"
    },
    {
      "indent": 3,
      "text": "The XPath capability indicates that the NETCONF peer supports the use of XPath expressions in the <filter> element. XPath is described in [W3C.REC-xpath-19991116].",
      "ja": "XPathの機能は、NETCONFピアが<フィルタ>要素のXPath式の使用をサポートしていることを示しています。 XPathのは、[W3C.REC-のXPath-19991116]に記載されています。"
    },
    {
      "indent": 3,
      "text": "The data model used in the XPath expression is the same as that used in XPath 1.0 [W3C.REC-xpath-19991116], with the same extension for root node children as used by XSLT 1.0 ([W3C.REC-xslt-19991116], Section 3.1). Specifically, it means that the root node MAY have any number of element nodes as its children.",
      "ja": "XPath式で使用されるデータモデルは、XSLT 1.0（[W3C.REC-XSLT-19991116]で使用されるように、ルートノードの子のための同じ拡張子で、[W3C.REC-のXPath-19991116]のXPath 1.0で使用したものと同じです、第3.1節）。具体的には、ルート・ノードは、その子として要素の任意の数のノードを有することができることを意味します。"
    },
    {
      "indent": 3,
      "text": "The XPath expression is evaluated in the following context:",
      "ja": "XPath式は、次のコンテキストで評価されています。"
    },
    {
      "indent": 3,
      "text": "o The set of namespace declarations are those in scope on the <filter> element.",
      "ja": "名前空間宣言のセット0 <フィルター>要素上の範囲内のものです。"
    },
    {
      "indent": 3,
      "text": "o The set of variable bindings is defined by the data model. If no such variable bindings are defined, the set is empty.",
      "ja": "O変数バインディングのセットは、データ・モデルによって定義されます。そのような変数バインディングが定義されていない場合、セットは空です。"
    },
    {
      "indent": 3,
      "text": "o The function library is the core function library, plus any functions defined by the data model.",
      "ja": "O関数ライブラリは、コア関数ライブラリに加え、データ・モデルによって定義された任意の関数です。"
    },
    {
      "indent": 3,
      "text": "o The context node is the root node.",
      "ja": "Oコンテキストノードがルートノードです。"
    },
    {
      "indent": 3,
      "text": "The XPath expression MUST return a node set. If it does not return a node set, the operation fails with an \"invalid-value\" error.",
      "ja": "XPath式はノード集合を返さなければなりません。それはノード・セットを返さない場合は、操作は「無効値」エラーで失敗します。"
    },
    {
      "indent": 3,
      "text": "The response message contains the subtrees selected by the filter expression. For each such subtree, the path from the data model root node down to the subtree, including any elements or attributes necessary to uniquely identify the subtree, are included in the response message. Specific data instances are not duplicated in the response.",
      "ja": "応答メッセージは、フィルタ式によって選択されたサブツリーを含んでいます。このような各サブツリーのために、任意の要素または一意サブツリーを識別するために必要な属性を含むサブツリーまでデータモデルルートノードからの経路が、応答メッセージに含まれています。特定のデータ・インスタンスは、応答に複製されていません。"
    },
    {
      "indent": 0,
      "text": "8.9.2. Dependencies",
      "section_title": true,
      "ja": "8.9.2. 依存関係"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.9.3. Capability Identifier",
      "section_title": true,
      "ja": "8.9.3. 機能識別子"
    },
    {
      "indent": 3,
      "text": "The :xpath capability is identified by the following capability string:",
      "ja": "：XPathの機能は、以下の機能文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "urn:ietf:params:netconf:capability:xpath:1.0",
      "ja": "URN：IETF：のparams：NETCONF：機能：XPathの：1.0"
    },
    {
      "indent": 0,
      "text": "8.9.4. New Operations",
      "section_title": true,
      "ja": "8.9.4. 新事業"
    },
    {
      "indent": 3,
      "text": "None.",
      "ja": "無し。"
    },
    {
      "indent": 0,
      "text": "8.9.5. Modifications to Existing Operations",
      "section_title": true,
      "ja": "8.9.5. 既存事業への変更"
    },
    {
      "indent": 0,
      "text": "8.9.5.1. <get-config> and <get>",
      "section_title": true,
      "ja": "8.9.5.1。 <GET-config設定>と<GET>"
    },
    {
      "indent": 3,
      "text": "The :xpath capability modifies the <get> and <get-config> operations to accept the value \"xpath\" in the \"type\" attribute of the <filter> element. When the \"type\" attribute is set to \"xpath\", a \"select\" attribute MUST be present on the <filter> element. The \"select\" attribute will be treated as an XPath expression and used to filter the returned data. The <filter> element itself MUST be empty in this case.",
      "ja": "：XPathの機能は、<フィルタ>要素の「type」属性に値「XPathを」受け入れるために<GET>と<GET-config>の操作を変更します。 「タイプ」属性が「のxpath」に設定されている場合は、「選択」属性は、<フィルタ>要素上に存在しなければなりません。 「選択」属性には、XPath式として扱われ、返されたデータをフィルタリングするために使用されます。 <フィルター>要素自体は、この場合、空でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The XPath result for the select expression MUST be a node-set. Each node in the node-set MUST correspond to a node in the underlying data model. In order to properly identify each node, the following encoding rules are defined:",
      "ja": "選択式のXPath結果はノード設定されなければなりません。ノードセット内の各ノードは、基礎となるデータモデル内のノードに対応しなければなりません。適切に各ノードを識別するために、以下の符号化規則が定義されています。"
    },
    {
      "indent": 3,
      "text": "o All ancestor nodes of the result node MUST be encoded first, so the <data> element returned in the reply contains only fully specified subtrees, according to the underlying data model.",
      "ja": "O結果のノードのすべての先祖ノードが最初に符号化されなければならないので、<データ>要素は、応答で返された基礎となるデータ・モデルによれば、唯一の完全に指定されたサブツリーを含んでいます。"
    },
    {
      "indent": 3,
      "text": "o If any sibling or ancestor nodes of the result node are needed to identify a particular instance within a conceptual data structure, then these nodes MUST also be encoded in the response.",
      "ja": "結果ノードの任意の兄弟又は祖先ノードは概念的なデータ構造内の特定のインスタンスを識別するために必要とされる場合、O、次いで、これらのノードは、応答で符号化されなければなりません。"
    },
    {
      "indent": 3,
      "text": "For example:",
      "ja": "例えば："
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <get-config> <source> <running/> </source> <!-- get the user named fred --> <filter xmlns:t=\"http://example.com/schema/1.2/config\" type=\"xpath\" select=\"/t:top/t:users/t:user[t:name='fred']\"/> </get-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <GET-config>の<ソース> <ランニング/> </ソース> < - 取得！フレッドというユーザー - > <フィルターのxmlns：T = \"http://example.com/schema/1.2/config\" タイプ= \"のxpath\" を選択= \"/ T：トップ/ T：ユーザー/ T：ユーザー[トン：名= 'フレッド'] \"/> </取得-config>の</ RPC>"
    },
    {
      "indent": 5,
      "text": "<rpc-reply message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <data> <top xmlns=\"http://example.com/schema/1.2/config\"> <users> <user> <name>fred</name> <company-info> <id>2</id> </company-info> </user> </users> </top> </data> </rpc-reply>",
      "ja": "<RPC応答メッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <データ> <トップのxmlns = \"http://example.com/schema/1.2 / configの \"> <ユーザー> <ユーザー> <名前>フレッド</名前> <会社情報> <ID> 2 </ ID> </会社情報> </ユーザー> </ユーザー> </トップ> < /データ> </ RPC返信>"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section provides security considerations for the base NETCONF message layer and the base operations of the NETCONF protocol. Security considerations for the NETCONF transports are provided in the transport documents, and security considerations for the content manipulated by NETCONF can be found in the documents defining data models.",
      "ja": "このセクションでは、ベースNETCONFメッセージ層とNETCONFプロトコルのベース操作のためのセキュリティ上の考慮事項を提供します。 NETCONFのトランスポートのためのセキュリティの考慮事項は、輸送文書で提供され、NETCONFによって操作コンテンツのセキュリティの考慮事項は、データモデルを定義する文書に記載されています。"
    },
    {
      "indent": 3,
      "text": "This document does not specify an authorization scheme, as such a scheme will likely be tied to a meta-data model or a data model. Implementors SHOULD provide a comprehensive authorization scheme with NETCONF.",
      "ja": "このようなスキームは、おそらくメタデータモデルやデータモデルに結び付けられるようにこの文書では、認可スキームを指定していません。実装者は、NETCONFとの包括認可スキームを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "Authorization of individual users via the NETCONF server may or may not map 1:1 to other interfaces. First, the data models might be incompatible. Second, it could be desirable to authorize based on mechanisms available in the Secure Transport layer (e.g., SSH, Blocks Extensible Exchange Protocol (BEEP), etc.).",
      "ja": "他のインターフェイスに1：NETCONFサーバを介して個々のユーザの権限は、OR 1をマッピングしてもしなくてもよいです。まず、データモデルは互換性がない可能性があります。第二に、安全なトランスポート層で使用可能なメカニズム（例えば、SSH、ブロック拡張交換プロトコル（BEEP）、等）に基づいて許可することが望ましいかもしれません。"
    },
    {
      "indent": 3,
      "text": "In addition, operations on configurations could have unintended consequences if those operations are also not guarded by the global lock on the files or objects being operated upon. For instance, if the running configuration is not locked, a partially complete access list could be committed from the candidate configuration unbeknownst to the owner of the lock of the candidate configuration, leading to either an insecure or inaccessible device.",
      "ja": "これらの操作はまた時に操作されるファイルまたはオブジェクト上のグローバルロックによって守られていない場合はさらに、構成上の操作は、意図しない結果になる可能性があり。実行コンフィギュレーションがロックされていない場合例えば、部分的に完全なアクセスリストは、どちらか安全でないか、アクセスできないデバイスにつながる、候補設定のロックの所有者に知られず候補設定からコミットすることができます。"
    },
    {
      "indent": 3,
      "text": "Configuration information is by its very nature sensitive. Its transmission in the clear and without integrity checking leaves devices open to classic eavesdropping and false data injection attacks. Configuration information often contains passwords, user names, service descriptions, and topological information, all of which are sensitive. Because of this, this protocol SHOULD be implemented carefully with adequate attention to all manner of attack one might expect to experience with other management interfaces.",
      "ja": "構成情報は機密その性質です。明確かつ整合性チェックなしでその送信は、古典的な盗聴や誤データインジェクション攻撃に対してオープンデバイスを残します。構成情報は、多くの場合、小文字が区別され、すべてのそれらのパスワード、ユーザー名、サービス記述、およびトポロジ情報が含まれています。このため、このプロトコルは1つが他の管理インターフェイスを体験することが予想される攻撃のすべての方法に十分注意して慎重に実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "The protocol, therefore, MUST minimally support options for both confidentiality and authentication. It is anticipated that the underlying protocol (SSH, BEEP, etc.) will provide for both confidentiality and authentication, as is required. It is further expected that the identity of each end of a NETCONF session will be available to the other in order to determine authorization for any given request. One could also easily envision additional information, such as transport and encryption methods, being made available for purposes of authorization. NETCONF itself provides no means to re-authenticate, much less authenticate. All such actions occur at lower layers.",
      "ja": "プロトコルは、そのため、機密性と認証の両方のサポートオプションを最小限にしなければなりません。必要とされる基礎となるプロトコル（SSH、BEEPなど）、機密性と認証の両方を提供すると予想されます。さらにNETCONFセッションの両端のアイデンティティは、任意の要求に対する認可を決定するために、他に利用可能であることが期待されます。一つは、また、簡単に承認の目的のために利用可能になる、などの輸送や暗号化の方法として、追加の情報を思い描くことができます。 NETCONF自体は、それほど認証を再認証する手段を提供していません。すべてのそのような行動は、下位層で発生します。"
    },
    {
      "indent": 3,
      "text": "Different environments may well allow different rights prior to and then after authentication. Thus, an authorization model is not specified in this document. When an operation is not properly authorized, a simple \"access denied\" is sufficient. Note that authorization information can be exchanged in the form of configuration information, which is all the more reason to ensure the security of the connection.",
      "ja": "異なる環境はよく前にして、認証後に異なる権利せることができます。したがって、承認モデルは、この文書で指定されていません。操作が適切に承認されていない場合は、簡単な「アクセス拒否」で十分です。その認証情報は、接続のセキュリティを確保するためのすべてのより多くの理由で、構成情報の形で交換することができます。"
    },
    {
      "indent": 3,
      "text": "That having been said, it is important to recognize that some operations are clearly more sensitive by nature than others. For instance, <copy-config> to the startup or running configurations is clearly not a normal provisioning operation, whereas <edit-config> is. Such global operations MUST disallow the changing of information that an individual does not have authorization to perform. For example, if user A is not allowed to configure an IP address on an interface but user B has configured an IP address on an interface in the <candidate> configuration, user A MUST NOT be allowed to commit the <candidate> configuration.",
      "ja": "つまり、一部の操作は明らかに他よりも本質的に、より敏感であることを認識することが重要である、と述べていました。たとえば、<コピー-config>の起動や実行中の構成に<編集-config>のであるのに対し、明らかに通常のプロビジョニング操作ではありません。このような世界的な操作は、個人が実行する権限を持っていない情報の変更を禁止しなければなりません。ユーザAは、インタフェース上のIPアドレスを設定するために許可されていないが、ユーザBが<候補>構成におけるインターフェイスのIPアドレスを設定している場合、例えば、ユーザAは、<候補>構成をコミットさせてはいけません。"
    },
    {
      "indent": 3,
      "text": "Similarly, just because someone says \"go write a configuration through the URL capability at a particular place\", this does not mean that an element will do it without proper authorization.",
      "ja": "同様に、誰かが「特定の場所でURL機能による設定を記述して行く」と言う理由だけで、これは、要素が適切な承認なしにそれを行うだろうという意味ではありません。"
    },
    {
      "indent": 3,
      "text": "The <lock> operation will demonstrate that NETCONF is intended for use by systems that have at least some trust of the administrator. As specified in this document, it is possible to lock portions of a configuration that a principal might not otherwise have access to. After all, the entire configuration is locked. To mitigate this problem, there are two approaches. It is possible to kill another NETCONF session programmatically from within NETCONF if one knows the session identifier of the offending session. The other possible way to break a lock is to provide a function within the device's native user interface. These two mechanisms suffer from a race condition that could be ameliorated by removing the offending user from an Authentication, Authorization, and Accounting (AAA) server. However, such a solution is not useful in all deployment scenarios, such as those where SSH public/private key pairs are used.",
      "ja": "<ロック>操作は、NETCONFは、管理者の少なくともいくつかの信頼を持っているシステムで使用するためのものであることを実証します。この文書で指定されているように、本人がそれ以外へのアクセス権を持っていない可能性があります設定の一部をロックすることが可能です。結局、全体の構成がロックされています。この問題を軽減するために、2つの方法があります。 1つは、問題のセッションのセッション識別子を知っている場合NETCONFの中からプログラム別のNETCONFセッションを死滅させることが可能です。ロックを解除するために、他の可能な方法は、デバイスのネイティブ・ユーザー・インターフェース内の機能を提供することです。これら2つのメカニズムが、認証の問題のユーザを除去することによって改善することができる競合状態に苦しむ許可、アカウンティング（AAA）サーバ。しかし、このような解決策は、SSH公開鍵/秘密鍵のペアが使用されている場合、それらなど、すべての展開シナリオ、に有用ではありません。"
    },
    {
      "indent": 0,
      "text": "10. IANA Considerations",
      "section_title": true,
      "ja": "10. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "10.1. NETCONF XML Namespace",
      "section_title": true,
      "ja": "10.1.  NETCONFのXML名前空間"
    },
    {
      "indent": 3,
      "text": "This document registers a URI for the NETCONF XML namespace in the IETF XML registry [RFC3688].",
      "ja": "この文書は、IETF XMLレジストリ[RFC3688]でNETCONFのXML名前空間のURIを登録します。"
    },
    {
      "indent": 3,
      "text": "IANA has updated the following URI to reference this document.",
      "ja": "IANAはこのドキュメントを参照するには、次のURIを更新しました。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:ns:netconf:base:1.0",
      "ja": "URI：URN：IETF：のparams：XML：NS：NETCONF：ベース：1.0"
    },
    {
      "indent": 3,
      "text": "Registrant Contact: The IESG.",
      "ja": "登録者連絡先：IESG。"
    },
    {
      "indent": 3,
      "text": "XML: N/A, the requested URI is an XML namespace.",
      "ja": "XML：N / Aは、要求されたURIは、XML名前空間があります。"
    },
    {
      "indent": 0,
      "text": "10.2. NETCONF XML Schema",
      "section_title": true,
      "ja": "10.2.  NETCONF XMLスキーマ"
    },
    {
      "indent": 3,
      "text": "This document registers a URI for the NETCONF XML schema in the IETF XML registry [RFC3688].",
      "ja": "この文書は、IETF XMLレジストリ[RFC3688]でNETCONFのXMLスキーマのURIを登録します。"
    },
    {
      "indent": 3,
      "text": "IANA has updated the following URI to reference this document.",
      "ja": "IANAはこのドキュメントを参照するには、次のURIを更新しました。"
    },
    {
      "indent": 3,
      "text": "URI: urn:ietf:params:xml:schema:netconf",
      "ja": "URI：URN：IETF：のparams：XML：スキーマ：NETCONF"
    },
    {
      "indent": 3,
      "text": "Registrant Contact: The IESG.",
      "ja": "登録者連絡先：IESG。"
    },
    {
      "indent": 3,
      "text": "XML: Appendix B of this document.",
      "ja": "XML：このドキュメントの付録B。"
    },
    {
      "indent": 0,
      "text": "10.3. NETCONF YANG Module",
      "section_title": true,
      "ja": "10.3.  NETCONFモジュール"
    },
    {
      "indent": 3,
      "text": "This document registers a YANG module in the YANG Module Names registry [RFC6020].",
      "ja": "この文書では、YANGモジュール名レジストリ[RFC6020]でYANGモジュールを登録します。"
    },
    {
      "indent": 5,
      "text": "name: ietf-netconf namespace: urn:ietf:params:xml:ns:netconf:base:1.0 prefix: nc reference: RFC 6241",
      "ja": "名前：IETF-NETCONF名前空間：URN：IETF：のparams：XML：NS：NETCONF：ベース：1.0接頭辞：NC参照：RFC 6241"
    },
    {
      "indent": 0,
      "text": "10.4. NETCONF Capability URNs",
      "section_title": true,
      "ja": "10.4.  NETCONF能力壺"
    },
    {
      "indent": 3,
      "text": "IANA has created and now maintains a registry \"Network Configuration Protocol (NETCONF) Capability URNs\" that allocates NETCONF capability identifiers. Additions to the registry require IETF Standards Action.",
      "ja": "IANAが作成され、今でNETCONF機能識別子を割り当て、レジストリの「ネットワーク構成プロトコル（NETCONF）能力壺」を維持しています。レジストリへの追加は、IETF標準化行動を必要とします。"
    },
    {
      "indent": 3,
      "text": "IANA has updated the allocations of the following capabilities to reference this document.",
      "ja": "IANAはこのドキュメントを参照するには、次の機能の割り当てを更新しました。"
    },
    {
      "indent": 6,
      "text": "Index\n   Capability Identifier\n------------------------",
      "raw": true
    },
    {
      "indent": 6,
      "text": ":writable-running urn:ietf:params:netconf:capability:writable-running:1.0",
      "ja": "：書き込み可能-ランニングURN：IETF：のparams：NETCONF：機能：書き込み可能なランニング：1.0"
    },
    {
      "indent": 6,
      "text": ":candidate urn:ietf:params:netconf:capability:candidate:1.0",
      "ja": "：候補骨壷：IETF：のparams：NETCONF：機能：候補：1.0"
    },
    {
      "indent": 6,
      "text": ":rollback-on-error urn:ietf:params:netconf:capability:rollback-on-error:1.0",
      "ja": "：ロールバック・オン・エラー骨壷：IETF：のparams：NETCONF：機能：ロールバック・オン・エラー：1.0"
    },
    {
      "indent": 6,
      "text": ":startup urn:ietf:params:netconf:capability:startup:1.0",
      "ja": "：スタートアップ骨壷：IETF：のparams：NETCONF：機能：スタートアップ：1.0"
    },
    {
      "indent": 6,
      "text": ":url urn:ietf:params:netconf:capability:url:1.0",
      "ja": "：URL骨壷：IETF：のparams：NETCONF：機能：URL：1.0"
    },
    {
      "indent": 6,
      "text": ":xpath urn:ietf:params:netconf:capability:xpath:1.0",
      "ja": "：XPathの骨壷：IETF：のparams：NETCONF：機能：XPathの：1.0"
    },
    {
      "indent": 3,
      "text": "IANA has added the following capabilities to the registry:",
      "ja": "IANAは、レジストリに以下の機能を追加しました："
    },
    {
      "indent": 6,
      "text": "Index\n   Capability Identifier\n------------------------",
      "raw": true
    },
    {
      "indent": 6,
      "text": ":base:1.1 urn:ietf:params:netconf:base:1.1",
      "ja": "：ベース：1.1のurn：IETF：のparams：NETCONF：ベース：1.1"
    },
    {
      "indent": 6,
      "text": ":confirmed-commit:1.1 urn:ietf:params:netconf:capability:confirmed-commit:1.1",
      "ja": "：コミット確認：1.1のurn：IETF：のparams：NETCONF：機能：確認コミット：1.1"
    },
    {
      "indent": 6,
      "text": ":validate:1.1 urn:ietf:params:netconf:capability:validate:1.1",
      "ja": "：検証：1.1のurn：IETF：のparams：NETCONF：機能：検証：1.1"
    },
    {
      "indent": 0,
      "text": "11. Contributors",
      "section_title": true,
      "ja": "11.協力者"
    },
    {
      "indent": 3,
      "text": "In addition to the editors, this document was written by:",
      "ja": "編集者に加えて、この文書は書きました："
    },
    {
      "indent": 6,
      "text": "Ken Crozier, Cisco Systems",
      "ja": "ケン・クロージャー、シスコシステムズ"
    },
    {
      "indent": 6,
      "text": "Ted Goddard, IceSoft",
      "ja": "テッド・ゴダード、IceSoft"
    },
    {
      "indent": 6,
      "text": "Eliot Lear, Cisco Systems",
      "ja": "エリオット・リア、シスコシステムズ"
    },
    {
      "indent": 6,
      "text": "Phil Shafer, Juniper Networks",
      "ja": "フィル・シェーファー、ジュニパーネットワークス"
    },
    {
      "indent": 6,
      "text": "Steve Waldbusser",
      "ja": "スティーブWaldbusser"
    },
    {
      "indent": 6,
      "text": "Margaret Wasserman, Painless Security, LLC",
      "ja": "マーガレットワッサーマン、無痛セキュリティ、LLC"
    },
    {
      "indent": 0,
      "text": "12. Acknowledgements",
      "section_title": true,
      "ja": "12.謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to acknowledge the members of the NETCONF working group. In particular, we would like to thank Wes Hardaker for his persistence and patience in assisting us with security considerations. We would also like to thank Randy Presuhn, Sharon Chisholm, Glenn Waters, David Perkins, Weijing Chen, Simon Leinen, Keith Allen, Dave Harrington, Ladislav Lhotka, Tom Petch, and Kent Watsen for all of their valuable advice.",
      "ja": "著者は、NETCONFワーキンググループのメンバーを確認したいと思います。特に、我々はセキュリティ上の配慮で私たちを支援して彼の永続性と忍耐のためのウェスHardakerに感謝したいと思います。我々はまた、彼らの貴重なアドバイスのすべてのためのランディPresuhn、シャロン・チザム、グレン・ウォーターズ、デビッド・パーキンス、Weijingチェン、サイモンLeinen、キース・アレン、デイブ・ハリントン、ラディスラフLhotka、トム・ペッチ、ケントWatsenに感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13.参考文献"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "ja": "13.1. 引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3553] Mealling, M., Masinter, L., Hardie, T., and G. Klyne, \"An IETF URN Sub-namespace for Registered Protocol Parameters\", BCP 73, RFC 3553, June 2003.",
      "ja": "[RFC3553] Mealling、M.、Masinter、L.、ハーディー、T.、およびG. Klyne、 \"登録プロトコル・パラメータのためのIETF URNサブ名前空間\"、BCP 73、RFC 3553、2003年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "ja": "[RFC3629] Yergeau、F.、 \"UTF-8、ISO 10646の変換フォーマット\"、STD 63、RFC 3629、2003年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "ja": "[RFC3688] Mealling、M.、 \"IETF XMLレジストリ\"、BCP 81、RFC 3688、2004年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "ja": "[RFC3986]バーナーズ - リー、T.、フィールディング、R.、およびL. Masinter、 \"ユニフォームリソース識別子（URI）：汎用構文\"、STD 66、RFC 3986、2005年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5717] Lengyel, B. and M. Bjorklund, \"Partial Lock Remote Procedure Call (RPC) for NETCONF\", RFC 5717, December 2009.",
      "ja": "[RFC5717] Lengyel、B.とM. Bjorklund、 \"NETCONFのための操作ロックリモートプロシージャコール（RPC）\"、RFC 5717、2009年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, October 2010.",
      "ja": "[RFC6020] Bjorklund、M.、 \"YANG  - ネットワーク構成プロトコルのためのデータモデリング言語（NETCONF）\"、RFC 6020、2010年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6021] Schoenwaelder, J., \"Common YANG Data Types\", RFC 6021, October 2010.",
      "ja": "[RFC6021] Schoenwaelder、J.、 \"共通YANGデータ型\"、RFC 6021、2010年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6242] Wasserman, M., \"Using the NETCONF Configuration Protocol over Secure Shell (SSH)\", RFC 6242, June 2011.",
      "ja": "[RFC6242]ワッサーマン、M.、RFC 6242、2011年6月 \"NETCONF構成プロトコルを使用したセキュアシェル（SSH）を超えます\"。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xml-20001006] Sperberg-McQueen, C., Bray, T., Paoli, J., and E. Maler, \"Extensible Markup Language (XML) 1.0 (Second Edition)\", World Wide Web Consortium REC-xml-20001006, October 2000, <http://www.w3.org/TR/2000/REC-xml-20001006>.",
      "ja": "[W3C.REC-XML-20001006] Sperberg-マックィーン、C.、ブレイ、T.、パオリ、J.、およびE. MALER、 \"拡張マークアップ言語（XML）1.0（第二版）\"、ワールドワイドウェブコンソーシアムREC -xml-20001006、2000年10月、<http://www.w3.org/TR/2000/REC-xml-20001006>。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xpath-19991116] DeRose, S. and J. Clark, \"XML Path Language (XPath) Version 1.0\", World Wide Web Consortium Recommendation REC-xpath-19991116, November 1999, <http://www.w3.org/TR/1999/REC-xpath-19991116>.",
      "ja": "[W3C.REC-のxpath-19991116] DeRose、S.とJ.クラーク、 \"XMLパス言語（XPath）バージョン1.0\"、World Wide Web Consortium（W3C）の勧告REC-のxpath-19991116、1999年11月、<のhttp：// WWW。 w3.org/TR/1999/REC-xpath-19991116>。"
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "ja": "13.2. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC2865] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote Authentication Dial In User Service (RADIUS)\", RFC 2865, June 2000.",
      "ja": "[RFC2865] Rigney、C.、ウィレンス、S.、ルーベン、A.、およびW.シンプソン、RFC 2865、2000年6月 \"ユーザーサービス（RADIUS）でリモート認証ダイヤル\"。"
    },
    {
      "indent": 3,
      "text": "[RFC3470] Hollenbeck, S., Rose, M., and L. Masinter, \"Guidelines for the Use of Extensible Markup Language (XML) within IETF Protocols\", BCP 70, RFC 3470, January 2003.",
      "ja": "[RFC3470]ホレンベック、S.、ローズ、M.、およびL. Masinter、 \"IETFプロトコル内の拡張マークアップ言語（XML）の使用のためのガイドライン\"、BCP 70、RFC 3470、2003年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4251] Ylonen, T. and C. Lonvick, \"The Secure Shell (SSH) Protocol Architecture\", RFC 4251, January 2006.",
      "ja": "[RFC4251] Ylonenと、T.とC. Lonvick、 \"セキュアシェル（SSH）プロトコルアーキテクチャ\"、RFC 4251、2006年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC4741] Enns, R., \"NETCONF Configuration Protocol\", RFC 4741, December 2006.",
      "ja": "[RFC4741]エンス、R.、 \"NETCONF構成プロトコル\"、RFC 4741、2006年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, August 2008.",
      "ja": "[RFC5246]ダークス、T.およびE.レスコラ、 \"トランスポート層セキュリティ（TLS）プロトコルバージョン1.2\"、RFC 5246、2008年8月。"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xslt-19991116] Clark, J., \"XSL Transformations (XSLT) Version 1.0\", World Wide Web Consortium Recommendation REC-xslt-19991116, November 1999, <http://www.w3.org/TR/1999/REC-xslt-19991116>.",
      "ja": "[W3C.REC-XSLT-19991116]クラーク、J.、 \"XSL変換（XSLT）バージョン1.0\"、World Wide Web Consortium（W3C）の勧告REC-XSLT-19991116、1999年11月、<http://www.w3.org/TR / 1999 / REC-XSLT-19991116>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. NETCONF Error List",
      "ja": "付録A. NETCONFのエラー一覧"
    },
    {
      "indent": 3,
      "text": "This section is normative.",
      "ja": "このセクションは規範的です。"
    },
    {
      "indent": 3,
      "text": "For each error-tag, the valid error-type and error-severity values are listed, together with any mandatory error-info, if any.",
      "ja": "いずれかの場合には、各エラー・タグの場合は、有効なエラー・タイプおよびエラー重大度の値は、一緒にすべての必須のエラー情報を、リストされています。"
    },
    {
      "indent": 3,
      "text": "error-tag: in-use error-type: protocol, application error-severity: error error-info: none Description: The request requires a resource that already is in use.",
      "ja": "エラータグ：使用中のエラー・タイプ：プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：要求がすでに使用されているリソースを必要とします。"
    },
    {
      "indent": 3,
      "text": "error-tag: invalid-value error-type: protocol, application error-severity: error error-info: none Description: The request specifies an unacceptable value for one or more parameters.",
      "ja": "エラータグ：無効な値の誤差型：プロトコル、アプリケーションエラーの重大度：エラーのエラー情報：なし説明：要求は、1つ以上のパラメータの許容できない値を指定します。"
    },
    {
      "indent": 3,
      "text": "error-tag: too-big error-type: transport, rpc, protocol, application error-severity: error error-info: none Description: The request or response (that would be generated) is too large for the implementation to handle.",
      "ja": "エラータグ：あまりにもビッグエラー型：輸送、RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：（生成される）要求または応答は、実装が処理するには大きすぎます。"
    },
    {
      "indent": 3,
      "text": "error-tag: missing-attribute error-type: rpc, protocol, application error-severity: error error-info: <bad-attribute> : name of the missing attribute <bad-element> : name of the element that is supposed to contain the missing attribute Description: An expected attribute is missing.",
      "ja": "エラータグ：欠落している属性のエラー・タイプ：RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い属性>：になっている要素の名前：行方不明の属性<悪い要素>の名前予想される属性が欠落している：欠落している属性の説明が含まれています。"
    },
    {
      "indent": 3,
      "text": "error-tag: bad-attribute error-type: rpc, protocol, application error-severity: error error-info: <bad-attribute> : name of the attribute w/ bad value <bad-element> : name of the element that contains the attribute with the bad value Description: An attribute value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "エラータグ：悪い属性エラータイプ：RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い属性>：属性の名前不正な値/ W <悪い要素>：その要素の名前不正な値説明と属性が含まれています：属性値が正しくありません。例えば、間違った種類、範囲外、パターンが一致しません。"
    },
    {
      "indent": 3,
      "text": "error-tag: unknown-attribute error-type: rpc, protocol, application error-severity: error error-info: <bad-attribute> : name of the unexpected attribute <bad-element> : name of the element that contains the unexpected attribute Description: An unexpected attribute is present.",
      "ja": "エラータグ：不明な属性エラータイプ：RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い属性>：予期しないが含まれている要素の名前：予期しない属性<悪い要素>の名前属性説明：予期しない属性が存在しています。"
    },
    {
      "indent": 3,
      "text": "error-tag: missing-element error-type: protocol, application error-severity: error error-info: <bad-element> : name of the missing element Description: An expected element is missing.",
      "ja": "エラータグ：欠落している要素のエラー・タイプ：プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い要素>：不足している要素の説明の名前：予想される要素が欠落しています。"
    },
    {
      "indent": 3,
      "text": "error-tag: bad-element error-type: protocol, application error-severity: error error-info: <bad-element> : name of the element w/ bad value Description: An element value is not correct; e.g., wrong type, out of range, pattern mismatch.",
      "ja": "エラータグ：悪い要素誤差型：プロトコル、アプリケーションエラーの重大度：エラーエラー情報<不良素子>：悪い値説明/ Wエレメントの名前：要素の値が正しくありません。例えば、間違った種類、範囲外、パターンが一致しません。"
    },
    {
      "indent": 3,
      "text": "error-tag: unknown-element error-type: protocol, application error-severity: error error-info: <bad-element> : name of the unexpected element Description: An unexpected element is present.",
      "ja": "エラータグ：未知の要素のエラー・タイプ：プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い要素>：予期しない要素の説明の名前：予期しない要素が存在しています。"
    },
    {
      "indent": 3,
      "text": "error-tag: unknown-namespace error-type: protocol, application error-severity: error error-info: <bad-element> : name of the element that contains the unexpected namespace <bad-namespace> : name of the unexpected namespace Description: An unexpected namespace is present.",
      "ja": "エラータグ：不明な名前空間のエラー・タイプ：プロトコル、アプリケーションエラー重大度：エラーエラー情報：<悪い要素>：予期しない名前空間の名前説明：予期しない名前空間<悪い名前空間>が含まれている要素の名前：予期しない名前空間が存在しています。"
    },
    {
      "indent": 3,
      "text": "error-tag: access-denied error-type: protocol, application error-severity: error error-info: none Description: Access to the requested protocol operation or data model is denied because authorization failed.",
      "ja": "エラータグ：アクセス拒否エラー型：プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：認証が失敗したため、要求されたプロトコルの動作やデータモデルへのアクセスが拒否されました。"
    },
    {
      "indent": 3,
      "text": "error-tag: lock-denied error-type: protocol error-severity: error error-info: <session-id> : session ID of session holding the requested lock, or zero to indicate a non-NETCONF entity holds the lock Description: Access to the requested lock is denied because the lock is currently held by another entity.",
      "ja": "エラータグ：ロック拒否エラー型：プロトコルは、エラーの重大度：エラーエラー情報：<セッションID>：非NETCONFエンティティがロック説明を保持している指示するために要求されたロック、またはゼロを保持するセッションのセッションID：ロックが現在、別のエンティティによって保持されているため、要求されたロックへのアクセスが拒否されました。"
    },
    {
      "indent": 3,
      "text": "error-tag: resource-denied error-type: transport, rpc, protocol, application error-severity: error error-info: none Description: Request could not be completed because of insufficient resources.",
      "ja": "エラータグ：資源拒否エラー型：輸送、RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：要求がリソース不足で完了することができませんでした。"
    },
    {
      "indent": 3,
      "text": "error-tag: rollback-failed error-type: protocol, application error-severity: error error-info: none Description: Request to roll back some configuration change (via rollback-on-error or <discard-changes> operations) was not completed for some reason.",
      "ja": "エラータグ：ロールバックに失敗したエラー・タイプ：プロトコル、アプリケーションエラーの重大度：エラーのエラー情報：なし説明：（ロールバック・オン・エラーまたは<廃棄変更>操作を介して）いくつかの構成変更をロールバックする要求ではなかったです何らかの理由で完了しました。"
    },
    {
      "indent": 3,
      "text": "error-tag: data-exists error-type: application error-severity: error error-info: none Description: Request could not be completed because the relevant data model content already exists. For example, a \"create\" operation was attempted on data that already exists.",
      "ja": "エラータグ：データに存在するエラーのタイプ：アプリケーションエラー重大度：エラーエラー情報：なし説明：関連するデータモデルの内容がすでに存在しているため、要求を完了できませんでした。たとえば、「作成」操作がすでに存在するデータにしようとしました。"
    },
    {
      "indent": 3,
      "text": "error-tag: data-missing error-type: application error-severity: error error-info: none Description: Request could not be completed because the relevant data model content does not exist. For example, a \"delete\" operation was attempted on data that does not exist.",
      "ja": "エラータグ：データ欠落エラータイプ：アプリケーションエラー重大度：エラーエラー情報：なし説明：関連するデータモデルのコンテンツが存在しないため、要求を完了できませんでした。例えば、「削除」操作は存在しないデータにしようとしました。"
    },
    {
      "indent": 3,
      "text": "error-tag: operation-not-supported error-type: protocol, application error-severity: error error-info: none Description: Request could not be completed because the requested operation is not supported by this implementation.",
      "ja": "エラータグ：操作 - サポートされていないエラータイプ：プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：要求された操作は、この実装でサポートされていないため、要求を完了できませんでした。"
    },
    {
      "indent": 3,
      "text": "error-tag: operation-failed error-type: rpc, protocol, application error-severity: error error-info: none Description: Request could not be completed because the requested operation failed for some reason not covered by any other error condition.",
      "ja": "エラータグ：操作に失敗したエラーのタイプ：RPC、プロトコル、アプリケーションエラー重大度：エラーエラー情報：なし説明：要求された操作は、他のエラー条件によってカバーされていない何らかの理由で失敗したため、要求を完了できませんでした。"
    },
    {
      "indent": 3,
      "text": "error-tag: partial-operation error-type: application error-severity: error error-info: <ok-element> : identifies an element in the data model for which the requested operation has been completed for that node and all its child nodes. This element can appear zero or more times in the <error-info> container.",
      "ja": "エラータグ：パーシャル・操作エラータイプ：アプリケーションエラー重大度：エラーエラー情報：<OK-要素>：要求された操作は、そのノードのために完了したデータモデルの要素とそのすべての子ノードを識別します。この要素は、<エラー情報>容器に0回以上出現することができます。"
    },
    {
      "indent": 19,
      "text": "<err-element> : identifies an element in the data\n  model for which the requested operation has failed\n  for that node and all its child nodes.\n  This element can appear zero or more times in the\n  <error-info> container.",
      "raw": true
    },
    {
      "indent": 19,
      "text": "<noop-element> : identifies an element in the data model for which the requested operation was not attempted for that node and all its child nodes. This element can appear zero or more times in the <error-info> container.",
      "ja": "<NOOP-要素>：要求された操作は、そのノードとそのすべての子ノードに対して試行されなかったデータ・モデル内の要素を識別する。この要素は、<エラー情報>容器に0回以上出現することができます。"
    },
    {
      "indent": 3,
      "text": "Description: This error-tag is obsolete, and SHOULD NOT be sent by servers conforming to this document.",
      "ja": "説明：このエラータグが廃止され、この文書に準拠したサーバーが送信されるべきではありません。"
    },
    {
      "indent": 19,
      "text": "Some part of the requested operation failed or was\nnot attempted for some reason.  Full cleanup has\nnot been performed (e.g., rollback not supported)\nby the server.  The error-info container is used\nto identify which portions of the application\ndata model content for which the requested operation\nhas succeeded (<ok-element>), failed (<bad-element>),\nor not been attempted (<noop-element>).",
      "raw": true
    },
    {
      "indent": 3,
      "text": "error-tag: malformed-message error-type: rpc error-severity: error error-info: none Description: A message could not be handled because it failed to be parsed correctly. For example, the message is not well-formed XML or it uses an invalid character set.",
      "ja": "エラータグ：不正のメッセージエラータイプ：RPCエラー重大度：エラーエラー情報：なし説明：それは正しく解析することに失敗したため、メッセージを処理することができませんでした。例えば、メッセージはXMLを整形されていないか、無効な文字セットを使用しています。"
    },
    {
      "indent": 19,
      "text": "This error-tag is new in :base:1.1 and MUST NOT be\nsent to old clients.",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Appendix B. XML Schema for NETCONF Messages Layer",
      "ja": "NETCONFメッセージレイヤ付録B. XMLスキーマ"
    },
    {
      "indent": 3,
      "text": "This section is normative.",
      "ja": "このセクションは規範的です。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"netconf.xsd\"",
      "ja": "ファイル \"netconf.xsd\" <CODEが開始されます>"
    },
    {
      "indent": 3,
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\" targetNamespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xml:lang=\"en\" version=\"1.1\">",
      "ja": "<？xml version = \"1.0\" エンコード= \"UTF-8\"？> <XS：スキーマのxmlns：XSの= \"http://www.w3.org/2001/XMLSchema\" のxmlns = \"壷：IETF：のparams：XML ：NS：NETCONF：塩基：1.0\" のtargetNamespace = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\" のelementFormDefault = \"修飾\" attributeFormDefault = \"非修飾\" XML：LANG = \"EN\" バージョン= \"1.1\" >"
    },
    {
      "indent": 5,
      "text": "<xs:annotation> <xs:documentation> This schema defines the syntax for the NETCONF Messages layer messages 'hello', 'rpc', and 'rpc-reply'. </xs:documentation> </xs:annotation>",
      "ja": "<XS：注釈> <XS：ドキュメント>このスキーマは、NETCONFメッセージ層メッセージ「こんにちは」、「RPC」、および「RPC-返信」の構文を定義します。 </ XS：ドキュメンテーション> </ XS：注釈>"
    },
    {
      "indent": 5,
      "text": "<!-- import standard XML definitions --> <xs:import namespace=\"http://www.w3.org/XML/1998/namespace\" schemaLocation=\"http://www.w3.org/2001/xml.xsd\"> <xs:annotation> <xs:documentation> This import accesses the xml: attribute groups for the xml:lang as declared on the error-message element. </xs:documentation> </xs:annotation> </xs:import> <!-- message-id attribute -->",
      "ja": "<！ - 輸入標準のXML定義 - > <XS：インポートの名前空間= \"http://www.w3.org/XML/1998/namespace\" のschemaLocation = \"http://www.w3.org/2001/xml .xsd \"> <XS：注釈> <XS：ドキュメント>このインポートは、XMLにアクセスします：XMLの属性グループ：langのエラー・メッセージの要素で宣言として。 </ XS：ドキュメンテーション> </ XS：注釈> </ XS：インポート> <！ - メッセージ-id属性 - >"
    },
    {
      "indent": 5,
      "text": "<xs:simpleType name=\"messageIdType\"> <xs:restriction base=\"xs:string\"> <xs:maxLength value=\"4095\"/> </xs:restriction> </xs:simpleType> <!-- Types used for session-id --> <xs:simpleType name=\"SessionId\"> <xs:restriction base=\"xs:unsignedInt\"> <xs:minInclusive value=\"1\"/> </xs:restriction> </xs:simpleType> <xs:simpleType name=\"SessionIdOrZero\"> <xs:restriction base=\"xs:unsignedInt\"/> </xs:simpleType> <!-- <rpc> element --> <xs:complexType name=\"rpcType\"> <xs:sequence> <xs:element ref=\"rpcOperation\"/> </xs:sequence> <xs:attribute name=\"message-id\" type=\"messageIdType\" use=\"required\"/> <!-- Arbitrary attributes can be supplied with <rpc> element. --> <xs:anyAttribute processContents=\"lax\"/> </xs:complexType> <xs:element name=\"rpc\" type=\"rpcType\"/> <!-- data types and elements used to construct rpc-errors --> <xs:simpleType name=\"ErrorType\"> <xs:restriction base=\"xs:string\"> <xs:enumeration value=\"transport\"/> <xs:enumeration value=\"rpc\"/> <xs:enumeration value=\"protocol\"/> <xs:enumeration value=\"application\"/> </xs:restriction> </xs:simpleType> <xs:simpleType name=\"ErrorTag\"> <xs:restriction base=\"xs:string\"> <xs:enumeration value=\"in-use\"/> <xs:enumeration value=\"invalid-value\"/> <xs:enumeration value=\"too-big\"/> <xs:enumeration value=\"missing-attribute\"/>",
      "ja": "<XS：単純型名= \"messageIdType\"> <XS：制限ベース= \"XS：文字列\"> <XS：maxLengthの値= \"4095\" /> </ XS：制限> </ XS：単純> <！ - タイプセッションIDに使用される - > <XS：単純型名= \"のSessionId\"> <XS：制限ベース= \"XS：unsignedInt型\"> <XS：のminInclusive値= \"1\" /> </ XS：制限> </ XS ：単純> <XS：単純型名= \"SessionIdOrZero\"> <XS：制限ベース= \"XS：unsignedInt型\" /> </ XS：単純> < -  <RPC！>要素 - > <XS：complexTypeの名=」 rpcType \"> <XS：シーケンス> <XS：要素REF =\" rpcOperation \"/> </ XS：シーケンス> <XS：属性名=\" メッセージID」タイプ= \"messageIdType\" 使用= \"必要\" /> <！ - 任意の属性は、<RPC>要素を供給することができます。 - > <XS：anyAttributeはのprocessContents = \"緩い\" /> </ XS：complexTypeの> <XS：要素名= \"RPC\" タイプ= \"rpcType\" /> < -  RPC-エラーを構築するために使用されるデータ型と要素！ - > <XS：単純型名= \"ERRORTYPE\"> <XS：制限ベース= \"XS：文字列\"> <XS：列挙値= \"輸送\" /> <XS：列挙値= \"RPC\" /> <XS：列挙値= \"プロトコル\" /> <XS：列挙値= \"アプリケーション\" /> </ XS：制限> </ XS：単純> <XS：単純型名= \"ErrorTag\"> <XS：制限ベース= \"XS：文字列 \"> <XS：列挙値=\" 使用中 \"/> <XS：列挙値=\" 無効値 \"/> <XS：列挙値=\" あまりにも大きな \"/> <XS：列挙値=\" がありません-attribute \"/>"
    },
    {
      "indent": 5,
      "text": " <xs:enumeration value=\"bad-attribute\"/> <xs:enumeration value=\"unknown-attribute\"/> <xs:enumeration value=\"missing-element\"/> <xs:enumeration value=\"bad-element\"/> <xs:enumeration value=\"unknown-element\"/> <xs:enumeration value=\"unknown-namespace\"/> <xs:enumeration value=\"access-denied\"/> <xs:enumeration value=\"lock-denied\"/> <xs:enumeration value=\"resource-denied\"/> <xs:enumeration value=\"rollback-failed\"/> <xs:enumeration value=\"data-exists\"/> <xs:enumeration value=\"data-missing\"/> <xs:enumeration value=\"operation-not-supported\"/> <xs:enumeration value=\"operation-failed\"/> <xs:enumeration value=\"partial-operation\"/> <xs:enumeration value=\"malformed-message\"/> </xs:restriction> </xs:simpleType> <xs:simpleType name=\"ErrorSeverity\"> <xs:restriction base=\"xs:string\"> <xs:enumeration value=\"error\"/> <xs:enumeration value=\"warning\"/> </xs:restriction> </xs:simpleType> <xs:complexType name=\"errorInfoType\"> <xs:sequence> <xs:choice> <xs:element name=\"session-id\" type=\"SessionIdOrZero\"/> <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\"> <xs:sequence> <xs:element name=\"bad-attribute\" type=\"xs:QName\" minOccurs=\"0\" maxOccurs=\"1\"/> <xs:element name=\"bad-element\" type=\"xs:QName\" minOccurs=\"0\" maxOccurs=\"1\"/> <xs:element name=\"ok-element\" type=\"xs:QName\" minOccurs=\"0\" maxOccurs=\"1\"/> <xs:element name=\"err-element\" type=\"xs:QName\" minOccurs=\"0\" maxOccurs=\"1\"/> <xs:element name=\"noop-element\" type=\"xs:QName\" minOccurs=\"0\" maxOccurs=\"1\"/> <xs:element name=\"bad-namespace\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\"/> </xs:sequence> </xs:sequence> </xs:choice> <!-- elements from any other namespace are also allowed to follow the NETCONF elements --> <xs:any namespace=\"##other\" processContents=\"lax\"",
      "ja": "<XS：列挙値= \"悪い属性\" /> <XS：列挙値= \"未知の属性\" /> <XS：列挙値= \"欠けている要素\" /> <XS：列挙値= \"悪い要素\" /> <XS：列挙値= \"未知の要素\" /> <XS：列挙値= \"不明な名前空間\" /> <XS：列挙値= \"アクセス拒否\" /> <XS：列挙値= \"ロックイン\"XS /> <：列挙値=\" 拒否されたリソース拒否 \"/> <XS：列挙値=\" ロールバックに失敗した \"/> <XS：列挙値=\" データは、存在する \"/> <XS：列挙値を=\"操作に失敗したデータ欠落： \"列挙値= /> <XS\" 操作は-サポートされていない \"/> <XS列挙値=\"： \" \"/> <XS列挙値=\" 部分操作/> <XS：列挙値= \"不正メッセージ\" /> </ XS：制限> </ XS：単純> <XS：単純型名= \"ErrorSeverity\"> <XS：制限ベース= \"XS：文字列\"> <XS：列挙値= \"エラー\" /> <XS：列挙値= \"警告\" /> </ XS：制限> </ XS：単純> <XS：complexTypeの名= \"errorInfoType\"> <XS：シーケンス> <XS：選択> <XS ：要素名= \"セッションID\" タイプ= \"SessionIdOrZero\" /> <XS：シーケンスのminOccurs = \"0\" のmaxOccurs = \"無制限\"> <XS：シーケンス> <XS：要素名= \"悪い属性\" タイプ= \"XS：QNameの\" minOccurs属性= \"0\" のmaxOccurs = \"1\" /> <XS：要素名= \"悪い要素\" タイプ= \"XS：QNameの\" minOccurs属性= \"0\" のmaxOccurs = \"1\" /> <XS：要素名= \"OK-要素\" タイプ= \"XS：QNameの\" minOccurs属性= \"0\" maxOccurs = \"1\" /> <XS：要素名= \"ERR-要素を\" TYPE = \"XS：QNameの\" minOccurs属性= \"0\" のmaxOccurs = \"1\" /> <XS：要素名= \"NOOP-要素\" タイプ= \"XS：QNameの\" minOccurs属性= \"0\" のmaxOccurs = \"1\" /> <XS：要素名= \"悪い名前空間\" タイプ= \"XS：文字列\" のminOccurs = \"0\" のmaxOccurs = \"1\" /> </ XS ：シーケンス> </ XS：シーケンス> </ XS：選択> < - > <XS  - 他の名前空間からの要素もNETCONF要素に従うことを許可されています！任意の名前空間= \"##他\" のprocessContents = \"ずさん\""
    },
    {
      "indent": 5,
      "text": " minOccurs=\"0\" maxOccurs=\"unbounded\"/> </xs:sequence> </xs:complexType> <xs:complexType name=\"rpcErrorType\"> <xs:sequence> <xs:element name=\"error-type\" type=\"ErrorType\"/> <xs:element name=\"error-tag\" type=\"ErrorTag\"/> <xs:element name=\"error-severity\" type=\"ErrorSeverity\"/> <xs:element name=\"error-app-tag\" type=\"xs:string\" minOccurs=\"0\"/> <xs:element name=\"error-path\" type=\"xs:string\" minOccurs=\"0\"/> <xs:element name=\"error-message\" minOccurs=\"0\"> <xs:complexType> <xs:simpleContent> <xs:extension base=\"xs:string\"> <xs:attribute ref=\"xml:lang\" use=\"optional\"/> </xs:extension> </xs:simpleContent> </xs:complexType> </xs:element> <xs:element name=\"error-info\" type=\"errorInfoType\" minOccurs=\"0\"/> </xs:sequence> </xs:complexType> <!-- operation attribute used in <edit-config> --> <xs:simpleType name=\"editOperationType\"> <xs:restriction base=\"xs:string\"> <xs:enumeration value=\"merge\"/> <xs:enumeration value=\"replace\"/> <xs:enumeration value=\"create\"/> <xs:enumeration value=\"delete\"/> <xs:enumeration value=\"remove\"/> </xs:restriction> </xs:simpleType> <xs:attribute name=\"operation\" type=\"editOperationType\"/> <!-- <rpc-reply> element --> <xs:complexType name=\"rpcReplyType\"> <xs:choice> <xs:element name=\"ok\"/> <xs:sequence> <xs:element ref=\"rpc-error\" minOccurs=\"0\" maxOccurs=\"unbounded\"/> <xs:element ref=\"rpcResponse\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>",
      "ja": "minOccurs = \"0\" のmaxOccurs = \"無制限\" /> </ XS：配列> </ XS：complexTypeの> <XS：complexTypeの名= \"rpcErrorType\"> <XS：配列> <XS：要素名= \"エラータイプ\"タイプ= \"ERRORTYPE\" /> <XS：要素名= \"エラータグ\" タイプ= \"ErrorTag\" /> <XS：要素名= \"エラー重大度\" TYPE = \"ErrorSeverity\" /> <XS：要素名=」エラーアプリタグ」タイプ= \"XS：文字列\" のminOccurs = \"0\" /> <XS：要素名= \"エラーフリー\" タイプ= \"XS：文字列\" のminOccurs = \"0\" /> <XS：要素名= \"エラーメッセージ\" のminOccurs = \"0\"> <XS：complexTypeの> <XS：simpleContentを> <XS：増設ベース= \"XS：文字列\"> <XS：属性REF = \"XML：langの\" 使用= \"オプション\" /> </ XS：拡張> </ XS：simpleContentを> </ XS：complexTypeの> </ XS：要素> <XS：要素名= \"エラー情報\" タイプ= \"errorInfoType\" のminOccurs = \"0\" /> < / XS：シーケンス> </ XS：！complexTypeの> < -  <編集設定で使用される操作属性>  - > <XS：単純型名= \"editOperationType\"> <XS：制限ベース= \"XS：文字列\"> < XS：列挙値= \"マージ\" /> <XS：列挙値= \"置き換え\" /> <XS：列挙値= \"作成\" /> <XS：列挙値= \"削除\" /> <XS：列挙型eration値= \"削除\" /> </ XS：制限> </ XS：単純> <XS：！属性名= \"操作\" タイプ= \"editOperationType\" /> < -  <RPC-返信>要素 - > < XS：complexTypeの名前は= \"rpcReplyType\"> <XS：選択> <XS：要素名= \"OK\" /> <XS：シーケンス> <XS：要素REF = \"RPC-エラー\" のminOccurs = \"0\" のmaxOccurs = \"無制限\"/> <XS：要素REF =\" rpcResponse」のminOccurs = \"0\" のmaxOccurs = \"無制限\" />"
    },
    {
      "indent": 5,
      "text": " </xs:sequence> </xs:choice> <xs:attribute name=\"message-id\" type=\"messageIdType\" use=\"optional\"/> <!-- Any attributes supplied with <rpc> element must be returned on <rpc-reply>. --> <xs:anyAttribute processContents=\"lax\"/> </xs:complexType> <xs:element name=\"rpc-reply\" type=\"rpcReplyType\"/> <!-- <rpc-error> element --> <xs:element name=\"rpc-error\" type=\"rpcErrorType\"/> <!-- rpcOperationType: used as a base type for all NETCONF operations --> <xs:complexType name=\"rpcOperationType\"/> <xs:element name=\"rpcOperation\" type=\"rpcOperationType\" abstract=\"true\"/> <!-- rpcResponseType: used as a base type for all NETCONF responses --> <xs:complexType name=\"rpcResponseType\"/> <xs:element name=\"rpcResponse\" type=\"rpcResponseType\" abstract=\"true\"/> <!-- <hello> element --> <xs:element name=\"hello\"> <xs:complexType> <xs:sequence> <xs:element name=\"capabilities\"> <xs:complexType> <xs:sequence> <xs:element name=\"capability\" type=\"xs:anyURI\" maxOccurs=\"unbounded\"/> </xs:sequence> </xs:complexType> </xs:element> <xs:element name=\"session-id\" type=\"SessionId\" minOccurs=\"0\"/>",
      "ja": "</ XS：シーケンス> </ XS：選択> <XS：属性名= \"メッセージID\" タイプ= \"messageIdType\" 使用= \"オプション\" /> < -  <RPC>要素に付属の任意の属性が返されなければなりません！ <RPC返信>に。 - > <XS：anyAttributeはのprocessContents = \"緩い\" /> </ XS：complexTypeの> <XS：要素名= \"RPC-返信\" タイプ= \"rpcReplyType\" /> < -  <RPC-エラー！>要素 - > <XS：要素名= \"RPCエラー\" タイプ= \"rpcErrorType\" /> < -  rpcOperationType：！すべてのNETCONF操作の基本型として使用 - > <XS：complexTypeの名= \"rpcOperationType\" /> <XS ：要素名= \"rpcOperation\" タイプ= \"rpcOperationType\" 抽象= \"真\" /> < -  rpcResponseType：！すべてのNETCONFレスポンスの基本型として使用 - > <XS：complexTypeの名= \"rpcResponseType\" /> <XS ：要素名= \"rpcResponse\" タイプ= \"rpcResponseType\" 抽象= \"真\" />  - 要素 - > <XS <<こんにちは！>：要素名= \"こんにちは\"> <XS：complexTypeの> <XS：シーケンス> <XS：要素名= \"能力\"> <XS：complexTypeの> <XS：シーケンス> <XS：要素名= \"機能\" タイプ= \"XS：anyURIの\" maxOccursの= \"無制限\" /> </ XS：シーケンス> < / XS：complexTypeの> </ XS：要素> <XS：要素名= \"セッションID\" タイプ= \"のSessionId\" のminOccurs = \"0\" />"
    },
    {
      "indent": 3,
      "text": " </xs:sequence> </xs:complexType> </xs:element> </xs:schema>",
      "ja": "</ XS：配列> </ XS：complexTypeの> </ XS：要素> </ XS：スキーマ>"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "ja": "<CODEはENDS>"
    },
    {
      "indent": 0,
      "text": "Appendix C. YANG Module for NETCONF Protocol Operations",
      "ja": "NETCONFプロトコル操作のための付録C. YANGモジュール"
    },
    {
      "indent": 3,
      "text": "This section is normative.",
      "ja": "このセクションは規範的です。"
    },
    {
      "indent": 3,
      "text": "The ietf-netconf YANG module imports typedefs from [RFC6021].",
      "ja": "[RFC6021]からIETF-NETCONF YANGモジュール輸入のtypedef。"
    },
    {
      "indent": 2,
      "text": "<CODE BEGINS> file \"ietf-netconf@2011-06-01.yang\"",
      "ja": "ファイル \"ietf-netconf@2011-06-01.yang\" <CODEが開始されます>"
    },
    {
      "indent": 2,
      "text": "module ietf-netconf {",
      "ja": "モジュールIETF-NETCONF {"
    },
    {
      "indent": 4,
      "text": "// the namespace for NETCONF XML definitions is unchanged // from RFC 4741, which this document replaces namespace \"urn:ietf:params:xml:ns:netconf:base:1.0\";",
      "ja": "// NETCONFのXML定義の名前空間は、この文書は、名前空間置き換えた、RFC 4741から//変更されていません \"骨壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\";"
    },
    {
      "indent": 4,
      "text": "prefix nc;",
      "ja": "接頭辞NC;"
    },
    {
      "indent": 4,
      "text": "import ietf-inet-types { prefix inet; }",
      "ja": "IETF-INET-タイプ{プレフィックスINETインポート。 }"
    },
    {
      "indent": 4,
      "text": "organization \"IETF NETCONF (Network Configuration) Working Group\";",
      "ja": "組織「IETF NETCONF（ネットワーク設定）ワーキンググループ」。"
    },
    {
      "indent": 4,
      "text": "contact \"WG Web: <http://tools.ietf.org/wg/netconf/> WG List: <netconf@ietf.org>",
      "ja": "「連絡WGのWeb：<http://tools.ietf.org/wg/netconf/> WG一覧：<netconf@ietf.org>"
    },
    {
      "indent": 7,
      "text": "WG Chair: Bert Wijnen <bertietf@bwijnen.net>",
      "ja": "WG座長：バート・ワイン<bertietf@bwijnen.net>"
    },
    {
      "indent": 7,
      "text": "WG Chair: Mehmet Ersue <mehmet.ersue@nsn.com>",
      "ja": "WG座長：メフメットErsue <mehmet.ersue@nsn.com>"
    },
    {
      "indent": 7,
      "text": "Editor: Martin Bjorklund <mbj@tail-f.com>",
      "ja": "エディタ：マーティンBjorklund <mbj@tail-f.com>"
    },
    {
      "indent": 7,
      "text": "Editor: Juergen Schoenwaelder <j.schoenwaelder@jacobs-university.de>",
      "ja": "編集者：ユルゲンSchoenwaelder <j.schoenwaelder@jacobs-university.de>"
    },
    {
      "indent": 7,
      "text": "Editor: Andy Bierman <andy.bierman@brocade.com>\";",
      "ja": "編集者：アンディBierman <andy.bierman@brocade.com> \";"
    },
    {
      "indent": 4,
      "text": "description \"NETCONF Protocol Data Types and Protocol Operations.",
      "ja": "説明「NETCONFプロトコル・データ・タイプとプロトコル操作。"
    },
    {
      "indent": 7,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 7,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).",
      "ja": "、に基づき許可されており、中に含まれるライセンス条項に従う、簡体BSDライセンスは、IETFドキュメントに関連IETFトラストの法律規定（のセクション4.Cに記載されている変更の有無にかかわらず、ソースおよびバイナリ形式での再配布および使用http://trustee.ietf.org/license-info）。"
    },
    {
      "indent": 4,
      "text": "   This version of this YANG module is part of RFC 6241; see\n   the RFC itself for full legal notices.\";\nrevision 2011-06-01 {\n  description\n    \"Initial revision\";\n  reference\n    \"RFC 6241: Network Configuration Protocol\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "extension get-filter-element-attributes { description \"If this extension is present within an 'anyxml' statement named 'filter', which must be conceptually defined within the RPC input section for the <get> and <get-config> protocol operations, then the following unqualified XML attribute is supported within the <filter> element, within a <get> or <get-config> protocol operation:",
      "ja": "拡張取得フィルタ元素属性{「この拡張は、概念的に<GET>及び<GET-config>のプロトコル操作のためのRPC入力セクション内に定義されなければならない 『フィルタ』という 『AnyXMLで』ステートメント内に存在する場合、次の非修飾XML属性は、<フィルタ>要素内の<GET>または<GET-config>のプロトコルの動作中にサポートされています。"
    },
    {
      "indent": 11,
      "text": "type : optional attribute with allowed\n       value strings 'subtree' and 'xpath'.\n       If missing, the default value is 'subtree'.",
      "raw": true
    },
    {
      "indent": 9,
      "text": "If the 'xpath' feature is supported, then the following unqualified XML attribute is also supported:",
      "ja": "「XPathの」機能がサポートされている場合は、次の修飾されていないXML属性もサポートされています。"
    },
    {
      "indent": 4,
      "text": " select: optional attribute containing a string representing an XPath expression. The 'type' attribute must be equal to 'xpath' if this attribute is present.\"; }",
      "ja": "選択：任意の属性は、XPath式を表す文字列を含みます。この属性が存在する場合、「タイプ」属性が「のXPath」に等しくなければなりません \";}"
    },
    {
      "indent": 4,
      "text": "// NETCONF capabilities defined as features feature writable-running {",
      "ja": "機能として定義// NETCONFの機能が備わっています書き込み可能、​​実行中の{"
    },
    {
      "indent": 4,
      "text": "  description\n    \"NETCONF :writable-running capability;\n     If the server advertises the :writable-running\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.2\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "feature candidate {\n  description\n    \"NETCONF :candidate capability;\n     If the server advertises the :candidate\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.3\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "feature confirmed-commit {\n  if-feature candidate;\n  description\n    \"NETCONF :confirmed-commit:1.1 capability;\n     If the server advertises the :confirmed-commit:1.1\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": " reference \"RFC 6241, Section 8.4\"; }",
      "ja": "参照 \"RFC 6241、セクション8.4\"; }"
    },
    {
      "indent": 4,
      "text": "feature rollback-on-error {\n  description\n    \"NETCONF :rollback-on-error capability;\n     If the server advertises the :rollback-on-error\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.5\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "feature validate {\n  description\n    \"NETCONF :validate:1.1 capability;\n     If the server advertises the :validate:1.1\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": " reference \"RFC 6241, Section 8.6\"; }",
      "ja": "参照 \"RFC 6241、セクション8.6\"; }"
    },
    {
      "indent": 4,
      "text": "feature startup {\n  description\n    \"NETCONF :startup capability;\n     If the server advertises the :startup\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.7\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "feature url {\n  description\n    \"NETCONF :url capability;\n     If the server advertises the :url\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.8\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "feature xpath {\n  description\n    \"NETCONF :xpath capability;\n     If the server advertises the :xpath\n     capability for a session, then this feature must\n     also be enabled for that session.  Otherwise,\n     this feature must not be enabled.\";\n  reference \"RFC 6241, Section 8.9\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "// NETCONF Simple Types",
      "ja": "// NETCONF単純型"
    },
    {
      "indent": 4,
      "text": "typedef session-id-type {\n  type uint32 {\n    range \"1..max\";\n  }\n  description\n    \"NETCONF Session Id\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "typedef session-id-or-zero-type {\n  type uint32;\n  description\n    \"NETCONF Session Id or Zero to indicate none\";\n} typedef error-tag-type {\n  type enumeration {\n     enum in-use {\n       description\n         \"The request requires a resource that\n          already is in use.\";\n     }\n     enum invalid-value {\n       description\n         \"The request specifies an unacceptable value for one\n          or more parameters.\";\n     }\n     enum too-big {\n       description\n         \"The request or response (that would be generated) is\n          too large for the implementation to handle.\";\n     }\n     enum missing-attribute {\n       description\n         \"An expected attribute is missing.\";\n     }\n     enum bad-attribute {\n       description\n         \"An attribute value is not correct; e.g., wrong type,\n          out of range, pattern mismatch.\";\n     }\n     enum unknown-attribute {\n       description\n         \"An unexpected attribute is present.\";\n     }\n     enum missing-element {\n       description\n         \"An expected element is missing.\";\n     }\n     enum bad-element {\n       description\n         \"An element value is not correct; e.g., wrong type,\n          out of range, pattern mismatch.\";\n     }\n     enum unknown-element {\n       description\n         \"An unexpected element is present.\";\n     }\n     enum unknown-namespace {\n       description\n         \"An unexpected namespace is present.\";\n     }\n     enum access-denied {",
      "raw": true
    },
    {
      "indent": 9,
      "text": "  description\n    \"Access to the requested protocol operation or\n     data model is denied because authorization failed.\";\n}\nenum lock-denied {\n  description\n    \"Access to the requested lock is denied because the\n     lock is currently held by another entity.\";\n}\nenum resource-denied {\n  description\n    \"Request could not be completed because of\n     insufficient resources.\";\n}\nenum rollback-failed {\n  description\n    \"Request to roll back some configuration change (via\n     rollback-on-error or <discard-changes> operations)\n     was not completed for some reason.\";",
      "raw": true
    },
    {
      "indent": 9,
      "text": "}\nenum data-exists {\n  description\n    \"Request could not be completed because the relevant\n     data model content already exists.  For example,\n     a 'create' operation was attempted on data that\n     already exists.\";\n}\nenum data-missing {\n  description\n    \"Request could not be completed because the relevant\n     data model content does not exist.  For example,\n     a 'delete' operation was attempted on\n     data that does not exist.\";\n}\nenum operation-not-supported {\n  description\n    \"Request could not be completed because the requested\n     operation is not supported by this implementation.\";\n}\nenum operation-failed {\n  description\n    \"Request could not be completed because the requested\n     operation failed for some reason not covered by\n     any other error condition.\";\n}\nenum partial-operation {\n  description",
      "raw": true
    },
    {
      "indent": 4,
      "text": "         \"This error-tag is obsolete, and SHOULD NOT be sent\n          by servers conforming to this document.\";\n     }\n     enum malformed-message {\n       description\n         \"A message could not be handled because it failed to\n          be parsed correctly.  For example, the message is not\n          well-formed XML or it uses an invalid character set.\";\n     }\n   }\n   description \"NETCONF Error Tag\";\n   reference \"RFC 6241, Appendix A\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "typedef error-severity-type {\n  type enumeration {\n    enum error {\n      description \"Error severity\";\n    }\n    enum warning {\n      description \"Warning severity\";\n    }\n  }\n  description \"NETCONF Error Severity\";\n  reference \"RFC 6241, Section 4.3\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "typedef edit-operation-type {\n  type enumeration {\n    enum merge {\n      description\n        \"The configuration data identified by the\n         element containing this attribute is merged\n         with the configuration at the corresponding\n         level in the configuration datastore identified\n         by the target parameter.\";\n    }\n    enum replace {\n      description\n        \"The configuration data identified by the element\n         containing this attribute replaces any related\n         configuration in the configuration datastore\n         identified by the target parameter.  If no such\n         configuration data exists in the configuration\n         datastore, it is created.  Unlike a\n         <copy-config> operation, which replaces the\n         entire target configuration, only the configuration\n         actually present in the config parameter is affected.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "    }\n    enum create {\n      description\n        \"The configuration data identified by the element\n         containing this attribute is added to the\n         configuration if and only if the configuration\n         data does not already exist in the configuration\n         datastore.  If the configuration data exists, an\n         <rpc-error> element is returned with an\n         <error-tag> value of 'data-exists'.\";\n    }\n    enum delete {\n      description\n        \"The configuration data identified by the element\n         containing this attribute is deleted from the\n         configuration if and only if the configuration\n         data currently exists in the configuration\n         datastore.  If the configuration data does not\n         exist, an <rpc-error> element is returned with\n         an <error-tag> value of 'data-missing'.\";\n    }\n    enum remove {\n      description\n        \"The configuration data identified by the element\n         containing this attribute is deleted from the\n         configuration if the configuration\n         data currently exists in the configuration\n         datastore.  If the configuration data does not\n         exist, the 'remove' operation is silently ignored\n         by the server.\";\n    }\n  }\n  default \"merge\";\n  description \"NETCONF 'operation' attribute values\";\n  reference \"RFC 6241, Section 7.2\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "// NETCONF Standard Protocol Operations",
      "ja": "// NETCONFの標準プロトコル操作"
    },
    {
      "indent": 4,
      "text": "rpc get-config { description \"Retrieve all or part of a specified configuration.\";",
      "ja": "RPC得る-設定{説明は、「指定された構成の全部または一部を取得します。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.1\";",
      "ja": "参照 \"RFC 6241、セクション7.1\";"
    },
    {
      "indent": 6,
      "text": "input { container source { description",
      "ja": "入力{コンテナ源{説明"
    },
    {
      "indent": 12,
      "text": "\"Particular configuration to retrieve.\";",
      "ja": "「特定の構成を取得します。」;"
    },
    {
      "indent": 8,
      "text": "  choice config-source {\n    mandatory true;\n    description\n      \"The configuration to retrieve.\";\n    leaf candidate {\n      if-feature candidate;\n      type empty;\n      description\n        \"The candidate configuration is the config source.\";\n    }\n    leaf running {\n      type empty;\n      description\n        \"The running configuration is the config source.\";\n    }\n    leaf startup {\n      if-feature startup;\n      type empty;\n      description\n        \"The startup configuration is the config source.\n         This is optional-to-implement on the server because\n         not all servers will support filtering for this\n         datastore.\";\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "  anyxml filter {\n    description\n      \"Subtree or XPath filter to use.\";\n    nc:get-filter-element-attributes;\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": " output { anyxml data { description \"Copy of the source datastore subset that matched the filter criteria (if any). An empty data container indicates that the request did not produce any results.\"; } } }",
      "ja": "出力{AnyXMLでデータ{説明「（もしあれば）フィルタ条件にマッチしたソース・データストアのサブセットのコピーが空のデータコンテナは、要求が任意の結果を生じなかったことを示しています。」; }}}"
    },
    {
      "indent": 4,
      "text": "rpc edit-config { description",
      "ja": "RPCの編集設定{説明"
    },
    {
      "indent": 8,
      "text": "\"The <edit-config> operation loads all or part of a specified\n configuration to the specified target configuration.\";",
      "raw": true
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.2\";",
      "ja": "参照 \"RFC 6241、セクション7.2\";"
    },
    {
      "indent": 6,
      "text": "input { container target { description \"Particular configuration to edit.\";",
      "ja": "入力{容器ターゲット{説明「編集する特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-target {\n  mandatory true;\n  description\n    \"The configuration target.\";",
      "raw": true
    },
    {
      "indent": 8,
      "text": "    leaf candidate {\n      if-feature candidate;\n      type empty;\n      description\n        \"The candidate configuration is the config target.\";\n    }\n    leaf running {\n      if-feature writable-running;\n      type empty;\n      description\n        \"The running configuration is the config source.\";\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "leaf default-operation {\n  type enumeration {\n    enum merge {\n      description\n        \"The default operation is merge.\";\n    }\n    enum replace {\n      description\n        \"The default operation is replace.\";\n    }\n    enum none {\n      description\n        \"There is no default operation.\";\n    }\n  }\n  default \"merge\";\n  description\n    \"The default operation to use.\";",
      "raw": true
    },
    {
      "indent": 8,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 8,
      "text": "leaf test-option {\n  if-feature validate;\n  type enumeration {\n    enum test-then-set {\n      description\n        \"The server will test and then set if no errors.\";\n    }\n    enum set {\n      description\n        \"The server will set without a test first.\";\n    }",
      "raw": true
    },
    {
      "indent": 8,
      "text": "    enum test-only {\n      description\n        \"The server will only test and not set, even\n         if there are no errors.\";\n    }\n  }\n  default \"test-then-set\";\n  description\n    \"The test option to use.\";\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "leaf error-option {\n  type enumeration {\n    enum stop-on-error {\n      description\n        \"The server will stop on errors.\";\n    }\n    enum continue-on-error {\n      description\n        \"The server may continue on errors.\";\n    }\n    enum rollback-on-error {\n      description\n        \"The server will roll back on errors.\n         This value can only be used if the 'rollback-on-error'\n         feature is supported.\";\n    }\n  }\n  default \"stop-on-error\";\n  description\n    \"The error option to use.\";\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "choice edit-content {",
      "ja": "選択肢の編集内容{"
    },
    {
      "indent": 10,
      "text": "mandatory true;\ndescription\n  \"The content for the edit operation.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "      anyxml config {\n        description\n          \"Inline Config content.\";\n      }\n      leaf url {\n        if-feature url;\n        type inet:uri;\n        description\n          \"URL-based config content.\";\n      }\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc copy-config { description \"Create or replace an entire configuration datastore with the contents of another complete configuration datastore.\";",
      "ja": "RPCのコピー-config設定{記述は、「別の完全な構成データストアの内容全体構成データストアを作成するか、または交換してください。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.3\";",
      "ja": "参照 \"RFC 6241、セクション7.3\";"
    },
    {
      "indent": 6,
      "text": "input { container target { description \"Particular configuration to copy to.\";",
      "ja": "入力{容器ターゲット{説明「にコピーする特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-target {\n  mandatory true;\n  description\n    \"The configuration target of the copy operation.\";",
      "raw": true
    },
    {
      "indent": 8,
      "text": "    leaf candidate {\n      if-feature candidate;\n      type empty;\n      description\n        \"The candidate configuration is the config target.\";\n    }\n    leaf running {\n      if-feature writable-running;\n      type empty;\n      description\n        \"The running configuration is the config target.\n         This is optional-to-implement on the server.\";\n    } leaf startup {\n      if-feature startup;\n      type empty;\n      description\n        \"The startup configuration is the config target.\";\n    }\n    leaf url {\n      if-feature url;\n      type inet:uri;\n      description\n        \"The URL-based configuration is the config target.\";\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "container source { description \"Particular configuration to copy from.\";",
      "ja": "コンテナ源{説明「からコピーする特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-source {\n  mandatory true;\n  description\n    \"The configuration source for the copy operation.\";",
      "raw": true
    },
    {
      "indent": 12,
      "text": "leaf candidate {\n  if-feature candidate;\n  type empty;\n  description\n    \"The candidate configuration is the config source.\";\n}\nleaf running {\n  type empty;\n  description\n    \"The running configuration is the config source.\";\n}\nleaf startup {\n  if-feature startup;\n  type empty;\n  description\n    \"The startup configuration is the config source.\";\n}\nleaf url {\n  if-feature url;\n  type inet:uri;\n  description\n    \"The URL-based configuration is the config source.\";\n}\nanyxml config {",
      "raw": true
    },
    {
      "indent": 4,
      "text": " description \"Inline Config content: <config> element. Represents an entire configuration datastore, not a subset of the running datastore.\"; } } } } }",
      "ja": "説明「インライン構成含量：<config>要素全体構成データストアではなく、実行中のデータストアのサブセットを表します。」。 }}}}}"
    },
    {
      "indent": 4,
      "text": "rpc delete-config { description \"Delete a configuration datastore.\";",
      "ja": "RPC削除-設定{説明「構成データストアを削除します。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.4\";",
      "ja": "参照 \"RFC 6241、セクション7.4\";"
    },
    {
      "indent": 6,
      "text": "input { container target { description \"Particular configuration to delete.\";",
      "ja": "入力{容器ターゲット{説明「を削除する特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-target {\n  mandatory true;\n  description\n    \"The configuration target to delete.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "        leaf startup {\n          if-feature startup;\n          type empty;\n          description\n            \"The startup configuration is the config target.\";\n        }\n        leaf url {\n          if-feature url;\n          type inet:uri;\n          description\n            \"The URL-based configuration is the config target.\";\n        }\n      }\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc lock { description \"The lock operation allows the client to lock the configuration system of a device.\";",
      "ja": "RPCロック{記述は、「ロック操作は、クライアントがデバイスの構成システムをロックすることができます。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.5\";",
      "ja": "参照 \"RFC 6241、セクション7.5\"。"
    },
    {
      "indent": 6,
      "text": "input { container target { description \"Particular configuration to lock.\";",
      "ja": "入力{容器ターゲット{説明「ロックする特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-target {\n  mandatory true;\n  description\n    \"The configuration target to lock.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "        leaf candidate {\n          if-feature candidate;\n          type empty;\n          description\n            \"The candidate configuration is the config target.\";\n        }\n        leaf running {\n          type empty;\n          description\n            \"The running configuration is the config target.\";\n        }\n        leaf startup {\n          if-feature startup;\n          type empty;\n          description\n            \"The startup configuration is the config target.\";\n        }\n      }\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc unlock { description \"The unlock operation is used to release a configuration lock, previously obtained with the 'lock' operation.\";",
      "ja": "RPCアンロック{説明「ロック解除操作は、以前に 『ロック』操作を用いて得られた、設定ロックを解除するために使用されます。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.6\";",
      "ja": "参照 \"RFC 6241、セクション7.6\"。"
    },
    {
      "indent": 6,
      "text": "input { container target { description \"Particular configuration to unlock.\";",
      "ja": "入力{容器ターゲット{説明「ロックを解除する特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-target {\n  mandatory true;",
      "raw": true
    },
    {
      "indent": 12,
      "text": "description \"The configuration target to unlock.\";",
      "ja": "説明「ロックを解除する構成ターゲット。」;"
    },
    {
      "indent": 4,
      "text": "        leaf candidate {\n          if-feature candidate;\n          type empty;\n          description\n            \"The candidate configuration is the config target.\";\n        }\n        leaf running {\n          type empty;\n          description\n            \"The running configuration is the config target.\";\n        }\n        leaf startup {\n          if-feature startup;\n          type empty;\n          description\n            \"The startup configuration is the config target.\";\n        }\n      }\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc get { description \"Retrieve running configuration and device state information.\";",
      "ja": "RPC説明は、「構成およびデバイス状態情報を実行して取得します。」{得ます。"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.7\";",
      "ja": "参照 \"RFC 6241、セクション7.7\";"
    },
    {
      "indent": 6,
      "text": "input {\n  anyxml filter {\n    description\n      \"This parameter specifies the portion of the system\n       configuration and state data to retrieve.\";\n    nc:get-filter-element-attributes;\n  }\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "output { anyxml data { description \"Copy of the running datastore subset and/or state data that matched the filter criteria (if any). An empty data container indicates that the request did not produce any results.\"; }",
      "ja": "出力{AnyXMLでデータ{説明「フィルタ条件（もしあれば）を一致した実行データストアのサブセットのコピー及び/又は状態データ空のデータコンテナは、要求は、任意の結果を生じなかったことを示しています。」; }"
    },
    {
      "indent": 4,
      "text": " } }",
      "ja": "｝ ｝"
    },
    {
      "indent": 4,
      "text": "rpc close-session { description \"Request graceful termination of a NETCONF session.\";",
      "ja": "RPCクローズセッション{説明「要求NETCONFセッションの正常な終了。」;"
    },
    {
      "indent": 4,
      "text": " reference \"RFC 6241, Section 7.8\"; }",
      "ja": "参照 \"RFC 6241、セクション7.8\"; }"
    },
    {
      "indent": 4,
      "text": "rpc kill-session { description \"Force the termination of a NETCONF session.\";",
      "ja": "RPC殺傷セッション{記述は、「NETCONFセッションの終了を強制します。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 7.9\";",
      "ja": "参照 \"RFC 6241、セクション7.9\";"
    },
    {
      "indent": 4,
      "text": "  input {\n    leaf session-id {\n      type session-id-type;\n      mandatory true;\n      description\n        \"Particular session to kill.\";\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc commit { if-feature candidate;",
      "ja": "RPC {IF-特徴候補をコミットします。"
    },
    {
      "indent": 6,
      "text": "description \"Commit the candidate configuration as the device's new current configuration.\";",
      "ja": "説明は「デバイスの新しい現在の構成として、候補設定をコミットします。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 8.3.4.1\";",
      "ja": "参照 \"RFC 6241、セクション8.3.4.1\"。"
    },
    {
      "indent": 6,
      "text": "input {\n  leaf confirmed {\n    if-feature confirmed-commit;\n    type empty;\n    description\n      \"Requests a confirmed commit.\";\n    reference \"RFC 6241, Section 8.3.4.1\";\n  }",
      "raw": true
    },
    {
      "indent": 8,
      "text": "leaf confirm-timeout {\n  if-feature confirmed-commit;\n  type uint32 {\n    range \"1..max\";",
      "raw": true
    },
    {
      "indent": 8,
      "text": "  }\n  units \"seconds\";\n  default \"600\";   // 10 minutes\n  description\n    \"The timeout interval for a confirmed commit.\";\n  reference \"RFC 6241, Section 8.3.4.1\";\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "leaf persist {\n  if-feature confirmed-commit;\n  type string;\n  description\n    \"This parameter is used to make a confirmed commit\n     persistent.  A persistent confirmed commit is not aborted\n     if the NETCONF session terminates.  The only way to abort\n     a persistent confirmed commit is to let the timer expire,\n     or to use the <cancel-commit> operation.",
      "raw": true
    },
    {
      "indent": 13,
      "text": "The value of this parameter is a token that must be given\nin the 'persist-id' parameter of <commit> or\n<cancel-commit> operations in order to confirm or cancel\nthe persistent confirmed commit.",
      "raw": true
    },
    {
      "indent": 8,
      "text": "     The token should be a random string.\";\n  reference \"RFC 6241, Section 8.3.4.1\";\n}",
      "raw": true
    },
    {
      "indent": 8,
      "text": "leaf persist-id {\n  if-feature confirmed-commit;\n  type string;\n  description\n    \"This parameter is given in order to commit a persistent\n     confirmed commit.  The value must be equal to the value\n     given in the 'persist' parameter to the <commit> operation.\n     If it does not match, the operation fails with an\n    'invalid-value' error.\";\n  reference \"RFC 6241, Section 8.3.4.1\";\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": " } }",
      "ja": "｝ ｝"
    },
    {
      "indent": 4,
      "text": "rpc discard-changes { if-feature candidate;",
      "ja": "RPC廃棄-変更{IF-特徴候補。"
    },
    {
      "indent": 6,
      "text": "description \"Revert the candidate configuration to the current running configuration.\";",
      "ja": "説明は、「現在の実行コンフィギュレーションに候補設定を元に戻します。」;"
    },
    {
      "indent": 4,
      "text": " reference \"RFC 6241, Section 8.3.4.2\"; }",
      "ja": "参照 \"RFC 6241、セクション8.3.4.2\"。 }"
    },
    {
      "indent": 4,
      "text": "rpc cancel-commit {\n  if-feature confirmed-commit;\n  description\n    \"This operation is used to cancel an ongoing confirmed commit.\n     If the confirmed commit is persistent, the parameter\n     'persist-id' must be given, and it must match the value of the\n     'persist' parameter.\";\n  reference \"RFC 6241, Section 8.4.4.1\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "  input {\n    leaf persist-id {\n      type string;\n      description\n        \"This parameter is given in order to cancel a persistent\n         confirmed commit.  The value must be equal to the value\n         given in the 'persist' parameter to the <commit> operation.\n         If it does not match, the operation fails with an\n        'invalid-value' error.\";\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 4,
      "text": "rpc validate { if-feature validate;",
      "ja": "RPCの検証{IF-機能検証。"
    },
    {
      "indent": 6,
      "text": "description \"Validates the contents of the specified configuration.\";",
      "ja": "説明は、「指定されたコンフィギュレーションの内容を検証します。」;"
    },
    {
      "indent": 6,
      "text": "reference \"RFC 6241, Section 8.6.4.1\";",
      "ja": "参照 \"RFC 6241、セクション8.6.4.1\"。"
    },
    {
      "indent": 6,
      "text": "input { container source { description \"Particular configuration to validate.\";",
      "ja": "入力{コンテナ源{説明「検証する特定の構成。」;"
    },
    {
      "indent": 10,
      "text": "choice config-source {\n  mandatory true;\n  description\n    \"The configuration source to validate.\";",
      "raw": true
    },
    {
      "indent": 12,
      "text": "leaf candidate {\n  if-feature candidate;\n  type empty;\n  description\n    \"The candidate configuration is the config source.\";",
      "raw": true
    },
    {
      "indent": 4,
      "text": "        }\n        leaf running {\n          type empty;\n          description\n            \"The running configuration is the config source.\";\n        }\n        leaf startup {\n          if-feature startup;\n          type empty;\n          description\n            \"The startup configuration is the config source.\";\n        }\n        leaf url {\n          if-feature url;\n          type inet:uri;\n          description\n            \"The URL-based configuration is the config source.\";\n        }\n        anyxml config {\n          description\n            \"Inline Config content: <config> element.  Represents\n             an entire configuration datastore, not\n             a subset of the running datastore.\";\n        }\n      }\n    }\n  }\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "}",
      "ja": "｝"
    },
    {
      "indent": 2,
      "text": "<CODE ENDS>",
      "ja": "<CODEはENDS>"
    },
    {
      "indent": 0,
      "text": "Appendix D. Capability Template",
      "ja": "付録D.能力テンプレート"
    },
    {
      "indent": 3,
      "text": "This non-normative section defines a template that can be used to define protocol capabilities. Data models written in YANG usually do not need to define protocol capabilities since the usage of YANG automatically leads to a capability announcing the data model and any optional portions of the data model, so called features in YANG terminology. The capabilities template is intended to be used in cases where the YANG mechanisms are not powerful enough (e.g., for handling parameterized features) or a different data modeling language is used.",
      "ja": "この非標準セクションは、プロトコル機能を定義するために使用することができるテンプレートを定義します。 YANGの使用量が自動的にデータモデルとデータモデルのいずれかのオプション部分、YANGの用語では、いわゆる機能を発表機能につながるので、YANGに書き込まれたデータモデルは、通常、プロトコル機能を定義する必要はありません。機能テンプレートはYANGメカニズムは十分に（例えば、パラメータ化された機能を処理するため）、または異なるデータモデリング言語が使用されている強力ではない場合に使用されることが意図されます。"
    },
    {
      "indent": 0,
      "text": "D.1. capability-name (template)",
      "ja": "D.1。機能名（テンプレート）"
    },
    {
      "indent": 0,
      "text": "D.1.1. Overview",
      "ja": "D.1.1。概要"
    },
    {
      "indent": 0,
      "text": "D.1.2. Dependencies",
      "ja": "D.1.2。依存関係"
    },
    {
      "indent": 0,
      "text": "D.1.3. Capability Identifier",
      "ja": "D.1.3。機能識別子"
    },
    {
      "indent": 3,
      "text": "The {name} capability is identified by the following capability string:",
      "ja": "{名前}能力は、以下の能力文字列によって識別されます。"
    },
    {
      "indent": 6,
      "text": "{capability uri}",
      "ja": "{能力URI}"
    },
    {
      "indent": 0,
      "text": "D.1.4. New Operations",
      "ja": "D.1.4。新事業"
    },
    {
      "indent": 0,
      "text": "D.1.4.1. <op-name>",
      "ja": "D.1.4.1。 <オペアンプ名>"
    },
    {
      "indent": 0,
      "text": "D.1.5. Modifications to Existing Operations",
      "ja": "D.1.5。既存事業への変更"
    },
    {
      "indent": 0,
      "text": "D.1.5.1. <op-name>",
      "ja": "D.1.5.1。 <オペアンプ名>"
    },
    {
      "indent": 3,
      "text": "If existing operations are not modified by this capability, this section may be omitted.",
      "ja": "既存の操作は、この機能によって変更されていない場合は、このセクションを省略してもよいです。"
    },
    {
      "indent": 0,
      "text": "D.1.6. Interactions with Other Capabilities",
      "ja": "D.1.6。その他の機能との相互作用"
    },
    {
      "indent": 3,
      "text": "If this capability does not interact with other capabilities, this section may be omitted.",
      "ja": "この機能は他の機能と相互作用しない場合は、このセクションを省略してもよいです。"
    },
    {
      "indent": 0,
      "text": "Appendix E. Configuring Multiple Devices with NETCONF",
      "ja": "NETCONFと付録E.の構成は、複数のデバイス"
    },
    {
      "indent": 3,
      "text": "This section is non-normative.",
      "ja": "このセクションでは、非規範的です。"
    },
    {
      "indent": 0,
      "text": "E.1. Operations on Individual Devices",
      "ja": "E.1。個々のデバイスの操作"
    },
    {
      "indent": 3,
      "text": "Consider the work involved in performing a configuration update against a single individual device. In making a change to the configuration, the application needs to build trust that its change has been made correctly and that it has not impacted the operation of the device. The application (and the application user) should feel confident that their change has not damaged the network.",
      "ja": "単一個々のデバイスに対する設定の更新を実行するのに必要な作業を考えてみましょう。構成に変更を加えることで、アプリケーションは、その変更が正しく行われていることを信頼関係を構築する必要があり、それは、デバイスの動作に影響を与えていないこと。アプリケーション（およびアプリケーションユーザ）は、その変更がネットワークを損傷していないことを確信する必要があります。"
    },
    {
      "indent": 3,
      "text": "Protecting each individual device consists of a number of steps:",
      "ja": "個々のデバイスを保護することがステップ数で構成されています。"
    },
    {
      "indent": 3,
      "text": "o Acquiring the configuration lock.",
      "ja": "コンフィギュレーションロックを取得O。"
    },
    {
      "indent": 3,
      "text": "o Checkpointing the running configuration.",
      "ja": "O実行コンフィギュレーションのチェックポイント。"
    },
    {
      "indent": 3,
      "text": "o Loading and validating the incoming configuration.",
      "ja": "Oのロードと、着信設定を確認します。"
    },
    {
      "indent": 3,
      "text": "o Changing the running configuration.",
      "ja": "実行コンフィギュレーションを変更し、O。"
    },
    {
      "indent": 3,
      "text": "o Testing the new configuration.",
      "ja": "O新しい構成をテストします。"
    },
    {
      "indent": 3,
      "text": "o Making the change permanent (if desired).",
      "ja": "変化は永久的作るO（必要な場合）。"
    },
    {
      "indent": 3,
      "text": "o Releasing the configuration lock.",
      "ja": "設定のロックを解除O。"
    },
    {
      "indent": 3,
      "text": "Let's look at the details of each step.",
      "ja": "各ステップの詳細を見てみましょう。"
    },
    {
      "indent": 0,
      "text": "E.1.1. Acquiring the Configuration Lock",
      "ja": "E.1.1。設定のロックを取得"
    },
    {
      "indent": 3,
      "text": "A lock should be acquired to prevent simultaneous updates from multiple sources. If multiple sources are affecting the device, the application is hampered in both testing of its change to the configuration and in recovery if the update fails. Acquiring a short-lived lock is a simple defense to prevent other parties from introducing unrelated changes.",
      "ja": "ロックは、複数のソースからの同時更新を防止するために取得する必要があります。複数のソースがデバイスに影響を与えている場合は、更新が失敗した場合、アプリケーションは、構成への変更の両方のテストにと回復に妨げられています。短命のロックを取得することは無関係な変化を導入することから、他の当事者を防止するためのシンプルな防衛です。"
    },
    {
      "indent": 3,
      "text": "The lock can be acquired using the <lock> operation.",
      "ja": "ロックは<ロック>操作を使用して取得することができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <lock> <target> <running/> </target> </lock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック> <ターゲット> <実行/> </ target>に</ロック> </ RPC >"
    },
    {
      "indent": 3,
      "text": "If the :candidate capability is supported, the candidate configuration should be locked.",
      "ja": "場合は、次の候補機能がサポートされ、候補設定がロックされなければなりません。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <lock> <target> <candidate/> </target> </lock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック> <ターゲット> <候補/> </ target>に</ロック> </ RPC >"
    },
    {
      "indent": 0,
      "text": "E.1.2. Checkpointing the Running Configuration",
      "ja": "E.1.2。実行コンフィギュレーションのチェックポイント"
    },
    {
      "indent": 3,
      "text": "The running configuration can be saved into a local file as a checkpoint before loading the new configuration. If the update fails, the configuration can be restored by reloading the checkpoint file.",
      "ja": "実行コンフィギュレーションは、新しいコンフィギュレーションをロードする前にチェックポイントとしてローカルファイルに保存することができます。更新に失敗した場合、コンフィギュレーションチェックポイントファイルをリロードすることによって復元することができます。"
    },
    {
      "indent": 3,
      "text": "The checkpoint file can be created using the <copy-config> operation.",
      "ja": "チェックポイントファイルは、<コピー-config>の操作を使用して作成することができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <copy-config> <target> <url>file://checkpoint.conf</url> </target> <source> <running/> </source> </copy-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コピー設定> <ターゲット> <URL>ファイル：//checkpoint.conf </ URL > </ target>を<ソース> <ランニング/> </ソース> </コピー-config>の</ RPC>"
    },
    {
      "indent": 3,
      "text": "To restore the checkpoint file, reverse the <source> and <target> parameters.",
      "ja": "チェックポイントファイルを復元するには、<ソース>と<ターゲット>パラメータを逆転。"
    },
    {
      "indent": 0,
      "text": "E.1.3. Loading and Validating the Incoming Configuration",
      "ja": "E.1.3。ロードと着信設定の検証"
    },
    {
      "indent": 3,
      "text": "If the :candidate capability is supported, the configuration can be loaded onto the device without impacting the running system.",
      "ja": "場合は、次の候補機能がサポートされ、コンフィギュレーションは、実行中のシステムに影響を与えることなく、デバイスにロードすることができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <candidate/> </target> <config> <!-- place incoming configuration changes here --> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <編集-config>の<対象> <候補/> </ target>を<設定> <！ - ここに入ってくる場所の設定変更 - > </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 3,
      "text": "If the device supports the :validate:1.1 capability, it will by default validate the incoming configuration when it is loaded into the candidate. To avoid this validation, pass the <test-option> parameter with the value \"set\". Full validation can be requested with the <validate> operation.",
      "ja": "デバイスがサポートしている場合：検証：1.1機能を、それが候補にロードされたときに、それがデフォルトで入ってくる構成を検証します。この検証を回避するために、値が「セット」で<テスト・オプション>パラメータを渡します。完全な検証は、<検証>操作を要求することができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <validate> <source> <candidate/> </source> </validate> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <検証> <ソース> <候補/> </ソース> </検証> </ RPC >"
    },
    {
      "indent": 0,
      "text": "E.1.4. Changing the Running Configuration",
      "ja": "E.1.4。実行コンフィギュレーションの変更"
    },
    {
      "indent": 3,
      "text": "When the incoming configuration has been safely loaded onto the device and validated, it is ready to impact the running system.",
      "ja": "着信設定が安全装置にロードされ、検証された場合には、実行中のシステムに影響を与える準備ができています。"
    },
    {
      "indent": 3,
      "text": "If the device supports the :candidate capability, use the <commit> operation to set the running configuration to the candidate configuration. Use the <confirmed> parameter to allow automatic reversion to the original configuration if connectivity to the device fails.",
      "ja": "デバイスがサポートしている場合：候補の能力を、候補コンフィギュレーションに実行コンフィギュレーションを設定するには、<コミット>操作を使用します。デバイスへの接続が失敗した場合、元の構成に自動復帰を可能にし、<確認>パラメータを使用します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit> <confirmed/> <confirm-timeout>120</confirm-timeout> </commit> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コミット> <確認/> <確認タイムアウト> 120 </確認タイムアウト> </ > </ RPC>コミット"
    },
    {
      "indent": 3,
      "text": "If the candidate is not supported by the device, the incoming configuration change is loaded directly into running.",
      "ja": "候補者はデバイスでサポートされていない場合は、着信設定の変更が実行されているに直接ロードされます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <edit-config> <target> <running/> </target> <config> <!-- place incoming configuration changes here --> </config> </edit-config> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"壷：IETF：のparams：XML：NS：NETCONF：ベース：1.0\"> <編集-config>の<対象> <ランニング/> </ target>を<設定> <！ - ここに入ってくる場所の設定変更 - > </ config>の</編集-config>の</ RPC>"
    },
    {
      "indent": 0,
      "text": "E.1.5. Testing the New Configuration",
      "ja": "E.1.5。新しい設定のテスト"
    },
    {
      "indent": 3,
      "text": "Now that the incoming configuration has been integrated into the running configuration, the application needs to gain trust that the change has affected the device in the way intended without affecting it negatively.",
      "ja": "今の着信設定は実行コンフィギュレーションに統合されていることを、アプリケーションは変更が負それに影響を与えることなく、意図したように、デバイスに影響を与えた信頼を獲得する必要があります。"
    },
    {
      "indent": 3,
      "text": "To gain this confidence, the application can run tests of the operational state of the device. The nature of the test is dependent on the nature of the change and is outside the scope of this document. Such tests may include reachability from the system running the application (using ping), changes in reachability to the rest of the network (by comparing the device's routing table), or inspection of the particular change (looking for operational evidence of the BGP peer that was just added).",
      "ja": "この信頼を得るために、アプリケーションは、デバイスの動作状態のテストを実行することができます。テストの性質は、変更の性質に依存すると、この文書の範囲外です。そのような試験は、ネットワークの残りの部分への到達可能性の変化、または特定の変更の検査（デバイスのルーティングテーブルを比較することによって）（PINGを使用して）アプリケーションを実行しているシステムから到達可能性を含んでいてもよい（BGPピアの動作証拠を探していますちょうど）を加えました。"
    },
    {
      "indent": 0,
      "text": "E.1.6. Making the Change Permanent",
      "ja": "E.1.6。変更パーマネントを作ります"
    },
    {
      "indent": 3,
      "text": "When the configuration change is in place and the application has sufficient faith in the proper function of this change, the application is expected to make the change permanent.",
      "ja": "構成変更が整備されていると、アプリケーションがこの変更の適切な機能で十分な信仰を持っている場合、アプリケーションは変更を永続的なものと予想されます。"
    },
    {
      "indent": 3,
      "text": "If the device supports the :startup capability, the current configuration can be saved to the startup configuration by using the startup configuration as the target of the <copy-config> operation.",
      "ja": "デバイスがサポートしている場合：スタートアップ機能を、現在の設定は、<コピー-config>の操作の対象としてスタートアップコンフィギュレーションを使用してスタートアップコンフィギュレーションに保存することができます。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <copy-config> <target> <startup/> </target> <source> <running/> </source> </copy-config> </rpc>",
      "ja": "<RPCメッセージ-ID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <コピー設定> <ターゲット> <起動/> </ターゲット> <ソース> <実行/> </ソース> </コピー-config>の</ RPC>"
    },
    {
      "indent": 3,
      "text": "If the device supports the :candidate capability and a confirmed commit was requested, the confirming commit must be sent before the timeout expires.",
      "ja": "デバイスがサポートしている場合：コミット確認の候補能力と要求されたタイムアウトの期限が切れる前に、コミット確認を送信する必要があります。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <commit/> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> </ RPC> </コミット>"
    },
    {
      "indent": 0,
      "text": "E.1.7. Releasing the Configuration Lock",
      "ja": "E.1.7。設定のロックを解除"
    },
    {
      "indent": 3,
      "text": "When the configuration update is complete, the lock must be released, allowing other applications access to the configuration.",
      "ja": "設定の更新が完了すると、ロックが設定に、他のアプリケーションへのアクセスを許可する、解放されなければなりません。"
    },
    {
      "indent": 3,
      "text": "Use the <unlock> operation to release the configuration lock.",
      "ja": "設定のロックを解除するために、<ロック解除>操作を使用します。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <unlock> <target> <running/> </target> </unlock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック解除> <ターゲット> <実行/> </ target>に</アンロック> </ RPC >"
    },
    {
      "indent": 3,
      "text": "If the :candidate capability is supported, the candidate configuration should be unlocked.",
      "ja": "場合は、次の候補機能がサポートされ、候補設定がロックを解除する必要があります。"
    },
    {
      "indent": 5,
      "text": "<rpc message-id=\"101\" xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"> <unlock> <target> <candidate/> </target> </unlock> </rpc>",
      "ja": "<RPCメッセージID = \"101\" のxmlns = \"URN：IETF：paramsは：XML：NS：NETCONF：塩基：1.0\"> <ロック解除> <ターゲット> <候補/> </ target>に</アンロック> </ RPC >"
    },
    {
      "indent": 0,
      "text": "E.2. Operations on Multiple Devices",
      "ja": "E.2。複数のデバイスでの操作"
    },
    {
      "indent": 3,
      "text": "When a configuration change requires updates across a number of devices, care needs to be taken to provide the required transaction semantics. The NETCONF protocol contains sufficient primitives upon which transaction-oriented operations can be built. Providing complete transactional semantics across multiple devices is prohibitively expensive, but the size and number of windows for failure scenarios can be reduced.",
      "ja": "構成変更がデバイスの数全体の更新を必要とする場合には、注意が必要なトランザクションセマンティクスを提供するために取られる必要があります。 NETCONFプロトコルはトランザクション指向のオペレーションを構築することができ、その上に十分なプリミティブが含まれています。複数のデバイス間で完全なトランザクション・セマンティクスを提供することは非常に高価ですが、障害シナリオのためのウィンドウの大きさと数を削減することができます。"
    },
    {
      "indent": 3,
      "text": "There are two classes of multi-device operations. The first class allows the operation to fail on individual devices without requiring all devices to revert to their original state. The operation can be retried at a later time, or its failure simply reported to the user. An example of this class might be adding an NTP server. For this class of operations, failure avoidance and recovery are focused on the individual device. This means recovery of the device, reporting the failure, and perhaps scheduling another attempt.",
      "ja": "マルチデバイス操作の2つのクラスがあります。最初のクラスは、操作が元の状態に戻すには、すべてのデバイスを必要とすることなく、個々のデバイスに失敗することを可能にします。操作は後で再試行することができ、またはその障害は、単にユーザに報告します。このクラスの例は、NTPサーバを追加することがあります。操作のこのクラスでは、障害回避と回復は、個々のデバイスに焦点を当てています。これは失敗を報告し、デバイスの回復を意味し、おそらく別の試みをスケジュールします。"
    },
    {
      "indent": 3,
      "text": "The second class is more interesting, requiring that the operation should complete on all devices or be fully reversed. The network should either be transformed into a new state or be reset to its original state. For example, a change to a VPN may require updates to a number of devices. Another example of this might be adding a class-of-service definition. Leaving the network in a state where only a portion of the devices have been updated with the new definition will lead to future failures when the definition is referenced.",
      "ja": "第二のクラスは、操作がすべてのデバイスで完了する必要がありますまたは完全に逆転されることを必要、より興味深いものです。ネットワークは、新しい状態に変換されなければならないのいずれか、または元の状態にリセットされます。例えば、VPNへの変化は、デバイスの数の更新を必要とするかもしれません。本の別の例は、サービスクラス定義を追加することがあります。デバイスの部分は定義が参照されたときに、将来の故障につながる新しい定義で更新されているだけの状態でネットワークを残します。"
    },
    {
      "indent": 3,
      "text": "To give transactional semantics, the same steps used in single-device operations listed above are used, but are performed in parallel across all devices. Configuration locks should be acquired on all target devices and kept until all devices are updated and the changes made permanent. Configuration changes should be uploaded and validation performed across all devices. Checkpoints should be made on each device. Then the running configuration can be changed, tested, and made permanent. If any of these steps fail, the previous configurations can be restored on any devices upon which they were changed. After the changes have been completely implemented or completely discarded, the locks on each device can be released.",
      "ja": "トランザクション・セマンティクスを与えるために、上記単一のデバイス操作で使用したのと同じ手順が使用されるが、すべてのデバイス間で並行して行われます。コンフィギュレーション・ロックは、すべてのターゲットデバイス上で取得し、すべてのデバイスが更新され、変更を永続行われるまで維持されなければなりません。設定の変更は、アップロードされたと検証は、すべてのデバイス間で実行する必要があります。チェックポイントは、各デバイス上でなされるべきです。次に、実行コンフィギュレーションは、変更、テスト、および永久的にすることができます。これらのステップのいずれかが失敗した場合、以前の設定は、彼らが変更された時に任意のデバイスに復元することができます。変更が完全に実装または完全に廃棄された後、各デバイスのロックを解除することができます。"
    },
    {
      "indent": 1,
      "text": "Appendix F. Changes from",
      "ja": "付録F.変更から"
    },
    {
      "indent": 3,
      "text": "This section lists major changes between this document and RFC 4741.",
      "ja": "このセクションでは、このドキュメントとRFC 4741との間に大きな変化を示しています。"
    },
    {
      "indent": 3,
      "text": "o Added the \"malformed-message\" error-tag.",
      "ja": "O「不正メッセージ」エラータグが追加されました。"
    },
    {
      "indent": 3,
      "text": "o Added \"remove\" enumeration value to the \"operation\" attribute.",
      "ja": "O「操作」属性に列挙値を「削除」を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Obsoleted the \"partial-operation\" error-tag enumeration value.",
      "ja": "○「部分運転」エラータグ列挙値を廃止。"
    },
    {
      "indent": 3,
      "text": "o Added <persist> and <persist-id> parameters to the <commit> operation.",
      "ja": "O追加された<持続>と<コミット>動作<持続-ID>パラメータ。"
    },
    {
      "indent": 3,
      "text": "o Updated the base protocol URI and clarified the <hello> message exchange to select and identify the base protocol version in use for a particular session.",
      "ja": "O基本プロトコルURIを更新し、選択し、特定のセッションのために使用されているベース・プロトコル・バージョンを識別するために、<ハロー>メッセージ交換を明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Added a YANG module to model the operations and removed the operation layer from the XSD.",
      "ja": "O動作をモデル化するためにYANGモジュールを追加し、XSDから動作層を除去します。"
    },
    {
      "indent": 3,
      "text": "o Clarified lock behavior for the candidate datastore.",
      "ja": "O候補データストアのロックの挙動を明らかにしました。"
    },
    {
      "indent": 3,
      "text": "o Clarified the error response server requirements for the \"delete\" enumeration value of the \"operation\" attribute.",
      "ja": "O「操作」属性の「削除」列挙値に対するエラー応答サーバの要件を明確化。"
    },
    {
      "indent": 3,
      "text": "o Added a namespace wildcarding mechanism for subtree filtering.",
      "ja": "Oサブツリーフィルタリングのための名前空間ワイルドカードメカニズムを追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added a \"test-only\" value for the <test-option> parameter to the <edit-config> operation.",
      "ja": "O <編集-config>の操作に<テスト・オプション>パラメータのための「テスト専用」値を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Added a <cancel-commit> operation.",
      "ja": "O <キャンセルコミット>の動作を追加しました。"
    },
    {
      "indent": 3,
      "text": "o Introduced a NETCONF username and a requirement for transport protocols to explain how a username is derived.",
      "ja": "Oユーザ名が派生する方法を説明するために、NETCONFのユーザー名とトランスポートプロトコルのための要件を導入しました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Rob Enns (editor) Juniper Networks",
      "ja": "ロブエンス（編集者）ジュニパーネットワークス"
    },
    {
      "indent": 3,
      "text": "EMail: rob.enns@gmail.com",
      "ja": "メールアドレス：rob.enns@gmail.com"
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund (editor) Tail-f Systems",
      "ja": "マーティンBjorklund（編集者）テール-Fシステム"
    },
    {
      "indent": 3,
      "text": "EMail: mbj@tail-f.com",
      "ja": "メールアドレス：mbj@tail-f.com"
    },
    {
      "indent": 3,
      "text": "Juergen Schoenwaelder (editor) Jacobs University",
      "ja": "ユルゲンSchoenwaelder（エディタ）ジェイコブス大学"
    },
    {
      "indent": 3,
      "text": "EMail: j.schoenwaelder@jacobs-university.de",
      "ja": "メールアドレス：j.schoenwaelder@jacobs-university.de"
    },
    {
      "indent": 3,
      "text": "Andy Bierman (editor) Brocade",
      "ja": "アンディBierman（編集者）ブロケード"
    },
    {
      "indent": 3,
      "text": "EMail: andy.bierman@brocade.com",
      "ja": "メールアドレス：andy.bierman@brocade.com"
    }
  ]
}