{
  "title": {
    "text": "RFC 6691 - TCP Options and Maximum Segment Size (MSS)",
    "ja": "RFC 6691 - TCPオプションと最大セグメントサイズ（MSS）"
  },
  "number": 6691,
  "created_at": "2019-10-29 06:35:32.856207+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         D. Borman\nRequest for Comments: 6691                           Quantum Corporation\nUpdates: 879, 2385                                             July 2012\nCategory: Informational\nISSN: 2070-1721",
      "raw": true
    },
    {
      "indent": 15,
      "text": "TCP Options and Maximum Segment Size (MSS)",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This memo discusses what value to use with the TCP Maximum Segment Size (MSS) option, and updates RFC 879 and RFC 2385.",
      "ja": "このメモはTCP最大セグメントサイズ（MSS）オプション、およびアップデートのRFC 879およびRFC 2385で使用するためにどのような値について説明します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、情報提供の目的のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6691.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6691で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2012 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "There has been some confusion as to what value to use with the TCP MSS option when using IP and TCP options. RFC 879 [RFC879] states:",
      "ja": "IPおよびTCPオプションを使用している場合、TCP MSSオプションでどのような値を使用するためになど、いくつかの混乱がありました。 RFC 879 [RFC879]の状態："
    },
    {
      "indent": 6,
      "text": "The MSS counts only data octets in the segment, it does not count the TCP header or the IP header.",
      "ja": "MSSは、セグメントにおける唯一のデータオクテットをカウントし、それはTCPヘッダやIPヘッダをカウントされません。"
    },
    {
      "indent": 3,
      "text": "This statement is unclear about what to do about IP and TCP options, since they are part of the headers. RFC 1122 [RFC1122] clarified the MSS option, which is discussed in Appendix A, but there still seems to be some confusion.",
      "ja": "彼らはヘッダの一部であるため、この文では、IPおよびTCPオプションについてどうするかについては不明です。 RFC 1122 [RFC1122]は、付録Aで説明されてMSSオプションを、明確に、まだいくつかの混乱があるようです。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1。用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. The Short Statement",
      "section_title": true,
      "ja": "2.ショートステートメント"
    },
    {
      "indent": 3,
      "text": "When calculating the value to put in the TCP MSS option, the MTU value SHOULD be decreased by only the size of the fixed IP and TCP headers and SHOULD NOT be decreased to account for any possible IP or TCP options; conversely, the sender MUST reduce the TCP data length to account for any IP or TCP options that it is including in the packets that it sends. The rest of this document just expounds on that statement, and the goal is to avoid IP-level fragmentation of TCP packets.",
      "ja": "TCP MSSオプションに入れて値を計算する場合、MTU値は、固定IPおよびTCPヘッダのサイズのみによって減少させるべきであると考えられるあらゆるIPやTCPオプションを考慮して減少してはなりません。逆に、送信者は、それが送信するパケットに含めている任意のIPやTCPオプションを考慮して、TCPデータの長さを短くしなければなりません。このドキュメントの残りの部分は、ちょうどその文で解説し、そして目標は、TCPパケットのIPレベルでの断片化を避けるためです。"
    },
    {
      "indent": 3,
      "text": "The size of the fixed TCP header is 20 bytes [RFC793], the size of the fixed IPv4 header is 20 bytes [RFC791], and the size of the fixed IPv6 header is 40 bytes [RFC2460]. The determination of what MTU value should be used, especially in the case of multi-homed hosts, is beyond the scope of this document.",
      "ja": "固定されたTCPヘッダのサイズは、固定されたIPv4ヘッダのサイズは20バイト[RFC791]であり、20バイト[RFC793]であり、固定IPv6ヘッダのサイズは40バイト[RFC2460]です。 MTU値は、特にマルチホームホストの場合には、使用すべきかの決意は、この文書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "3. MSS in Other RFCs",
      "section_title": true,
      "ja": "その他のRFC 3. MSS"
    },
    {
      "indent": 2,
      "text": "3.1.",
      "section_title": true,
      "ja": "３。１。"
    },
    {
      "indent": 3,
      "text": "RFC 879 [RFC879] discusses the MSS option and other topics. In the Introduction, it states:",
      "ja": "RFC 879は、[RFC879] MSSオプションおよびその他のトピックについて説明します。はじめに、それは述べて："
    },
    {
      "indent": 6,
      "text": "THE TCP MAXIMUM SEGMENT SIZE IS THE IP MAXIMUM DATAGRAM SIZE MINUS FORTY.",
      "ja": "TCPの最大セグメントサイズは、IPデータグラムの最大SIZEマイナスFORTYです。"
    },
    {
      "indent": 3,
      "text": "In Section 13, it states:",
      "ja": "第13節では、それは述べて："
    },
    {
      "indent": 6,
      "text": "The definition of the MSS option can be stated:",
      "ja": "MSSオプションの定義を述べることができます。"
    },
    {
      "indent": 9,
      "text": "The maximum number of data octets that may be received by the sender of this TCP option in TCP segments with no TCP header options transmitted in IP datagrams with no IP header options.",
      "ja": "ないIPヘッダ・オプションとIPデータグラムで送信ないTCPヘッダーオプションを使用してTCPセグメントにおけるこのTCPオプションの送信者によって受信されるデータオクテットの最大数。"
    },
    {
      "indent": 3,
      "text": "These are both correct. However, in the next paragraph -- in Section 14 -- it then confuses this by stating that the consequence is:",
      "ja": "これらは両方とも正しいです。ただし、次の段落で - セクション14に - それは、結果であることを示すことによって、これを混乱させる："
    },
    {
      "indent": 6,
      "text": "When TCP is used in a situation when either the IP or TCP headers are not minimum and yet the maximum IP datagram that can be received remains 576 octets then the TCP Maximum Segment Size option must be used to reduce the limit on data octets allowed in a TCP segment.",
      "ja": "IPまたはTCPヘッダーが受信できる最大のIPデータグラムは、その後、TCP最大セグメントサイズのオプションはで許可されたデータオクテットの制限を減らすために使用されなければならない576オクテットのまま、まだ最小としない場合にどちらかのTCPは、状況で使用される場合TCPセグメント。"
    },
    {
      "indent": 9,
      "text": "For example, if the IP Security option (11 octets) were in use and the IP maximum datagram size remained at 576 octets, then the TCP should send the MSS with a value of 525 (536-11).",
      "ja": "たとえば、IP Securityオプション（11オクテット）であれば、使用していたし、IPデータグラムの最大サイズは576個のオクテットで推移し、その後、TCP 525（536から11）の値とMSSを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "That is incorrect. The simpler and more correct statement would be:",
      "ja": "それは間違っています。よりシンプルかつ正しい文は次のようになります。"
    },
    {
      "indent": 6,
      "text": "When TCP is used in a situation where either the IP or TCP headers are not minimum, the sender must reduce the amount of TCP data in any given packet by the number of octets used by the IP and TCP options.",
      "ja": "TCPは、IPやTCPヘッダのいずれかが最小でない状況で使用される場合、送信者は、IPおよびTCPオプションによって使用されるオクテットの数で任意のパケット内のTCPデータの量を減らす必要があります。"
    },
    {
      "indent": 2,
      "text": "3.2.",
      "section_title": true,
      "ja": "３。２。"
    },
    {
      "indent": 3,
      "text": "RFC 2385 [RFC2385] incorrectly states, in Section 4.3:",
      "ja": "RFC 2385 [RFC2385]は間違って4.3節で、状態："
    },
    {
      "indent": 6,
      "text": "As with other options that are added to every segment, the size of the MD5 option must be factored into the MSS offered to the other side during connection negotiation. Specifically, the size of the header to subtract from the MTU (whether it is the MTU of the outgoing interface or IP's minimal MTU of 576 bytes) is now at least 18 bytes larger.",
      "ja": "すべてのセグメントに追加されている他のオプションと同様に、MD5オプションのサイズは、接続ネゴシエーション中に他の側に提供されるMSSに織り込まれなければなりません。具体的には、MTU（それは発信インターフェイスのMTUまたは576バイトのIPの最小のMTUであるかどうか）から減算するヘッダのサイズは、現在、少なくとも18バイト大きくなっています。"
    },
    {
      "indent": 3,
      "text": "This is incorrect. The value for the MSS option is only adjusted by the fixed IP and TCP headers.",
      "ja": "これは正しくありません。 MSSオプションの値のみが固定IPおよびTCPヘッダによって調整されます。"
    },
    {
      "indent": 0,
      "text": "4. Clarification from the TCP Large Windows Mailing List",
      "section_title": true,
      "ja": "TCP大型のWindowsメーリングリストから4明確化"
    },
    {
      "indent": 3,
      "text": "The initial clarification was sent to the TCP Large Windows mailing list in 1993 [Borman93]; this section is based on that message.",
      "ja": "最初の明確化は、[Borman93] 1993年にTCPラージWindowsのメーリングリストに送られました。このセクションは、そのメッセージに基づいています。"
    },
    {
      "indent": 3,
      "text": "The MSS value to be sent in an MSS option should be equal to the effective MTU minus the fixed IP and TCP headers. By ignoring both IP and TCP options when calculating the value for the MSS option, if there are any IP or TCP options to be sent in a packet, then the sender must decrease the size of the TCP data accordingly. The reason for this can be seen in the following table:",
      "ja": "MSSオプションで送信されるMSS値は、有効なMTUマイナス固定IPとTCPヘッダと同じでなければなりません。 IPおよびTCPオプションパケットで送信される任意のIPやTCPオプションがある場合は、MSSオプションの値を計算することの両方を無視して、送信者はそれに応じてTCPデータのサイズを小さくしなければなりません。その理由は、次の表で見ることができます。"
    },
    {
      "indent": 5,
      "text": "                     +--------------------+--------------------+\n                     | MSS is adjusted    | MSS isn't adjusted |\n                     | to include options | to include options |\n+--------------------+--------------------+--------------------+\n| Sender adjusts     | Packets are too    | Packets are the    |\n| packet length      | short              | correct length     |\n| for options        |                    |                    |\n+--------------------+--------------------+--------------------+\n| Sender doesn't     | Packets are the    | Packets are too    |\n| adjust packet      | correct length     | long               |\n| length for options |                    |                    |\n+--------------------+--------------------+--------------------+",
      "raw": true
    },
    {
      "indent": 3,
      "text": "The goal is to not send IP datagrams that have to be fragmented, and packets sent with the constraints in the lower right of this grid will cause IP fragmentation. Since the sender doesn't know if the received MSS option was adjusted to include options, the only way to guarantee that the packets are not too long is for the data sender to decrease the TCP data length by the size of the IP and TCP options. It follows, then, that since the sender will be adjusting the TCP data length when sending IP and TCP options, there is no need to include the IP and TCP option lengths in the MSS value.",
      "ja": "目標は、断片化する必要があるIPデータグラムを送信しないことであり、このグリッドの右下に制約に送信されたパケットは、IPフラグメンテーションが発生します。受信MSSオプションはオプションが含まれるように調整した場合は、送信者が知らないので、パケットが長すぎないことを保証する唯一の方法は、IPおよびTCPオプションのサイズによってTCPデータ長を減少させるために、データの送信者であります。 IPおよびTCPオプションを送信する際、送信者がTCPデータ長を調整することになるので、MSS値にIPとTCPオプションの長さを含める必要がないこと、それから、次の。"
    },
    {
      "indent": 3,
      "text": "Another argument against including IP or TCP options in the determination of the MSS value is that the MSS is a fixed value, and by their very nature the lengths of IP and TCP options are variable, so the MSS value can never accurately reflect all possible IP and TCP option combinations. The only one that knows for sure how many IP and TCP options are in any given packet is the sender; hence, the sender should be doing the adjustment to the TCP data length to account for any IP and TCP options.",
      "ja": "MSS値の決定にIPやTCPオプションを含めに対するもう一つの引数は、MSSが固定値であり、MSS値は正確にすべての可能なIPを反映することはできませんので、その性質により、IPおよびTCPオプションの長さは、可変であるということですそして、TCPオプションの組み合わせ。 IPおよびTCPオプションは、任意のパケットであるか、多くの確認のために知っている唯一の1は、送信者です。したがって、送信者は、任意のIPおよびTCPオプションを考慮するために、TCPデータ長に調整を行うべきです。"
    },
    {
      "indent": 0,
      "text": "5. Additional Considerations",
      "section_title": true,
      "ja": "5.その他の考慮事項"
    },
    {
      "indent": 0,
      "text": "5.1. Path MTU Discovery",
      "section_title": true,
      "ja": "5.1。パスMTUディスカバリ"
    },
    {
      "indent": 3,
      "text": "The TCP MSS option specifies an upper bound for the size of packets that can be received. Hence, setting the value in the MSS option too small can impact the ability for Path MTU Discovery to find a larger path MTU. For more information on Path MTU Discovery, see:",
      "ja": "TCP MSSオプションを受信することができるパケットのサイズの上限を指定します。したがって、小さすぎるMSSオプションに値を設定すると、より大きなパスMTUを見つけるためのパスMTUディスカバリの能力に影響を与えることができます。パスMTUディスカバリの詳細については、以下を参照してください。"
    },
    {
      "indent": 6,
      "text": "o \"Path MTU Discovery\" [RFC1191]",
      "ja": "o \"のパスMTUディスカバリ\" [RFC1191]"
    },
    {
      "indent": 6,
      "text": "o \"TCP Problems with Path MTU Discovery\" [RFC2923]",
      "ja": "[RFC2923] o \"のパスMTUディスカバリとTCPの問題\""
    },
    {
      "indent": 6,
      "text": "o \"Packetization Layer Path MTU Discovery\" [RFC4821]",
      "ja": "O「パケット化パス層発見彼」[RFC4821]"
    },
    {
      "indent": 0,
      "text": "5.2. Interfaces with Variable MSS Values",
      "section_title": true,
      "ja": "5.2。変数のMSS値とのインタフェース"
    },
    {
      "indent": 3,
      "text": "The effective MTU can sometimes vary, as when used with variable compression, e.g., RObust Header Compression (ROHC) [RFC5795]. It is tempting for TCP to want to advertise the largest possible MSS, to support the most efficient use of compressed payloads. Unfortunately, some compression schemes occasionally need to transmit full headers (and thus smaller payloads) to resynchronize state at their endpoint compressors/decompressors. If the largest MTU is used to calculate the value to advertise in the MSS option, TCP retransmission may interfere with compressor resynchronization.",
      "ja": "有効なMTUは、時には、可変圧縮、例えば、ロバストヘッダ圧縮（ROHC）[RFC5795]で使用した場合のように、変化させることができます。 TCPは、圧縮されたペイロードの最も効率的な使用をサポートするために、可能な限り最大のMSSをアドバタイズすることは魅力的です。残念ながら、いくつかの圧縮方式は、時折彼らのエンドポイントコンプレッサー/伸張器の状態を再同期するために、フルヘッダー（したがって、より小さなペイロード）を送信する必要があります。最大のMTUはMSSオプションで宣伝するために値を計算するのに使用されている場合は、TCPの再送はコンプレッサーの再同期化を妨げる可能性があります。"
    },
    {
      "indent": 3,
      "text": "As a result, when the effective MTU of an interface varies, TCP SHOULD use the smallest effective MTU of the interface to calculate the value to advertise in the MSS option.",
      "ja": "結果として、界面の有効なMTUが変化した場合、TCPは、MSSオプションで宣伝する値を計算するためにインターフェースの最小有効MTUを使用すべきです。"
    },
    {
      "indent": 0,
      "text": "5.3. IPv6 Jumbograms",
      "section_title": true,
      "ja": "5.3。 IPv6のジャンボグラム"
    },
    {
      "indent": 3,
      "text": "In order to support TCP over IPv6 jumbograms, implementations need to be able to send TCP segments larger than 64K. RFC 2675 [RFC2675] defines that a value of 65,535 is to be treated as infinity, and Path MTU Discovery [RFC1981] is used to determine the actual MSS.",
      "ja": "IPv6ジャンボグラム上のTCPをサポートするために、実装は64Kよりも大きいTCPセグメントを送信できるようにする必要があります。 RFC 2675 [RFC2675]は65,535の値が無限大として扱われることを定義し、パスMTU探索[RFC1981]は、実際のMSSを決定するために使用されます。"
    },
    {
      "indent": 0,
      "text": "5.4. Avoiding Fragmentation",
      "section_title": true,
      "ja": "5.4。断片化の回避"
    },
    {
      "indent": 3,
      "text": "Packets that are too long will either be fragmented or dropped. If packets are fragmented, intermediary firewalls or middle boxes may drop the fragmented packets. In either case, when packets are dropped, the connection can fail; hence, it is best to avoid generating fragments.",
      "ja": "長すぎるパケットはフラグメント化または破棄されますどちらか。パケットが断片化されている場合、中間ファイアウォールまたは中間のボックスは、断片化されたパケットを廃棄することができます。いずれの場合も、パケットがドロップされたときに、接続が失敗することができます。したがって、それは断片の発生を回避するのが最善です。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "ja": "6.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document clarifies how to determine what value should be used for the MSS option and does not introduce any new security concerns.",
      "ja": "この文書では、MSSオプションを使用する必要があり、新たな安全保障上の懸念を導入していない値を決定する方法を明確にしています。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7.参考"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC791] Postel, J., \"Internet Protocol\", STD 5, RFC 791, September 1981.",
      "ja": "[RFC791]ポステル、J.、 \"インターネットプロトコル\"、STD 5、RFC 791、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, September 1981.",
      "ja": "[RFC793]ポステル、J.、 \"伝送制御プロトコル\"、STD 7、RFC 793、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC879] Postel, J., \"The TCP Maximum Segment Size and Related Topics\", RFC 879, November 1983.",
      "ja": "[RFC879]ポステル、J.、 \"TCP最大セグメントサイズと関連項目\"、RFC 879、1983年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1122] Braden, R., Ed., \"Requirements for Internet Hosts - Communication Layers\", STD 3, RFC 1122, October 1989.",
      "ja": "[RFC1122]ブレーデン、R.、エド、 \"インターネットホストのための要件 - 通信層\"。、STD 3、RFC 1122、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, December 1998.",
      "ja": "[RFC2460]デアリング、S.とR. Hindenと、 \"インターネットプロトコルバージョン6（IPv6）の仕様\"、RFC 2460、1998年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2675] Borman, D., Deering, S., and R. Hinden, \"IPv6 Jumbograms\", RFC 2675, August 1999.",
      "ja": "[RFC2675]ボーマン、D.、デアリング、S.、およびR. Hindenと \"IPv6のジャンボグラム\"、RFC 2675、1999年8月。"
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[Borman93] Borman, D., \"TCP MSS & Timestamps\", Message to the tcplw mailing list, January 7, 1993.",
      "ja": "[Borman93]ボーマン、D.、 \"TCP MSS＆タイムスタンプ\"、tcplwメーリングリストへのメッセージ、1993年1月7日。"
    },
    {
      "indent": 3,
      "text": "[RFC1191] Mogul, J. and S. Deering, \"Path MTU discovery\", RFC 1191, November 1990.",
      "ja": "[RFC1191]ムガール人、J.とS.デアリング、 \"パスMTUディスカバリ\"、RFC 1191、1990年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC1981] McCann, J., Deering, S., and J. Mogul, \"Path MTU Discovery for IP version 6\", RFC 1981, August 1996.",
      "ja": "[RFC1981]マッキャン、J.、デアリング、S.、およびJ.ムガール人、RFC 1981、1996年8月 \"IPバージョン6のパスMTUディスカバリー\"。"
    },
    {
      "indent": 3,
      "text": "[RFC2385] Heffernan, A., \"Protection of BGP Sessions via the TCP MD5 Signature Option\", RFC 2385, August 1998.",
      "ja": "[RFC2385] Heffernanの、A.、 \"TCP MD5署名オプションを使用してBGPセッションの保護\"、RFC 2385、1998年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC2923] Lahey, K., \"TCP Problems with Path MTU Discovery\", RFC 2923, September 2000.",
      "ja": "[RFC2923]レイヒー、K.、 \"パスMTUディスカバリとTCPの問題\"、RFC 2923、2000年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC4821] Mathis, M. and J. Heffner, \"Packetization Layer Path MTU Discovery\", RFC 4821, March 2007.",
      "ja": "[RFC4821]マシス、M.とJ. Heffner、 \"パケット化レイヤのパスMTUディスカバリ\"、RFC 4821、2007年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5795] Sandlund, K., Pelletier, G., and L-E. Jonsson, \"The RObust Header Compression (ROHC) Framework\", RFC 5795, March 2010.",
      "ja": "[RFC5795] Sandlund、K.、ペルティエ、G.、およびL-E。ヨンソン、 \"ロバストヘッダ圧縮（ROHC）フレームワーク\"、RFC 5795、2010年3月。"
    },
    {
      "indent": 1,
      "text": "Appendix A. Details from and",
      "ja": "付録A.詳細と"
    },
    {
      "indent": 3,
      "text": "RFC 793 [RFC793] defines the MSS option as follows:",
      "ja": "次のようにRFC 793 [RFC793] MSSオプションを定義します。"
    },
    {
      "indent": 6,
      "text": "Maximum Segment Size Option Data: 16 bits",
      "ja": "最大セグメントサイズオプションデータ：16ビット"
    },
    {
      "indent": 9,
      "text": "If this option is present, then it communicates the maximum receive segment size at the TCP which sends this segment. This field must only be sent in the initial connection request (i.e., in segments with the SYN control bit set). If this option is not used, any segment size is allowed.",
      "ja": "このオプションが存在する場合、それは最高のこのセグメントを送信TCPのセグメントサイズを受け取る通信します。このフィールドは、最初の接続要求で送信されなければならない（すなわち、SYN制御ビットが設定されたセグメントで）。このオプションを使用しない場合、任意のセグメントサイズが許可されています。"
    },
    {
      "indent": 3,
      "text": "RFC 1122 [RFC1122] provides additional clarification in Section 4.2.2.6, on pages 85-86. First, it changes the default behavior when the MSS option is not present:",
      "ja": "RFC 1122 [RFC1122]は、ページ85-86に、セクション4.2.2.6で追加の明確化を提供します。 MSSオプションが存在しない場合まず、それはデフォルトの動作を変更します。"
    },
    {
      "indent": 6,
      "text": "If an MSS option is not received at connection setup, TCP MUST assume a default send MSS of 536 (576-40) [TCP:4].",
      "ja": "MSSオプションは、接続設定時に受信されない場合は、TCPは、デフォルトが536のMSS（576から40）[：4 TCP]を送っ仮定しなければなりません。"
    },
    {
      "indent": 3,
      "text": "Then, it clarifies how to determine the value to use in the MSS option:",
      "ja": "その後、それはMSSオプションで使用する値を決定する方法を明確化："
    },
    {
      "indent": 6,
      "text": "The MSS value to be sent in an MSS option must be less than or equal to:",
      "ja": "MSSオプションで送信されるMSS値は、以下に等しくなければなりません。"
    },
    {
      "indent": 9,
      "text": "MMS_R - 20",
      "ja": "20  -  MMS_R"
    },
    {
      "indent": 6,
      "text": "where MMS_R is the maximum size for a transport-layer message that can be received (and reassembled). TCP obtains MMS_R and MMS_S from the IP layer; see the generic call GET_MAXSIZES in Section 3.4.",
      "ja": "MMS_Rは、受信（及び再組み立て）することができるトランスポート層メッセージの最大サイズです。 TCPはIP層からMMS_RとMMS_Sを取得します。 3.4節では、一般的なコールGET_MAXSIZESを参照してください。"
    },
    {
      "indent": 3,
      "text": "What is implied in RFC 1122, but not explicitly stated, is that the 20 is the size of the fixed TCP header. The definition of MMS_R is found in Section 3.3.2, on page 57:",
      "ja": "RFC 1122に暗示が、明示的に指定されていない何を、20は固定のTCPヘッダのサイズであるということです。 MMS_Rの定義は、57ページ、3.3.2で発見されました。"
    },
    {
      "indent": 6,
      "text": "MMS_R is given by:",
      "ja": "MMS_Rは次式で与えられます。"
    },
    {
      "indent": 9,
      "text": "MMS_R = EMTU_R - 20",
      "ja": "MMS_R = EMTU_R  -  20"
    },
    {
      "indent": 6,
      "text": "since 20 is the minimum size of an IP header.",
      "ja": "20はIPヘッダの最小サイズです。"
    },
    {
      "indent": 3,
      "text": "and on page 56 (also Section 3.3.2):",
      "ja": "および56ページ（セクション3.3.2）上："
    },
    {
      "indent": 6,
      "text": "We designate the largest datagram size that can be reassembled by EMTU_R (\"Effective MTU to receive\"); this is sometimes called the \"reassembly buffer size\". EMTU_R MUST be greater than or equal to 576, SHOULD be either configurable or indefinite, and SHOULD be greater than or equal to the MTU of the connected network(s).",
      "ja": "私たちは、EMTU_R（「受信するための有効なMTU」）によって再組み立て可能な最大データグラムサイズを指定します。これは時々「組立バッファサイズ」と呼ばれています。 EMTU_Rは、より大きい又は576に等しくなければならない構成又は不定のいずれかであるべきであり、より大きいかまたは接続されたネットワーク（複数可）のMTUに等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "What should be noted here is that EMTU_R is the largest datagram size that can be reassembled, not the largest datagram size that can be received without fragmentation. Taking this literally, since most modern TCP/IP implementations can reassemble a full 64K IP packet, implementations should be using 65535 - 20 - 20, or 65495, for the MSS option. But there is more to it than that. RFC 1122 also states, on page 86:",
      "ja": "ここで注意すべきはEMTU_Rは、断片化なしで受信することができない最大データグラムサイズを再組み立て可能な最大データグラムサイズであるということです。 MSSオプションのため、20、または65495から20  - 最も近代的なTCP / IPの実装がフル64K IPパケットを再構成することができるので、文字通りこれを取って、実装は65535を使用する必要があります。しかし、それよりも、それによりがあります。 RFC 1122はまた、86ページ、状態："
    },
    {
      "indent": 6,
      "text": "The choice of TCP segment size has a strong effect on performance. Larger segments increase throughput by amortizing header size and per-datagram processing overhead over more data bytes; however, if the packet is so large that it causes IP fragmentation, efficiency drops sharply if any fragments are lost [IP:9].",
      "ja": "TCPセグメントサイズの選択はパフォーマンスに強い影響を持っています。より大きなセグメントは、複数のデータバイトを超えるヘッダサイズごとのデータグラム処理オーバーヘッドを償却することによりスループットを向上させます。パケットは、それがIPフラグメンテーションが発生するほど大きい場合の任意の断片が失われた場合しかし、効率が急激に低下[IP：9]。"
    },
    {
      "indent": 3,
      "text": "Since it is guaranteed that any IP datagram that is larger than the MTU of the connected network will have to be fragmented to be received, implementations ignore the \"greater than or\" part of \"SHOULD be greater than or equal to the MTU of the connected network(s)\". Thus, the MSS value to be sent in an MSS option must be less than or equal to:",
      "ja": "それは、接続されたネットワークのMTUよりも大きい任意のIPデータグラムを受信するように断片化されなければならないことが保証されるので、実装は無視する「の部分がより大きいかまたは接続のMTUに等しくなければならない「またはより大きい」ネットワーク（S）」。したがって、MSSオプションで送信されるMSS値は、以下に等しくなければなりません。"
    },
    {
      "indent": 6,
      "text": "EMTU_R - FixedIPhdrsize - FixedTCPhdrsize",
      "ja": "EMTU_R  -  FixedIPhdrsize  -  FixedTCPhdrsize"
    },
    {
      "indent": 3,
      "text": "where FixedTCPhdrsize is 20, and FixedIPhdrsize is 20 for IPv4 and 40 for IPv6.",
      "ja": "FixedTCPhdrsizeは20であり、そしてFixedIPhdrsizeは、IPv4 20とIPv6の40です。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "David Borman Quantum Corporation Mendota Heights, MN 55120",
      "ja": "デビッド・ボーマンQuantum社メンドタハイツ、ミネソタ55120"
    },
    {
      "indent": 3,
      "text": "EMail: david.borman@quantum.com",
      "ja": "メールアドレス：david.borman@quantum.com"
    }
  ]
}