{
  "title": {
    "text": "RFC 6296 - IPv6-to-IPv6 Network Prefix Translation",
    "ja": "RFC 6296 - IPv6のツーIPv6ネットワークプレフィックス翻訳"
  },
  "number": 6296,
  "created_at": "2019-11-01 23:49:38.179311+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      M. Wasserman\nRequest for Comments: 6296                             Painless Security\nCategory: Experimental                                          F. Baker\nISSN: 2070-1721                                            Cisco Systems\n                                                               June 2011",
      "raw": true
    },
    {
      "indent": 16,
      "text": "IPv6-to-IPv6 Network Prefix Translation",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "抽象"
    },
    {
      "indent": 3,
      "text": "This document describes a stateless, transport-agnostic IPv6-to-IPv6 Network Prefix Translation (NPTv6) function that provides the address-independence benefit associated with IPv4-to-IPv4 NAT (NAPT44) and provides a 1:1 relationship between addresses in the \"inside\" and \"outside\" prefixes, preserving end-to-end reachability at the network layer.",
      "ja": "のアドレスとの間の1の関係：この文書は、IPv4からIPv4 NAT（NAPT44）に関連付けられたアドレス独立の利点を提供し、1を提供するステートレス、トランスポートに依存しないIPv6の対IPv6ネットワークプレフィックス変換（NPTv6）機能について説明します「内側」及び「外側」プレフィックス、ネットワーク層でのエンドツーエンドの到達可能性を維持します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "このメモのステータス"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for examination, experimental implementation, and evaluation.",
      "ja": "このドキュメントはインターネット標準化過程仕様ではありません。それは、検査、実験的な実装、および評価のために公開されています。"
    },
    {
      "indent": 3,
      "text": "This document defines an Experimental Protocol for the Internet community. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "ja": "この文書は、インターネットコミュニティのためにExperimentalプロトコルを定義します。このドキュメントはインターネットエンジニアリングタスクフォース（IETF）の製品です。これは、IETFコミュニティの総意を表しています。これは、公開レビューを受けており、インターネットエンジニアリング運営グループ（IESG）によって公表のために承認されています。 IESGによって承認されていないすべての文書がインターネットStandardのどんなレベルの候補です。 RFC 5741のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6296.",
      "ja": "このドキュメントの現在の状態、任意の正誤表、そしてどのようにフィードバックを提供するための情報がhttp://www.rfc-editor.org/info/rfc6296で取得することができます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2011 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（C）2011 IETF信託とドキュメントの作成者として特定の人物。全著作権所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "ja": "この文書では、BCP 78と、この文書の発行日に有効なIETFドキュメント（http://trustee.ietf.org/license-info）に関連IETFトラストの法律の規定に従うものとします。彼らは、この文書に関してあなたの権利と制限を説明するように、慎重にこれらの文書を確認してください。コードコンポーネントは、トラスト法規定のセクションで説明4.eおよび簡体BSDライセンスで説明したように、保証なしで提供されているよう簡体BSDライセンスのテキストを含める必要があり、この文書から抽出されました。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  What is Address Independence?  . . . . . . . . . . . . . .  4\n  1.2.  NPTv6 Applicability  . . . . . . . . . . . . . . . . . . .  5\n  1.3.  Requirements Terminology . . . . . . . . . . . . . . . . .  7\n2.  NPTv6 Overview . . . . . . . . . . . . . . . . . . . . . . . .  7\n  2.1.  NPTv6: The Simplest Case . . . . . . . . . . . . . . . . .  7\n  2.2.  NPTv6 between Peer Networks  . . . . . . . . . . . . . . .  8\n  2.3.  NPTv6 Redundancy and Load Sharing  . . . . . . . . . . . .  9\n  2.4.  NPTv6 Multihoming  . . . . . . . . . . . . . . . . . . . .  9\n  2.5.  Mapping with No Per-Flow State . . . . . . . . . . . . . . 10\n  2.6.  Checksum-Neutral Mapping . . . . . . . . . . . . . . . . . 10\n3.  NPTv6 Algorithmic Specification  . . . . . . . . . . . . . . . 11\n  3.1.  NPTv6 Configuration Calculations . . . . . . . . . . . . . 11\n  3.2.  NPTv6 Translation, Internal Network to External Network  . 12\n  3.3.  NPTv6 Translation, External Network to Internal Network  . 12\n  3.4.  NPTv6 with a /48 or Shorter Prefix . . . . . . . . . . . . 12\n  3.5.  NPTv6 with a /49 or Longer Prefix  . . . . . . . . . . . . 13\n  3.6.  /48 Prefix Mapping Example . . . . . . . . . . . . . . . . 13\n  3.7.  Address Mapping for Longer Prefixes  . . . . . . . . . . . 14\n4.  Implications of Network Address Translator Behavioral\n    Requirements . . . . . . . . . . . . . . . . . . . . . . . . . 15\n  4.1.  Prefix Configuration and Generation  . . . . . . . . . . . 15\n  4.2.  Subnet Numbering . . . . . . . . . . . . . . . . . . . . . 15\n  4.3.  NAT Behavioral Requirements  . . . . . . . . . . . . . . . 15\n5.  Implications for Applications  . . . . . . . . . . . . . . . . 16\n  5.1.  Recommendation for Network Planners Considering Use of\n        NPTv6 Translation  . . . . . . . . . . . . . . . . . . . . 17\n  5.2.  Recommendations for Application Writers  . . . . . . . . . 18\n  5.3.  Recommendation for Future Work . . . . . . . . . . . . . . 18\n6.  A Note on Port Mapping . . . . . . . . . . . . . . . . . . . . 18\n7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 19\n8.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 19\n9.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n  9.1.  Normative References . . . . . . . . . . . . . . . . . . . 20\n  9.2.  Informative References . . . . . . . . . . . . . . . . . . 20\nAppendix A.  Why GSE?  . . . . . . . . . . . . . . . . . . . . . . 23\nAppendix B.  Verification Code . . . . . . . . . . . . . . . . . . 25",
      "raw": true
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1.はじめに"
    },
    {
      "indent": 3,
      "text": "This document describes a stateless IPv6-to-IPv6 Network Prefix Translation (NPTv6) function, designed to provide address independence to the edge network. It is transport-agnostic with respect to transports that do not checksum the IP header, such as SCTP, and to transports that use the TCP/UDP/DCCP (Datagram Congestion Control Protocol) pseudo-header and checksum [RFC1071].",
      "ja": "この文書では、エッジネットワークへのアドレスの独立性を提供するように設計さステートレスIPv6のツーIPv6ネットワークプレフィックス変換（NPTv6）機能について説明します。そのようなSCTPないよう、チェックサム、IPヘッダーを行うトランスポートに、およびTCP / UDP / DCCP（データグラム輻輳制御プロトコル）疑似ヘッダチェックサム[RFC1071]を使用するトランスポートに対してトランスポートに依存しないです。"
    },
    {
      "indent": 3,
      "text": "For reasons discussed in [RFC2993] and Section 5, the IETF does not recommend the use of Network Address Translation technology for IPv6. Where translation is implemented, however, this specification provides a mechanism that has fewer architectural problems than merely implementing a traditional stateful Network Address Translator in an IPv6 environment. It also provides a useful alternative to the complexities and costs imposed by multihoming using provider-independent addressing and the routing and network management issues of overlaid ISP address space. Some problems remain, however. The reader should consider the alternatives suggested in [RFC4864] and the considerations of [RFC5902] for improved approaches.",
      "ja": "[RFC2993]、セクション5で述べた理由から、IETFは、IPv6のネットワークアドレス変換技術の使用を推奨していません。翻訳が実装されている場合は、しかし、この仕様は、単にIPv6環境で伝統的なステートフルネットワークアドレス変換を実行するよりも少ない建築問題を抱えているメカニズムを提供します。また、アドレス指定のプロバイダに依存しないとオーバーレイISPのアドレス空間のルーティングとネットワーク管理の問題を使用してマルチホーミングによって課される複雑さとコストに有用な代替を提供します。いくつかの問題は、しかし、残っています。読者が改善されたアプローチのために[RFC4864]で提案されている選択肢と[RFC5902]の考慮事項を検討すべきです。"
    },
    {
      "indent": 3,
      "text": "The stateless approach described in this document has several ramifications:",
      "ja": "この文書で説明するステートレスなアプローチは、いくつかの波及効果があります。"
    },
    {
      "indent": 3,
      "text": "o Any security benefit that NAPT44 might offer is not present in NPTv6, necessitating the use of a firewall to obtain those benefits if desired. An example of such a firewall is described in [RFC6092].",
      "ja": "O NAPT44が提供する可能性のあるセキュリティ上の利点は、必要に応じて、これらの利点を得るために、ファイアウォールを使用する必要、NPTv6に存在しません。そのようなファイアウォールの例は、[RFC6092]に記載されています。"
    },
    {
      "indent": 3,
      "text": "o End-to-end reachability is preserved, although the address used \"inside\" the edge network differs from the address used \"outside\" the edge network. This has implications for application referrals and other uses of Internet layer addresses.",
      "ja": "「内部」エッジネットワークに使用されるアドレスがアドレスに使用される「外側」エッジネットワークは異なるもののOエンドツーエンドの到達可能性は、保存されます。これは、アプリケーションの紹介とインターネット層アドレスの他の用途のために意味を持っています。"
    },
    {
      "indent": 3,
      "text": "o If there are multiple identically configured prefix translators between two networks, there is no need for them to exchange dynamic state, as there is no dynamic state -- the algorithmic translation will be identical across each of them. The network can therefore asymmetrically route, load share, and fail-over among them without issue.",
      "ja": "2つのネットワーク間の複数の同一構成プレフィックス翻訳が存在する場合動的な状態が存在しないようにO、それらが動的な状態を交換する必要がなく、 - アルゴリズムの翻訳は、それらのそれぞれで同一であろう。ネットワークすることができますので、非対称ルーティング、ロードシェア、およびフェイルオーバそれらの間で問題なく。"
    },
    {
      "indent": 3,
      "text": "o Since translation is 1:1 at the network layer, there is no need to modify port numbers or other transport parameters.",
      "ja": "翻訳は1であるので、O：ネットワーク層で1、ポート番号、または他のトランスポートパラメータを変更する必要はありません。"
    },
    {
      "indent": 3,
      "text": "o TCP sessions that authenticate peers using the TCP Authentication Option [RFC5925] cannot have their addresses translated, as the addresses are used in the calculation of the Message Authentication Code. This consideration applies in general to any",
      "ja": "アドレスはメッセージ認証コードの計算に使用されるTCP認証オプションを使用してピアを認証OのTCPセッション[RFC5925]は、それらのアドレスを変換することはできません。この考慮事項は、いずれにも一般的に適用されます"
    },
    {
      "indent": 6,
      "text": "UNilateral Self-Address Fixing (UNSAF) [RFC3424] Protocol, which the IAB recommends against the deployment of in an environment that changes Internet addresses.",
      "ja": "IABは、インターネットアドレスを変更した環境での展開に対して推奨しています一方的な自己アドレス固定（UNSAF）[RFC3424]プロトコル、。"
    },
    {
      "indent": 3,
      "text": "o Applications using the Internet Key Exchange Protocol Version 2 (IKEv2) [RFC5996] should, at least in theory, detect the presence of the translator; while no NAT traversal solution is required, [RFC5996] would require such sessions to use UDP.",
      "ja": "インターネット鍵交換プロトコルバージョン2（IKEv2のに）[RFC5996]を使用してOアプリケーションは、少なくとも理論的には、翻訳者の存在を検出する必要があります。何のNATトラバーサルソリューションが必要とされない一方で、[RFC5996]はUDPを使用するために、このようなセッションを必要とします。"
    },
    {
      "indent": 0,
      "text": "1.1. What is Address Independence?",
      "section_title": true,
      "ja": "1.1。住所の独立とは何ですか？"
    },
    {
      "indent": 3,
      "text": "For the purposes of this document, IPv6 address independence consists of the following set of properties:",
      "ja": "このドキュメントの目的のために、IPv6アドレスの独立性は、プロパティの次のセットで構成されています。"
    },
    {
      "indent": 3,
      "text": "From the perspective of the edge network:",
      "ja": "エッジネットワークの観点から："
    },
    {
      "indent": 6,
      "text": "* The IPv6 addresses used inside the local network (for interfaces, access lists, and logs) do not need to be renumbered if the global prefix(es) assigned for use by the edge network are changed.",
      "ja": "エッジネットワークで使用するために割り当てられたグローバルプレフィックス（複数可）が変更された場合*（インターフェイス、アクセスリスト、およびログのための）ローカルネットワーク内で使用IPv6アドレスの番号が変更する必要はありません。"
    },
    {
      "indent": 6,
      "text": "* The IPv6 addresses used inside the edge network (for interfaces, access lists, and logs) or within other upstream networks (such as when multihoming) do not need to be renumbered when a site adds, drops, or changes upstream networks.",
      "ja": "サイトは、追加ドロップ、または上流のネットワークを変更したとき*（インターフェイス、アクセスリスト、およびログの）エッジネットワーク内または（例えばマルチホーム場合など）他の上流ネットワーク内で使用されるIPv6アドレスの付け替えする必要はありません。"
    },
    {
      "indent": 6,
      "text": "* It is not necessary for an administration to convince an upstream network to route its internal IPv6 prefixes or for it to advertise prefixes derived from other upstream networks into it.",
      "ja": "投与ルート、内部のIPv6プレフィックスを上流ネットワークを説得するために、またはそれに他の上流ネットワークに由来するプレフィックスを広告するため*必要はありません。"
    },
    {
      "indent": 6,
      "text": "* Unless it wants to optimize routing between multiple upstream networks in the process of multihoming, there is no need for a BGP exchange with the upstream network.",
      "ja": "それはマルチホーミングのプロセスで複数の上流ネットワーク間のルーティングを最適化したい場合を除き*、上流ネットワークとのBGP交換の必要はありません。"
    },
    {
      "indent": 3,
      "text": "From the perspective of the upstream network:",
      "ja": "上流ネットワークの観点から："
    },
    {
      "indent": 6,
      "text": "* IPv6 addresses used by the edge network are guaranteed to have a provider-allocated prefix, eliminating the need and concern for BCP 38 [RFC2827] ingress filtering and the advertisement of customer-specific prefixes.",
      "ja": "エッジネットワークで使用される* IPv6アドレスは、BCP 38 [RFC2827]イングレスフィルタリング及び顧客固有のプレフィックスの広告のための必要性および懸念を排除し、プロバイダに割り当てられたプレフィックスを持つことが保証されます。"
    },
    {
      "indent": 3,
      "text": "Thus, address independence has ramifications for the edge network, networks it directly connects with (especially its upstream networks), and the Internet as a whole. The desire for address independence has been a primary driver for IPv4 NAT deployment in medium- to large-sized enterprise networks, including NAT deployments in enterprises that have plenty of IPv4 provider-independent address space (from IPv4 \"swamp space\"). It has also been a driver for edge networks to become members of Regional Internet Registry (RIR) communities, seeking to obtain BGP Autonomous System Numbers and provider-independent prefixes, and as a result has been one of the drivers of the explosion of the IPv4 route table. Service providers have stated that the lack of address independence from their customers has been a negative incentive to deployment, due to the impact of customer routing expected in their networks.",
      "ja": "したがって、アドレス独立性は、全体として、エッジネットワークの波及効果、それは直接的に（特にその上流のネットワーク）に接続ネットワーク、およびインターネットを持っています。アドレスの独立性への欲求は、IPv4プロバイダに依存しないアドレス空間（IPv4から「沼空間」）の多くを持っている企業ではNATの展開など、大型の企業ネットワークへの中長期でのIPv4 NATを展開するための主な要因となっています。また、エッジネットワークは、BGP自律システム番号とプロバイダ独立プレフィックスを取得しようと、地域インターネットレジストリ（RIR）コミュニティのメンバーになるためのドライバであった、その結果としてのIPv4の爆発のドライバの一つとなっていますルートテーブル。サービスプロバイダは、顧客からのアドレスの独立性の欠如は、自社のネットワークに期待される顧客のルーティングの影響により、展開に負のインセンティブとなっていると述べました。"
    },
    {
      "indent": 3,
      "text": "The Local Network Protection [RFC4864] document discusses a related concept called \"Address Autonomy\" as a benefit of NAPT44. [RFC4864] indicates that address autonomy can be achieved by the simultaneous use of global addresses on all nodes within a site that need external connectivity and Unique Local Addresses (ULAs) [RFC4193] for all internal communication. However, this solution fails to meet the requirement for address independence, because if an ISP renumbering event occurs, all of the hosts, routers, DHCP servers, Access Control Lists (ACLs), firewalls, and other internal systems that are configured with global addresses from the ISP will need to be renumbered before global connectivity is fully restored.",
      "ja": "ローカルネットワーク保護[RFC4864]ドキュメントはNAPT44の特典として「住所自治」と呼ばれる関連する概念について説明します。 [RFC4864]は、アドレスの自律性は、すべての内部通信のための外部接続性とユニークローカルアドレス（ULAs）[RFC4193]を必要とするサイト内のすべてのノード上のグローバルアドレスを同時に使用することによって達成することができることを示しています。しかし、このソリューションは、ISPのリナンバリングイベントは、発生した場合ので、アドレスの独立性の要件を満たすために失敗したグローバルアドレスで構成されているホスト、ルータ、DHCPサーバ、アクセス制御リスト（ACL）、ファイアウォール、およびその他の内部システムのすべてISPからグローバルな接続が完全に復元される前に番号を付け直すことが必要になります。"
    },
    {
      "indent": 3,
      "text": "The use of IPv6 provider-independent (PI) addresses has also been suggested as a means to fulfill the address-independence requirement. However, this solution requires that an enterprise qualify to receive a PI assignment and persuade its ISP to install specific routes for the enterprise's PI addresses. There are a number of practical issues with this approach, especially if there is a desire to route to a number of geographically and topologically diverse sites, which can sometimes involve coordinating with several ISPs to route portions of a single PI prefix. These problems have caused numerous enterprises with plenty of IPv4 swamp space to choose to use IPv4 NAT for part, or substantially all, of their internal network instead of using their provider-independent address space.",
      "ja": "IPv6のプロバイダに依存しない（PI）アドレスの使用は、アドレス・独立性の要件を満たすための手段として提案されています。しかし、このソリューションは、企業がPIの割り当てを受け、企業のPIアドレスの特定のルートをインストールするには、そのISPを説得するために資格をする必要があります。実用的な問題の数は時々単一PIプレフィックスのルート部分には、いくつかのISPとの調整を含むことができ、地理的およびトポロジ的に多様なサイトの数、へのルートに要望がある場合は特に、このアプローチであります。これらの問題は、内部ネットワークの代わりに、そのプロバイダに依存しないアドレス空間を使用するのでは、実質的にすべての部分のためのIPv4 NATを使用することを選択したIPv4沼スペースをたっぷりと数多くの企業を引き起こし、またはしています。"
    },
    {
      "indent": 0,
      "text": "1.2. NPTv6 Applicability",
      "section_title": true,
      "ja": "1.2。 NPTv6適用性"
    },
    {
      "indent": 3,
      "text": "NPTv6 provides a simple and compelling solution to meet the address-independence requirement in IPv6. The address-independence benefit stems directly from the translation function of the network prefix translator. To avoid as many of the issues associated with NAPT44 as possible, NPTv6 is defined to include a two-way, checksum-neutral, algorithmic translation function, and nothing else.",
      "ja": "NPTv6は、IPv6のアドレス-独立性の要件を満たすために、シンプルで魅力的なソリューションを提供します。アドレス-独立性の利点は、ネットワークプレフィックス翻訳者の翻訳機能から直接生じます。できるだけNAPT44に関連する問題の多くを回避するために、NPTv6は、双方向、チェックサム・ニュートラル、アルゴリズムの翻訳機能、および他には何が含まれるように定義されています。"
    },
    {
      "indent": 3,
      "text": "The fact that NPTv6 does not map ports and is checksum-neutral avoids the need for an NPTv6 Translator to rewrite transport layer headers. This makes it feasible to deploy new or improved transport layer protocols without upgrading NPTv6 Translators. Similarly, since NPTv6 does not rewrite transport layer headers, NPTv6 will not interfere with encryption of the full IP payload in many cases.",
      "ja": "NPTv6は、ポートをマッピングし、チェックサム中立であるしないという事実は、トランスポート層ヘッダを書き換えるNPTv6翻訳の必要性を回避します。これは、実現可能なNPTv6翻訳をアップグレードせずに新規または改善されたトランスポート層プロトコルを展開することができます。 NPTv6は、トランスポート層のヘッダを書き換えていないので、同様に、NPTv6は、多くの場合、完全なIPペイロードの暗号化を妨げることはありません。"
    },
    {
      "indent": 3,
      "text": "The default NPTv6 address-mapping mechanism is purely algorithmic, so NPTv6 translators do not need to maintain per-node or per-connection state, allowing deployment of more robust and adaptive networks than can be deployed using NAPT44. Since the default NPTv6 mapping can be performed in either direction, it does not interfere with inbound connection establishment, thus allowing internal nodes to participate in direct Peer-to-Peer applications without the application layer overhead one finds in many IPv4 Peer-to-Peer applications.",
      "ja": "NPTv6の翻訳者がNAPT44を使用して展開することができるよりも堅牢かつ適応ネットワークの展開を可能にし、ノードごとまたはごとの接続状態を維持する必要はありませんので、デフォルトNPTv6アドレスマッピングメカニズムは、純粋なアルゴリズムです。デフォルトNPTv6マッピングがどちらの方向に行うことができるので、このように内部ノードが一つの多くのIPv4ピア・ツー・ピアで検出アプリケーション層のオーバーヘッドなしで直接ピアツーピアアプリケーションに参加することができ、インバウンド接続の確立を妨害しませんアプリケーション。"
    },
    {
      "indent": 3,
      "text": "Although NPTv6 compares favorably to NAPT44 in several ways, it does not eliminate all of the architectural problems associated with IPv4 NAT, as described in [RFC2993]. NPTv6 involves modifying IP headers in transit, so it is not compatible with security mechanisms, such as the IPsec Authentication Header, that provide integrity protection for the IP header. NPTv6 may interfere with the use of application protocols that transmit IP addresses in the application-specific portion of the IP datagram. These applications currently require Application Layer Gateways (ALGs) to work correctly through NAPT44 devices, and similar ALGs may be required for these applications to work through NPTv6 Translators. The use of separate internal and external prefixes creates complexity for DNS deployment, due to the desire for internal nodes to communicate with other internal nodes using internal addresses, while external nodes need to obtain external addresses to communicate with the same nodes. This frequently results in the deployment of \"split DNS\", which may add complexity to network configuration.",
      "ja": "NPTv6はいくつかの方法でNAPT44に遜色が[RFC2993]に記載されているように、それは、IPv4のNATに関連したアーキテクチャの問題の全てを排除するものではありません。 NPTv6は、輸送中にIPヘッダを変更することを含むので、IPヘッダの完全性保護を提供するようにIPsec認証ヘッダなどのセキュリティメカニズムと互換性がありません。 NPTv6は、IPデータグラムのアプリケーション固有の部分にIPアドレスを送信するアプリケーションプロトコルの使用を妨害する可能性があります。これらのアプリケーションは、現在NAPT44デバイスを介して正しく動作するアプリケーションレイヤゲートウェイ（ALG）を必要とし、これらのアプリケーションはNPTv6翻訳を介して動作するための同様のALGが必要になることがあります。別の内部と外部の接頭辞の使用は、外部のノードが同一のノードと通信するための外部アドレスを取得する必要がありながら、内部ノードは、内部アドレスを使用して、他の内部ノードと通信するための欲求に、DNS展開の複雑さを作成します。これは、頻繁にネットワーク構成を複雑にする「スプリットDNS」の展開になります。"
    },
    {
      "indent": 3,
      "text": "The choice of address within the edge network bears consideration. One could use a ULA, which maximizes address independence. That could also be considered a misuse of the ULA; if the expectation is that a ULA prevents access to a system from outside the range of the ULA, NPTv6 overrides that. On the other hand, the administration is aware that it has made that choice and could deploy a second ULA for the purpose of privacy if it desired; the only prefix that will be translated is one that has an NPTv6 Translator configured to translate to or from it. Also, using any other global-scope address format makes one either obtain a PI prefix or be at the mercy of the agency from which it was allocated.",
      "ja": "エッジネットワーク内のアドレスの選択が検討を負いません。一つは、アドレスの独立性を最大化するULAを、使用することができます。それはまた、ULAの誤用と考えられます。期待がULAは、ULAの範囲外からシステムへのアクセスを防止することである場合、NPTv6はそれを上書きします。一方、政権は、それがその選択をしたし、それが必要な場合、プライバシーのために二ULAを展開できることを認識しています。翻訳される唯一のプレフィックスはNPTv6翻訳者へのまたはそれから変換するように構成されたものです。また、他のグローバルスコープのアドレス形式を使用して、1つは、いずれかのPIの接頭辞を取得したり、それが割り当てられていた、そこから機関のなすがままになります。"
    },
    {
      "indent": 3,
      "text": "There are significant technical impacts associated with the deployment of any prefix translation mechanism, including NPTv6, and we strongly encourage anyone who is considering the implementation or deployment of NPTv6 to read [RFC4864] and [RFC5902], and to carefully consider the alternatives described in that document, some of which may cause fewer problems than NPTv6.",
      "ja": "そこNPTv6を含む任意の接頭語翻訳機構の展開に関連した重要な技術的な影響があり、私たちは強く、[RFC4864]と[RFC5902]を読み取るための実装やNPTv6の展開を検討している人を奨励し、慎重に説明代替案を検討しますその文書には、そのうちのいくつかは、NPTv6よりも少ない問題が発生することがあります。"
    },
    {
      "indent": 0,
      "text": "1.3. Requirements Terminology",
      "section_title": true,
      "ja": "1.3。要件の用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "ja": "この文書のキーワード \"MUST\"、 \"MUST NOT\"、 \"REQUIRED\"、、、、 \"べきではない\" \"べきである\" \"ないもの\" \"ものとし\"、 \"推奨\"、 \"MAY\"、および \"OPTIONAL\" はありますRFC 2119 [RFC2119]に記載されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "2. NPTv6 Overview",
      "section_title": true,
      "ja": "2. NPTv6概要"
    },
    {
      "indent": 3,
      "text": "NPTv6 may be implemented in an IPv6 router to map one IPv6 address prefix to another IPv6 prefix as each IPv6 datagram transits the router. A router that implements an NPTv6 prefix translation function is referred to as an NPTv6 Translator.",
      "ja": "NPTv6は、各IPv6データグラムがルータを通過するように、別のIPv6プレフィックスに1つのIPv6アドレスプレフィックスをマップするためのIPv6ルータに実装されてもよいです。 NPTv6プレフィックス変換機能を実装して、ルータがNPTv6翻訳と呼ばれています。"
    },
    {
      "indent": 0,
      "text": "2.1. NPTv6: The Simplest Case",
      "section_title": true,
      "ja": "2.1。 NPTv6：最も単純なケース"
    },
    {
      "indent": 3,
      "text": "In its simplest form, an NPTv6 Translator interconnects two network links, one of which is an \"internal\" network link attached to a leaf network within a single administrative domain and the other of which is an \"external\" network with connectivity to the global Internet. All of the hosts on the internal network will use addresses from a single, locally routed prefix, and those addresses will be translated to/from addresses in a globally routable prefix as IP datagrams transit the NPTv6 Translator. The lengths of these two prefixes will be functionally the same; if they differ, the longer of the two will limit the ability to use subnets in the shorter.",
      "ja": "最も単純な形式では、NPTv6トランスレータは、単一の管理ドメイン内の葉のネットワークに接続されている「内部」ネットワークリンクやそのほかのあるグローバルなインターネットへの接続と「外部」ネットワークであるそのうちの一つ、2つのネットワークリンクを、相互接続します。内部ネットワーク上のホストの全ては、単一のローカルルーティングプレフィックスからアドレスを使用し、IPがNPTv6翻訳トランジットをデータグラムとして、これらのアドレスは、グローバルにルーティング可能なプレフィックスのアドレスへ/から変換されます。これら2つのプレフィックスの長さは、機能的に同じになります。それらが異なる場合は、2の長が短い中でサブネットを使用する能力を制限することになります。"
    },
    {
      "indent": 15,
      "text": "External Network:  Prefix = 2001:0DB8:0001:/48\n    --------------------------------------\n                      |\n                      |\n               +-------------+\n               |     NPTv6   |\n               |  Translator |\n               +-------------+\n                      |\n                      |\n    --------------------------------------\nInternal Network:  Prefix = FD01:0203:0405:/48",
      "raw": true
    },
    {
      "indent": 23,
      "text": "Figure 1: A Simple Translator",
      "ja": "図1：単純な翻訳"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an NPTv6 Translator attached to two networks. In this example, the internal network uses IPv6 Unique Local Addresses (ULAs) [RFC4193] to represent the internal IPv6 nodes, and the external network uses globally routable IPv6 addresses to represent the same nodes.",
      "ja": "図1は、2つのネットワークに接続NPTv6翻訳を示します。この例では、内部ネットワークは、内部IPv6ノードを表すためのIPv6ユニークローカルアドレス（ULAs）[RFC4193]を使用し、外部ネットワークはIPv6が同一のノードを表すためにグローバルにルーティング可能なアドレスを使用します。"
    },
    {
      "indent": 3,
      "text": "When an NPTv6 Translator forwards datagrams in the \"outbound\" direction, from the internal network to the external network, NPTv6 overwrites the IPv6 source prefix (in the IPv6 header) with a corresponding external prefix. When datagrams are forwarded in the \"inbound\" direction, from the external network to the internal network, the IPv6 destination prefix is overwritten with a corresponding internal prefix. Using the prefixes shown in the diagram above, as an IP datagram passes through the NPTv6 Translator in the outbound direction, the source prefix (FD01:0203:0405:/48) will be overwritten with the external prefix (2001:0DB8:0001:/48). In an inbound datagram, the destination prefix (2001:0DB8:0001:/48) will be overwritten with the internal prefix (FD01:0203:0405:/48). In both cases, it is the local IPv6 prefix that is overwritten; the remote IPv6 prefix remains unchanged. Nodes on the internal network are said to be \"behind\" the NPTv6 Translator.",
      "ja": "NPTv6翻訳は、内部ネットワークから外部ネットワークに、「アウトバウンド」方向にデータグラムを転送する場合、NPTv6は、対応する外部接頭辞（IPv6ヘッダ内の）IPv6ソースプレフィックスを上書きします。データグラムは、外部ネットワークから内部ネットワークに、「インバウンド」方向に転送される場合、IPv6宛先プレフィックスは、対応する内部プレフィックスを上書きします。 IPデータグラムは、アウトバウンド方向にNPTv6翻訳を通過する際に、上記の図に示されているプレフィックスを用いて、ソース・プレフィックス（FD01：0203：/ 48：0405）2001外部プレフィックス（で上書きされます：0DB8：0001： / 48）。インバウンドデータグラムでは、宛先プレフィックス（2001：0001：0DB8 / 48）は、内部プレフィックスを上書きする（0405：：：0203 FD01 / 48）。どちらの場合も、それが上書きされますローカルIPv6プレフィックスです。リモートのIPv6プレフィックスは変更されません。内部ネットワーク上のノードはNPTv6トランスレータ「後ろ」であると言われています。"
    },
    {
      "indent": 0,
      "text": "2.2. NPTv6 between Peer Networks",
      "section_title": true,
      "ja": "2.2。ピア・ネットワークの間NPTv6"
    },
    {
      "indent": 3,
      "text": "NPTv6 can also be used between two private networks. In these cases, both networks may use ULA prefixes, with each subnet in one network mapped into a corresponding subnet in the other network, and vice versa. Or, each network may use ULA prefixes for internal addressing and global unicast addresses on the other network.",
      "ja": "NPTv6また、2つのプライベートネットワーク間で使用することができます。これらのケースでは、両方のネットワークは、対応する他のネットワークサブネット、およびその逆にマッピング一つのネットワーク内の各サブネットに、ULAプリフィックスを使用してもよいです。または、各ネットワークが他のネットワーク上のアドレス指定、内部およびグローバルユニキャストアドレスのためのULAプリフィックスを使用してもよいです。"
    },
    {
      "indent": 14,
      "text": "    Internal Prefix = FD01:4444:5555:/48\n    --------------------------------------\n         V            |      External Prefix\n         V            |      2001:0DB8:6666:/48\n         V        +---------+      ^\n         V        |  NPTv6  |      ^\n         V        |  Device |      ^\n         V        +---------+      ^\nExternal Prefix       |            ^\n2001:0DB8:0001:/48    |            ^\n    --------------------------------------\n    Internal Prefix = FD01:0203:0405:/48",
      "raw": true
    },
    {
      "indent": 15,
      "text": "Figure 2: Flow of Information in Translation",
      "ja": "図2：翻訳における情報の流れ"
    },
    {
      "indent": 0,
      "text": "2.3. NPTv6 Redundancy and Load Sharing",
      "section_title": true,
      "ja": "2.3。 NPTv6冗長性とロードシェアリング"
    },
    {
      "indent": 3,
      "text": "In some cases, more than one NPTv6 Translator may be attached to a network, as shown in Figure 3. In such cases, NPTv6 Translators are configured with the same internal and external prefixes. Since there is only one translation, even though there are multiple translators, they map only one external address (prefix and Interface Identifier (IID)) to the internal address.",
      "ja": "いくつかの場合において、このような場合には、図3に示すように、複数のNPTv6翻訳は、ネットワークに接続されてもよい、NPTv6翻訳は、同一の内部および外部のプレフィックスで構成されています。唯一の1つの翻訳があるので、複数の翻訳者があるにもかかわらず、彼らは内部アドレスに一つだけの外部アドレス（プレフィックスとインタフェース識別子（IID））をマップします。"
    },
    {
      "indent": 15,
      "text": "External Network:  Prefix = 2001:0DB8:0001:/48\n    --------------------------------------\n           |                      |\n           |                      |\n    +-------------+        +-------------+\n    |  NPTv6      |        |  NPTv6      |\n    |  Translator |        |  Translator |\n    |   #1        |        |   #2        |\n    +-------------+        +-------------+\n           |                      |\n           |                      |\n    --------------------------------------\nInternal Network:  Prefix = FD01:0203:0405:/48",
      "raw": true
    },
    {
      "indent": 22,
      "text": "Figure 3: Parallel Translators",
      "ja": "図3：パラレル翻訳者"
    },
    {
      "indent": 0,
      "text": "2.4. NPTv6 Multihoming",
      "section_title": true,
      "ja": "2.4。 NPTv6マルチホーミング"
    },
    {
      "indent": 9,
      "text": "   External Network #1:          External Network #2:\nPrefix = 2001:0DB8:0001:/48    Prefix = 2001:0DB8:5555:/48\n---------------------------    --------------------------\n                |                      |\n                |                      |\n         +-------------+        +-------------+\n         |  NPTv6      |        |  NPTv6      |\n         |  Translator |        |  Translator |\n         |   #1        |        |   #2        |\n         +-------------+        +-------------+\n                |                      |\n                |                      |\n         --------------------------------------\n     Internal Network:  Prefix = FD01:0203:0405:/48",
      "raw": true
    },
    {
      "indent": 6,
      "text": "Figure 4: Parallel Translators with Different Upstream Networks",
      "ja": "図4：異なるアップストリームネットワークスとパラレル翻訳者"
    },
    {
      "indent": 3,
      "text": "When multihoming, NPTv6 Translators are attached to an internal network, as shown in Figure 4, but are connected to different external networks. In such cases, NPTv6 Translators are configured with the same internal prefix but different external prefixes. Since there are multiple translations, they map multiple external addresses (prefix and IID) to the common internal address. A system within the edge network is unable to determine which external address it is using apart from services such as Session Traversal Utilities for NAT (STUN) [RFC5389].",
      "ja": "マルチホーミング場合、NPTv6翻訳を図4に示すように、内部ネットワークに接続されているが、異なる外部ネットワークに接続されています。このような場合、NPTv6翻訳は、同じ内部プレフィックスが異なる外部プレフィックスで構成されています。複数の翻訳があるので、彼らは共通の内部アドレスに複数の外部アドレス（接頭辞とIID）をマップします。エッジネットワーク内のシステムは、そのようなNATのためのセッショントラバーサルユーティリティ（STUN）[RFC5389]などのサービスとは別に使用される外部のどのアドレスを決定することができません。"
    },
    {
      "indent": 3,
      "text": "Multihoming in this sense has one negative feature as compared with multihoming with a provider-independent address: when routes change between NPTv6 Translators, the translated prefix can change since the upstream network changes. This causes sessions and referrals dependent on it to fail as well. This is not expected to be a major issue, however, in networks where routing is generally stable.",
      "ja": "ルートがNPTv6翻訳の間で変化するとき、翻訳された接頭辞は、上流ネットワーク変化するために変更することができる：この意味でのマルチホーミングプロバイダ非依存アドレスとマルチホーミングと比較して1つの負の特徴を有しています。これは、同様に失敗することで、セッションや紹介が依存が発生します。これは、ルーティングは、一般的に安定しているネットワークでは、しかし、大きな問題ではないと予想されます。"
    },
    {
      "indent": 0,
      "text": "2.5. Mapping with No Per-Flow State",
      "section_title": true,
      "ja": "2.5。ノーごとのフロー状態とのマッピング"
    },
    {
      "indent": 3,
      "text": "When NPTv6 is used as described in this document, no per-node or per-flow state is maintained in the NPTv6 Translator. Both inbound and outbound datagrams are translated algorithmically, using only information found in the IPv6 header. Due to this property, NPTv6's two-way, algorithmic address mapping can support both outbound and inbound connection establishment without the need for maintenance of mapping state or for state-priming or rendezvous mechanisms. This is a significant improvement over NAPT44 devices, but it also has significant security implications, which are described in Section 7.",
      "ja": "この文書に記載されているようにNPTv6を用いた場合、無ノードごとまたはフロー状態がNPTv6翻訳に維持されます。両方のインバウンドおよびアウトバウンドデータグラムは、IPv6ヘッダで見つかった情報のみを使用して、アルゴリズム的に翻訳されます。これによってプロパティに、NPTv6の双方向、アルゴリズムのアドレスマッピングは、マッピング状態の維持のためまたは状態プライミングまたはランデブーメカニズムを必要とせずに、アウトバウンドとインバウンドの接続確立の両方をサポートすることができます。これはNAPT44デバイスを大幅に改善され、それはまた、第7節で説明されている重大なセキュリティ上の意味を持っています。"
    },
    {
      "indent": 0,
      "text": "2.6. Checksum-Neutral Mapping",
      "section_title": true,
      "ja": "2.6。チェックサム、ニュートラルマッピング"
    },
    {
      "indent": 3,
      "text": "When a change is made to one of the IP header fields in the IPv6 pseudo-header checksum (such as one of the IP addresses), the checksum field in the transport layer header may become invalid. Fortunately, an incremental change in the area covered by the Internet standard checksum [RFC1071] will result in a well-defined change to the checksum value [RFC1624]. So, a checksum change caused by modifying part of the area covered by the checksum can be corrected by making a complementary change to a different 16-bit field covered by the same checksum.",
      "ja": "変化がIPv6疑似ヘッダチェックサム（IPアドレスのようなもの）にIPヘッダフィールドのいずれかに行われると、トランスポート層ヘッダ内のチェックサムフィールドが無効になることができます。幸いなことに、インターネット標準チェックサム[RFC1071]で覆われた領域における増分変化は、チェックサム値[RFC1624]に明確に定義された変化をもたらすであろう。だから、チェックサムによってカバーされる領域の一部を変更することによって引き起こされたチェックサムの変更は、同じチェックサムでカバー異なる16ビットのフィールドと相補的な変更を加えることにより補正することができます。"
    },
    {
      "indent": 3,
      "text": "The NPTv6 mapping mechanisms described in this document are checksum-neutral, which means that they result in IP headers that will generate the same IPv6 pseudo-header checksum when the checksum is calculated using the standard Internet checksum algorithm [RFC1071]. Any changes that are made during translation of the IPv6 prefix are offset by changes to other parts of the IPv6 address. This results in transport layers that use the Internet checksum (such as TCP and UDP) calculating the same IPv6 pseudo-header checksum for both the internal and external forms of the same datagram, which avoids the need for the NPTv6 Translator to modify those transport layer headers to correct the checksum value.",
      "ja": "この文書に記載されNPTv6マッピングメカニズムは、それらがチェックサムが標準のインターネットチェックサムアルゴリズム[RFC1071]を用いて計算されたときに、同じIPv6の疑似ヘッダチェックサムを生成するIPヘッダをもたらすことを意味し、チェックサム中性です。 IPv6プレフィックスの翻訳中に行われた変更は、IPv6アドレスの他の部分への変更によって相殺されています。これは、それらのトランスポート層を変更するNPTv6翻訳のための必要性を回避する同じデータグラムの内部および外部形態の両方に同じIPv6の疑似ヘッダチェックサムを計算するインターネットチェックサムを（例えば、TCPやUDPなど）を使用し、トランスポート層になりますヘッダチェックサム値を修正します。"
    },
    {
      "indent": 3,
      "text": "The outgoing checksum correction is achieved by making a change to a 16-bit section of the source address that is not used for routing in the external network. Due to the nature of checksum arithmetic, when the corresponding correction is applied to the same bits of destination address of the inbound packet, the Destination Address (DA) is returned to the correct internal value.",
      "ja": "送信チェックサム補正は、外部ネットワークにルーティングするために使用されていない送信元アドレスの16ビットのセクションに変更を加えることによって達成されます。対応する補正は、着信パケットの宛先アドレスの同じビットに印加されたときによりチェックサム演算の性質のために、宛先アドレス（DA）は、正しい内部値に戻されます。"
    },
    {
      "indent": 3,
      "text": "As noted in Section 4.2, this mapping results in an edge network using a /48 external prefix to be unable to use subnet 0xFFFF.",
      "ja": "セクション4.2で述べたように、エッジネットワークにおけるこのマッピングの結果は、サブネットが0xFFFFを使用することができないために/ 48の外部プレフィックスを使用。"
    },
    {
      "indent": 0,
      "text": "3. NPTv6 Algorithmic Specification",
      "section_title": true,
      "ja": "3. NPTv6アルゴリズムの仕様"
    },
    {
      "indent": 3,
      "text": "The [RFC4291] IPv6 Address is reproduced for clarity in Figure 5.",
      "ja": "[RFC4291] IPv6アドレスは、図5に明確にするために再生されます。"
    },
    {
      "indent": 5,
      "text": " 0    15 16   31 32   47 48   63 64   79 80   95 96  111 112  127\n+-------+-------+-------+-------+-------+-------+-------+-------+\n|     Routing Prefix    | Subnet|   Interface Identifier (IID)  |\n+-------+-------+-------+-------+-------+-------+-------+-------+",
      "raw": true
    },
    {
      "indent": 12,
      "text": "Figure 5: Enumeration of the IPv6 Address [RFC4291]",
      "ja": "図5：IPv6アドレスの列挙[RFC4291]"
    },
    {
      "indent": 0,
      "text": "3.1. NPTv6 Configuration Calculations",
      "section_title": true,
      "ja": "3.1。 NPTv6設定の計算"
    },
    {
      "indent": 3,
      "text": "When an NPTv6 Translation function is configured, it is configured with",
      "ja": "NPTv6翻訳機能が設定されている場合は、で構成されています"
    },
    {
      "indent": 3,
      "text": "o one or more \"internal\" interfaces with their \"internal\" routing domain prefixes, and",
      "ja": "彼らの「内部」ルーティングドメインプレフィックスを有する1つ以上の「内部」インターフェースO、及び"
    },
    {
      "indent": 3,
      "text": "o one or more \"external\" interfaces with their \"external\" routing domain prefixes.",
      "ja": "それらの「外部」ルーティングドメインプレフィックスを有する1つまたは複数の「外部」インタフェースO。"
    },
    {
      "indent": 3,
      "text": "In the simple case, there is one of each. If a single router provides NPTv6 translation services between a multiplicity of domains (as might be true when multihoming), each internal/external pair must be thought of as a separate NPTv6 Translator from the perspective of this specification.",
      "ja": "単純なケースでは、それぞれのものがあります。単一ルータが（マルチホーミングとき真であるかもしれないような）ドメインの多数間NPTv6翻訳サービスを提供する場合、各内部/外部のペアは、本明細書の観点から別個NPTv6トランスレータとして考えなければなりません。"
    },
    {
      "indent": 3,
      "text": "When an NPTv6 Translator is configured, the translation function first ensures that the internal and external prefixes are the same length, extending the shorter of the two with zeroes if necessary. These two prefixes will be used in the prefix translation function described in Sections 3.2 and 3.3.",
      "ja": "NPTv6トランスレータが構成されている場合、変換関数は、最初の必要に応じてゼロを有する2つの短い方に延びる、内部および外部のプレフィックスが同じ長さであることを保証します。これらの2つのプレフィックスは、セクション3.2と3.3で説明したプレフィックス変換機能に使用されます。"
    },
    {
      "indent": 3,
      "text": "They are then zero-extended to /64 for the purposes of a calculation. The translation function calculates the one's complement sum of the 16-bit words of the /64 external prefix and the /64 internal prefix. It then calculates the difference between these values: internal minus external. This value, called the \"adjustment\", is effectively constant for the lifetime of the NPTv6 Translator configuration and is used in per-datagram processing.",
      "ja": "そして、彼らは計算の目的のために/ 64までゼロ拡張されています。翻訳機能は、/ 64、外部プレフィックスと/ 64の内部接頭辞の16ビットワードの1の補数和を計算します。外部内部マイナス：それは、これらの値の差を計算します。 「調整」と呼ばれるこの値は、NPTv6トランスレータ構成の寿命のために効果的に一定であり、単位のデータグラム処理に使用されます。"
    },
    {
      "indent": 0,
      "text": "3.2. NPTv6 Translation, Internal Network to External Network",
      "section_title": true,
      "ja": "3.2。 NPTv6翻訳、外部ネットワークへの内部ネットワーク"
    },
    {
      "indent": 3,
      "text": "When a datagram passes through the NPTv6 Translator from an internal to an external network, its IPv6 Source Address is either changed in two ways or results in the datagram being discarded:",
      "ja": "データグラムは、外部ネットワークの内部からNPTv6翻訳を通過する際に、そのIPv6のソースアドレスは破棄されたデータグラム中の2つの方法や結果で変更されますか。"
    },
    {
      "indent": 3,
      "text": "o If the internal subnet number has no mapping, such as being 0xFFFF or simply not mapped, discard the datagram. This SHOULD result in an ICMP Destination Unreachable.",
      "ja": "内部サブネット番号は、0xFFFFであるか、単にマッピングされていないとして何らのマッピングを持っていない場合はO、データグラムを廃棄します。これは、到達不能ICMP宛先を生じるはずです。"
    },
    {
      "indent": 3,
      "text": "o The internal prefix is overwritten with the external prefix, in effect subtracting the difference between the two checksums (the adjustment) from the pseudo-header's checksum, and",
      "ja": "内部プレフィックスが疑似ヘッダのチェックサムの2つのチェックサム（調整）との差を減算する効果で、外部のプレフィックスで上書きされ、O、及び"
    },
    {
      "indent": 3,
      "text": "o A 16-bit word of the address has the adjustment added to it using one's complement arithmetic. If the result is 0xFFFF, it is overwritten as zero. The choice of word is as specified in Sections 3.4 or 3.5 as appropriate.",
      "ja": "Oアドレスの16ビットワードは、1の補数演算を使用して、それに追加の調整を有しています。その結果が、0xFFFFであれば、それはゼロとして上書きされます。セクション3.4または3.5などの適切なに指定されている単語の選択があります。"
    },
    {
      "indent": 0,
      "text": "3.3. NPTv6 Translation, External Network to Internal Network",
      "section_title": true,
      "ja": "3.3。 NPTv6翻訳、内部ネットワークへの外部ネットワーク"
    },
    {
      "indent": 3,
      "text": "When a datagram passes through the NPTv6 Translator from an external to an internal network, its IPv6 Destination Address is changed in two ways:",
      "ja": "データグラムは、外部から内部ネットワークにNPTv6翻訳を通過するとき、そのIPv6宛先アドレスは2つの方法で変更されます。"
    },
    {
      "indent": 3,
      "text": "o The external prefix is overwritten with the internal prefix, in effect adding the difference between the two checksums (the adjustment) to the pseudo-header's checksum, and",
      "ja": "外部プレフィックスは、内部接頭辞上書きされる効果に疑似ヘッダのチェックサムを2つのチェックサム（調整）との差を加えること、およびo"
    },
    {
      "indent": 3,
      "text": "o A 16-bit word of the address has the adjustment subtracted from it (bitwise inverted and added to it) using one's complement arithmetic. If the result is 0xFFFF, it is overwritten as zero. The choice of word is as specified in Section 3.4 or Section 3.5 as appropriate.",
      "ja": "Oアドレスの16ビットワードがそれから減算調整を有する（ビット単位で反転され、それに加え）1の補数演算を使用します。その結果が、0xFFFFであれば、それはゼロとして上書きされます。 3.4節または適切なセクション3.5で指定されている単語の選択があります。"
    },
    {
      "indent": 0,
      "text": "3.4. NPTv6 with a /48 or Shorter Prefix",
      "section_title": true,
      "ja": "3.4。 / 48またはより短いプレフィックスとNPTv6"
    },
    {
      "indent": 3,
      "text": "When an NPTv6 Translator is configured with internal and external prefixes that are 48 bits in length (a /48) or shorter, the adjustment MUST be added to or subtracted from bits 48..63 of the address.",
      "ja": "NPTv6トランスレータ48個の長さのビット（/ 48）、または短い内部および外部のプレフィックスを使用して構成されている場合、調整は、追加またはアドレスのビット48..63から差し引かなければなりません。"
    },
    {
      "indent": 3,
      "text": "This mapping results in no modification of the Interface Identifier (IID), which is held in the lower half of the IPv6 address, so it will not interfere with future protocols that may use unique IIDs for node identification.",
      "ja": "このマッピングIPv6アドレスの下半部に保持されるインタフェース識別子（IID）、無変形をもたらすので、ノード識別のための一意のIIDを使用することができる将来のプロトコルを妨害しないであろう。"
    },
    {
      "indent": 3,
      "text": "NPTv6 Translator implementations MUST implement the /48 mapping.",
      "ja": "NPTv6トランスレータの実装は、/ 48のマッピングを実装しなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.5. NPTv6 with a /49 or Longer Prefix",
      "section_title": true,
      "ja": "3.5。 / 49以上のプレフィックスを持つNPTv6"
    },
    {
      "indent": 3,
      "text": "When an NPTv6 Translator is configured with internal and external prefixes that are longer than 48 bits in length (such as a /52, /56, or /60), the adjustment must be added to or subtracted from one of the words in bits 64..79, 80..95, 96..111, or 112..127 of the address. While the choice of word is immaterial as long as it is consistent, these words MUST be inspected in that sequence and the first that is not initially 0xFFFF chosen, for consistency's sake.",
      "ja": "NPTv6翻訳が長さ（例えば、/ 52、/ 56、又は/ 60など）より長い48ビットであり、内部および外部のプレフィックスを使用して構成されている場合、調整は、追加またはビット64内の単語のいずれかから減算されなければなりません..79、80..95、96..111、またはアドレスの112..127。単語の選択は、それが一貫している限り、重要ではないが、これらの言葉は、その順序で検査し、それが一貫性のために、0xFFFFでは、選択された当初ではありません最初にしなければなりません。"
    },
    {
      "indent": 3,
      "text": "NPTv6 Translator implementations SHOULD implement the mapping for longer prefixes.",
      "ja": "NPTv6トランスレータの実装では、長いプレフィックスのマッピングを実装する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.6. /48 Prefix Mapping Example",
      "section_title": true,
      "ja": "3.6。 / 48プレフィックスマッピングの例"
    },
    {
      "indent": 3,
      "text": "For the network shown in Figure 1, the Internal Prefix is FD01:0203: 0405:/48, and the External Prefix is 2001:0DB8:0001:/48.",
      "ja": "0405：0203：図1に示すネットワークのために、内部プレフィックスFD01である/ 48、および外部プレフィックス2001：0DB8：0001：/ 48。"
    },
    {
      "indent": 3,
      "text": "If a node with internal address FD01:0203:0405:0001::1234 sends an outbound datagram through the NPTv6 Translator, the resulting external address will be 2001:0DB8:0001:D550::1234. The resulting address is obtained by calculating the checksum of both the internal and external 48-bit prefixes, subtracting the internal prefix from the external prefix using one's complement arithmetic to calculate the \"adjustment\", and adding the adjustment to the 16-bit subnet field (in this case, 0x0001).",
      "ja": "0203：0405：内部アドレスFD01を持つノードた場合0DB8：0001：D550 :: 1234 0001 :: 1234 NPTv6翻訳者によるアウトバウンドデータグラムを送信しますが、結果として外部アドレスは、2001年になります。得られたアドレスは、内部と外部の両方の48ビットプレフィックスのチェックサムを計算し、「調整」を計算するために1の補数演算を使用して外部プレフィックスから内部プレフィックスを減算し、16ビットのサブネットフィールドに調整を加えることによって得られます。 （この場合、0x0001に）。"
    },
    {
      "indent": 3,
      "text": "To show the work:",
      "ja": "仕事を表示するには："
    },
    {
      "indent": 3,
      "text": "The one's complement checksum of FD01:0203:0405 is 0xFCF5. The one's complement checksum of 2001:0DB8:0001 is 0xD245. Using one's complement arithmetic, 0xD245 - 0xFCF5 = 0xD54F. The subnet in the original datagram is 0x0001. Using one's complement arithmetic, 0x0001 + 0xD54F = 0xD550. Since 0xD550 != 0xFFFF, it is not changed to 0x0000.",
      "ja": "FD01の1の補数チェックサム：0203：0405 0xFCF5です。 2001年の1の補数チェックサム：0DB8：0001 0xD245です。 1の補数演算を使用して、0xD245  -  0xFCF5 = 0xD54F。元のデータグラムでのサブネットが0x0001のです。 1の補数演算を使用して、0x0001の+ 0xD54F = 0xD550。 0xD550！= 0xFFFFであるので、それが0x0000に変更されません。"
    },
    {
      "indent": 3,
      "text": "So, the value 0xD550 is written in the 16-bit subnet area, resulting in a mapped external address of 2001:0DB8:0001:D550::1234.",
      "ja": "それで、値0xD550 2001のマップされた外部アドレスになり、16ビットのサブネット領域に書き込まれている：0DB8：0001：D550 :: 1234。"
    },
    {
      "indent": 3,
      "text": "When a response datagram is received, it will contain the destination address 2001:0DB8:0001:D550::0001, which will be mapped back to FD01: 0203:0405:0001::1234 using the inverse mapping algorithm.",
      "ja": "逆マッピングアルゴリズムを使用して0001 :: 1234：0DB8：0001：D550 :: 0001、FD01に戻っマッピングされます：0203：0405応答データグラムが受信されると、それは宛先アドレス2001が含まれます。"
    },
    {
      "indent": 3,
      "text": "In this case, the difference between the two prefixes will be calculated as follows:",
      "ja": "次のようにこの場合、2つのプレフィックスとの差が計算されます。"
    },
    {
      "indent": 3,
      "text": "Using one's complement arithmetic, 0xFCF5 - 0xD245 = 0x2AB0. The subnet in the original datagram = 0xD550. Using one's complement arithmetic, 0xD550 + 0x2AB0 = 0x0001. Since 0x0001 != 0xFFFF, it is not changed to 0x0000.",
      "ja": "1の補数演算を使用して、0xFCF5  -  0xD245 = 0x2AB0。元のデータグラム= 0xD550でサブネット。 1の補数演算を使用して、0xD550 + 0x2AB0 = 0x0001に。 0x0001ので！= 0xFFFFでは、それは0x0000に変更されません。"
    },
    {
      "indent": 3,
      "text": "So the value 0x0001 is written into the subnet field, and the internal value of the subnet field is properly restored.",
      "ja": "だから、値は0x0001は、サブネットフィールドに書き込まれ、サブネットフィールドの内部値が正しく復元されます。"
    },
    {
      "indent": 0,
      "text": "3.7. Address Mapping for Longer Prefixes",
      "section_title": true,
      "ja": "3.7。長いプレフィックスのためのアドレスマッピング"
    },
    {
      "indent": 3,
      "text": "If the prefix being mapped is longer than 48 bits, the algorithm is slightly more complex. A common case will be that the internal and external prefixes are of different lengths. In such a case, the shorter prefix is zero-extended to the length of the longer as described in Section 3.1 for the purposes of overwriting the prefix. Then, they are both zero-extended to 64 bits to facilitate one's complement arithmetic. The \"adjustment\" is calculated using those 64-bit prefixes.",
      "ja": "マッピングされるプレフィックスが長い48ビット未満である場合、アルゴリズムは少し複雑です。一般的なケースは、内部および外部のプレフィックスの長さが異なることであろう。プレフィックスを上書きする目的のために、セクション3.1に記載されているような場合には、より短いプレフィックスが長いの長さにゼロ拡張されます。その後、彼らは、両方の1の補数演算を容易にするために64ビットにゼロ拡張されています。 「調整」は、それらの64ビットのプレフィックスを使用して計算されます。"
    },
    {
      "indent": 3,
      "text": "For example, if the internal prefix is a /48 ULA and the external prefix is a /56 provider-allocated prefix, the ULA becomes a /56 with zeros in bits 48..55. For purposes of one's complement arithmetic, they are then both zero-extended to 64 bits. A side effect of this is that a subset of the subnets possible in the shorter prefix is untranslatable. While the security value of this is debatable, the administration may choose to use them for subnets that it knows need no external accessibility.",
      "ja": "内部プレフィックスがULA / 48であり、外部プレフィックスが/ 56プロバイダに割り当てられた接頭辞である場合、例えば、ULAは、ビット48..55にゼロと/ 56となります。 1の補数演算の目的のために、彼らは両方とも、次に64ビットにゼロ拡張されています。この副作用は、短い接頭辞で可能なサブネットのサブセットが翻訳不可能であるということです。このセキュリティの値は議論の余地があるものの、政権は、それが外部アクセスを必要としません知っているサブネットのためにそれらを使用することもできます。"
    },
    {
      "indent": 3,
      "text": "We then find the first word in the IID that does not have the value 0xFFFF, trying bits 64..79, and then 80..95, 96..111, and finally 112..127. We perform the same calculation (with the same proof of correctness) as in Section 3.6 but apply it to that word.",
      "ja": "私たちは、その後、ビット64..79をしようと、値は0xFFFFを持ち、その後、80..95、96..111、そして最終的に112..127しないIIDの最初の単語を見つけます。私たちは、セクション3.6のように（正しさの証明と同じで）同じ計算を行うが、その言葉にそれを適用します。"
    },
    {
      "indent": 3,
      "text": "Although any 16-bit portion of an IPv6 IID could contain 0xFFFF, an IID of all-ones is a reserved anycast identifier that should not be used on the network [RFC2526]. If an NPTv6 Translator discovers a datagram with an IID of all-zeros while performing address mapping, that datagram MUST be dropped, and an ICMPv6 Parameter Problem error SHOULD be generated [RFC4443].",
      "ja": "IPv6のIIDの任意の16ビットの部分が、0xFFFFを含むことができるが、すべてのもののIIDは、ネットワーク[RFC2526]を使用すべきではない予約エニキャスト識別子です。アドレスマッピングを行いながらNPTv6翻訳はすべてゼロのIIDを有するデータグラムを検出した場合、[RFC4443]は、データグラムは廃棄されなければならない、とICMPv6のパラメータ問題エラーが生成されるべきです。"
    },
    {
      "indent": 3,
      "text": "Note: This mechanism does involve modification of the IID; it may not be compatible with future mechanisms that use unique IIDs for node identification.",
      "ja": "注意：このメカニズムは、IIDの変更を伴いません。それはノード識別のための一意のIIDを使用して、将来のメカニズムと互換性がないかもしれません。"
    },
    {
      "indent": 0,
      "text": "4. Implications of Network Address Translator Behavioral Requirements",
      "section_title": true,
      "ja": "ネットワークアドレス変換の行動要件の4影響"
    },
    {
      "indent": 0,
      "text": "4.1. Prefix Configuration and Generation",
      "section_title": true,
      "ja": "4.1。プレフィックスの設定と生成"
    },
    {
      "indent": 3,
      "text": "NPTv6 Translators MUST support manual configuration of internal and external prefixes and MUST NOT place any restrictions on those prefixes except that they be valid IPv6 unicast prefixes as described in [RFC4291]. They MAY also support random generation of ULA addresses on command. Since the most common place anticipated for the implementation of an NPTv6 Translator is a Customer Premises Equipment (CPE) router, the reader is urged to consider the requirements of [RFC6204].",
      "ja": "NPTv6翻訳者は、内部および外部のプレフィックスの手動設定をサポートしなければならないと[RFC4291]で説明したように、彼らは有効なIPv6ユニキャストプレフィックスであることを除いて、これらの接頭語に制限を配置してはならず。彼らはまた、コマンドにULAアドレスのランダム生成をサポートするかもしれません。 NPTv6トランスレータの実装のために予想される最も一般的な場所は、顧客宅内機器（CPE）ルータであるので、読者は[RFC6204]の要件を考慮することが付勢されています。"
    },
    {
      "indent": 0,
      "text": "4.2. Subnet Numbering",
      "section_title": true,
      "ja": "4.2。サブネット番号"
    },
    {
      "indent": 3,
      "text": "For reasons detailed in Appendix B, a network using NPTv6 Translation and a /48 external prefix MUST NOT use the value 0xFFFF to designate a subnet that it expects to be translated.",
      "ja": "付録Bに詳述理由により、NPTv6翻訳/ 48外部プレフィックスを使用して、ネットワークは、それが翻訳されることを期待するサブネットを指定する値は0xFFFFを使用してはいけません。"
    },
    {
      "indent": 0,
      "text": "4.3. NAT Behavioral Requirements",
      "section_title": true,
      "ja": "4.3。 NAT行動の要件"
    },
    {
      "indent": 3,
      "text": "NPTv6 Translators MUST support hairpinning behavior, as defined in the NAT Behavioral Requirements for UDP document [RFC4787]. This means that when an NPTv6 Translator receives a datagram on the internal interface that has a destination address that matches the site's external prefix, it will translate the datagram and forward it internally. This allows internal nodes to reach other internal nodes using their external, global addresses when necessary.",
      "ja": "UDPドキュメントのNAT行動要件[RFC4787]で定義されているようNPTv6翻訳者は、ヘアピンの行動をサポートしなければなりません。これはNPTv6翻訳がサイトの外部プレフィックスと一致する宛先アドレスを持つ内部インターフェイス上のデータグラムを受信したとき、それはデータグラムを翻訳し、内部的にそれを転送することを意味します。これは、内部ノードが必要なときにその外部、グローバルアドレスを使用して、他の内部ノードに到達することができます。"
    },
    {
      "indent": 3,
      "text": "Conceptually, the datagram leaves the domain (is translated as described in Section 3.2) and returns (is again translated as described in Section 3.3). As a result, the datagram exchange will be through the NPTv6 Translator in both directions for the lifetime of the session. The alternative would be to require the NPTv6 Translator to drop the datagram, forcing the sender to use the correct internal prefix for its peer. Performing only the external-to-internal translation results in the datagram being sent from the untranslated internal address of the source to the translated and therefore internal address of its peer, which would enable the session to bypass the NPTv6 Translator for future datagrams. It would also mean that the original sender would be unlikely to recognize the response when it arrived.",
      "ja": "概念的に、データグラムは戻るが（セクション3.3で説明したように再び変換される）（3.2節に記載のように翻訳される）領域を残します。その結果、データグラム交換は、セッションの存続のための両方向にNPTv6翻訳を通じてなります。代替は、そのピアの正しい内部接頭辞を使用するために、送信者を強制的に、データグラムをドロップするNPTv6翻訳を必要とするだろう。将来のデータグラムのためNPTv6翻訳を迂回するようにセッションを可能にするピアの翻訳、従って内部アドレスへのソースの非翻訳内部アドレスから送信されたデータグラムにのみ外部から内部翻訳結果を行います。また、元の送信者は、それが到着したときの応答を認識する可能性は低いだろうことを意味します。"
    },
    {
      "indent": 3,
      "text": "Because NPTv6 does not perform port mapping and uses a one-to-one, reversible-mapping algorithm, none of the other NAT behavioral requirements apply to NPTv6.",
      "ja": "NPTv6は、ポートマッピングを実行し、1対1、可逆マッピングアルゴリズムを使用していないので、他のNATの行動要件のいずれもがNPTv6には適用されません。"
    },
    {
      "indent": 0,
      "text": "5. Implications for Applications",
      "section_title": true,
      "ja": "アプリケーション5.影響"
    },
    {
      "indent": 3,
      "text": "NPTv6 Translation does not create several of the problems known to exist with other kinds of NATs as discussed in [RFC2993]. In particular, NPTv6 Translation is stateless, so a \"reset\" or brief outage of an NPTv6 Translator does not break connections that traverse the translation function, and if multiple NPTv6 Translators exist between the same two networks, the load can shift or be dynamically load shared among them. Also, an NPTv6 Translator does not aggregate traffic for several hosts/interfaces behind a fewer number of external addresses, so there is no inherent expectation for an NPTv6 Translator to block new inbound flows from external hosts and no issue with a filter or blacklist associated with one prefix within the domain affecting another. A firewall can, of course, be used in conjunction with an NPTv6 Translator; this would allow the network administrator more flexibility to specify security policy than would be possible with a traditional NAT.",
      "ja": "NPTv6翻訳は、[RFC2993]で議論するようにNATの他の種類で存在することが知られている問題のいくつかを作成できません。特に、NPTv6翻訳はステートレスなので、「リセット」またはNPTv6翻訳短時間停止が翻訳機能を横断する接続を破壊しない、および複数NPTv6翻訳が同じ2つのネットワークの間に存在する場合、負荷がシフトすることができ、動的にロードされますそれらの間で共有。また、NPTv6トランスレータは、外部アドレスのより少ない数の背後にある複数のホスト/インターフェースのためではない集約トラフィックを行い、これに関連付けられたフィルタまたはブラックリストとの新しいインバウンド外部ホストから流れてない問題をブロックするNPTv6翻訳のための固有の期待はありません他に影響を与えるドメイン内の1つのプレフィックス。ファイアウォールは、もちろん、NPTv6翻訳と組み合わせて使用​​することができます。これは伝統的なNATに可能であるよりも、ネットワーク管理者がより柔軟にセキュリティポリシーを指定することができるようになります。"
    },
    {
      "indent": 3,
      "text": "However, NPTv6 Translation does create difficulties for some kinds of applications. Some examples include:",
      "ja": "しかし、NPTv6翻訳は、アプリケーションのいくつかの種類の困難を作成しません。いくつかの例は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o An application instance \"behind\" an NPTv6 Translator will see a different address for its connections than its peers \"outside\" the NPTv6 Translator.",
      "ja": "O NPTv6トランスレータ「の背後にある」アプリケーション・インスタンスは、そのピア「外部」NPTv6翻訳よりもその接続のために別のアドレスが表示されます。"
    },
    {
      "indent": 3,
      "text": "o An application instance \"outside\" an NPTv6 Translator will see a different address for its connections than any peer \"inside\" an NPTv6 Translator.",
      "ja": "Oアプリケーションインスタンス「外側」NPTv6トランスレータはNPTv6トランスレータ「内側」は、任意のピアよりも、その接続に対して異なるアドレスが表示されます。"
    },
    {
      "indent": 3,
      "text": "o An application instance wishing to establish communication with a peer \"behind\" an NPTv6 Translator may need to use a different address to reach that peer depending on whether the instance is behind the same NPTv6 Translator or external to it. Since an NPTv6 Translator implements hairpinning (Section 4.3), it suffices for applications to always use their external addresses. However, this creates inefficiencies in the local network and may also complicate implementation of the NPTv6 Translator. [RFC3484] also would prefer the private address in such a case in order to reduce those inefficiencies.",
      "ja": "O「の後ろに」ピアとの通信を確立したいアプリケーションインスタンスがNPTv6トランスレータは、インスタンスがそれまでと同じNPTv6翻訳者や外部の後ろにあるかどうかに応じて、そのピアに到達するために別のアドレスを使用する必要があります。 NPTv6トランスレータはヘアピン（4.3節）を実装しているため、それは常に彼らの外部アドレスを使用するアプリケーションのために十分です。しかし、これは、ローカルネットワーク内の非効率性を作成してもNPTv6トランスレータの実装を複雑にする可能性があります。 [RFC3484]も、これらの非効率性を低減するために、このような場合にはプライベートアドレスを好むだろう。"
    },
    {
      "indent": 3,
      "text": "o An application instance that moves from a realm \"behind\" an NPTv6 Translator to a realm that is \"outside\" the network, or vice versa, may find that it is no longer able to reach its peers at the same addresses it was previously able to use.",
      "ja": "Oネットワーク、またはその逆の「外側」である領域にNPTv6トランスレータ「後ろ」領域から移動するアプリケーションインスタンスは、もは​​やそれは以前に可能であった同じアドレスにそのピアに到達することができることを発見しないかもしれ使用します。"
    },
    {
      "indent": 3,
      "text": "o An application instance that is intermittently communicating with a peer that moves from behind an NPTv6 Translator to \"outside\" of it, or vice versa, may find that it is no longer able to reach that peer at the same address that it had previously used.",
      "ja": "O断続的に「外部」との、又はその逆NPTv6トランスレータの背後から移動ピアと通信しているアプリケーションインスタンスは、それが以前に使用したこと、もはや同じアドレスにそのピアに到達することができることを発見しないかもしれ。"
    },
    {
      "indent": 3,
      "text": "Many, but not all, of the applications that are adversely affected by NPTv6 Translation are those that do \"referrals\" -- where an application instance passes its own addresses, and/or addresses of its peers, to other peers. (Some believe referrals are inherently undesirable; others believe that they are necessary in some circumstances. A discussion of the merits of referrals, or lack thereof, is beyond the scope of this document.)",
      "ja": "他のピアに、アプリケーションインスタンスは、独自のアドレスを渡し、および/またはそのピアのアドレス - 多くは、すべてではありませんが、悪影響NPTv6翻訳によって影響を受けるアプリケーションのは、「紹介」を行うものです。 （いくつかは紹介が本質的に望ましくないと考えている;紹介のメリットについての議論などは、彼らはいくつかの状況で必要であると考えている、またはその欠如、このドキュメントの範囲外です。）"
    },
    {
      "indent": 3,
      "text": "To some extent, the incidence of these difficulties can be reduced by DNS hacks that attempt to expose addresses \"behind\" an NPTv6 Translator only to hosts that are also behind the same NPTv6 Translator and perhaps to also expose only the \"internal\" addresses of hosts behind the NPTv6 Translator to other hosts behind the same NPTv6 Translator. However, this cannot be a complete solution. A full discussion of these issues is out of scope for this document, but briefly: (a) reliance on DNS to solve this problem depends on hosts always making queries from DNS servers in the same realm as they are (or on DNS interception proxies, which create their own problems) and on mobile hosts/applications not caching those results; (b) reliance on DNS to solve this problem depends on network administrators on all networks using such applications to reliably and accurately maintain current DNS entries for every host using those applications; and (c) reliance on DNS to solve this problem depends on applications always using DNS names, even though they often must run in environments where DNS names are not reliably maintained for every host. Other issues are that there is often no single distinguished name for a host and no reliable way for a host to determine what DNS names are associated with it and which names are appropriate to use in which contexts.",
      "ja": "ある程度までは、これらの困難の発生率は、同じNPTv6翻訳後ろでもあるホストにNPTv6トランスレータ「背後」のアドレスを公開しようとするとDNSハックによって低減することができ、おそらくまた、ホストの唯一の「内部」アドレスを公開します同じNPTv6トランスレータの背後にある他のホストにNPTv6トランスレータの背後にあります。しかし、これは完全な解決策になることができません。これらの問題の完全な議論はこの文書の範囲外であるが、簡単に：（a）はこの問題を解決するためのDNSへの依存は、彼らが（あるか、DNS傍受プロキシ上で、常に同じレルムにDNSサーバからの問い合わせを行うホストに依存し、これは自分の問題を作成）し、それらの結果をキャッシュしないモバイルホスト/アプリケーション上。 （b）は、この問題を解決するためのDNSへの依存を確実かつ正確にこれらのアプリケーションを使用して、すべてのホストの現在のDNSエントリを維持するために、そのようなアプリケーションを使用して、すべてのネットワーク上のネットワーク管理者に依存します。そして、、（c）はこの問題を解決するためのDNSへの依存は、常に彼らはしばしばDNS名が確実にすべてのホストのために維持されていない環境で実行しなければならないにもかかわらず、DNS名を使用しているアプリケーションに依存します。その他の問題は、多くの場合、ホストのための単一の識別名とそれに関連付けられており、その名前はどの文脈で使用するのが適切ですされているどのようなDNS名を決定するホストのための信頼できる方法がないことです。"
    },
    {
      "indent": 0,
      "text": "5.1. Recommendation for Network Planners Considering Use of NPTv6 Translation",
      "ja": "5.1。 NPTv6翻訳の使用を考慮したネットワークプランナーのための勧告"
    },
    {
      "indent": 3,
      "text": "In light of the above, network planners considering the use of NPTv6 translation should carefully consider the kinds of applications that they will need to run in the future and determine whether the address-stability and provider-independence benefits are consistent with their application requirements.",
      "ja": "上記に照らして、NPTv6翻訳の使用を考慮したネットワークプランナーは、慎重に、彼らが将来的に実行し、アドレスの安定性とプロバイダ独立性の利点は、そのアプリケーションの要件と一致しているかどうかを判断する必要がありますアプリケーションの種類を考慮する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.2. Recommendations for Application Writers",
      "section_title": true,
      "ja": "5.2。アプリケーションの作成者への提言"
    },
    {
      "indent": 3,
      "text": "Several mechanisms (e.g., STUN [RFC5389], Traversal Using Relays around NAT (TURN) [RFC5766], and Interactive Connectivity Establishment (ICE) [RFC5245]) have been used with traditional IPv4 NAT to circumvent some of the limitations of such devices. Similar mechanisms could also be applied to circumvent some of the issues with an NPTv6 Translator. However, all of these require the assistance of an external server or a function co-located with the translator that can tell an \"internal\" host what its \"external\" addresses are.",
      "ja": "いくつかの機構（例えば、STUN [RFC5389]、トラバーサルNAT（TURN）の周りにリレー[RFC5766]を使用して、インタラクティブ接続確立（ICE）[RFC5245]）は、このようなデバイスの制限のいくつかを回避するために従来のIPv4 NATで使用されてきました。同様のメカニズムもNPTv6翻訳の問題のいくつかを回避するためにも適用することができます。しかし、これらのすべては、外部のサーバまたはその「外部」のアドレスが何であるかを「内部」ホストを伝えることができます翻訳者と共存機能の支援が必要です。"
    },
    {
      "indent": 0,
      "text": "5.3. Recommendation for Future Work",
      "section_title": true,
      "ja": "5.3。今後の作業のための勧告"
    },
    {
      "indent": 3,
      "text": "It might be desirable to define a general mechanism that would allow hosts within a translation domain to determine their external addresses and/or request that inbound traffic be permitted. If such a mechanism were to be defined, it would ideally be general enough to also accommodate other types of NAT likely to be encountered by IPV6 applications, in particular IPv4/IPv6 Translation [RFC6144] [RFC6147] [RFC6145] [RFC6146] [RFC6052]. For this and other reasons, such a mechanism is beyond the scope of this document.",
      "ja": "翻訳ドメイン内のホストが外部アドレスを決定し、および/または受信トラフィックを許可するように要求することが可能になる一般的なメカニズムを定義することが望ましいかもしれません。このようなメカニズムを定義するとしたら、それは、理想的には、また、おそらくIPv6アプリケーションが遭遇するNATの他のタイプを収容するのに十分一般的であろう特定のIPv4 / IPv6変換[RFC6144]、[RFC6147]、[RFC6145]、[RFC6146]、[RFC6052で]。これと他の理由のために、そのような機構は、この文書の範囲外です。"
    },
    {
      "indent": 0,
      "text": "6. A Note on Port Mapping",
      "section_title": true,
      "ja": "6.ポートマッピングの注意事項"
    },
    {
      "indent": 3,
      "text": "In addition to overwriting IP addresses when datagrams are forwarded, NAPT44 devices overwrite the source port number in outbound traffic and the destination port number in inbound traffic. This mechanism is called \"port mapping\".",
      "ja": "データグラムが転送される際にIPアドレスを上書きすることに加えて、NAPT44デバイスは、アウトバウンドトラフィックの送信元ポート番号と着信トラフィックの宛先ポート番号を上書きします。このメカニズムは、「ポートマッピング」と呼ばれています。"
    },
    {
      "indent": 3,
      "text": "The major benefit of port mapping is that it allows multiple computers to share a single IPv4 address. A large number of internal IPv4 addresses (typically from one of the [RFC1918] private address spaces) can be mapped into a single external, globally routable IPv4 address, with the local port number used to identify which internal node should receive each inbound datagram. This address-amplification feature is not generally foreseen as a necessity at this time.",
      "ja": "ポートマッピングの主な利点は、それが複数のコンピュータを単一のIPv4アドレスを共有することを可能にするということです。 （典型的には、[RFC1918]のプライベートアドレススペースの1つから）内部IPv4アドレス多数の内部ノードは、各受信データグラムを受け取るべきかを識別するために使用されるローカルポート番号と、単一の外部、グローバルにルーティング可能なIPv4アドレスにマッピングすることができます。このアドレスは増幅機能は、一般的に、この時点で必要と予見されていません。"
    },
    {
      "indent": 3,
      "text": "Since port mapping requires rewriting a portion of the transport layer header, it requires NAPT44 devices to be aware of all of the transport protocols that they forward, thus stifling the development of new and improved transport protocols and preventing the use of IPsec encryption. Modifying the transport layer header is incompatible with security mechanisms that encrypt the full IP payload and restricts the NAPT44 to forwarding transport layers that use weak checksum algorithms that are easily recalculated in routers.",
      "ja": "ポートマッピングは、トランスポート層ヘッダの部分を書き換える必要があるため、それは前方に、このように新規で改良されたトランスポートプロトコルの開発を息苦しいおよびIPSec暗号化の使用を防止するトランスポートプロトコルの全てを認識するNAPT44デバイスを必要とします。トランスポート層ヘッダを変更すると、完全なIPペイロードを暗号化するセキュリティ・メカニズムと互換性があり、容易にルータに再計算され弱いチェックサム・アルゴリズムを使用するトランスポート層を転送するNAPT44を制限します。"
    },
    {
      "indent": 3,
      "text": "Since there is significant detriment caused by modifying transport layer headers and very little, if any, benefit to the use of port mapping in IPv6, NPTv6 Translators that comply with this specification MUST NOT perform port mapping.",
      "ja": "もしあれば、トランスポート層ヘッダを変更し、非常に少ないによって引き起こされる重大な不利益があるので、この仕様に準拠したIPv6、NPTv6トランスレータにおけるポートマッピングの使用の利点は、ポートマッピングを実行してはいけません。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7.セキュリティの考慮事項"
    },
    {
      "indent": 3,
      "text": "When NPTv6 is deployed using either of the two-way, algorithmic mappings defined in this document, it allows direct inbound connections to internal nodes. While this can be viewed as a benefit of NPTv6 versus NAPT44, it does open internal nodes to attacks that would be more difficult in a NAPT44 network. From a security standpoint, although this situation is not substantially worse than running IPv6 with no NAT, some enterprises may assume that an NPTv6 Translator will offer similar protection to a NAPT44 device.",
      "ja": "NPTv6この文書で定義された双方向、アルゴリズムマッピングのいずれかを使用して展開されたとき、それは内部ノードに直接着信接続を可能にします。これはNAPT44対NPTv6の利益とみなすことができるが、それはNAPT44ネットワークでより困難になる攻撃に内部ノードを開くありません。この状況は、実質的に無NATとIPv6を実行しているよりも悪いではないが、セキュリティの観点から、いくつかの企業がNPTv6トランスレータはNAPT44装置と同様の保護を提供すると仮定してもよいです。"
    },
    {
      "indent": 3,
      "text": "The port mapping mechanism in NAPT44 implementations requires that state be created in both directions. This has lead to an industry-wide perception that NAT functionality is the same as a stateful firewall. It is not. The translation function of the NAT only creates dynamic state in one direction and has no policy. For this reason, it is RECOMMENDED that NPTv6 Translators also implement firewall functionality such as described in [RFC6092], with appropriate configuration options including turning it on or off.",
      "ja": "NAPT44実装におけるポートマッピングメカニズムは状態が両方向に作成されることを必要とします。これは、NAT機能は、ステートフルファイアウォールと同じであることを業界全体の認識につながりました。そうではない。 NATの翻訳機能は、一方向にのみ動的な状態を作成し、何のポリシーを持っていません。このため、NPTv6翻訳者はまた、オンまたはオフに回し、適切な構成オプションで、[RFC6092]で説明されるように、ファイアウォール機能を実装することが推奨されます。"
    },
    {
      "indent": 3,
      "text": "When [RFC4864] talks about randomizing the subnet identifier, the idea is to make it harder for worms to guess a valid subnet identifier at an advertised network prefix. This should not be interpreted as endorsing concealment of the subnet identifier behind the obfuscating function of a translator such as NPTv6. [RFC4864] specifically talks about how to obtain the desired properties of concealment without using a translator. Topology hiding when using NAT is often ineffective in environments where the topology is visible in application layer messaging protocols such as DNS, SIP, SMTP, etc. If the information were not available through the application layer, [RFC2993] would not be valid.",
      "ja": "[RFC4864]は、サブネット識別子をランダム化について語るとき、考え方は、それが困難ワームは、広告を出してネットワークプレフィックスで有効なサブネット識別子を推測できるようにすることです。これは、NPTv6としてトランスレータの難読化関数の背後にあるサブネット識別子の隠蔽を支持として解釈されるべきではありません。 [RFC4864]は、具体的に翻訳を用いることなく、隠蔽の所望の特性を取得する方法について話します。 NATを使用して、トポロジー隠蔽は、多くの場合、トポロジ情報は、アプリケーション層を介して利用できなかった場合は、[RFC2993]が有効でないなどDNS、SIP、SMTPなどのアプリケーション層のメッセージング・プロトコルに表示されている環境では効果がありません。"
    },
    {
      "indent": 3,
      "text": "Due to the potential interactions with IKEv2/IPsec NAT traversal, it would be valuable to test interactions of NPTv6 with various aspects of current-day IKEv2/IPsec NAT traversal.",
      "ja": "ためのIKEv2 / IPsecのNATトラバーサルとの潜在的相互作用のために、現在の日のIKEv2 / IPsecのNATトラバーサルの様々な局面にNPTv6の相互作用をテストする価値があります。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgements",
      "section_title": true,
      "ja": "8.謝辞"
    },
    {
      "indent": 3,
      "text": "The checksum-neutral algorithmic address mapping described in this document is based on email written by Iljtsch van Beijnum.",
      "ja": "この文書で説明するチェックサム・ニュートラルなアルゴリズムアドレスマッピングはIljtschバンBeijnumによって書かれた電子メールに基づいています。"
    },
    {
      "indent": 3,
      "text": "The following people provided advice or review comments that substantially improved this document: Allison Mankin, Christian Huitema, Dave Thaler, Ed Jankiewicz, Eric Kline, Iljtsch van Beijnum, Jari Arkko, Keith Moore, Mark Townsley, Merike Kaeo, Ralph Droms, Remi Despres, Steve Blake, and Tony Hain.",
      "ja": "、実質的にこの文書を改善アドバイスやレビューコメントを提供し、次の人：アリソンマンキン、クリスチャンのHuitema、デーブターラー、エドJankiewicz、エリック・クライン、IljtschバンBeijnum、ヤリArkko、キースムーア、マークTownsley、Merike Kaeoの、ラルフDroms、レミ・デプレ、スティーブ・ブレイク、そしてトニーハイン。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9.参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1。引用規格"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119]ブラドナーの、S.、 \"要件レベルを示すためにRFCsにおける使用のためのキーワード\"、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2526] Johnson, D. and S. Deering, \"Reserved IPv6 Subnet Anycast Addresses\", RFC 2526, March 1999.",
      "ja": "[RFC2526]ジョンソン、D.とS.デアリング、 \"予約済みのIPv6サブネットエニーキャストアドレス\"、RFC 2526、1999年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4193] Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast Addresses\", RFC 4193, October 2005.",
      "ja": "[RFC4193] HindenとR.とB.ハーバーマン、 \"ユニークローカルIPv6ユニキャストアドレス\"、RFC 4193、2005年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, February 2006.",
      "ja": "[RFC4291] HindenとR.とS.デアリング、 \"IPバージョン6アドレッシング体系\"、RFC 4291、2006年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4443] Conta, A., Deering, S., and M. Gupta, \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", RFC 4443, March 2006.",
      "ja": "[RFC4443]コンタ、A.、デアリング、S.、およびM.グプタ、 \"インターネットプロトコルバージョン6（IPv6）の仕様のためのインターネット制御メッセージプロトコル（ICMPv6の）\"、RFC 4443、2006年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC4787] Audet, F. and C. Jennings, \"Network Address Translation (NAT) Behavioral Requirements for Unicast UDP\", BCP 127, RFC 4787, January 2007.",
      "ja": "[RFC4787] Audet、F.とC.ジェニングス、 \"ネットワークアドレス変換（NAT）ユニキャストUDPのための行動の要件\"、BCP 127、RFC 4787、2007年1月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2。参考文献"
    },
    {
      "indent": 3,
      "text": "[GSE] O'Dell, M., \"GSE - An Alternate Addressing Architecture for IPv6\", Work in Progress, February 1997.",
      "ja": "[GSE]オデル、M.、 \"GSE  -  IPv6のアーキテクチャを代替アドレス\"、進歩、1997年2月での作業。"
    },
    {
      "indent": 3,
      "text": "[NIST] NIST, \"Draft NIST Framework and Roadmap for Smart Grid Interoperability Standards, Release 1.0\", September 2009.",
      "ja": "[NIST] NIST、 \"ドラフトNIST Frameworkとロードマップ1.0をリリース、スマートグリッド相互運用性標準について\"、2009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC1071] Braden, R., Borman, D., Partridge, C., and W. Plummer, \"Computing the Internet checksum\", RFC 1071, September 1988.",
      "ja": "[RFC1071]ブレーデン、R.、ボーマン、D.、ヤマウズラ、C.、およびW.プラマー、 \"インターネットチェックサムの計算\"、RFC 1071、1988年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC1624] Rijsinghani, A., \"Computation of the Internet Checksum via Incremental Update\", RFC 1624, May 1994.",
      "ja": "[RFC1624] Rijsinghani、A.、 \"増分更新を経由してインターネットチェックサムの計算\"、RFC 1624、1994年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1918] Rekhter, Y., Moskowitz, R., Karrenberg, D., Groot, G., and E. Lear, \"Address Allocation for Private Internets\", BCP 5, RFC 1918, February 1996.",
      "ja": "[RFC1918] Rekhter、Y.、モスコウィッツ、R.、Karrenberg、D.、グルート、G.、およびE.リア、 \"個人的なインターネットのための配分\"、BCP 5、RFC 1918、1996年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2827] Ferguson, P. and D. Senie, \"Network Ingress Filtering: Defeating Denial of Service Attacks which employ IP Source Address Spoofing\", BCP 38, RFC 2827, May 2000.",
      "ja": "[RFC2827]ファーガソン、P.およびD. Senie、 \"ネットワーク入力フィルタリング：IP Source Address Spoofingを使うサービス攻撃の敗北拒否\"、BCP 38、RFC 2827、2000年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC2993] Hain, T., \"Architectural Implications of NAT\", RFC 2993, November 2000.",
      "ja": "[RFC2993]ハイン、T.、 \"NATの建築的意味\"、RFC 2993、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC3424] Daigle, L. and IAB, \"IAB Considerations for UNilateral Self-Address Fixing (UNSAF) Across Network Address Translation\", RFC 3424, November 2002.",
      "ja": "、RFC 3424、2002年11月、 \"ネットワークアドレス変換アクロス一方的な自己アドレス固定するためのIABの考慮事項（UNSAF）\" [RFC3424] Daigle氏、L.とIAB、。"
    },
    {
      "indent": 3,
      "text": "[RFC3484] Draves, R., \"Default Address Selection for Internet Protocol version 6 (IPv6)\", RFC 3484, February 2003.",
      "ja": "[RFC3484] Draves、R.、RFC 3484 \"インターネットプロトコルバージョン6（IPv6）のデフォルトのアドレス選択\"、2003年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4864] Van de Velde, G., Hain, T., Droms, R., Carpenter, B., and E. Klein, \"Local Network Protection for IPv6\", RFC 4864, May 2007.",
      "ja": "[RFC4864]ヴァン・デ・ヴェルデ、G.、ハイン、T.、Droms、R.、大工、B.、およびE.クライン、 \"IPv6のローカルネットワークの保護\"、RFC 4864、2007年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC5245] Rosenberg, J., \"Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols\", RFC 5245, April 2010.",
      "ja": "[RFC5245]ローゼンバーグ、J.、 \"インタラクティブ接続確立（ICE）：オファー/回答プロトコルのためのネットワークアドレス変換（NAT）トラバーサルのための議定書\"、RFC 5245、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5389] Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session Traversal Utilities for NAT (STUN)\", RFC 5389, October 2008.",
      "ja": "[RFC5389]ローゼンバーグ、J.、マーイ、R.、マシューズ、P.、およびD.翼、 \"NAT（STUN）のセッショントラバーサルユーティリティ\"、RFC 5389、2008年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC5766] Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)\", RFC 5766, April 2010.",
      "ja": "[RFC5766]マーイ、R.、マシューズ、P.、およびJ.ローゼンバーグ、 \"トラバーサルNAT（TURN）の周りにリレーを使用してリレー拡張NAT（STUN）のセッショントラバーサルユーティリティに\"、RFC 5766、2010年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5902] Thaler, D., Zhang, L., and G. Lebovitz, \"IAB Thoughts on IPv6 Network Address Translation\", RFC 5902, July 2010.",
      "ja": "[RFC5902]ターラー、D.、チャン、L.、およびG. Lebovitz、RFC 5902、2010年7月の \"IPv6ネットワークアドレス変換のIAB思考\"。"
    },
    {
      "indent": 3,
      "text": "[RFC5925] Touch, J., Mankin, A., and R. Bonica, \"The TCP Authentication Option\", RFC 5925, June 2010.",
      "ja": "[RFC5925]をタッチし、J.、マンキン、A.、およびR. Bonica、 \"TCP認証オプション\"、RFC 5925、2010年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5996] Kaufman, C., Hoffman, P., Nir, Y., and P. Eronen, \"Internet Key Exchange Protocol Version 2 (IKEv2)\", RFC 5996, September 2010.",
      "ja": "[RFC5996]カウフマン、C.、ホフマン、P.、ニール、Y.、およびP. Eronen、 \"インターネット鍵交換プロトコルバージョン2（IKEv2の）\"、RFC 5996、2010年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC6052] Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X. Li, \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052, October 2010.",
      "ja": "[RFC6052]バオ、C.、のHuitema、C.、Bagnulo、M.、Boucadair、M.、およびX.李、RFC 6052、2010年10月の \"IPv6は、IPv4 / IPv6の翻訳者のアドレス指定\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6092] Woodyatt, J., \"Recommended Simple Security Capabilities in Customer Premises Equipment (CPE) for Providing Residential IPv6 Internet Service\", RFC 6092, January 2011.",
      "ja": "[RFC6092] Woodyatt、J.は、RFC 6092、2011年1月 \"住宅IPv6インターネットサービスを提供するための顧客宅内機器（CPE）での簡単なセキュリティ機能を推奨します\"。"
    },
    {
      "indent": 3,
      "text": "[RFC6144] Baker, F., Li, X., Bao, C., and K. Yin, \"Framework for IPv4/IPv6 Translation\", RFC 6144, April 2011.",
      "ja": "[RFC6144]ベーカー、F.はLi、X.、バオ、C.、およびK.陰陽 \"のIPv4 / IPv6変換のためのフレームワーク\"、RFC 6144、2011年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6145] Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation Algorithm\", RFC 6145, April 2011.",
      "ja": "[RFC6145]のLi、X.、バオ、C.、およびF.ベイカー、 \"IP / ICMP翻訳アルゴリズム\"、RFC 6145、2011年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6146] Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful NAT64: Network Address and Protocol Translation from IPv6 Clients to IPv4 Servers\", RFC 6146, April 2011.",
      "ja": "[RFC6146] Bagnulo、M.、マシューズ、P.、およびI.バンBeijnum、 \"ステートフルNAT64：IPv4のサーバーへのIPv6クライアントからのネットワークアドレスとプロトコル変換\"、RFC 6146、2011年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6147] Bagnulo, M., Sullivan, A., Matthews, P., and I. van Beijnum, \"DNS64: DNS Extensions for Network Address Translation from IPv6 Clients to IPv4 Servers\", RFC 6147, April 2011.",
      "ja": "[RFC6147] Bagnulo、M.、サリバン、A.、マシューズ、P.、およびI.バンBeijnum、 \"DNS64：IPv4のサーバーへのIPv6クライアントからのネットワークアドレス変換のためのDNS拡張機能\"、RFC 6147、2011年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC6204] Singh, H., Beebee, W., Donley, C., Stark, B., and O. Troan, \"Basic Requirements for IPv6 Customer Edge Routers\", RFC 6204, April 2011.",
      "ja": "[RFC6204]シン、H.、Beebee、W.、Donley、C.、スターク、B.、およびO. Troan、 \"IPv6のカスタマーエッジルータのための基本要件\"、RFC 6204、2011年4月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Why GSE?",
      "ja": "付録A.なぜGSE？"
    },
    {
      "indent": 3,
      "text": "For the purpose of this discussion, let us oversimplify the Internet's structure by distinguishing between two broad classes of networks: transit and edge. A \"transit network\", in this context, is a network that provides connectivity services to other networks. Its Autonomous System (AS) number may show up in a non-final position in BGP AS paths, or in the case of mobile and residential broadband networks, it may offer network services to smaller networks that cannot justify RIR membership. An \"edge network\", in contrast, is any network that is not a transit network; it is the ultimate customer, and while it provides internal connectivity for its own use, it is a consumer of transit services in other respects. In terms of routing, a network in the transit domain generally needs some way to make choices about how it routes to other networks; an edge network is generally quite satisfied with a simple default route.",
      "ja": "トランジットとエッジ：この議論の目的のために、私たちはネットワークの二つの広いクラスを区別することにより、インターネットの構造をoversimplifyてみましょう。 「トランジットネットワーク」、この文脈では、他のネットワークへの接続サービスを提供するネットワークです。その自律システム（AS）番号がパスAS BGPにおける非最終位置に表示したり、モバイルおよび家庭用ブロードバンドネットワークの場合には、それはRIRのメンバーシップを正当化することはできません小規模ネットワークにネットワークサービスを提供することがあります。 「エッジネットワーク」は、対照的に、トランジットネットワークはない任意のネットワークです。それは究極の顧客である、そしてそれは、自身の使用のための内部接続性を提供しながら、それは他の点でのトランジットサービスの消費者です。ルーティングの観点では、トランジットドメインのネットワークは、一般的に他のネットワークにどのようにそれをルートに関する選択を行うためにいくつかの方法が必要です。エッジネットワークは、一般的に単純なデフォルトルートとはかなり満足しています。"
    },
    {
      "indent": 3,
      "text": "The [GSE] proposal, and as a result this proposal (which is similar to GSE in most respects and inspired by it), responds directly to current concerns in the RIR communities. Edge networks are used to an environment in IPv4 in which their addressing is disjoint from that of their upstream transit networks; it is either provider independent, or a network prefix translator makes their external address distinct from their internal address, and they like the distinction. In IPv6, there is a mantra that edge network addresses should be derived from their upstream, and if they have multiple upstreams, edge networks are expected to design their networks to use all of those prefixes equivalently. They see this as unnecessary and unwanted operational complexity and, as a result, are pushing very hard in the RIR communities for provider-independent addressing.",
      "ja": "[GSE]提案、結果として（ほとんどの点でGSEと同様であり、それに触発）この提案は、RIRコミュニティにおける現在の関心に直接応答します。エッジネットワークは、それらのアドレス指定は、それらの上流のトランジットネットワークとは互いに素であるIPv4の環境に使用されます。それはどちらかのプロバイダは独立している、またはネットワークプレフィックスの翻訳者は、その内部アドレスからの外部アドレスが明瞭になり、彼らは区別が好き。 IPv6では、エッジ・ネットワーク・アドレスは、その上流に由来すべきであるとマントラがあり、それらは複数のアップストリームがある場合は、エッジネットワークは、等価的に、それらの接頭語のすべてを使用するようにネットワークを設計することが期待されます。彼らは、プロバイダに依存しない対処するためのRIRコミュニティで非常にハードにプッシュされ、その結果として、このように不要と不要な操作の複雑さを見て。"
    },
    {
      "indent": 3,
      "text": "Widespread use of provider-independent addressing has a natural and perhaps unavoidable side effect that is likely to be very expensive in the long term. With widespread PI addressing, the routing table will enumerate the networks at the edge of the transit domain, the edge networks, rather than enumerate the transit domain. Per the BGP Update Report of 17 December 2010, there are currently over 36,000 Autonomous Systems being advertised in BGP, of which over 15,000 advertise only one prefix. There are in the neighborhood of 5000 ASs that show up in a non-final position in AS paths, and perhaps another 5000 networks whose AS numbers are terminal in more than one AS path. In other words, we have prefixes for some 36,000 transit and edge networks in the route table now, many of which arguably need an Autonomous System number only for multihoming. The vast majority of networks (2/3) having the tools necessary to multihome are not visibly doing so and would be well served by any solution that gives them address independence without the overhead of RIR membership and BGP routing.",
      "ja": "プロバイダに依存しないアドレス指定の普及は、長期的には非常に高価である可能性が高い、自然、おそらく避けられない副作用があります。広範PIアドレス指定と、ルーティングテーブルが通過ドメイン、エッジネットワークのエッジでネットワークを列挙ではなく、トランジットドメインを列挙します。 2010年12月17日のBGPアップデートレポートごと、15,000の上には一つだけプレフィックスを通知そのうち、BGPで広告されている36,000自律システムの上に現在があります。 ASパスに非最終位置に表示5000台のAS、およびそのAS番号パスAS複数の端末であり、おそらく他のネットワーク5000の近傍に存在します。言い換えれば、我々は、ルートテーブルにいくつかの36,000トランジットとエッジネットワークのための接頭辞が、今、その多くは、おそらく唯一のマルチホーミングのための自律システム番号が必要です。マルチホームに必要なツールを持つネットワークの大半（2/3）は目に見えて行っていないとうまく彼らはRIRのメンバーシップとBGPルーティングのオーバーヘッドなしに独立に対処できます任意のソリューションによって提供されるだろう。"
    },
    {
      "indent": 3,
      "text": "Current growth estimates suggest that we could easily see that be on the order of 10,000,000 within fifteen years. Tens of thousands of entries in the route table are very survivable; while our protocols and computers will likely do quite well with tens of millions of routes, the heat produced and power consumed by those routers, and the inevitable impact on the cost of those routers, is not a good outcome. To avoid having a massive and unscalable route table, we need to find a way that is politically acceptable and returns us to enumerating the transit domain, not the edge.",
      "ja": "現在の成長の見積もりは、我々は簡単にそれが15年以内に10,000,000のオーダーである見ることができたことを示唆しています。ルートテーブル内のエントリの数万人は非常に存続しています。私たちのプロトコルとコンピュータはおそらくルートの数千万人と非常によく行いますが、熱生成およびそれらのルータの消費電力、およびそれらのルータのコスト上の必然的な影響は、良い結果ではありません。大規模かつスケーラブルルートテーブルを避けるために、我々は政治的に許容可能であるとトランジットドメインではなく、エッジを列挙するに私たちを返す方法を見つける必要があります。"
    },
    {
      "indent": 3,
      "text": "There have been a number of proposals. As described, Shim6 moves the complexity to the edge, and the edge is rebelling. Geographic addressing in essence forces ISPs to \"own\" geographic territory from a routing perspective, as otherwise there is no clue in the address as to what network a datagram should be delivered to in order to reach it. Metropolitan Addressing can imply regulatory authority and, even if it is implemented using internet exchange consortia, visits a great deal of complexity on the transit networks that directly serve the edge. The one that is likely to be most acceptable is any proposal that enables an edge network to be operationally independent of its upstreams, with no obligation to renumber when it adds, drops, or changes ISPs, and with no additional burden placed either on the ISP or the edge network as a result. From an application perspective, an additional operational requirement in the words of the Roadmap for the Smart Grid [NIST] is that",
      "ja": "多くの提案がありました。説明したように、SHIM6はエッジが複雑に移動し、エッジが反抗されます。そうでない場合はどのようなネットワークデータグラムはそれに到達するためにに配信されなければならないためのように、アドレスには手がかりがないので本質的に取り組む地理的には、ルーティングの観点から、「自分」の地理的な領土へのISPを強制します。それは、インターネットエクスチェンジコンソーシアムを使用して実装されている場合でも、規制当局を意味することができアドレッシングメトロポリタンは、直接エッジを果たす中継ネットワーク上の複雑さの多くを訪問します。最も許容である可能性が高い一つは、それが追加したときに再番号付けする義務と、そのアップストリームの運用に依存しないようにエッジネットワークを可能にする任意の提案である低下、またはISPのを変更し、追加なしの負担とISPのいずれかに置かまたは結果としてエッジネットワーク。アプリケーションの観点から、スマートグリッドのためのロードマップ[NIST]の言葉で追加の動作要件は、ということです"
    },
    {
      "indent": 6,
      "text": "\"...the network should provide the capability to enable an application in a particular domain to communicate with an application in any other domain over the information network, with proper management control as to who and where applications can be inter-connected.\"",
      "ja": "「...ネットワークは、誰、どこアプリケーションが相互接続できるよう、適切な管理制御と、情報ネットワークを介して他のドメイン内のアプリケーションと通信するために特定のドメイン内のアプリケーションを有効にする能力を提供すべきです。」"
    },
    {
      "indent": 3,
      "text": "In other words, the structure of the network should allow for and enable appropriate access control, but the structure of the network should not inherently limit access.",
      "ja": "言い換えれば、ネットワークの構造がを可能にし、適切なアクセス制御を可能にするが、ネットワークの構造は、本質的にアクセスを制限すべきでありません。"
    },
    {
      "indent": 3,
      "text": "The GSE model, by statelessly translating the prefix between an edge network and its upstream transit network, accomplishes that with a minimum of fuss and bother. Stated in the simplest terms, it enables the edge network to behave as if it has a provider-independent prefix from a multihoming and renumbering perspective without the overhead of RIR membership or maintenance of BGP connectivity, and it enables the transit networks to aggressively aggregate what are from their perspective provider-allocated customer prefixes, to maintain a rational-sized routing table.",
      "ja": "GSEモデルは、ステートレスエッジネットワークとその上流の中継網との間のプレフィックスを変換することによって、手間の最小値とを気にすることを達成します。最も単純な用語で述べ、それはBGP接続のRIRのメンバーまたは保守のオーバーヘッドなしマルチホーミングとリナンバリング観点からプロバイダ非依存プレフィックスを有するかのように動作するエッジネットワークを可能にし、それが積極的に何を集約するトランジットネットワークを可能にします合理的なサイズのルーティングテーブルを維持するために、彼らの斜視プロバイダに割り当てられた顧客プレフィックスからのものです。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Verification Code",
      "ja": "付録B.確認コード"
    },
    {
      "indent": 3,
      "text": "This non-normative appendix is presented as a proof of concept; it is in no sense optimized. For example, one's complement arithmetic is implemented in portable subroutines, where operational implementations might use one's complement arithmetic instructions through a pragma; such implementations probably need to explicitly force 0xFFFF to 0x0000, as the instruction will not. The original purpose of the code was to verify whether or not it was necessary to suppress 0xFFFF by overwriting with zero and whether predicted issues with subnet numbering were real.",
      "ja": "この非規範的付録はコンセプトの証明として提示されます。それは、最適化されていないという意味です。例えば、1の補数演算は、演算の実装がプラグマを介して1の補数演算命令を使用するかもしれないポータブルサブルーチンで実装されています。そのような実装は、おそらく命令がないので、明示的に、0x0000には0xFFFFを強制する必要があります。コードの本来の目的は、ゼロとサブネット番号と予想問題が実であるかどうかを上書きすることによって0xFFFFのを抑制することが必要であったか否かを確認することでした。"
    },
    {
      "indent": 3,
      "text": "The point is to",
      "ja": "ポイントにあります"
    },
    {
      "indent": 3,
      "text": "o demonstrate that if one or the other representation of zero is not used in the word in which the checksum is updated, the program maps inner and outer addresses in a manner that is, mathematically, 1:1 and onto (each inner address maps to a unique outer address, and that outer address maps back to exactly the same inner address), and",
      "ja": "O、1または0の他の表現は、チェックサムが更新された単語で使用されていない場合、プログラムは数学的に、ある方法で、内側及び外側アドレスをマッピングすることを実証している1：1（各内部アドレスにマップ上独特の外側のアドレス、およびその外側のアドレスは）まったく同じ内部アドレスに戻ってマッピングし、"
    },
    {
      "indent": 3,
      "text": "o give guidance on the suppression of 0xFFFF checksums.",
      "ja": "O 0xFFFFのチェックサムの抑制に関する指針を与えます。"
    },
    {
      "indent": 3,
      "text": "In short, in one's complement arithmetic, x-x=0 but will take the negative representation of zero. If 0xFFFF results are forced to the value 0x0000, as is recommended in [RFC1071], the word the checksum is adjusted in cannot be initially 0xFFFF, as on the return it will be forced to 0. If 0xFFFF results are not forced to the value 0x0000 as is recommended in [RFC1071], the word the checksum is adjusted in cannot be initially 0, as on the return it will be calculated as 0+(~0) = 0xFFFF. We chose to follow [RFC1071]'s recommendations, which implies a requirement to not use 0xFFFF as a subnet number in networks with a /48 external prefix.",
      "ja": "要するに、1の補数演算では、X = X 0が、ゼロの負の表現を取ります。 0xFFFFの結果は値0x0000に強制される場合は[RFC1071]で推奨されているよう0xFFFFの結果が値に強制されていない場合、それは0に強制されるリターンにように、チェックサムが調整されている単語は、最初は0xFFFFにすることはできません0000は[RFC1071]で推奨されているように、チェックサムが調整されるワードは、最初に0、それは（〜0）= 0xFFFFの0+として計算されるリターン上ようにすることはできません。私たちは、/ 48外部の接頭辞でネットワークにサブネット番号としては0xFFFFを使用しないように要求することを意味[RFC1071]の推奨に従うことを選びました。"
    },
    {
      "indent": 2,
      "text": "/*\n * Copyright (c) 2011 IETF Trust and the persons identified as\n * authors of the code.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * - Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.",
      "raw": true
    },
    {
      "indent": 2,
      "text": " *\n * - Redistributions in binary form must reproduce the above\n *   copyright notice, this list of conditions and the following\n *   disclaimer in the documentation and/or other materials provided\n *   with the distribution.\n *\n * - Neither the name of Internet Society, IETF or IETF Trust, nor\n *   the names of specific contributors, may be used to endorse or\n *   promote products derived from this software without specific\n *   prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n * CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS\n * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n#include \"stdio.h\"\n#include \"assert.h\"\n/*\n * program to verify the NPTv6 algorithm\n *\n * argument:\n *    Perform negative zero suppression: boolean\n *\n * method:\n *    We specify an internal and an external prefix.  The prefix\n *    length is presumed to be the common length of both and, for\n *    this, is a /48.  We perform the three algorithms specified.\n *    The \"datagram\" address is in effect the source address\n *    internal->external and the destination address\n *    external->internal.\n */\nunsigned short  inner_init[] = {\n    0xFD01, 0x0203, 0x0405, 1, 2, 3, 4, 5};\nunsigned short  outer_init[] = {\n    0x2001, 0x0db8, 0x0001, 1, 2, 3, 4, 5};\nunsigned short  inner[8];\nunsigned short  datagram[8];\nunsigned char   checksum[65536] = {0};",
      "raw": true
    },
    {
      "indent": 2,
      "text": "unsigned short  outer[8];\nunsigned short  adjustment;\nunsigned short  suppress;\n/*\n * One's complement sum.\n * return number1 + number2\n */\nunsigned short\nadd1(number1, number2)\n    unsigned short  number1;\n    unsigned short  number2;\n{\n    unsigned int    result;",
      "raw": true
    },
    {
      "indent": 2,
      "text": "    result = number1;\n    result += number2;\n    if (suppress) {\n        while (0xFFFF <= result) {\n            result = result + 1 - 0x10000;\n        }\n    } else {\n        while (0xFFFF < result) {\n            result = result + 1 - 0x10000;\n        }\n    }\n    return result;\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*\n * One's complement difference\n * return number1 - number2\n */\nunsigned short\nsub1(number1, number2)\n    unsigned short  number1;\n    unsigned short  number2;\n{\n    return add1(number1, ~number2);\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*\n * return one's complement sum of an array of numbers\n */\nunsigned short\nsum1(numbers, count)\n    unsigned short *numbers;\n    int             count;\n{",
      "raw": true
    },
    {
      "indent": 6,
      "text": "unsigned int result;",
      "ja": "unsigned int型の結果。"
    },
    {
      "indent": 6,
      "text": "result = *numbers++;\nwhile (--count > 0) {\n    result += *numbers++;\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "    if (suppress) {\n        while (0xFFFF <= result) {\n            result = result + 1 - 0x10000;\n        }\n    } else {\n        while (0xFFFF < result) {\n            result = result + 1 - 0x10000;\n        }\n    }\n    return result;\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*\n * NPTv6 initialization: Section 3.1 assuming Section 3.4\n *\n * Create the /48, a source address in internal format, and a\n * source address in external format.  Calculate the adjustment\n * if one /48 is overwritten with the other.\n */\nvoid\nnptv6_initialization(subnet)\n    unsigned short  subnet;\n{\n    int             i;\n    unsigned short  inner48;\n    unsigned short  outer48;",
      "raw": true
    },
    {
      "indent": 2,
      "text": "    /* Initialize the internal and external prefixes. */\n    for (i = 0; i < 8; i++) {\n        inner[i] = inner_init[i];\n        outer[i] = outer_init[i];\n    }\n    inner[3] = subnet;\n    outer[3] = subnet;\n    /* Calculate the checksum adjustment. */\n    inner48 = sum1(inner, 3);\n    outer48 = sum1(outer, 3);\n    adjustment = sub1(inner48, outer48);\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*",
      "raw": true
    },
    {
      "indent": 2,
      "text": " * NPTv6 datagram from edge to transit: Section 3.2 assuming * Section 3.4 * * Overwrite the prefix in the source address with the outer * prefix and adjust the checksum. */ void nptv6_inner_to_outer() { int i;",
      "ja": "* NPTv6グラムエッジから遷移する：セクション3.2と仮定*セクション3.4 *アウター*接頭辞ソースアドレスにプレフィックスを上書きし、チェックサムを調整します。 * /ボイドnptv6_inner_to_outer（）{iはint型。"
    },
    {
      "indent": 6,
      "text": "/* Let's get the source address into the datagram. */\nfor (i = 0; i < 8; i++) {\n    datagram[i] = inner[i];\n}",
      "raw": true
    },
    {
      "indent": 6,
      "text": "/* Overwrite the prefix with the outer prefix. */\nfor (i = 0; i < 3; i++) {\n    datagram[i] = outer[i];\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "    /* Adjust the checksum. */\n    datagram[3] = add1(datagram[3], adjustment);\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*\n * NPTv6 datagram from transit to edge: Section 3.3 assuming\n * Section 3.4\n *\n * Overwrite the prefix in the destination address with the\n * inner prefix and adjust the checksum.\n */\nvoid\nnptv6_outer_to_inner()\n{\n    int             i;",
      "raw": true
    },
    {
      "indent": 6,
      "text": "/* Overwrite the prefix with the outer prefix. */\nfor (i = 0; i < 3; i++) {\n    datagram[i] = inner[i];\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "    /* Adjust the checksum. */\n    datagram[3] = sub1(datagram[3], adjustment);\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "/*\n * Main program",
      "raw": true
    },
    {
      "indent": 2,
      "text": " */\nmain(argc, argv)\n    int             argc;\n    char          **argv;\n{\n    unsigned        subnet;\n    int             i;",
      "raw": true
    },
    {
      "indent": 6,
      "text": "if (argc < 2) {\n       fprintf(stderr, \"usage: nptv6 supression\\n\");\n       assert(0);\n   }\n   suppress = atoi(argv[1]);\n   assert(suppress <= 1);",
      "raw": true
    },
    {
      "indent": 9,
      "text": "for (subnet = 0; subnet < 0x10000; subnet++) {\n    /* Section 3.1: initialize the system */\n    nptv6_initialization(subnet);",
      "raw": true
    },
    {
      "indent": 13,
      "text": "/* Section 3.2: take a datagram from inside to outside */\nnptv6_inner_to_outer();",
      "raw": true
    },
    {
      "indent": 10,
      "text": "   /* The resulting checksum value should be unique. */\n   if (checksum[subnet]) {\n        printf(\"inner->outer duplicated checksum: \"\n               \"inner: %x:%x:%x:%x:%x:%x:%x:%x(%x) \"\n               \"calculated: %x:%x:%x:%x:%x:%x:%x:%x(%x)\\n\",\n               inner[0], inner[1], inner[2], inner[3],\n               inner[4], inner[5], inner[6], inner[7],\n               sum1(inner, 8), datagram[0], datagram[1],\n               datagram[2], datagram[3], datagram[4],\n               datagram[5], datagram[6], datagram[7],\n               sum1(datagram, 8));\n}",
      "raw": true
    },
    {
      "indent": 10,
      "text": "checksum[subnet] = 1;",
      "ja": "チェックサム[サブネット] = 1。"
    },
    {
      "indent": 10,
      "text": "/*\n * The resulting checksum should be the same as the inner\n * address's checksum.\n */\nif (sum1(datagram, 8) != sum1(inner, 8)) {\n    printf(\"inner->outer incorrect: \"\n           \"inner: %x:%x:%x:%x:%x:%x:%x:%x(%x) \"\n           \"calculated: %x:%x:%x:%x:%x:%x:%x:%x(%x)\\n\",\n           inner[0], inner[1], inner[2], inner[3],\n           inner[4], inner[5], inner[6], inner[7],\n           sum1(inner, 8), datagram[0], datagram[1], datagram[2], datagram[3],\n           datagram[4], datagram[5], datagram[6], datagram[7],\n           sum1(datagram, 8));\n}",
      "raw": true
    },
    {
      "indent": 10,
      "text": "/* Section 3.3: take a datagram from outside to inside */\nnptv6_outer_to_inner();",
      "raw": true
    },
    {
      "indent": 10,
      "text": "/*\n * The returning datagram should have the same checksum it\n * left with.\n */\nif (sum1(datagram, 8) != sum1(inner, 8)) {\n    printf(\"outer->inner checksum incorrect: \"\n           \"calculated: %x:%x:%x:%x:%x:%x:%x:%x(%x) \"\n           \"inner: %x:%x:%x:%x:%x:%x:%x:%x(%x)\\n\",\n           datagram[0], datagram[1], datagram[2], datagram[3],\n           datagram[4], datagram[5], datagram[6], datagram[7],\n           sum1(datagram, 8), inner[0], inner[1], inner[2],\n           inner[3], inner[4], inner[5], inner[6], inner[7],\n           sum1(inner, 8));\n}",
      "raw": true
    },
    {
      "indent": 2,
      "text": "        /*\n         * And every octet should calculate back to the same inner\n         * value.\n         */\n        for (i = 0; i < 8; i++) {\n            if (inner[i] != datagram[i]) {\n                printf(\"outer->inner different: \"\n                       \"calculated: %x:%x:%x:%x:%x:%x:%x:%x \"\n                       \"inner: %x:%x:%x:%x:%x:%x:%x:%x\\n\",\n                       datagram[0], datagram[1], datagram[2],\n                       datagram[3], datagram[4], datagram[5],\n                       datagram[6], datagram[7], inner[0], inner[1],\n                       inner[2], inner[3], inner[4], inner[5],\n                       inner[6], inner[7]);\n                break;\n            }\n        }\n    }\n}",
      "raw": true
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Margaret Wasserman Painless Security North Andover, MA 01845 USA",
      "ja": "マーガレットワッサーマン無痛セキュリティノースアンドーヴァー、MA 01845 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1 781 405 7464 EMail: mrw@painless-security.com URI: http://www.painless-security.com",
      "ja": "電話：+1 781 405 7464 Eメール：mrw@painless-security.com URI：http://www.painless-security.com"
    },
    {
      "indent": 3,
      "text": "Fred Baker Cisco Systems Santa Barbara, California 93117 USA",
      "ja": "フレッドベイカーシスコシステムズサンタバーバラ、カリフォルニア93117 USA"
    },
    {
      "indent": 3,
      "text": "Phone: +1-408-526-4257 EMail: fred@cisco.com",
      "ja": "電話：+ 1-408-526-4257 Eメール：fred@cisco.com"
    }
  ]
}